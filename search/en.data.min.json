[{"id":0,"href":"/clients/web/","title":"ownCloud Web","parent":"Clients","content":"This is the next generation ownCloud frontend. If you\u0026rsquo;re new here, head over to the the getting started guide for a quick introduction.\n","description":"This is the next generation ownCloud frontend. If you\u0026rsquo;re new here, head over to the the getting started guide for a quick introduction."},{"id":1,"href":"/ocis/","title":"oCIS - ownCloud Infinite Scale","parent":"ownCloud","content":" ownCloud Infinite Scale Welcome to oCIS, the modern file-sync and share platform, which is based on our knowledge and experience with the PHP based ownCloud server.\nThe idea of federated storage To create a truly federated storage architecture oCIS breaks down the old ownCloud 10 user specific namespace, which is assembled on the server side, and makes the individual parts accessible to clients as storage spaces and storage space registries.\nThe diagram below shows the core concepts that are the foundation for the new architecture:\nEnd user devices can fetch the list of storage spaces a user has access to, by querying one or multiple storage space registries. The list contains a unique endpoint for every storage space. Storage space registries manage the list of storage spaces a user has access to. They may subscribe to storage spaces in order to receive notifications about changes on behalf of an end users mobile or desktop client. Storage spaces represent a collection of files and folders. A users personal files are contained in a storage space, a group or project drive is a storage space, and even incoming shares are treated and implemented as storage spaces. Each with properties like owners, permissions, quota and type. Storage providers can hold multiple storage spaces. At an oCIS instance, there might be a dedicated storage provider responsible for users personal storage spaces. There might be multiple, either to shard the load, provide different levels of redundancy or support custom workflows. Or there might be just one, hosting all types of storage spaces. As an example, Einstein might want to share something with Marie, who has an account at a different identity provider and uses a different storage space registry. The process makes use of OpenID Connect (OIDC) for authentication and would look something like this:\nTo share something with Marie, Einstein would open https://cloud.zurich.test. His browser loads oCIS web and presents a login form that uses the OpenID Connect Discovery to look up the OIDC issuer. For einstein@zurich.test he will end up at https://idp.zurich.test, authenticate and get redirected back to https://cloud.zurich.test. Now, oCIS web will use a similar discovery to look up the storage space registry for the account, based on the email (or username). He will discover that https://cloud.zurich.test is also his storage registry that the web UI will use to load the list of storage spaces that are available to him.\nAfter locating a folder that he wants to share with Marie he enters her email marie@paris.test in the sharing dialog to grant her the editor role. This, in effect, creates a new storage space that is registered with the storage space registry at https://cloud.zurich.test.\nEinstein copies the URL in the browser (or an email with the same URL is sent automatically, or the storage registries use a back-channel mechanism). It contains the most specific storage space id and a path relative to it: https://cloud.zurich.test/#/spaces/716199a6-00c0-4fec-93d2-7e00150b1c84/a/rel/path.\nWhen Marie enters that URL she will be presented with a login form on the https://cloud.zurich.test instance, because the share was created on that domain. If https://cloud.zurich.test trusts her OpenID Connect identity provider https://idp.paris.test she can log in. This time, the storage space registry discovery will come up with https://cloud.paris.test though. Since that registry is different than the registry tied to https://cloud.zurich.test oCIS web can look up the storage space 716199a6-00c0-4fec-93d2-7e00150b1c84 and register the WebDAV URL https://cloud.zurich.test/dav/spaces/716199a6-00c0-4fec-93d2-7e00150b1c84/a/rel/path in Marie\u0026rsquo;s storage space registry at https://cloud.paris.test. When she accepts that share her clients will be able to sync the new storage space at https://cloud.zurich.test.\noCIS microservice runtime The oCIS runtime allows us to dynamically manage services running in a single process. We use suture to create a supervisor tree that starts each service in a dedicated goroutine. By default oCIS will start all built-in oCIS services in a single process. Individual services can be moved to other nodes to scale-out and meet specific performance requirements. A go-micro based registry allows services in multiple nodes to form a distributed microservice architecture.\noCIS Services Every oCIS service uses ocis-pkg, which implements the go-micro interfaces for servers to register and clients to lookup nodes with a service registry. We are following the 12 Factor methodology with oCIS. The uniformity of services also allows us to use the same command, logging and configuration mechanism. Configurations are forwarded from the oCIS runtime to the individual extensions.\ngo-micro While the go-micro framework provides abstractions as well as implementations for the different components in a microservice architecture, it uses a more developer focused runtime philosophy: It is used to download services from a repo, compile them on the fly and start them as individual processes. For oCIS we decided to use a more admin friendly runtime: You can download a single binary and start the contained oCIS services with a single bin/ocis server. This also makes packaging easier.\nWe use ocis-pkg to configure the default implementations for the go-micro grpc server, client and mdns registry, swapping them out as needed, e.g. to use the kubernetes registry plugin.\nREVA A lot of embedded services in oCIS are built upon the REVA runtime. We decided to bundle some of the CS3 services to logically group them. A home storage provider, which is dealing with metadata, and the corresponding data provider, which is dealing with up and download, are one example. The frontend with the oc flavoured webdav, ocs handlers and a data-gateway are another.\nProtocol driven development Interacting with oCIS involves a multitude af APIs. The server and all clients rely on OpenID Connect for authentication. The embedded LibreGraph Connect can be replaced with any other OpenID Connect Identity Provider. Clients use the WebDAV based oc sync protocol to manage files and folders, ocs to manage shares and TUS to upload files in a resumable way. On the server side REVA is the reference implementation of the CS3 apis which is defined using protobuf. By embedding libregraph/idm, oCIS provides a LDAP interface to make accounts, including guests available to firewalls and other systems. In the future, we are looking into the Microsoft Graph API, which is based on odata, as a well-defined REST/JSON dialect for the existing endpoints.\nAcceptance test suite We run a huge test suite, which originated in ownCloud 10 and continues to grow. A detailed description can be found in the developer docs for testing.\nArchitecture Overview Running bin/ocis server will start the following services, all of which can be scaled and deployed on a single node or in a cloud native environment, as needed.\n","description":"ownCloud Infinite Scale Welcome to oCIS, the modern file-sync and share platform, which is based on our knowledge and experience with the PHP based ownCloud server.\nThe idea of federated storage To create a truly federated storage architecture oCIS breaks down the old ownCloud 10 user specific namespace, which is assembled on the server side, and makes the individual parts accessible to clients as storage spaces and storage space registries."},{"id":2,"href":"/clients/ocis-php-sdk/","title":"oCIS PHP SDK","parent":"Clients","content":" ocis-php-sdk This SDK allows you to interact with ownCloud Infinite Scale (oCIS) storage using PHP.\nDocumentation You can find a rendered version of the API documentation in our dev docs.\nTo render the documentation locally, use the phpDocumentor to run it in the local repo. E.g.:\ndocker run --rm -v ${PWD}:/data phpdoc/phpdoc:3 After that you will find the documentation inside the docs folder.\nInstallation via Composer Add \u0026ldquo;owncloud/ocis-php-sdk\u0026rdquo; to the require block in your composer.json and then run composer install.\n[!WARNING]\nThe ocis-php-sdk currently relies on a development version of the \u0026ldquo;owncloud/libre-graph-api-php\u0026rdquo; package. To ensure proper dependency resolution, it is necessary to set \u0026ldquo;minimum-stability\u0026rdquo;: \u0026ldquo;dev\u0026rdquo; and \u0026ldquo;prefer-stable\u0026rdquo;: true in your composer.json file.\n{ \u0026#34;minimum-stability\u0026#34;: \u0026#34;dev\u0026#34;, \u0026#34;prefer-stable\u0026#34;: true, \u0026#34;require\u0026#34;: { \u0026#34;owncloud/ocis-php-sdk\u0026#34;: \u0026#34;^1.0\u0026#34; } } Alternatively, you can simply run the following from the command line:\ncomposer config minimum-stability dev composer config prefer-stable true composer require owncloud/ocis-php-sdk Getting started Ocis has two types of access token, one which is used to interact with drive, group, user, shares etc.(OICD access token) and another which can be used to interact with education endpoints (education access token).\nCreate an Ocis object using the service Url and an OIDC access token:\n$ocis = new Ocis(\u0026#39;https://example.ocis.com\u0026#39;, $accessToken); Or create an Ocis object to interact with education endpoints using the service Url and an education access token:\n$ocis = new Ocis(\u0026#39;https://education.ocis.com\u0026#39;, null, [], $educationAccessToken); At least one access token should be provided to use the SKD.\nAcquiring an OICD access token is out of scope of this SDK, but you can find examples for that below.\nAlso refreshing OICD tokens is not part of the SDK, but after you got a new token, you can update the Ocis object:\n$ocis-\u0026gt;setAccessToken($newAccessToken); Education access token is set when starting the ocis graph server. You can get it using following snippet\n$educationAccessToken = getenv(\u0026#34;GRAPH_HTTP_API_TOKEN\u0026#34;) Drives (spaces) Drives can be listed using the getAllDrives or the getMyDrives method.\nThe Drive class is responsible for most file/folder related actions, like listing files, creating folders, uploading files, etc.\n// get the personal drive of the authorized user // `getMyDrives` returns all drives that the user is a member of // but in this example the result is filtered to only return // the personal drive (parameter 3 = DriveType::PERSONAL) $drives = $ocis-\u0026gt;getMyDrives( DriveOrder::NAME, OrderDirection::ASC, DriveType::PERSONAL ); // get the drive id $id = $drives[0]-\u0026gt;getId(); // get the name of the drive $name = $drives[0]-\u0026gt;getName(); // get a link to the drive that can be opened in a browser and will lead the user to the web interface $webUrl = $drives[0]-\u0026gt;getWebUrl(); // create a folder inside the drive $drives[0]-\u0026gt;createFolder(\u0026#34;/documents\u0026#34;); // upload a file to the drive $drives[0]-\u0026gt;uploadFile(\u0026#34;/documents/myfile.txt\u0026#34;, \u0026#34;Hello World!\u0026#34;); // get an array of all resources of the \u0026#34;/documents\u0026#34; folder inside the drive $resources = $drives[0]-\u0026gt;getResources(\u0026#34;/documents\u0026#34;); Drive Permission Users/Groups can be invited to drives by specifying permissions. The Drive class has methods to invite Users/Groups, update permission roles and expiration dates, remove users and groups, etc.\nDrive invitations are only possible on project drives.\n// find all users with a specific surname $users = $ocis-\u0026gt;getUsers(\u0026#34;einstein\u0026#34;)[0]; // get all drives of type project $drives = $ocis-\u0026gt;getMyDrives( DriveOrder::NAME, OrderDirection::ASC, DriveType::PROJECT ); // get the drive named \u0026#39;game\u0026#39; foreach ($drives as $drive) { if ($drive-\u0026gt;getName) === \u0026#39;game\u0026#39; { $gameDrive = $drive; break; } } // get all roles that are possible for that drive $driveRoles = $gameDrive-\u0026gt;getRoles(); // get the role that is allowed to view, download, upload, edit, add, delete and manage members foreach ($driveRoles as $role) { if ($role-\u0026gt;getDisplayName() === \u0026#39;Manager\u0026#39;) { $managerRole = $role; break; } } // invite user einstein on project drive \u0026#39;game\u0026#39; with manager permission $gameDrive-\u0026gt;invite($users, $managerRole); Notifications Notifications can be listed using the getNotifications method, which will return an array of Notification objects representing all active notifications.\nThe Notification object can retrieve details of the corresponding notification and mark it as read (delete).\nSharing Given the correct permissions, an OcisResource can be shared with a group or a user. To define the access permissions of the receiver every share has to set SharingRole(s).\n// get the resources of a subfolder inside a drive $resources = $drive-\u0026gt;getResources(\u0026#34;/documents\u0026#34;); // get all roles that are possible for that particular resource $roles = $resources[0]-\u0026gt;getRoles(); // find the role that is allowed to read and write the shared file or folder for ($roles as $role) { if ($role-\u0026gt;getDisplayName() === \u0026#39;Can edit\u0026#39;) { $editorRole = $role; break; } } // find all users with a specific surname $users = $ocis-\u0026gt;getUsers(\u0026#34;einstein\u0026#34;)[0]; // share the resource with the users $resources[0]-\u0026gt;invite($users, $editorRole); Education User Education Users can only be created, listed and deleted using education access token. If you want to use other APIs you need to use the OICD access token.\n// create education user $educationUsers = $ocis-\u0026gt;createEducationUser() // list all education user $educationUsers = $ocis-\u0026gt;getEducationUsers() // list education user by id $educationUsers = $ocis-\u0026gt;getEducationUserById() // delete education user $educationUser[0]-\u0026gt;delete() Requirements PHP 8.1 or higher oCIS 5.0.0 or higher Acquiring an Access Token For an easier experience in acquiring an access token, several PHP OIDC client libraries are available. The following code snippet showcases how to retrieve an access token with the facile-it/php-openid-client library.\nInstall PHP dependencies You can install the facile-it/php-openid-client library using composer:\ncomposer require facile-it/php-openid-client composer require nyholm/psr7 Required PHP Libraries php-bcmath php-gmp Code Snippet to Fetch an Access Token \u0026lt;?php require __DIR__ . \u0026#39;/path/to/vendor/autoload.php\u0026#39;; use Facile\\OpenIDClient\\Client\\ClientBuilder; use Facile\\OpenIDClient\\Issuer\\IssuerBuilder; use Facile\\OpenIDClient\\Client\\Metadata\\ClientMetadata; use Facile\\OpenIDClient\\Service\\Builder\\AuthorizationServiceBuilder; use Nyholm\\Psr7\\ServerRequest; $issuer = (new IssuerBuilder()) -\u0026gt;build(\u0026#39;https://example.ocis.com\u0026#39;); $clientMetadata = ClientMetadata::fromArray([ \u0026#39;client_id\u0026#39; =\u0026gt; \u0026#39;client_id\u0026#39;, \u0026#39;client_secret\u0026#39; =\u0026gt; \u0026#39;client_secret\u0026#39;, \u0026#39;redirect_uris\u0026#39; =\u0026gt; [ \u0026#39;http://url-of-this-file\u0026#39;, ], ]); $client = (new ClientBuilder()) -\u0026gt;setIssuer($issuer) -\u0026gt;setClientMetadata($clientMetadata) -\u0026gt;build(); $authorizationService = (new AuthorizationServiceBuilder())-\u0026gt;build(); $redirectAuthorizationUri = $authorizationService-\u0026gt;getAuthorizationUri( $client, [\u0026#39;scope\u0026#39;=\u0026gt;\u0026#39;openid profile email offline_access\u0026#39;] ); if(!isset($_REQUEST[\u0026#34;code\u0026#34;])) { header(\u0026#39;Location: \u0026#39; . $redirectAuthorizationUri); } else { $serverRequest = new ServerRequest(\u0026#39;GET\u0026#39;, $_SERVER[\u0026#39;REQUEST_URI\u0026#39;]); $callbackParams = $authorizationService-\u0026gt;getCallbackParams($serverRequest, $client); $tokenSet = $authorizationService-\u0026gt;callback($client, $callbackParams); // store access and refresh token in database $accessToken = $tokenSet-\u0026gt;getAccessToken(); echo \u0026#39;AccessToken : \u0026#39; . $accessToken; echo \u0026#39;\u0026lt;hr\u0026gt;\u0026#39;; $refreshToken = $tokenSet-\u0026gt;getRefreshToken(); echo \u0026#39;RefreshToken : \u0026#39; . $refreshToken; echo \u0026#39;\u0026lt;hr\u0026gt;\u0026#39;; // use this code to get new access token when expired $tokenSet = $authorizationService-\u0026gt;refresh($client, $refreshToken); $accessToken = $tokenSet-\u0026gt;getAccessToken(); echo \u0026#39;NewAccessToken : \u0026#39; . $accessToken; } If you\u0026rsquo;re working in a development environment where you might need to bypass SSL verification (though this is not advised for production environments), here\u0026rsquo;s how:\n\u0026lt;?php ... use Facile\\OpenIDClient\\Issuer\\Metadata\\Provider\\MetadataProviderBuilder; use Facile\\JoseVerifier\\JWK\\JwksProviderBuilder; use Symfony\\Component\\HttpClient\\Psr18Client; use Symfony\\Component\\HttpClient\\CurlHttpClient; $symHttpClient = new CurlHttpClient([ \u0026#39;verify_peer\u0026#39; =\u0026gt; false, \u0026#39;verify_host\u0026#39; =\u0026gt; false ]); $httpClient = new Psr18Client($symHttpClient); $metadataProviderBuilder = (new MetadataProviderBuilder()) -\u0026gt;setHttpClient($httpClient); $jwksProviderBuilder = (new JwksProviderBuilder()) -\u0026gt;setHttpClient($httpClient); $issuer = (new IssuerBuilder()) -\u0026gt;setMetadataProviderBuilder($metadataProviderBuilder) -\u0026gt;setJwksProviderBuilder($jwksProviderBuilder) -\u0026gt;build(\u0026#39;https://example.ocis.com\u0026#39;); ... $client = (new ClientBuilder()) -\u0026gt;setHttpClient($httpClient) -\u0026gt;setIssuer($issuer) -\u0026gt;setClientMetadata($clientMetadata) -\u0026gt;build(); $authorizationService = (new AuthorizationServiceBuilder()) -\u0026gt;setHttpClient($httpClient) -\u0026gt;build(); ... To test, simply open a browser and head to http://url-of-this-file.\nDevelopment Integration tests To run the tests locally\nInstall and setup docker (min version 24) and docker compose (min version 2.21).\nEnsure that the following php dependencies are installed for executing the integration tests:\n- php-curl - php-dom - php-phpdbg - php-mbstring - php-ast add these lines to your /etc/hosts file:\n127.0.0.1\tocis.owncloud.test 127.0.0.1\tkeycloak.owncloud.test run whole tests\nmake test-php-integration // start a full oCIS server with keycloak and other services using docker before running tests run single test\nmake test-php-integration testGetResources // start a full oCIS server with keycloak and other services using docker before running single test If something goes wrong, use make clean to clean the created containers and volumes.\n","description":"ocis-php-sdk This SDK allows you to interact with ownCloud Infinite Scale (oCIS) storage using PHP.\nDocumentation You can find a rendered version of the API documentation in our dev docs.\nTo render the documentation locally, use the phpDocumentor to run it in the local repo. E.g.:\ndocker run --rm -v ${PWD}:/data phpdoc/phpdoc:3 After that you will find the documentation inside the docs folder.\nInstallation via Composer Add \u0026ldquo;owncloud/ocis-php-sdk\u0026rdquo; to the require block in your composer."},{"id":3,"href":"/integration/file_picker/","title":"File Picker","parent":"Integrations","content":" The File Picker development has been discontinued in favour of the Web Embed Mode. Easily integrate ownCloud into your own product. https://github.com/owncloud/file-picker\n","description":"The File Picker development has been discontinued in favour of the Web Embed Mode. Easily integrate ownCloud into your own product. https://github.com/owncloud/file-picker"},{"id":4,"href":"/ocis/adr/0001-introduce-accounts-service/","title":"1. Introduce an accounts service","parent":"Architecture Decisions","content":" Status: superseded by ADR-0003 Deciders: @butonic, @felixboehm, @micbar, @pmaier1 Date: 2020-06-15 Technical Story: persist accounts\nContext and Problem Statement To attach metadata like shares to users ownCloud relies on persistent, non-reassignable, unique identifiers for users (and files). Email und username can change when a user changes his name. But even the OIDC sub+iss combination may change when the IdP changes. While there is an account porting protocol that describes how a relying party (RP) such as ownCloud should behave, it still requires the RP to maintain its own user identifiers.\nDecision Drivers oCIS should be a single binary that can run out of the box without external dependencies like an LDAP server. Time: we want to build a release candidate asap. Firewalls need access to guests, typically via LDAP. Not all external LDAPs are writeable for us to provision Guest accounts. We see multiple LDAP servers in deployments. Being able to handle them is important and should be covered by using OIDC + being able to query multiple LDAP servers. Considered Options Accounts service wraps LDAP GLAuth wraps accounts service Decision Outcome Chosen option: \u0026ldquo;GLAuth wraps accounts service\u0026rdquo;, because we need write access to provision guest accounts and GLAuth currently has no write support.\nPositive Consequences We can build a self-contained user management in the accounts service and can adjust it to our requirements. We do not rely on an LDAP server which would only be possible by implementing write support in the LDAP libraries used by GLAuth (hard to estimate effort, when will that be merged upstream). Negative Consequences We need to spend time on implementing user management Pros and Cons of the Options Accounts service wraps LDAP Bad, because not all external LDAPs are writeable for us to provision Guest accounts. ","description":"Status: superseded by ADR-0003 Deciders: @butonic, @felixboehm, @micbar, @pmaier1 Date: 2020-06-15 Technical Story: persist accounts\nContext and Problem Statement To attach metadata like shares to users ownCloud relies on persistent, non-reassignable, unique identifiers for users (and files). Email und username can change when a user changes his name. But even the OIDC sub+iss combination may change when the IdP changes. While there is an account porting protocol that describes how a relying party (RP) such as ownCloud should behave, it still requires the RP to maintain its own user identifiers."},{"id":5,"href":"/clients/web/deployments/oc10-app/","title":"Deploy as an app in ownCloud 10","parent":"Deployments","content":" Compatibility Introduction Prerequisites Deploying ownCloud Web Configure oauth2 Configure ownCloud 10 Set ownCloud Web address Configure link routing Make ownCloud Web the default web interface Configure ownCloud Web Integrate ownCloud Classic features in ownCloud Web Add links to the app switcher Add links to the user menu ONLYOFFICE Collabora Online Additional configuration for certain core apps Preview app Text-Editor app Accessing ownCloud Web Compatibility Please note that the usage of Web UI and ownCloud 10 as backend is not recommended starting with version 7.1.0 of the Web UI. Therefore, this section only applies to versions \u0026lt; 7.1.0.\nIntroduction ownCloud Web is being deployed as an app to ownCloud marketplace to enable easy integration into existing ownCloud 10 instances. After completing this setup, ownCloud Web will be available on https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/web.\nPrerequisites Running ownCloud 10 server with version 10.8 Installed oauth2 app Command line access to your server Deploying ownCloud Web Download the ownCloud Web app from the marketplace and enable it:\nocc market:install web Configure oauth2 Within the Admin page of ownCloud 10, head into User Authentication and add a new client with arbitrary name (e.g. ownCloud Web) and redirection URL https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/web/oidc-callback.html.\nYou can mark the ownCloud web client as trusted by clicking the respective checkbox so authorization after authentication gets omitted. If you use OpenID Connect you need to add a new client for ownCloud Web to your identity provider instead. Configure ownCloud 10 Set ownCloud Web address To set the ownCloud Web address and to display ownCloud Web in the app switcher, add the following line into config/config.php:\n\u0026#39;web.baseUrl\u0026#39; =\u0026gt; \u0026#39;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/web\u0026#39;, Configure link routing Administrators can optionally decide whether ownCloud Links (public and private links) should be provided by the Classic web interface or by ownCloud Web using the web.rewriteLinks option in config/config.php. The option defaults to false so that the links open in the Classic web interface. Setting it to true will redirect all links to ownCloud Web. To redirect all private and public links to ownCloud Web, add the following line into config/config.php:\n\u0026#39;web.rewriteLinks\u0026#39; =\u0026gt; true, Make ownCloud Web the default web interface Administrators can optionally decide to make ownCloud Web the default web interface that users see after they log in to ownCloud. By default, the Classic web interface will be presented to users. To present ownCloud Web to users by default, add the following line into config/config.php:\n\u0026#39;defaultapp\u0026#39; =\u0026gt; \u0026#39;web\u0026#39;, While it is possible to make ownCloud Web the default web interface, the decision should be carefully evaluated. Features are still being added to ownCloud Web and users might need to use the Classic web interface to do certain actions. Configure ownCloud Web There are a few config values which need to be set in order for ownCloud Web to work correctly. Please copy the example config below into config/config.json and adjust it for your environment:\n{ \u0026#34;server\u0026#34; : \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;\u0026#34;, \u0026#34;theme\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/web/themes/owncloud/theme.json\u0026#34;, \u0026#34;auth\u0026#34;: { \u0026#34;clientId\u0026#34;: \u0026#34;\u0026lt;client-id-from-oauth2\u0026gt;\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/oauth2/api/v1/token\u0026#34;, \u0026#34;authUrl\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/oauth2/authorize\u0026#34;, \u0026#34;logoutUrl\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/logout\u0026#34; }, \u0026#34;apps\u0026#34; : [ \u0026#34;files\u0026#34;, \u0026#34;preview\u0026#34;, \u0026#34;search\u0026#34; ], \u0026#34;applications\u0026#34; : [ { \u0026#34;title\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;Classic Design\u0026#34;, \u0026#34;de\u0026#34;: \u0026#34;Klassisches Design\u0026#34;, \u0026#34;fr\u0026#34;: \u0026#34;Design classique\u0026#34;, \u0026#34;zh\u0026#34;: \u0026#34;文件\u0026#34; }, \u0026#34;icon\u0026#34;: \u0026#34;swap-box\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/files\u0026#34; }, { \u0026#34;icon\u0026#34;: \u0026#34;settings-4\u0026#34;, \u0026#34;menu\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;_self\u0026#34;, \u0026#34;title\u0026#34;: { \u0026#34;de\u0026#34;: \u0026#34;Einstellungen\u0026#34;, \u0026#34;en\u0026#34;: \u0026#34;Settings\u0026#34; }, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/settings/personal\u0026#34; } ] } If any issues arise when trying to access the new design, a good start for debugging it is to run your config.json file through a json validator of your choice. config parameter explanation server ownCloud 10 server address theme Theme to be used in ownCloud Web pointing to a json file inside of themes folder auth.clientId Client ID received when adding ownCloud Web in the User Authentication section in Admin apps List of internal extensions to be loaded applications Additional apps and links to be displayed in the application switcher or in the user menu applications[0].title Visible title in the application switcher or user menu, localizable applications[1].menu Use user to move the menu item into the user menu. Defaults to app switcher It is important that you don\u0026rsquo;t edit or place the config.json within the app folder. If you do, the integrity check of the app will fail and raise warnings. If you use OpenID Connect you need to replace the \u0026quot;auth\u0026quot; part with following configuration:\n\u0026#34;openIdConnect\u0026#34;: { \u0026#34;metadata_url\u0026#34;: \u0026#34;\u0026lt;fqdn-of-the-identity-provider\u0026gt;/.well-known/openid-configuration\u0026#34;, \u0026#34;authority\u0026#34;: \u0026#34;\u0026lt;fqdn-of-the-identity-provider\u0026gt;\u0026#34;, \u0026#34;client_id\u0026#34;: \u0026#34;\u0026lt;client-id-from-the-identity-provider\u0026gt;\u0026#34;, \u0026#34;response_type\u0026#34;: \u0026#34;code\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;openid profile email\u0026#34; } Integrate ownCloud Classic features in ownCloud Web Add links to the app switcher ownCloud Classic features that are not deeply integrated with the Classic UI (e.g., full screen apps) can be added to the ownCloud Web app switcher so that users can easily access them from ownCloud Web. You can use the following example and customize it according to your needs.\nAll apps that are listed in the ownCloud Classic app switcher will be added as links to the app switcher of the new ownCloud Web automatically. All of those links will open in a new browser tab on click. To add new elements in the app switcher, paste the following into the applications section of config.json:\n{ \u0026#34;title\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;Custom Groups\u0026#34;, \u0026#34;de\u0026#34;: \u0026#34;Benutzerdefinierte Gruppen\u0026#34; }, \u0026#34;icon\u0026#34;: \u0026#34;settings-4\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/settings/personal?sectionid=customgroups\u0026#34; } The URL in the example might need adaptations depending on the configuration of your ownCloud Server. App switcher elements added this way will open the respective page in a new tab. This method can also be used to link external sites like Help pages or similar. Add links to the user menu Just like adding links to the app switcher, you can also add links to the user menu.\n{ \u0026#34;icon\u0026#34;: \u0026#34;settings-4\u0026#34;, \u0026#34;menu\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;_self\u0026#34;, \u0026#34;title\u0026#34;: { \u0026#34;de\u0026#34;: \u0026#34;Hilfe\u0026#34;, \u0026#34;en\u0026#34;: \u0026#34;Help\u0026#34; }, \u0026#34;url\u0026#34;: \u0026#34;https://help-link.example\u0026#34; } This will add a link to the specified URL in the user menu. This way, the link will open in the same tab. If you instead want to open it in a new tab, just remove the line \u0026quot;target\u0026quot;: \u0026quot;_self\u0026quot;,.\nONLYOFFICE For ONLYOFFICE there is a native integration available for ownCloud Web when it is used with ownCloud Classic Server. It fully integrates the ONLYOFFICE Document Editors and allows users to create and open documents right from ownCloud Web.\nTo be able to use ONLYOFFICE in ownCloud Web, it is required to run\nownCloud Server \u0026gt;= 10.8 ownCloud Web \u0026gt;= 4.0.0 ONLYOFFICE Connector for ownCloud Classic \u0026gt;= 7.1.1 Make sure that ONLYOFFICE works as expected in the Classic UI and add the following to config.json to make it available in ownCloud Web:\n\u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;onlyoffice\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/apps-external/onlyoffice/js/web/onlyoffice.js\u0026#34; } ] The URL in the example might need adaptations depending on the configuration of your ownCloud Server. Collabora Online For Collabora Online there is a native integration available for ownCloud Web when it is used with ownCloud Classic Server. It fully integrates the Collabora Online Document Editors and allows users to create and open documents right from ownCloud Web.\nTo be able to use Collabora Online in ownCloud Web, it is required to run\nownCloud Server \u0026gt;= 10.8 ownCloud Web \u0026gt;= 4.0.0 Collabora Online Connector for ownCloud Classic \u0026gt;= 2.7.0 Make sure that Collabora Online works as expected in the Classic UI and add the following to config.json to make it available in ownCloud Web:\n\u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;richdocuments\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/apps/richdocuments/js/richdocuments.js\u0026#34; } ] The URL in the example might need adaptations depending on the configuration of your ownCloud Server. Additional configuration for certain core apps There is additional configuration available for certain core apps. You can find them listed below.\nPreview app In case the backend has additional preview providers configured there is no mechanism, yet, to announce those to the Preview app in ownCloud Web. As an intermediate solution you can add the additional supported mimeTypes to the Preview app by following these steps:\nRemove the \u0026quot;preview\u0026quot; string from the \u0026quot;apps\u0026quot; section in your config.json file Add the following config to your config.json file: \u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;preview\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;web-app-preview\u0026#34;, \u0026#34;config\u0026#34;: { \u0026#34;mimeTypes\u0026#34;: [\u0026#34;image/tiff\u0026#34;, \u0026#34;image/webp\u0026#34;] } } ] If you already have an \u0026quot;external_apps\u0026quot; section, just add the preview app to the list. Please adjust the \u0026quot;mimeTypes\u0026quot; list according to your additional preview providers. See https://github.com/owncloud/files_mediaviewer#supporting-more-media-types for advise on how to add preview providers to the backend.\nText-Editor app The text-editor app provides a list of file extensions that the app is associated with, both for opening files and for creating new files. By default, only .txt and .md files appear in the file creation menu and offer the text-editor as default app on a left mouse click in the file list. For other file types the text-editor app only appears in the right mouse click context menu. In case you want to change this default set of primary file extensions for the text-editor you can overwrite it as follows:\nRemove the \u0026quot;text-editor\u0026quot; string from the \u0026quot;apps\u0026quot; section in your config.json file Add the following config to your config.json file: \u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;text-editor\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;web-app-text-editor\u0026#34;, \u0026#34;config\u0026#34;: { \u0026#34;primaryExtensions\u0026#34;: [\u0026#34;txt\u0026#34;, \u0026#34;yaml\u0026#34;] } } ] With the above example config the text editor will offer creation of new files for .txt and .yaml files instead of .txt and .md files. Also, a left mouse click on any .txt or .yaml file will open the respective file in the text-editor app. In this example, .md files would not be opened in the text-editor by default anymore, but the text-editor will would appear in the context menu for the file as alternative app.\nIf you already have an \u0026quot;external_apps\u0026quot; section, just add the preview app to the list. Please adjust the \u0026quot;mimeTypes\u0026quot; list according to your additional preview providers. See https://github.com/owncloud/files_mediaviewer#supporting-more-media-types for advise on how to add preview providers to the backend.\nThe reason why the app needs to be ported from the apps section to the external_apps section is that only the external_apps support additional configuration. There are plans to change the configuration of apps to give you a coherent admin experience in that regard. Accessing ownCloud Web After following all the steps, you should see a new entry in the application switcher called New Design which points to the ownCloud web.\n","description":"Compatibility Introduction Prerequisites Deploying ownCloud Web Configure oauth2 Configure ownCloud 10 Set ownCloud Web address Configure link routing Make ownCloud Web the default web interface Configure ownCloud Web Integrate ownCloud Classic features in ownCloud Web Add links to the app switcher Add links to the user menu ONLYOFFICE Collabora Online Additional configuration for certain core apps Preview app Text-Editor app Accessing ownCloud Web Compatibility Please note that the usage of Web UI and ownCloud 10 as backend is not recommended starting with version 7."},{"id":6,"href":"/ocis/config/","title":"Configuration","parent":"oCIS - ownCloud Infinite Scale","content":" Configuration Framework Overview of the approach In-depth configuration Flows Examples Expected loading locations Only config files Using ENV variables Substitute ENV variables in configuration files Workflows Supervised Unsupervised Shared Values Log config keys Default config values (in yaml) Configuration Framework In order to simplify deployments and development the configuration model from oCIS aims to be simple yet flexible.\nOverview of the approach In-depth configuration Since we include a set of predefined extensions within the single binary, configuring an extension can be done in a variety of ways. Since we work with complex types, having as many cli per config value scales poorly, so we limited the options to config files and environment variables.\nThe hierarchy is clear enough, leaving us with:\n(each element above overwrites its precedent)\nenv variables extension config ocis config This is manifested in the previous diagram. We can then speak about \u0026ldquo;configuration file arithmetics\u0026rdquo;, where resulting config transformations happen through a series of steps. An administrator must be aware of these sources, since mis-managing them can be a source of confusion, having undesired transformations on config files believed not to be applied.\nFlows Let\u0026rsquo;s explore the various flows with examples and workflows.\nExamples Let\u0026rsquo;s explore with examples this approach.\nExpected loading locations docker images: /etc/ocis/ binary releases: $HOME/.ocis/config/ followed by the \u0026lt;extension name\u0026gt;.yaml, e.g. proxy.yaml for the extension configuration. You also can put an ocis.yaml config file to the expected loading location to use a single config file.\nYou can set another directory as config path in the environment variable OCIS_CONFIG_DIR. It will then pick the same file names, but from the folder you configured.\nOnly config files The following config files are present in the default loading locations:\nocis.yaml\nproxy: http: addr: localhost:1111 log: pretty: false color: false level: info log: pretty: true color: true level: info proxy.yaml\nhttp: addr: localhost:3333 Note that the extension files will overwrite values from the main ocis.yaml, causing ocis server to run with the following configuration:\nproxy: http: addr: localhost:3333 log: pretty: true color: true level: info Using ENV variables The logging configuration if defined in the main ocis.yaml is inherited by all extensions. It can be, however, overwritten by a single extension file if desired. The same example can be used to demonstrate environment values overwrites. With the same set of config files now we have the following command PROXY_HTTP_ADDR=localhost:5555 ocis server, now the resulting config looks like:\nproxy: http: addr: localhost:5555 log: pretty: true color: true level: info Substitute ENV variables in configuration files Environment variables can be used in the configurations files and will be replaced by oCIS when loading these. Default values can be specified after a | character - see below.\nproxy: http: addr: ${PROXY_HTTP_ADDR|localhost:4321} log: pretty: true color: true level: info Workflows Since one can run an extension using the runtime (supervised) or not (unsupervised), we ensure correct behavior in both modes, expecting the same outputs.\nSupervised You are using the supervised mode whenever you issue the ocis server command. We start the runtime on port 9250 (by default) that listens for commands regarding the lifecycle of the supervised extensions. When an extension runs supervised and is killed, the only way to provide / overwrite configuration values will be through an extension config file. This is due to the parent process has already started, and it already has its own environment.\nUnsupervised All the points from the priority section hold true. An unsupervised extension can be started with the format: ocis [extension] i.e: ocis proxy. First, ocis.yaml is parsed, then proxy.yaml followed by environment variables.\nShared Values When running in supervised mode (ocis server) it is beneficial to have common values for logging, so that the log output is correctly formatted, or everything is piped to the same file without duplicating config keys and values all over the place. This is possible using the global log config key:\nocis.yaml\nlog: level: error color: true pretty: true file: /var/tmp/ocis_output.log There is, however, the option for extensions to overwrite this global values by declaring their own logging directives:\nocis.yaml\nlog: level: info color: false pretty: false One can go as far as to make the case of an extension overwriting its shared logging config that received from the main ocis.yaml file. Because things can get out of hands pretty fast we recommend not mixing logging configuration values and either use the same global logging values for all extensions.\nWhen overwriting a globally shared logging values, one MUST specify all values. Log config keys log: level: [ error | warning | info | debug ] color: [ true | false ] pretty: [ true | false ] file: [ path/to/log/file ] # MUST not be used with pretty = true Default config values (in yaml) TBD. Needs to be generated and merged with the env mappings.\n","description":"Configuration Framework Overview of the approach In-depth configuration Flows Examples Expected loading locations Only config files Using ENV variables Substitute ENV variables in configuration files Workflows Supervised Unsupervised Shared Values Log config keys Default config values (in yaml) Configuration Framework In order to simplify deployments and development the configuration model from oCIS aims to be simple yet flexible.\nOverview of the approach In-depth configuration Since we include a set of predefined extensions within the single binary, configuring an extension can be done in a variety of ways."},{"id":7,"href":"/integration/file_picker/getting-started/","title":"Getting Started","parent":"File Picker","content":" The File Picker development has been discontinued in favour of the Web Embed Mode. Components of the File picker File picker Location picker ownCloud File picker is a web component which can be integrated into existing web applications. It connects to an ownCloud server and enables a user to select resources which are then provided in a response of a fired event. Visit installation to see how to integrate the File picker into your product.\nPlease be aware that the File picker provides you with an object representation of the resource and not the actual content itself. In order to perform any actions with the resource, you must utilize the APIs within your own application that integrates the File picker. To see an example of how to upload a file to the location chosen through the File picker, please refer to the following documentation: Perform actions with selected resources. Components of the File picker The file picker can be used in two different variations: File picker and location picker.\nFile picker The file picker enables users to select multiple resources and is intended to bring resources from within ownCloud into your web applications.\nLocation picker The location picker allows only one folder to be selected and its main purpose is to enable users to save files into the connected ownCloud instance.\n","description":"The File Picker development has been discontinued in favour of the Web Embed Mode. Components of the File picker File picker Location picker ownCloud File picker is a web component which can be integrated into existing web applications. It connects to an ownCloud server and enables a user to select resources which are then provided in a response of a fired event. Visit installation to see how to integrate the File picker into your product."},{"id":8,"href":"/ocis/adr/0002-persist-accounts-using-cs3-storage/","title":"2. Persist accounts in a CS3 storage","parent":"Architecture Decisions","content":" Status: accepted Deciders: @butonic, @felixboehm Date: 2020-08-21 Technical Story: File system based indexing\nContext and Problem Statement To set up High Availability (HA) or a geo-replicated setup we need to persist accounts in a distributed way. To efficiently query the accounts by email or username, and not only by id, they need to be indexed. Unfortunately, the bleve index we currently store locally on disk cannot be shared by multiple instances, preventing a scale out deployment.\nConsidered Options Look into distributed bleve Persist users in a CS3 storage Decision Outcome Chosen option: \u0026ldquo;Persist users in a CS3 storage\u0026rdquo;, because we have one service less running and can rely on the filesystem for geo-replication and HA.\nPositive Consequences We can store accounts on the storage using the CS3 API, pushing geo-distribution to the storage layer. Backups of users and storage can be implemented without inconsistencies between using snapshots. Negative Consequences We need to spend time on implementing a reverse index based on files, and symlinks. ","description":"Status: accepted Deciders: @butonic, @felixboehm Date: 2020-08-21 Technical Story: File system based indexing\nContext and Problem Statement To set up High Availability (HA) or a geo-replicated setup we need to persist accounts in a distributed way. To efficiently query the accounts by email or username, and not only by id, they need to be indexed. Unfortunately, the bleve index we currently store locally on disk cannot be shared by multiple instances, preventing a scale out deployment."},{"id":9,"href":"/ocis/adr/0003-external-user-management/","title":"3. Use external User Management","parent":"Architecture Decisions","content":" Status: superseded by 17. Allow read only external User Management Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2022-02-08 Technical Story: Skip account-service by talking to CS3 user-api\nContext and Problem Statement To attach metadata like shares to users ownCloud relies on persistent, non-reassignable, unique identifiers for users (and files). Email and username can change when a user changes his name. But even the OIDC sub+iss combination may change when the IdP changes. While there is an account porting protocol that describes how a relying party (RP) such as ownCloud should behave, it still requires the RP to maintain its own user identifiers.\nDecision Drivers oCIS should be a single binary that can run out of the box without external dependencies like an LDAP server. Time: we want to build a release candidate asap. oCIS should be able to be easily integrated with standard user management components Considered Options Accounts service wraps LDAP GLAuth wraps accounts service Decision Outcome Chosen option: \u0026ldquo;Move accounts functionality to GLAuth and name it accounts\u0026rdquo;, by moving the existing accounts service file based persistence to GLAuth and use it as a drop in replacement for an LDAP server. The reverse index and web UI existing in the accounts service will move as well in order to make GLAuth a standalone, small scale user management with write capabilities.\nProduct summary GLAuth is a drop in user management for small scale deployments that do not rely on an actual LDAP server. oCIS admins can either use the web UI to manage users in GLAuth or use existing tools in their IDM. We hide the complexity by embedding an OpenID Provider, an LDAP server and a user management web UI. Resulting deployment options Use internal user management Recommended for small scale use cases and simple deployments Users, groups and roles are stored and managed within GLAuth Use external user management Recommended for mid and large scale use cases Users, groups and roles are stored and managed within an external LDAP / AD / IDM Separate oCIS and LDAP admin: oCIS admin relies on the LDAP admin to manage users User permissions for roles are always managed in oCIS (settings service) because they are specific to oCIS Resulting technical implications Make the file based reverse index a standalone library Contribute to GLAuth Add ms graph based rest API to manage users, groups and roles (the LDAP lib is currently readonly) Add web UI to glauth that uses the ms graph based rest API to manage users Add a backend that uses the file based reverse index, currently living in the oCIS accounts service Move fallback mechanism from ocis/glauth service to upstream GLAuth to support multiple LDAP servers Make it a chain to support more than two LDAP servers Document the implications for merging result sets when searching for recipients At least one writeable backend is needed to support creating guest accounts Make all services currently using the accounts service talk to the CS3 userprovider To support multiple LDAP servers we need to move the fallback mechanism in ocis/glauth service to upstream GLAuth The current CS3 API for user management should be enriched with pagination, field mask and a query language as needed properly register an auxiliary LDAP schema that adds an ownCloudUUID attribute to users and groups Positive Consequences The accounts service (which is our drop in LDAP solution) can be dropped. The CS3 userprovider service becomes the only service dealing with users. No sync Negative Consequences If users want to store users in their IDM and at the same time guests in a separate user management we need to implement GLAuth backends that support more than one LDAP server. Pros and Cons of the Options GLAuth wraps accounts service Currently, the accounts service is the source of truth and we use it to implement user management.\nGood, because it solves the problem of storing and looking up an owncloud UUID for a user (and group) Good, because we can manage users out of the box Good, because we can persist accounts in a CS3 storage provider Bad, because it maintains a separate user repository: it needs to either learn or sync users. Move accounts functionality to GLAuth and name it accounts We should use an existing LDAP server and make GLAuth a drop in replacement for it.\nGood, because we can use an existing user repository (an LDAP server), no need to sync or learn users. Good, because admins can rely on existing user management tools. Good, because we would have a clear separation of concerns: users reside in whatever repository, typically an LDAP server could be an existing LDAP server or AD could be our embeddable drop in glauth server we use a service to wrap the LDAP server with other APIs: ms graph API - ODATA based restful API, SCIM - designed to manage user identities, supported by some IDPs, the current accounts API (which is a protobuf spec following the ms graph API) our account management UI can use the ms graph based API service which can have different backends an existing LDAP server our drop in glauth server (which might serve the ms graph based API itself) the CS3 API + a future guest provisioning API + a future CS3 user provisioning API (or generic space provisioning) all oCIS services can use the service registry to look up the accounts service that provides an internal API could be the CS3 user provider (and API) could be the internal protobuf accounts API introduce a new guest provisioning API to CS3 which properly captures our requirement to have them in the user repository guests need to be made available to the firewall storages like EOS that integrate with the os for acl based file permissions need a numeric user and group id Good, because we can use the CS3 user provider with the existing LDAP / rest driver. Bad, because oCIS admins may not have the rights to manage role assignments. (But this is handled at a different department.) Bad, because oCIS admins may not have the rights to disable users if an external LDAP is used instead of the drop in GLAuth. Links supersedes ADR-0001 superseded by 17. Allow read only external User Management ","description":"Status: superseded by 17. Allow read only external User Management Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2022-02-08 Technical Story: Skip account-service by talking to CS3 user-api\nContext and Problem Statement To attach metadata like shares to users ownCloud relies on persistent, non-reassignable, unique identifiers for users (and files). Email and username can change when a user changes his name. But even the OIDC sub+iss combination may change when the IdP changes."},{"id":10,"href":"/integration/file_picker/installation/","title":"Installation","parent":"File Picker","content":" The File Picker development has been discontinued in favour of the Web Embed Mode. Setup authentication OpenID Connect config OAuth2 config Pass bearer token Install File picker package Select browser storage Integrate in HTML page with vanilla JavaScript Integrate in Vue web application Set correct variation Theming Buttons and events Select button Cancel button Setup authentication The config for the server backend and authentication needs to be provided in json format. The full set of options is listed below in two examples. One for authentication with OAuth2 and one with OpenID Connect.\nThere are different ways of providing the config JSON to the file picker:\nAs a JSON object via a prop called configObject As a JSON string via the same prop (configObject) As a URL via a prop called configLocation. This requires full URL address (e.g. https://\u0026lt;your-server\u0026gt;/\u0026lt;path-to-the-config\u0026gt;) If none of the props (configObject or configLocation) is defined, the file picker has a configLocation of https://\u0026lt;your-server\u0026gt;/file-picker-config.json as fallback Location of the file can be provided via a prop called configLocation. This requires full URL address (e.g. https://\u0026lt;your-server\u0026gt;/\u0026lt;path-to-the-config\u0026gt;). If the prop is not defined, the location will fallback to https://\u0026lt;your-server\u0026gt;/file-picker-config.json. The config can point to both oauth2 and OIDC. You can take a look at the following example to see how OIDC can be defined:\nOpenID Connect config { \u0026#34;server\u0026#34;: \u0026#34;\u0026lt;owncloud-server\u0026gt;\u0026#34;, \u0026#34;openIdConnect\u0026#34;: { \u0026#34;metadata_url\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;/.well-known/openid-configuration\u0026#34;, \u0026#34;authority\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;\u0026#34;, \u0026#34;client_id\u0026#34;: \u0026#34;\u0026lt;client-id\u0026gt;\u0026#34;, \u0026#34;response_type\u0026#34;: \u0026#34;code\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;openid profile email\u0026#34; } } OAuth2 config { \u0026#34;server\u0026#34;: \u0026#34;\u0026lt;owncloud-server\u0026gt;\u0026#34;, \u0026#34;auth\u0026#34;: { \u0026#34;clientId\u0026#34;: \u0026#34;\u0026lt;oauth2-client-id\u0026gt;\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;/index.php/apps/oauth2/api/v1/token\u0026#34;, \u0026#34;authUrl\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;/index.php/apps/oauth2/authorize\u0026#34; } } Pass bearer token In case you already have a bearer token and want to skip the whole authorization process inside of the File picker, you can pass it to the component via prop called bearerToken.\nInstall File picker package To integrate File picker into your own product, you can install it via one of the following commands:\nnpm install @ownclouders/file-picker --save # OR yarn add @ownclouders/file-picker # OR pnpm add @ownclouders/file-picker Select browser storage In order to authorize any request to the ownCloud server, we are storing the Bearer token in a browser storage. By default, it is the session storage. As browsers are adding more strict policies when it comes to blocking third party cookies, your users might experience issues with the token not being saved in the storage. For this reason, it is possible to specify a storage name in the config of File picker. To make it possible to run the File picker inside of an iframe, specify storage: memory.\nIf the memory storage is used, it is not persisted in the session. This leads to users having to authorize again after a refresh has happened. Users might still be experiencing issues with the authentication even if the memory storage is used. That can happen due to the authentication popup needing to trigger a callback in the File picker. To make sure it will work as supposed, be sure to set correct CORS headers. Integrate in HTML page with vanilla JavaScript When including File picker in an HTML page, it is important to include Vue.js as well. In this case, we will import it via unpkg. Without this, the component won\u0026rsquo;t work. Vue needs to be included also if you\u0026rsquo;re importing the File picker into a web application built with other framework than Vue (e.g. React, Angular).\n... \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;File picker example\u0026lt;/title\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/vue\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/file-picker/dist/wc/file-picker.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; ... \u0026lt;file-picker id=\u0026#34;file-picker\u0026#34; variation=\u0026#34;resource\u0026#34;\u0026gt;\u0026lt;/file-picker\u0026gt; Integrate in Vue web application There is a caveat when using the File picker inside an existing Vue application. Since the web component will be imported before Vue, we need to define it as a global variable on our own. This requires us to separate the import of Vue into a bootstrap file.\nvue.js:\nimport Vue from \u0026#39;vue\u0026#39; window.Vue = Vue main.js:\nimport Vue from \u0026#39;./vue\u0026#39; new Vue(...) \u0026lt;template\u0026gt; \u0026lt;file-picker variation=\u0026#34;location\u0026#34; /\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import FilePicker from \u0026#39;@ownclouders/file-picker\u0026#39; import \u0026#39;@ownclouders/file-picker/dist/lib/file-picker.css\u0026#39; export default: { components: { FilePicker } } \u0026lt;/script\u0026gt; Set correct variation As described in Getting Started, File picker comes in two variations. To define which one should be used, you need to pass it to the component via its variation property. Valid values are:\nresource - File picker location - Location picker Theming File picker comes by default with extracted stylesheet which combines our ownCloud Design System and a few custom styles. If you want to create a custom theme, do not include our stylesheet and create a custom one using File picker selectors.\nButtons and events The wording of buttons can be customized.\nSelect button The file picker has a button in the top right for emitting an event with the selected location or resource, depending on the configured variation. This button has default labels, depending on the chosen variation. However, it is possible to define a different button label by setting select-btn-label=\u0026quot;\u0026lt;your select button label\u0026gt;\u0026quot;. Using the select button will emit an event with the name selectResources.\nCancel button Cancellation for the file picker is disabled by default. When a label is provided, the file picker renders a cancel button on the left side of the select button. This can be achieved by setting cancel-btn-label=\u0026quot;\u0026lt;your cancel button label\u0026gt;\u0026quot;. This will also add a keyboard event on the ESC key. Using the cancel button or the ESC key on the keyboard will emit an event with the name cancel.\n","description":"The File Picker development has been discontinued in favour of the Web Embed Mode. Setup authentication OpenID Connect config OAuth2 config Pass bearer token Install File picker package Select browser storage Integrate in HTML page with vanilla JavaScript Integrate in Vue web application Set correct variation Theming Buttons and events Select button Cancel button Setup authentication The config for the server backend and authentication needs to be provided in json format."},{"id":11,"href":"/ocis/adr/0004-support-hot-migration/","title":"4. Support Hot Migration","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2021-03-16 Technical Story: [description | ticket/issue URL]\nContext and Problem Statement Migration is one of the most important topics of the oCIS story. We need to provide a concept how to migrate from oC10 to oCIS.\nDecision Drivers Do not lose file blob or metadata. To prevent a sync surge from clients the etag for files should be migrated. To prevent internal links from breaking or pointing to wrong files the file id of existing files needs to be migrated. To prevent data loss trash and version blobs should be migrated. Existing shares like public links and federated shares must remain functional after the migration. To prevent internal shares the share type, permissions and expiry needs to be migrated. To prevent public links from breaking the url token, permissions, expiry and password needs to be migrated. What about federated shares? What about additional share permissions, e.g. comment on office files? Legacy clients need to keep working To keep existing clients working the remote.php/webdav and dav/files/\u0026lt;username\u0026gt; webdav endpoints as well as the ocs API need to be available. What about app passwords/tokens? Considered Options Cold Migration: migrate data while systems are not online, so no user interaction happens in between. Hot Migration: one or both systems are online during migration. Decision Outcome Chosen option: \u0026ldquo;[option 1]\u0026rdquo;, because [justification. e.g., only option, which meets k.o. criterion decision driver | which resolves force force | … | comes out best (see below)].\nPositive Consequences [e.g., improvement of quality attribute satisfaction, follow-up decisions required, …] … Negative Consequences [e.g., compromising quality attribute, follow-up decisions required, …] … Pros and Cons of the Options Cold Migration The migration happens while the service is offline. File metadata, blobs and share data is exported from ownCloud 10 and imported in oCIS. This can happen user by user, where every user export would contain the file blobs, their metadata, trash, versions, shares and all metadata that belongs to the user\u0026rsquo;s storage. To prevent group shares from breaking, users in the same groups must be migrated in batch. Depending on the actual group shares in an instance this may effectively require a complete migration in a single batch.\nGood, because oCIS can be tested in a staging system without writing to the production system. Good, because file layout on disk can be changed to support new storage driver capabilities. Bad, because the export and import might require significant amounts of storage. Bad, because a rollback to the state before the migration might cause data loss of the changes that happened in between. Bad, because the cold migration can mean significant downtime. Hot Migration The migration happens in subsequent stages while the service is online.\nGood, because the admin can migrate users from old to new backend in a controlled way. Good, because users and admins can learn to trust the new system. Good, because there can be preparations even long before the migrations happens in parallel on the oC10 codebase, i.e. addition of metadata that is needed while the system operates. Good, because the downtime of the system can be fairly small. Bad, because it is more complex and might drag on for a long time. Links Clarify responsibilities of share providers and storage providers · Issue #1377 · cs3org/reva (github.com) because the share manager for oCIS should store share information on the storage system. And storage provider should persist share creator · Issue #93 · cs3org/cs3apis (github.com) finally: eos: store share id in inherited xattr · Issue #543 · cs3org/reva (github.com) ","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2021-03-16 Technical Story: [description | ticket/issue URL]\nContext and Problem Statement Migration is one of the most important topics of the oCIS story. We need to provide a concept how to migrate from oC10 to oCIS.\nDecision Drivers Do not lose file blob or metadata. To prevent a sync surge from clients the etag for files should be migrated. To prevent internal links from breaking or pointing to wrong files the file id of existing files needs to be migrated."},{"id":12,"href":"/integration/file_picker/accessing-resources/","title":"Accessing Resources","parent":"File Picker","content":" The File Picker development has been discontinued in favour of the Web Embed Mode. Access resources Perform actions with selected resources If using File picker as a web component, it is returning selected resources via events called select and update. To access them, you need to set an event listener where you\u0026rsquo;ll be able to get them as part of the response of the callback function.\nAccess resources \u0026lt;file-picker id=\u0026#34;file-picker\u0026#34; variation=\u0026#34;resource\u0026#34;\u0026gt;\u0026lt;/file-picker\u0026gt; \u0026lt;script\u0026gt; const item = document.getElementById(\u0026#39;file-picker\u0026#39;) let resources = [] item.addEventListener(\u0026#39;select\u0026#39;, event =\u0026gt; { resources = event.detail[0] }) \u0026lt;/script\u0026gt; Perform actions with selected resources Below is an example code demonstrating how to upload files to the selected location using the File picker, leveraging the tus-js-client library.\n\u0026lt;file-picker id=\u0026#34;file-picker\u0026#34; variation=\u0026#34;resource\u0026#34;\u0026gt;\u0026lt;/file-picker\u0026gt; \u0026lt;script\u0026gt; const filePicker = document.querySelector(\u0026#39;#file-picker\u0026#39;) const baseURL = \u0026#39;https://\u0026lt;your-owncloud-server-domain\u0026gt;/remote.php/dav\u0026#39; // A mocked file to upload const file = new File([\u0026#39;Hello world!\u0026#39;], \u0026#39;my-upload-file.md\u0026#39;, { type: \u0026#39;text/markdown\u0026#39; }) // This will be assigned a value once the token inside the File picker is set let accessToken = \u0026#39;\u0026#39; filePicker.addEventListener(\u0026#39;select\u0026#39;, (event) =\u0026gt; { // Select the resource from the event payloads const resource = event.detail[0][0] // Create a new tus upload const upload = new tus.Upload(file, { endpoint: baseURL + resource.webDavPath, retryDelays: [0, 3000, 5000, 10000, 20000], metadata: { filename: file.name, filetype: file.type, }, headers: { Authorization: accessToken }, onError: function (error) { console.log(\u0026#39;Failed because: \u0026#39; + error) }, onProgress: function (bytesUploaded, bytesTotal) { const percentage = ((bytesUploaded / bytesTotal) * 100).toFixed(2) console.log(bytesUploaded, bytesTotal, percentage + \u0026#39;%\u0026#39;) }, onSuccess: function () { console.log(\u0026#39;File %s successfully uploaded into %s\u0026#39;, upload.file.name, upload.url) }, }) // Start the upload upload.start() }) // Setup a listener that will get the access token necessary to upload the file filePicker.addEventListener(\u0026#39;token\u0026#39;, (event) =\u0026gt; { accessToken = \u0026#39;Bearer \u0026#39; + event.detail[0] }) \u0026lt;/script\u0026gt; ","description":"The File Picker development has been discontinued in favour of the Web Embed Mode. Access resources Perform actions with selected resources If using File picker as a web component, it is returning selected resources via events called select and update. To access them, you need to set an event listener where you\u0026rsquo;ll be able to get them as part of the response of the callback function.\nAccess resources \u0026lt;file-picker id=\u0026#34;file-picker\u0026#34; variation=\u0026#34;resource\u0026#34;\u0026gt;\u0026lt;/file-picker\u0026gt; \u0026lt;script\u0026gt; const item = document."},{"id":13,"href":"/ocis/guides/ocis-and-containers/","title":"oCIS and Containers","parent":"Guides","content":" Cloud Native Why do we recommend to work with containers?\nLightweight Containers are more lightweight than VMs. It is easier to work with shared volumes and networks because they are isolated from the host system. Dependencies The container images have all dependencies installed and the maintainer takes care for keeping them up-to-date. Scaling In addition to that, containers help with scaling. You can run multiple instances of one container and distribute them across hosts. Docker compose For oCIS deployments you often need multiple services. These services need to share resources like volumes and networks. If you do not use any orchestration tool, you would end up writing bash scripts to create and update containers and volumes and connect them via networks. This is what orchestration tools like docker compose can do for you. You define a service mesh using .yaml files and the tool tries to run and maintain that. You gain more value and a version history by using a version control system. Your deployment configuration is fully written down as a spec and you will never touch any system directly and change the config manually.\nKubernetes Containers are also used in kubernetes. Kubernetes is part of a huge ecosystem and is founded on best-of-breed practises to orchestrate large scale container applications and services.\noCIS and Containers oCIS was developed as microservices. We do not scale the whole system as a monolith but we scale the individual services.\n","description":"Cloud Native Why do we recommend to work with containers?\nLightweight Containers are more lightweight than VMs. It is easier to work with shared volumes and networks because they are isolated from the host system. Dependencies The container images have all dependencies installed and the maintainer takes care for keeping them up-to-date. Scaling In addition to that, containers help with scaling. You can run multiple instances of one container and distribute them across hosts."},{"id":14,"href":"/ocis/adr/0005-cs3-api-account-management/","title":"5. Account Management through CS3 API","parent":"Architecture Decisions","content":" Status: proposed Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-04-12 Technical Story: Write only management API for User and Group resources\nContext and Problem Statement What would be a more effective way of using network resources and handle account management within the oCIS-Reva ecosystem? Separating account management at the service level is pragmatic and allows for fast iterations, but also steadily accumulates inconsistencies and bloats technical debt.\nDecision Drivers Reduce number of network calls. Reduce number of services (merge Account + GLAuth from ADR-0003). Formalize account management at the API level. Considered Options Account management delegated to vendors. Add account management to the CS3 API. Decision Outcome Chosen option: \u0026ldquo;Add account management to the CS3 API\u0026rdquo;. Making the API declare an API for account management will not only allow a deployment to fail fast (as in: the management node is not running) but would also centralize all management operations that should happen to be constrained within the Reva context. Constrained operations SHOULD be by definition more secure, or at least as secure as the rest of the system.\nPositive Consequences More resilient API. Because account management is considered a \u0026ldquo;first class citizen\u0026rdquo; changes are forced to go through a more exhaustive revision process. Removing Accounts from search users1. Replace the provisioning API in favor of the new Reva Admin node. (1) the current vendor implementation of searching a user (i.e: when sharing a resource) relies directly on the accounts service, since this is the only source of truth. Searching a user looks like:\n┌────────────────────────────────────────┐ │user search (no LDAP) │ │ │ │ ┌──────────┐ │ │ │ │ │ │ │ proxy │ │ │ │ │ ┌ ─ ─ ─ ─ ─ ┐ │ │ └──────────┘ go-micro │ │ ▲ │ │ │ │ │ Λ │ │ ▼ │ ╱ ╲ │ │ │ ┌──────────┐ ╱ ╲ │ │ │ │ │ ╱ ╲ │ │ │ │ ocs │◀──(1)───▶registry▏ │ │ │ │ │ ╲ ╱ │ │ │ └──────────┘ ╲ ╱ │ │ ▲ │ ╲ ╱ │ │ │ │ V │ │ │ │ │ │ │ │ │ │ │ └ ─ ─ ─ ─ ─ ┘ │ │ │ │ │ │ │ │ │ ┌──────────┐ │ │ │ │ │ │ │ └─────────────▶│ accounts │ │ │ │ │ │ │ └──────────┘ │ │ │ │ │ │(1) ocs requests a connection to the │ │accounts service to the registry │ │ │ └────────────────────────────────────────┘ Whereas, as a result of ADR-0003 and this ADR, we can simplify and improve this design:\n┌─────────────────────────────────────────────┐ │user search │ │ │ │ │ │ ┌──────────┐ │ │ │ │ │ │ │ proxy │ │ │ │ │ │ │ └──────────┘ │ │ │ │ │ ▼ │ │ ┌──────────┐ │ │ │ │ │ │ │ ocs │ │ │ │ │ │ │ └──────────┘ │ │ │ │ │ │ │ │ ┌ ─ ─ ─ ─ ─│─ ─ ─ ─ ┌ ─ ─ ─ ─ ─ ─ ─ ─ ┐ │ │ reva ▼ │ IDM │ │ │ ┌──────────┐ │ ┌──────────┐ │ │ │ │ │ │ │ │ │ │ │ │ users │◀─────┼──▶│ GLAuth │ │ │ │ │ │ │ │ │ │ │ │ └──────────┘ │ └──────────┘ │ │ │ │ │ │ └ ─ ─ ─ ─ ─ ─ ─ ─ ─ └ ─ ─ ─ ─ ─ ─ ─ ─ ┘ │ │ │ └─────────────────────────────────────────────┘ And instead rely on the already existing Reva users provider.\nPros and Cons of the Options Account management delegated to vendors Good, because it allows for fast iterations. Bad, because account management happens outside of the Reva process. This can potentially end up in invalid account creation / deletion / updates. An example with the existing Accounts service is that any client can fire CRUD accounts requests to the Accounts service as long as the client knows where the server is running and provides with an Authorization header (only required by the proxy). This request totally bypasses Reva middlewares and therefore any security measures that should be enforced by the entire system. Bad, because leaves teams the task of designing and implementing a way of dealing with account management. Ideally one schema should be provided / suggested. Creating an account using the first option looks currently is implemented in vendors as:\n┌──────────────────────────────────────────────────┐ │ creating a user (webui) │ │ │ │ ┌──────────┐ │ │ │ │ │ │ │ proxy │ │ │ │ │ │ │ └──────────┘ │ │ │ │ │ │ │ │ /api/v0/accounts/accounts-create │ │ │ │ │ │ │ │ │ │ │ ▼ │ │ ┌──────────┐ │ │ │ │ │ │ │ accounts │ │ │ │ │ │ │ └──────────┘ │ │ │ │ note that while doing CRUD operations changes │ │ are instantly reflected for the IDP since out of │ │ the box oCIS uses an accounts backend for │ │ GLAuth. │ └──────────────────────────────────────────────────┘ As explained before, during this flow no Reva middlewares are run. Creating an account will only use the embedded accounts js file alongside a minted jwt token (by the oCIS proxy) to communicate with the accounts service.\nAdd account management to the CS3 API Good, because it solidifies what the CS3 API can or cannot do, and account management should be handled at the API level since ultimately accounts would contain a mix of required CS3 and vendor-specific attributes. Good, because it centralizes account management and constrains it within the Reva boundaries. Good, because there is a clear separation of concerns on what is accounts management logic. Good, because we already designed a similar API for the accounts service the only difference being we (vendors) define their own messages. The API would fully include CRUD methods Bad, because development cycles are larger. an example flow will be: update api \u0026gt; run prototool \u0026gt; publish language specific packages \u0026gt; update dependencies to fetch latest version of the package \u0026gt; utilize the new changes. The new account management workflow will result in:\n┌───────────────────────────────────────────────────┐ │creating a user (webui) │ │ - maintain the same route for compatibility │ │ │ │ ┌──────────┐ │ │ │ │ │ │ │ proxy │ │ │ │ │ │ │ └──────────┘ │ │ │ │ │ │ │ │ /api/v0/accounts/accounts-create │ │ │ │ │ │ │ │ ┌ ─ ─ ─ ─ ─│─ ─ ─ ─ ─ ─ ─ ─ ┐ ┌ ─ ─ ─ ─ ─ ─ ─ ─ │ │ Reva │ IDM │ │ │ │ │ │ │ │ │ ▼ │ │ │ │ ┌──────────┐ │ │ ┌──────────┐ │ │ │ │ │ │ │ │ │ │ │ admin │───────────┼──┼──▶│ GLAuth │ │ │ │ │ │ │ │ │ │ │ └──────────┘ │ │ └──────────┘ │ │ │ │ │ │ │ │ │ │ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┘ │ │ │ │ │ │ │ │ │ │ │ │ │ │ an example of a driver could be GLAuth │ │ implementing the user management portion of the │ │ GraphAPI │ └───────────────────────────────────────────────────┘ This flow allows Reva and oCIS Proxy to run any middleware logic in order to validate a request. The communication between the proposed Admin api (CS3 API messages) and the IDM (GLAuth) are specific to the drivers.\n","description":"Status: proposed Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-04-12 Technical Story: Write only management API for User and Group resources\nContext and Problem Statement What would be a more effective way of using network resources and handle account management within the oCIS-Reva ecosystem? Separating account management at the service level is pragmatic and allows for fast iterations, but also steadily accumulates inconsistencies and bloats technical debt.\nDecision Drivers Reduce number of network calls."},{"id":15,"href":"/integration/file_picker/customisations/","title":"Customising","parent":"File Picker","content":" The File Picker development has been discontinued in favour of the Web Embed Mode. Variation File Picker Location Picker Actions Select Cancel It is possible to customise certain parts of the File Picker with the help of props.\nVariation File picker comes in two different variations - File Picker and Location Picker. To specify which one should be used, set property variation to resource or location.\nFile Picker File picker variation is used to select resources from within your ownCloud instace. It is possible to select multiple files and folders.\nLocation Picker Location picker variation is used to select location inside of your ownCloud instance. It is only possible to select one folder.\nActions If you do not wish to include the default File Picker actions (select and cancel), you can hide both of them.\nSelect Select resources/location button can be hidden by setting prop isSelectBtnDisplayed to false.\nCancel Hiding Cancel button slightly differes to the Select button. If you do not wish to display the cancel button, simply leave out any value for prop cancelBtnLabel and the component will be hidden by default.\n","description":"The File Picker development has been discontinued in favour of the Web Embed Mode. Variation File Picker Location Picker Actions Select Cancel It is possible to customise certain parts of the File Picker with the help of props.\nVariation File picker comes in two different variations - File Picker and Location Picker. To specify which one should be used, set property variation to resource or location.\nFile Picker File picker variation is used to select resources from within your ownCloud instace."},{"id":16,"href":"/ocis/adr/0006-service-discovery/","title":"6. Service Discovery within oCIS and Reva","parent":"Architecture Decisions","content":" Status: accepted Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-04-19 Technical Story: Introduce Named Services.\nContext and Problem Statement Reva relies heavily on config files. A known implication of this approach are having to know a-priori where a service is running (host + port). We want to move away from hardcoded values and rely instead on named services for service discovery. Furthermore, we would like both platforms (Reva + oCIS) to have the same source of truth at any given time, not having one to notify the other whenever a service status changes.\nDecision Drivers Avoid a-priori knowledge of services. Ease of scalability. Always up-to-date knowledge of the running services on a given deployment (a service registry doesn\u0026rsquo;t have to necessarily be running on the same machine / network) Considered Options Hardcoded tuples of hostname + port Dynamic service registration Decision Outcome Chosen option: \u0026ldquo;Dynamic service registration\u0026rdquo;. There were some drawbacks regarding this due to introducing go-micro to Reva was from start an issue. Given the little usage of go-micro we need, we decided instead to define our very own Registry interface on Reva and extended the runtime arguments to allow for injecting a registry.\nPositive Consequences Having dynamic service registration delegates the entire lifecycle of finding a process to the service registry. Removing a-priori knowledge of hostname + port for services. Marrying go-micro\u0026rsquo;s registry and a newly defined registry abstraction on Reva. We will embrace go-micro interfaces by defining a third merger interface in order to marry go-micro registry and reva registry. The ability to fetch a service node relying only on its name (i.e: com.owncloud.proxy) and not on a tuple hostname + port that we rely on being preconfigured during runtime. Conceptually speaking, a better framework to tie all the services together. Referring to services by names is less overall confusing than having to add a service name + where it is running. A registry is agnostic to \u0026ldquo;where is it running\u0026rdquo; because it, by definition, keeps track of this specific question, so when speaking about design or functionality, it will ease communication. Pros and Cons of the Options Hardcoded tuples of hostname + port Good, because firewalls are easier to configure since IP are static. Good, because the mental model required is easier to grasp as IP addresses can be easily bundled. Bad, because it requires thorough planning of ports. Dynamic service registration Good, because it abstracts the use of service lookup away to registry logic from the admin or developer. Good, because it allows for, through interfaces, registry injection This means we can have a service registry that we extensively use in oCIS and inject its functionality onto Reva. Bad, because it\u0026rsquo;s yet another abstraction. Bad, because firewalls are harder to configure with dynamic IPs.f ","description":"Status: accepted Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-04-19 Technical Story: Introduce Named Services.\nContext and Problem Statement Reva relies heavily on config files. A known implication of this approach are having to know a-priori where a service is running (host + port). We want to move away from hardcoded values and rely instead on named services for service discovery. Furthermore, we would like both platforms (Reva + oCIS) to have the same source of truth at any given time, not having one to notify the other whenever a service status changes."},{"id":17,"href":"/ocis/storage/spacesprovider/","title":"Spaces Provider","parent":"Storage","content":" The current implementation in oCIS might not yet fully reflect this concept. Feel free to add links to ADRs, PRs and Issues in short warning boxes like this. Spaces Provider A storage provider manages resources identified by a reference by accessing a storage system with a storage driver.\nFrontend The oCIS frontend service starts all services that handle incoming HTTP requests:\nocdav for ownCloud flavoured WebDAV ocs for sharing, user provisioning, capabilities and other OCS API endpoints datagateway for up and downloads TODO: ocm WebDAV The ocdav service not only handles all WebDAV requests under (remote.php/)(web)dav but also some other legacy endpoints like status.php:\nendpoint service CS3 api CS3 namespace description TODO ownCloud 10 / current ocis setup: status.php ocdav - - currently static should return compiled version and dynamic values (remote.php/)webdav ocdav storageprovider /home the old webdav endpoint (remote.php/)dav/files/\u0026lt;username\u0026gt; ocdav storageprovider /home the new webdav endpoint (remote.php/)dav/meta/\u0026lt;fileid\u0026gt;/v ocdav storageprovider id based versions (remote.php/)dav/trash-bin/\u0026lt;username\u0026gt; ocdav recycle - trash should aggregate the trash of storage spaces the user has access to (remote.php/)dav/public-files/\u0026lt;token\u0026gt; ocdav storageprovider /public/\u0026lt;token\u0026gt; public links (remote.php/)dav/avatars/\u0026lt;username\u0026gt; ocdav - - avatars, hardcoded look up from user provider and cache CernBox setup: (remote.php/)webdav ocdav storageprovider / Note: existing folder sync pairs in legacy clients will break when moving the user home down in the path hierarchy (remote.php/)webdav/home ocdav storageprovider /home (remote.php/)webdav/users ocdav storageprovider /users (remote.php/)dav/files/\u0026lt;username\u0026gt; ocdav storageprovider /users/\u0026lt;user_layout\u0026gt; Spaces concept also needs a new endpoint: (remote.php/)dav/spaces/\u0026lt;spaceid\u0026gt;/\u0026lt;relative_path\u0026gt; ocdav storageregistry \u0026amp; storageprovider bypass path based namespace and directly talk to the responsible storage provider using a relative path spaces concept needs to point to storage spaces allow accessing spaces, listing is done by the graph api The correct endpoint for a users home storage space in oc10 is remote.php/dav/files/\u0026lt;username\u0026gt;. In oc10 all requests at this endpoint use a path based reference that is relative to the users home. In oCIS this can be configured and defaults to /home as well. Other API endpoints like ocs and the web UI still expect this to be the users home.\nIn oc10 we originally had remote.php/webdav which would render the current users home storage space. The early versions (pre OC7) would jail all received shares into a remote.php/webdav/shares subfolder. The semantics for syncing such a folder are not trivially predictable, which is why we made shares freely mountable anywhere in the users home.\nThe current reva implementation jails shares into a remote.php/webdav/Shares folder for performance reasons. Obviously, this brings back the special semantics for syncing. In the future we will follow a different solution and jail the received shares into a dedicated /shares space, on the same level as /home and /spaces. We will add a dedicated API to list all storage spaces a user has access to and where they are mounted in the users namespace.\nTODO rewrite this hint with /dav/spaces Existing folder sync pairs in legacy clients will break when moving the user home down in the path hierarchy like CernBox did. For legacy clients the remote.php/webdav endpoint will no longer list the users home directly, but instead present the different types of storage spaces:\nremote.php/webdav/home: the users home is pushed down into a new home storage space remote.php/webdav/shares: all mounted shares will be moved to a new shares storage space remote.php/webdav/spaces: other storage spaces the user has access to, e.g. group or project drives Sharing The OCS Share API endpoint /ocs/v1.php/apps/files_sharing/api/v1/shares returns shares, which have their own share id and reference files using a path relative to the users home. They API also lists the numeric storage id as well as the string type storage_id (which is confusing \u0026hellip; but yeah) which would allow constructing combined references with a storage space id and a path relative to the root of that storage space. The web UI however assumes that it can take the path from the file_target and append it to the users home to access it.\nThe API already returns the storage id (and numeric id) in addition to the file id:\n\u0026lt;storage_id\u0026gt;home::auser\u0026lt;/storage_id\u0026gt; \u0026lt;storage\u0026gt;993\u0026lt;/storage\u0026gt; \u0026lt;item_source\u0026gt;3994486\u0026lt;/item_source\u0026gt; \u0026lt;file_source\u0026gt;3994486\u0026lt;/file_source\u0026gt; \u0026lt;file_parent\u0026gt;3994485\u0026lt;/file_parent\u0026gt; \u0026lt;file_target\u0026gt;/Shared/Paris.jpg\u0026lt;/file_target\u0026gt; Creating shares only takes the path as the argument so creating and navigating shares only needs the path. When you update or delete a share it takes the share id not the file id.\nThe OCS service makes a stat request to the storage provider to get a ResourceInfo object. It contains both, a ResourceId and an absolute path. If the resource exists a request is sent to the gateway. Depending on the type of share the Collaboration API, the Link API or the Open Cloud Mesh API endpoints are used.\nAPI Request Resource identified by Grant type Further arguments Collaboration CreateShareRequest ResourceInfo ShareGrant - Link CreatePublicShareRequest ResourceInfo Link Grant We send the public link name in the ArbitraryMetadata of the ResourceInfo Open Cloud Mesh CreateOCMShareRequest ResourceId OCM ShareGrant OCM ProviderInfo The user and public share provider implementations identify the file using the ResourceId. The ResourceInfo is passed so the share provider can also store who the owner of the resource is. The path is not part of the other API calls, e.g. when listing shares. The OCM API takes an id based reference on the CS3 api, even if the OCM HTTP endpoint takes a path argument. @jfd: Why? Does it not need the owner? It only stores the owner of the share, which is always the currently logged-in user, when creating a share. Afterwards only the owner can update a share \u0026hellip; so collaborative management of shares is not possible. At least for OCM shares. REVA Storage Registry The reva storage registry manages the CS3 global namespace: It is used by the reva gateway to look up address and port of the storage provider that should handle a reference.\n","description":"The current implementation in oCIS might not yet fully reflect this concept. Feel free to add links to ADRs, PRs and Issues in short warning boxes like this. Spaces Provider A storage provider manages resources identified by a reference by accessing a storage system with a storage driver.\nFrontend The oCIS frontend service starts all services that handle incoming HTTP requests:\nocdav for ownCloud flavoured WebDAV ocs for sharing, user provisioning, capabilities and other OCS API endpoints datagateway for up and downloads TODO: ocm WebDAV The ocdav service not only handles all WebDAV requests under (remote."},{"id":18,"href":"/integration/file_picker/component-reference/","title":"Component reference","parent":"File Picker","content":" The File Picker development has been discontinued in favour of the Web Embed Mode. Props Events \u0026lt;file-picker\u0026gt; Props Property Type Default Description variation String Specifies if File Picker (resource) or Location Picker (location) should be used configLocation String window.location.origin + '/file-picker-config.json' Defines where the config file should be located bearerToken String null Bearer token used for requests authentication. If specified, authorization step is skipped configObject `String Object` isSdkProvided Boolean false Asserts whether ownCloud SDK is already initialised in the consuming app selectBtnLabel String null Replaces the select button label isSelectBtnDisplayed Boolean true Asserts whether the select button should be displayed cancelBtnLabel String nulll Displays the cancel button and uses the given value as a label isOdsProvided Boolean false Asserts whether the ownCloud Design System has been already initialised in the consuming app locale String null Sets the language in which the File Picker should be displayed. If omitted, the browser language will be used isInitialFocusEnabled Boolean false Enables focusing last item of breadcrumbs after the first folder has been loaded Events Event Arguments Description update Resources array Emitted when any resource is selected or deselected or if a folder has been loaded in location picker select Resources array Emitted when the select button is clicked cancel Native click event object Emitted when the cancel button is clicked folderLoaded Current folder object Emitted when loading of a folder has ended token Current access token Emitted when the access token gets set after authentication or renewal ","description":"The File Picker development has been discontinued in favour of the Web Embed Mode. Props Events \u0026lt;file-picker\u0026gt; Props Property Type Default Description variation String Specifies if File Picker (resource) or Location Picker (location) should be used configLocation String window.location.origin + '/file-picker-config.json' Defines where the config file should be located bearerToken String null Bearer token used for requests authentication. If specified, authorization step is skipped configObject `String Object` isSdkProvided Boolean false Asserts whether ownCloud SDK is already initialised in the consuming app selectBtnLabel String null Replaces the select button label isSelectBtnDisplayed Boolean true Asserts whether the select button should be displayed cancelBtnLabel String nulll Displays the cancel button and uses the given value as a label isOdsProvided Boolean false Asserts whether the ownCloud Design System has been already initialised in the consuming app locale String null Sets the language in which the File Picker should be displayed."},{"id":19,"href":"/ocis/adr/0007-api-for-spaces/","title":"7. Open Graph API for oCIS File Spaces","parent":"Architecture Decisions","content":" Status: accepted Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2021-03-19 Technical Story: API to enable the concept of Spaces\nContext and Problem Statement As one of the building blocks for Spaces in oCIS we plan to add an API that returns information about available spaces. This ADR discusses the API design oriented on the Microsoft Graph API.\nNote: The term \u0026ldquo;spaces\u0026rdquo; is used here in the context of \u0026ldquo;a space where files can be saved\u0026rdquo;, similar to a directory. It is not to be confused with space in the sense of free file space for example.\nThe purpose of this new API is to give clients a very simple way to query the dynamic list of spaces, that the user has access to. Clients can provide a better user experience with that.\nThis API is supposed to be queried often, to give clients a condensed view of the available spaces for a user, but also their eTags and cTags. Hence the clients do not have to perform a PROPFIND for every space separately.\nThis API would even allow providing (WebDAV-) endpoints depending on the kind and version of the client asking for it.\nDecision Drivers Make it easy to work with a dynamic list of spaces of a user for the clients. No longer the need to make assumptions about WebDAV- and other routes in clients. More meta data available about spaces for a better user experience. Part of the bigger spaces plan. Important to consider in client migration scenarios, i.e. in CERN. Considered Options Microsoft Graph API inspired API that provides the requested information. Decision Outcome This the DRAFT for the API.\nAPI to Get Info about Spaces ownCloud servers provide an API to query for available spaces of an user.\nSee the openAPI Specification for the Libre Graph API.\nMost important, the API returns the WebDAV endpoint for each space. With that, clients do not have to make assumptions about WebDAV routes any more.\nSee Drive item in Microsoft Graph API for an overview of drive and driveItem resources. The concrete list of drives / spaces a user has access to can be obtained on multiple endpoints.\nGet \u0026ldquo;Home folder\u0026rdquo; Retrieve information about the home space of a user. Note: The user has access to more spaces. This call only returns the home space to provide API parity with the Graph API.\nAPI Call: /me/drive: Returns the information about the users home folder.\nGet All Spaces of a User Retrieve a list of available spaces of a user. This includes all spaces the user has access to at that moment, also the home space.\nAPI Call: /me/drives: Returns a list of spaces.\nThere is also /drives, returning the list of spaces the user has access to. This endpoint is used to access any space by id using /drives/{drive-id}.\nCommon Reply The reply to both calls is either one or a list of Drive representation objects:\n{ \u0026#34;id\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;createdDateTime\u0026#34;: \u0026#34;string (timestamp)\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;personal | projectSpaces | shares\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;string (timestamp)\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;microsoft.graph.identitySet\u0026#34; }, \u0026#34;quota\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;microsoft.graph.quota\u0026#34; }, \u0026#34;root\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;microsoft.graph.driveItem\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;url\u0026#34; } The meaning of the objects in Open Graph API context are:\nid - a persistent and unique ID identifying the space, called Storage Space ID. driveType - describing the type of the space. owner - an owner object to whom the space belongs quota - quota information about this space root - the root driveItem object. webUrl - The URL to make this space visible in the browser. The following driveType values are available in the first step, but might be enhanced later:\npersonal: The users home space projectSpaces: The project spaces available for the user (*) shares: The share jail, contains all shares for the user (*) Other space types such as backup, hidden etc. can be added later as requested.\nNote: The projectSpaces and shares space are virtual spaces. They only contain other spaces, and no regular resources.\nThe (*) marked types are not defined in the official MS API. They are prefixed with oc to avoid namespace clashes.\nThe root object equals a driveItem and contains information about the root resource (directory) of the space.\nThis is an example object as it can be expected as root element. It is not complete, as not all elements will be implemented so far.\n{ \u0026#34;cTag\u0026#34;: \u0026#34;string (etag)\u0026#34;, \u0026#34;webDavUrl\u0026#34;: \u0026#34;string\u0026#34;, /* inherited from baseItem */ \u0026#34;id\u0026#34;: \u0026#34;string (identifier)\u0026#34;, \u0026#34;createdBy\u0026#34;: {\u0026#34;@odata.type\u0026#34;: \u0026#34;microsoft.graph.identitySet\u0026#34;}, \u0026#34;createdDateTime\u0026#34;: \u0026#34;String (timestamp)\u0026#34;, \u0026#34;eTag\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;lastModifiedBy\u0026#34;: {\u0026#34;@odata.type\u0026#34;: \u0026#34;microsoft.graph.identitySet\u0026#34;}, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;String (timestamp)\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;webUrl\u0026#34;: \u0026#34;string\u0026#34;, } Meaningful fields of the root element in the context of the Open Graph API:\nid - a persistent and unique ID identifying the root directory node. webDavUrl - The webdav path of the top item of the space. eTag - an identifier that changes automatically if the content or metadata of the node or the underlying resources changes. cTag - an identifier that changes automatically if the content of the root node or of one of the underlying resources changes. webUrl - The URL to make this space visible in the browser. Note: To indicate that only the metadata of a resource has changed, the eTag has changed, but the cTag not.\nPositive Consequences A well understood and mature API from Microsoft adopted to our needs. Prerequisite for Spaces in oCIS. Enables further steps in client development. Negative Consequences Migration impact on existing installations. Still to be investigated. Requires additional webdav endpoint that allows accessing an arbitrary storage space, either with an id: /dav/spaces/\u0026lt;spaceid\u0026gt;/relative/path/to/file.ext, or with a global path: /dav/global/\u0026lt;accessible\u0026gt;/\u0026lt;mount\u0026gt;/\u0026lt;point\u0026gt;/relative/path/to/file.ext, e.g. /dav/global/projects/Golive 2021/Resources/slides.odt Open Topics What are the WebDAV paths for Trashbin, Versions option: additional entries in the reply struct The identitySet object used for \u0026ldquo;owner\u0026rdquo; and \u0026ldquo;coowner\u0026rdquo; require to implement the https://docs.microsoft.com/de-de/graph/api/resources/identityset?view=graph-rest-1.0 JSON object, which contains information that seems to be of limited benefit for oCIS. An alternative would be to implement a simpler identity object for oCIS and use that. ","description":"Status: accepted Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2021-03-19 Technical Story: API to enable the concept of Spaces\nContext and Problem Statement As one of the building blocks for Spaces in oCIS we plan to add an API that returns information about available spaces. This ADR discusses the API design oriented on the Microsoft Graph API.\nNote: The term \u0026ldquo;spaces\u0026rdquo; is used here in the context of \u0026ldquo;a space where files can be saved\u0026rdquo;, similar to a directory."},{"id":20,"href":"/integration/file_picker/focus-management/","title":"Focus Management","parent":"File Picker","content":" The File Picker development has been discontinued in favour of the Web Embed Mode. Focusing content of File Picker Initial folder load focus File Picker comes only with partial focus management. If you want to focus an element, it needs to be achieved through a code in the consuming app.\nFocusing content of File Picker If you\u0026rsquo;re including File Picker as a web component, managing focus is slightly different from focusing content of any other component in the DOM tree. Since web component are living in shadow root, we need to send the focus into it. To focus e.g. a checkbox within the File Picker, you can use the following code.\ndocument.querySelector(\u0026#39;#file-picker\u0026#39;).shadowRoot.querySelector(\u0026#39;.oc-breadcrumb-list-item span[aria-current=\u0026#34;page\u0026#34;]\u0026#39;).focus() The #file-picker selector is coming from the consuming app, not from File Picker. Initial folder load focus After opening a folder, we are focusing the last item of breadcrumbs. This is not the case when loading the first folder. Any following navigation into the first folder will focus the item. To enable focus on the first load as well, you need to set isInitialFocusEnabled prop to true.\n","description":"The File Picker development has been discontinued in favour of the Web Embed Mode. Focusing content of File Picker Initial folder load focus File Picker comes only with partial focus management. If you want to focus an element, it needs to be achieved through a code in the consuming app.\nFocusing content of File Picker If you\u0026rsquo;re including File Picker as a web component, managing focus is slightly different from focusing content of any other component in the DOM tree."},{"id":21,"href":"/ocis/guides/ocis-local-docker/","title":"Discover oCIS with Docker","parent":"Guides","content":" Prerequisites Start oCIS with docker compose Create the project Initialize Mount the config file Apply the changes Open the port 9200 to the outside Persist data, restart and logging Pin the oCIS version Wrapping up Prerequisites Local docker installation (e.g. Docker for Desktop) Check oCIS and Containers Start oCIS with docker compose Create the project Use the following skeleton as a docker-compose.yml:\nmkdir simple-ocis \u0026amp;\u0026amp; \\ cd simple-ocis \u0026amp;\u0026amp; \\ touch docker-compose.yml Copy the following file content into docker-compose.yml and save it.\nversion: \u0026#34;3.7\u0026#34; services: ocis: image: owncloud/ocis:latest environment: # INSECURE: needed if oCIS / Traefik is using self generated certificates OCIS_INSECURE: \u0026#34;true\u0026#34; # OCIS_URL: the external domain / ip address of oCIS (with protocol, must always be https) OCIS_URL: \u0026#34;https://localhost:9200\u0026#34; # OCIS_LOG_LEVEL: error / info / ... / debug OCIS_LOG_LEVEL: info Initialize Run ocis init to create a config\ndocker run --rm -it -v $(pwd):/etc/ocis/ owncloud/ocis:latest init You will get the following output:\nDo you want to configure Infinite Scale with certificate checking disabled? This is not recommended for public instances! [yes | no = default] yes ========================================= generated OCIS Config ========================================= configpath : /etc/ocis/ocis.yaml user : admin password : t3p4N0jJ47LbhpQ04s9W%u1$d2uE3Y.3 Check your local folder. We just generated a default ocis configuration file with random passwords and secrets.\nls # list the current folder docker-compose.yml ocis.yaml # ocis.yaml has been generated Run cat ocis.yaml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 token_manager: jwt_secret: X35rffWpS9BR.=^#LDt\u0026amp;z3ykYOd7h@w* machine_auth_api_key: -0$4ieu5+t6HD6Ui^0PpKU6B0qxisv.m system_user_api_key: oVxICwMR9YcKXTau+@pqKZ0EO-OHz8sF transfer_secret: e%3Sda=WFBuy\u0026amp;ztBUmriAbBR$i2CmaDv system_user_id: b7d976a1-7300-4db7-82df-13502d6b5e18 admin_user_id: c59a6ae9-5f5e-4eef-b82e-0e5c34f93e52 graph: spaces: insecure: false identity: ldap: bind_password: wElKpGjeH0d.E4moXh=.dc@s2CtB0vy% idp: ldap: bind_password: Ft2$2%#=6Mi22@.YPkhh-c6Kj=3xBZAb idm: service_user_passwords: admin_password: t3p4N0jJ47LbhpQ04s9W%u1$d2uE3Y.3 idm_password: wElKpGjeH0d.E4moXh=.dc@s2CtB0vy% reva_password: pJAdZ2fU!SFKgcdDPRW%ruIiNM6GnN1D idp_password: Ft2$2%#=6Mi22@.YPkhh-c6Kj=3xBZAb proxy: insecure_backends: false frontend: archiver: insecure: false auth_basic: auth_providers: ldap: bind_password: pJAdZ2fU!SFKgcdDPRW%ruIiNM6GnN1D auth_bearer: auth_providers: oidc: insecure: false users: drivers: ldap: bind_password: pJAdZ2fU!SFKgcdDPRW%ruIiNM6GnN1D groups: drivers: ldap: bind_password: pJAdZ2fU!SFKgcdDPRW%ruIiNM6GnN1D storage_system: data_provider_insecure: false storage_users: data_provider_insecure: false ocdav: insecure: false thumbnails: thumbnail: transfer_secret: z-E%G8MTeFpuT-ez2o8BjfnG1Jl2yLLm webdav_allow_insecure: false cs3_allow_insecure: false Password initialisation\nDuring the run of ./ocis init, the password for the admin user has been set to a random string.\nYou can override that later by setting IDM_ADMIN_PASSWORD=secret. The ENV variable setting always overrides the config file.\nMount the config file Add the config file as a bind mount.\nvolumes: # mount the ocis config file inside the container - \u0026#34;./ocis.yaml:/etc/ocis/ocis.yaml\u0026#34; Apply the changes docker compose up -d The service should be running.\ndocker compose ps NAME COMMAND SERVICE STATUS PORTS simple-ocis-ocis-1 \u0026#34;/usr/bin/ocis server\u0026#34; ocis running 9200/tcp Open the port 9200 to the outside ports: - 9200:9200 Add a port mapping to your docker compose file and run docker compose up -d again. You should now be able to access https://localhost:9200 and log in. You will get a warning from your browser that the connection is not safe because we are using a self-signed certificate. Accept this warning message to continue. Use the user admin and the password which has been initialized before.\nCongratulations! You have successfully set up a simple Infinite Scale locally.\ndocker compose up\nYou do not need to shut down your service to apply changes from the docker-compose.yml file. Running docker compose up -d again is enough. Docker compose always tries to bring all services to the desired state.\ndocker compose ps\nThis gives you a status of the services of the project.\ndocker compose exec \u0026lt;service name\u0026gt; \u0026lt;command\u0026gt;\nThis command is handy to run specific commands inside your service. Try docker compose exec ocis ocis version.\nPersist data, restart and logging The key to a successful container setup is the persistence of the application data to make the data survive a re-boot. Docker normally uses volumes for this purpose. A volume can either be a \u0026ldquo;named volume\u0026rdquo; which are completely managed by docker and have many advantages (see the linked docker documentation), or \u0026ldquo;bind mounts\u0026rdquo; which are using the directory structure and OS of the host system. In our example we already use a bind mount for the config file. We will now add a named volume for the oCIS data directory.\nThis is the way we should configure the ocis service:\nvolumes: # mount the ocis config file inside the container - \u0026#34;./ocis.yaml:/etc/ocis/ocis.yaml\u0026#34; # short syntax for using a named volume # in the form \u0026lt;volume name\u0026gt;:\u0026lt;mount path in the container\u0026gt; # use a named volume for the ocis data directory - \u0026#34;ocis-data:/var/lib/ocis\u0026#34; # or the more verbose syntax #- type: volume # source: ocis-data # name of the volume # target: /var/lib/ocis # the mount path inside the container The docker-compose.yml needs to declare the named volumes globally, add this at the bottom of the file:\n# https://docs.docker.com/compose/compose-file/compose-file-v3/#volumes # this declares the named volume with all default settings # you can also see the volume when running `docker volume list` volumes: ocis-data: Now let us configure the restart policy and the logging settings for the ocis service:\n# https://docs.docker.com/compose/compose-file/compose-file-v3/#restart restart: always # or on-failure / unless-stopped # https://docs.docker.com/config/containers/logging/configure/ # https://docs.docker.com/compose/compose-file/compose-file-v3/#logging # the default log driver does no log rotation # you can switch to the \u0026#34;local\u0026#34; log driver which does rotation by default logging: driver: local # otherwise you could specify log rotation explicitly # driver: \u0026#34;json-file\u0026#34; # this is the default driver # options: # max-size: \u0026#34;200k\u0026#34; # limit the size of the log file # max-file: \u0026#34;10\u0026#34; # limit the count of the log files Apply your changes! Just run docker compose up -d again.\nNow you have an oCIS which will survive reboots, restart automatically and has log rotation by default.\nAccess the logs via docker compose logs -f and do some actions in the frontend to see the effect. Create data by uploading files and adding more users. Then run docker compose down to shut oCIS down. Start it again docker compose up -d, log in again and check that your data has survived the reboot.\nPin the oCIS version Last but not least, it is never a good idea to use the latest docker tag. Pin your container image to a released version.\nimage: owncloud/ocis:latest@sha256:5ce3d5f9da017d6760934448eb207fbaab9ceaf0171b4122e791e292f7c86c97 # the latest tag is not recommended, because you don\u0026#39;t know which version you\u0026#39;ll get # but even if you use `owncloud/ocis:1.16.0` you cannot be sure that you\u0026#39;ll get # the exact same image if you pull it at a later point in time (because docker image tags are not immutable). # To be 100% that you always get the same image, you can pin the digest (hash) of the # image. If you do a `docker pull owncloud/ocis:latest`, it also will also show you the digest. # see also https://docs.docker.com/engine/reference/commandline/images/#list-image-digests Wrapping up If you have completed this guide, your docker-compose.yml should look like the following example:\nSolution ... version: \u0026#34;3.7\u0026#34; services: ocis: image: owncloud/ocis:latest@sha256:5ce3d5f9da017d6760934448eb207fbaab9ceaf0171b4122e791e292f7c86c97 # the latest tag is not recommended, because you don\u0026#39;t know which version you\u0026#39;ll get # but even if you use `owncloud/ocis:1.16.0` you cannot be sure that you\u0026#39;ll get # the exact same image if you pull it at a later point in time (because docker image tags are not immutable). # To be 100% that you always get the same image, you can pin the digest (hash) of the # image. If you do a `docker pull owncloud/ocis:latest`, it also will also show you the digest. # see also https://docs.docker.com/engine/reference/commandline/images/#list-image-digests environment: # INSECURE: needed if oCIS / Traefik is using self generated certificates OCIS_INSECURE: \u0026#34;true\u0026#34; # OCIS_URL: the external domain / ip address of oCIS (with protocol, must always be https) OCIS_URL: \u0026#34;https://localhost:9200\u0026#34; # OCIS_LOG_LEVEL: error / info / ... / debug OCIS_LOG_LEVEL: info volumes: # mount the ocis config file inside the container - \u0026#34;./ocis.yaml:/etc/ocis/ocis.yaml\u0026#34; # short syntax for using a named volume # in the form \u0026lt;volume name\u0026gt;:\u0026lt;mount path in the container\u0026gt; # use a named volume for the ocis data directory - \u0026#34;ocis-data:/var/lib/ocis\u0026#34; # or the more verbose syntax #- type: volume # source: ocis-data # name of the volume # target: /var/lib/ocis # the mount path inside the container ports: - 9200:9200 # https://docs.docker.com/compose/compose-file/compose-file-v3/#restart restart: always # or on-failure / unless-stopped # https://docs.docker.com/config/containers/logging/configure/ # https://docs.docker.com/compose/compose-file/compose-file-v3/#logging # the default log driver does no log rotation # you can switch to the \u0026#34;local\u0026#34; log driver which does rotation by default logging: driver: local # otherwise you could specify log rotation explicitly # driver: \u0026#34;json-file\u0026#34; # this is the default driver # options: # max-size: \u0026#34;200k\u0026#34; # limit the size of the log file # max-file: \u0026#34;10\u0026#34; # limit the count of the log files # https://docs.docker.com/compose/compose-file/compose-file-v3/#volumes # this declares the named volume with all default settings # you can also see the volume when running `docker volume list` volumes: ocis-data: ","description":"Prerequisites Start oCIS with docker compose Create the project Initialize Mount the config file Apply the changes Open the port 9200 to the outside Persist data, restart and logging Pin the oCIS version Wrapping up Prerequisites Local docker installation (e.g. Docker for Desktop) Check oCIS and Containers Start oCIS with docker compose Create the project Use the following skeleton as a docker-compose.yml:\nmkdir simple-ocis \u0026amp;\u0026amp; \\ cd simple-ocis \u0026amp;\u0026amp; \\ touch docker-compose."},{"id":22,"href":"/ocis/guides/","title":"Guides","parent":"oCIS - ownCloud Infinite Scale","content":" Step-by-step Guides Available Guides Step-by-step Guides These guides should extend the generic documentation and help admins to learn Infinite Scale through digestable \u0026ldquo;hands-on\u0026rdquo; sessions.\nAvailable Guides oCIS deployments are super simple, yet there are many configurations possible for advanced setups.\nDiscover oCIS with Docker - configure domain, certificates and port Migrate data to Infinite Scale ","description":" Step-by-step Guides Available Guides Step-by-step Guides These guides should extend the generic documentation and help admins to learn Infinite Scale through digestable \u0026ldquo;hands-on\u0026rdquo; sessions.\nAvailable Guides oCIS deployments are super simple, yet there are many configurations possible for advanced setups.\nDiscover oCIS with Docker - configure domain, certificates and port Migrate data to Infinite Scale "},{"id":23,"href":"/ocis/adr/0008-configuration/","title":"8. Configuration","parent":"Architecture Decisions","content":" Status: proposed Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-05-03 Context and Problem Statement As per urfave/cli\u0026rsquo;s doc:\nThe precedence for flag value sources is as follows (highest to lowest):\nCommand line flag value from user Environment variable (if specified) Configuration file (if specified) Default defined on the flag An issue arises in point 2, in the sense that configuration file refers to a single file containing the value for the env variable. The CLI framework we use for flag parsing does not support merging config structs with CLI flags. This introduces an inconsistency with the framework: config structs are not supported, and we cannot hook to the lifecycle of the flags parsing to use a file as source and conform to these rules.\nBecause we solely rely on structured configuration we need a way to modify values in this struct using the provided means urfave/cli gives us (flags, env variables, config files and default value), but since we have different modes of operation (supervised Vs. unsupervised) we have to define a clear line.\nDecision Drivers Improve experience for the end user. Improve experience for developers. Sane defaults. Sane overrides. Considered Options Extend FlagInputSourceExtension interface Feature request: support for structured configuration (urfave/cli). Clearly defined boundaries of what can and cannot be done. Expose structured field values as CLI flags Drop support for structure configuration Adapt the \u0026ldquo;structured config files have the highest priority\u0026rdquo; within oCIS Decision Outcome [STILL UNDECIDED]\nPositive Consequences [TBD, depends on Decision Outcome]\nPros and Cons of the Options Extend FlagInputSourceExtension interface Good, because we could still use Viper to load from config files here and apply values to the flags in the context. Bad, because urfave/cli team are actively working on v3 of altsrc and we don\u0026rsquo;t want to maintain yet another slice of the codebase. notes: source is FlagInputSourceExtension interface\nFeature request: support for structured configuration (urfave/cli). Good, because we could remove Viper off the codebase and solely rely on urfave/cli\u0026rsquo;s native code. Bad, because there are no plans to support this upstream. Clearly defined boundaries of what can and cannot be done. Good, because no changes to the codebase required (not drastic changes.) Bad, because we\u0026rsquo;re limited by the framework Expose structured field values as CLI flags Good, because it has been already taken into account on large projects (kubernetes) here. in point 5. Bad, because it requires quite a bit1 of custom logic. Bad, because how should these flags be present in the -h menu of a subcommand? Probably some code generation needed. *[1] this is a big uncertainty.\nDrop support for structure configuration Good, because it makes the integration with the cli framework easier to grasp. Good, because it is not encouraged by the 12factor app spec. Bad, because we already support if and users make active use of it. At least for development. Adapt the \u0026ldquo;structured config files have the highest priority\u0026rdquo; within oCIS Good, because that would mean little structural changes to the codebase since the Viper config parsing logic already uses the Before hook to parse prior to the command\u0026rsquo;s action executes. Notes Use Cases and Expected Behaviors Supervised (ocis server or ocis run extension) Use a global config file (ocis.yaml) to configure an entire set of services: \u0026gt; ocis --config-file /etc/ocis.yaml service Use a global config file (ocis.yaml) to configure a single extension: \u0026gt; ocis --config-file /etc/ocis/yaml proxy When running in supervised mode, config files from extensions are NOT evaluated (only when running ocis server, runs with ocis run extension do parse individual config files) i.e: present config files: ocis.yaml and proxy.yaml; only the contents of ocis.yaml are loaded1. Flag parsing for subcommands are not allowed in this mode, since the runtime is in control. Configuration has to be done solely using config files. *[1] see the development section for more on this topic.\nKnown Gotchas \u0026gt; ocis --config-file /etc/ocis/ocis.yaml server does not work. It currently only supports reading global config values from the predefined locations. Unsupervised (ocis proxy) ocis.yaml is parsed first (since proxy is a subcommand of ocis) proxy.yaml is parsed if present, overriding values from ocis.yaml and any cli flag or env variable present. Other known use cases Configure via env + some configuration files like WEB_UI_CONFIG or proxy routes Configure via flags + some configuration files like WEB_UI_CONFIG or proxy routes Configure via global (single file for all extensions) config file + some configuration files like WEB_UI_CONFIG or proxy routes configure via per extension config file + some configuration files like WEB_UI_CONFIG or proxy routes Each individual use case DOES NOT mix sources (i.e: when using cli flags, do not use environment variables nor cli flags).\nLimitations on urfave/cli prevent us from providing structured configuration and framework support for cli flags + env variables.\nUse Cases for Development Config Loading Sometimes is desired to decouple the main series of services from an individual instance. We want to use the runtime to startup all services, then do work only on a single service. To achieve that one could use ocis server \u0026amp;\u0026amp; ocis kill proxy \u0026amp;\u0026amp; ocis run proxy. This series of commands will 1. load all config from ocis.yaml, 2. kill the supervised proxy service and 3. start the same service with the contents from proxy.yaml.\nStart an extension multiple times with different configs (in Supervised mode) Flag parsing on subcommands in supervised mode is not yet allowed. The runtime will first parse the global ocis.yaml (if any) and run with the loaded configuration. This use case should provide support for having 2 different proxy config files and making use of the runtime start 2 proxy services, with different values.\nFor this to work, services started via Service.Start need to forward any args as flags:\nif err := client.Call(\u0026#34;Service.Start\u0026#34;, os.Args[2], \u0026amp;reply); err != nil { log.Fatal(err) } This should provide with enough flexibility for interpreting different config sources as: \u0026gt; bin/ocis run proxy --config-file /etc/ocis/unexpected/proxy.yaml\nDeveloping Considered Alternatives Further Let\u0026rsquo;s develop further the following concept: Adapt the \u0026ldquo;structured config files have the highest priority\u0026rdquo; within oCIS.\nOf course it directly contradicts urfave/cli priorities. When a command finished parsing its cli args and env variables, only after that Before is called. This mean by the time we reach a command Before hook, flags have already been parsed and its values loaded to their respective destinations within the Config struct.\nThis should still not prevent a developer from using different config files for a single service. Let\u0026rsquo;s analyze the following use case:\nglobal config file present (ocis.yaml) single proxy.yaml config file another proxy.yaml config file running under supervision mode The outcome of the following set of commands should be having all bootstrapped services running + 2 proxies on different addresses:\n\u0026gt; ocis server \u0026gt; ocis kill proxy \u0026gt; ocis run proxy --config-file proxy.yaml \u0026gt; ocis run proxy --config-file proxy2.yaml This is a desired use case that is yet not supported due to lacking of flags forwarding.\nFollow-up PR\u0026rsquo;s Variadic runtime extensions to run (development mostly) Arg forwarding to command (when running in supervised mode, forward any \u0026ndash;config-file flag to supervised subcommands) Ability to set OCIS_URL from a config file (this would require to extend the ocis-pkg/config/config.go file). The case for OCIS_URL OCIS_URL is a jack-of-all trades configuration. It is meant to ease up providing defaults and ensuring dependant services are well configured. It is an override to the following env vars:\nOCIS_IDM_ADDRESS PROXY_OIDC_ISSUER STORAGE_OIDC_ISSUER STORAGE_FRONTEND_PUBLIC_URL STORAGE_LDAP_IDP WEB_UI_CONFIG_SERVER WEB_OIDC_AUTHORITY OCIS_PUBLIC_URL Because this functionality is only available as an env var, there is no current way to \u0026ldquo;normalize\u0026rdquo; its usage with a config file. That is, there is no way to individually set OCIS_URL via config file. This is clear technical debt, and should be added functionality.\nState of the Art Kubernetes proposal on this very same topic Configuration | Pulumi Configuration can be altered via setters through the CLI. ","description":"Status: proposed Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-05-03 Context and Problem Statement As per urfave/cli\u0026rsquo;s doc:\nThe precedence for flag value sources is as follows (highest to lowest):\nCommand line flag value from user Environment variable (if specified) Configuration file (if specified) Default defined on the flag An issue arises in point 2, in the sense that configuration file refers to a single file containing the value for the env variable."},{"id":24,"href":"/ocis/guides/migrate-data-rclone/","title":"Migrate Data using rclone","parent":"Guides","content":"People keep asking on how to migrate data from other cloud storage to Infinite Scale.\nThere are too many cloud variants and use cases out there to have a migration path for all at hand, but let\u0026rsquo;s see what we can start with: There is the famous Swiss army knife for clouds called rclone available.\nThe awesome rclone tool makes it easy to migrate data from one installation to another on a user per user base. A very good first step.\nThis article explains by the example of Nextcloud how you would migrate your data from an running NC to Infinite Scale. A prerequisite is that you have Infinite Scale already set up and running on a different domain.\nBe prepared that migration can take some time. Also, check the size of your data. This example was around 1.5 GiB of data, that obviously went fast.\nAnd of course: Have a backup! Even if this method only reads from the source, you never know.\nInstall rclone Check the rclone website on how to install rclone.\nCreate Users First, decide on a user that you want to migrate. To create the user on Infinite Scale, log in as an admin user and create the desired user. Create and set groups accordingly.\nFor the next step, you need the user credentials on both the source- and the destination cloud.\nConfigure rclone Remotes To be able to address the clouds in rclone, you need to configure so called remotes. It is nothing else than a shortcut for the combination of\nwhich kind of cloud are you talking to the URL the username the password, if one is set You need to add a configuration for both the source cloud (Nextcloud) and the target (Infinite Scale). As both talk WebDAV, the rclone manual page is accurate to follow.\nFor both, use an URL in the form of https://my.host.de/remote.php/webdav.\nOnce that is finished, the command rclone config show should give output similar to this:\n[:~/] ± rclone config show [NCoC] type = webdav url = https://nc.this.de/remote.php/webdav vendor = nextcloud user = wilma pass = zfdsaiewrafdskfjdasfxdasffdafdsafas [ocis] type = webdav url = https://infinitescale.works/remote.php/webdav vendor = owncloud user = wilma pass = cdsfasrefdsadaGkxTXjksfpqQFI5nQawqs Now, for example the directories on the Nextcloud root can be checked with rclone lsd NCoC:/.\nCopy Data To migrate the data, rclone provides the command copy. It transfers data from one remote to the other. Use the following command example to transfer the entire cloud data from Nextcloud to Infinite Scale:\nrclone copy NCoC:/ ocis:/ --no-check-certificate -P The \u0026ndash;no-check-certificate can and should be skipped if your clouds have proper certificates. The -P however, provides you with interesting statistics about the copy progress. Once you are finished, this might be the result:\n[:~/] $ rclone copy NCoC:/ ocis:/ --no-check-certificate -P Transferred: 1.228 GiB / 1.228 GiB, 100%, 10.170 MiB/s, ETA 0s Transferred: 411 / 411, 100% Elapsed time: 2m19.3s Note that while testing this, occasionally the Nextcloud was returning a 404 not found for some files. While the reason for that was not completely clear, it does not matter, because the rclone command can be repeated. It is clever enough to only copy what has changed!\nEnjoy! All done! Now you have your data on Infinite Scale.\nObviously this method has a few downsides, such as:\nThis migration requires a little of \u0026ldquo;quiet time\u0026rdquo; for migrating data. It is a user by user method where provisioning of users has to be done manually. Only data is migrated, and there is probably a data size limit in real life using this way. Private- and public shares are not migrated The trashbin, versions, comments and favorites are not migrated These are shortcomings but this is a good first step to start investigating. The other parts will be sorted as we move along.\nTo improve this guide, you are welcome to file an issue or even send a pull request. See the getting started guide how easy it is to build the documentation.\n","description":"People keep asking on how to migrate data from other cloud storage to Infinite Scale.\nThere are too many cloud variants and use cases out there to have a migration path for all at hand, but let\u0026rsquo;s see what we can start with: There is the famous Swiss army knife for clouds called rclone available.\nThe awesome rclone tool makes it easy to migrate data from one installation to another on a user per user base."},{"id":25,"href":"/ocis/adr/0009-extension-template/","title":"9. Extension Template","parent":"Architecture Decisions","content":" Status: proposed Deciders: @c0rby Date: 2021-06-10 Technical Story: [description | ticket/issue URL] Context and Problem Statement We want to accelerate and simplify extension development by removing the necessity to type or copy the boilerplate code. Can we provide a template or a similar mechanism to aid when developing new extensions?\nDecision Drivers The solution should be easily maintainable. It should always be up-to-date. The solution should be easy to use. Considered Options Use boilr Create a template git repository. Use ocis-hello as a \u0026ldquo;template\u0026rdquo; Decision Outcome Chosen option: \u0026ldquo;[option 1]\u0026rdquo;, because [justification. e.g., only option, which meets k.o. criterion decision driver | which resolves force force | … | comes out best (see below)].\nPositive Consequences: [e.g., improvement of quality attribute satisfaction, follow-up decisions required, …] … Negative consequences: [e.g., compromising quality attribute, follow-up decisions required, …] … Pros and Cons of the Options boilr We have a boilr template already. boilr-ocis-extension This approach is nice because it provides placeholders which can be filled during the generation of a new extension from the template. It also provides prompts for the placeholder values during generation.\nGood, because with the placeholders it is hard to miss values which should be changed Bad, because maintaining is more complex Template git repository Create a git repository with an extension containing the boilerplate code.\nGood, because we can use the usual tools for QA and dependency scanning/updating. Good, because it doesn\u0026rsquo;t require any additional tool. ocis-hello as a \u0026ldquo;template\u0026rdquo; We have the ocis-hello repository which acts as an example extension containing a grpc and http service and a web UI. It also demonstrates the usage of the settings service.\nGood, because it contains a bit more code than just the plain boilerplate Good, because the integration into oCIS is already tested for the Hello extension (e.g. with Proxy and Settings). This will ensure, that the example extension is up-to-date. Bad, because if you don\u0026rsquo;t require all features you have to delete stuff ","description":"Status: proposed Deciders: @c0rby Date: 2021-06-10 Technical Story: [description | ticket/issue URL] Context and Problem Statement We want to accelerate and simplify extension development by removing the necessity to type or copy the boilerplate code. Can we provide a template or a similar mechanism to aid when developing new extensions?\nDecision Drivers The solution should be easily maintainable. It should always be up-to-date. The solution should be easy to use."},{"id":26,"href":"/ocis/storage/spacesregistry/","title":"Spaces Registry","parent":"Storage","content":" The current implementation in oCIS might not yet fully reflect this concept. Feel free to add links to ADRs, PRs and Issues in short warning boxes like this. Storage Space Registries A storage spaces registry manages the namespace for a user: it is used by clients to look up storage spaces a user has access to, the /dav/spaces endpoint to access it via WabDAV, and where the client should mount it in the users personal namespace.\n","description":"The current implementation in oCIS might not yet fully reflect this concept. Feel free to add links to ADRs, PRs and Issues in short warning boxes like this. Storage Space Registries A storage spaces registry manages the namespace for a user: it is used by clients to look up storage spaces a user has access to, the /dav/spaces endpoint to access it via WabDAV, and where the client should mount it in the users personal namespace."},{"id":27,"href":"/ocis/development/unit-testing/testing-pkg/","title":"Standard Library Testing","parent":"Unit Testing","content":" Using the standard library To write a unit test for your package, create a file with the _test.go suffix. For example, if you have a package foo with a file foo.go, you can create a file foo_test.go in the same directory. The test file should have the same package name as the package being tested. By doing this, you can access all exported and unexported identifiers of the package. It is a good practice to keep the test file in the same package as the code being tested.\nSimple Example We are using an oversimplified example from FooBarQuix to demonstrate how to use the testing package.\npackage divide import \u0026#34;strconv\u0026#34; // If the number is divisible by 3, write \u0026#34;Yes\u0026#34; otherwise, the number func IsDivisible(input int) string { if (input % 3) == 0 { return \u0026#34;Yes\u0026#34; } return strconv.Itoa(input) } To test the IsDivisible function, create a file divide_test.go in the same directory as divide.go. The test file should have the same package name as the package being tested.\nA test function in Go starts with Test and takes *testing.T as the only parameter. In most cases, you will name the unit test Test[NameOfFunction]. The testing package provides tools to interact with the test workflow, such as t.Errorf, which indicates that the test failed by displaying an error message on the console.\nThe test function for the IsDivisible function could look like this\npackage divide import \u0026#34;testing\u0026#34; func TestDivide3(t *testing.T) { result := IsDivisible(3) if result != \u0026#34;Yes\u0026#34; { t.Errorf(\u0026#34;Result was incorrect, got: %s, want: %s.\u0026#34;, result, \u0026#34;Yes\u0026#34;) } } To run the test, use the go test command in the directory where the test file is located.\nUse a helper package for assertions You could make the test more readable by using testify. The assert package provides a lot of helper functions to make the test more readable.\npackage divide import ( \u0026#34;testing\u0026#34; \u0026#34;github.com/stretchr/testify/assert\u0026#34; ) func TestDivide3(t *testing.T) { result := IsDivisible(3) assert.Equal(t, \u0026#34;Yes\u0026#34;, result) } Table Driven Example Write Table Driven Tests to test multiple inputs.\npackage divide import ( \u0026#34;testing\u0026#34; \u0026#34;github.com/stretchr/testify/assert\u0026#34; ) func TestIsDivisibleTableDriven(t *testing.T) { // Defining the columns of the table var tests = []struct { name string input int want string }{ // the table itself {\u0026#34;9 should be Yes\u0026#34;, 9, \u0026#34;Yes\u0026#34;}, {\u0026#34;3 should be Yes\u0026#34;, 3, \u0026#34;Yes\u0026#34;}, {\u0026#34;1 is not Yes\u0026#34;, 1, \u0026#34;1\u0026#34;}, {\u0026#34;0 should be Yes\u0026#34;, 0, \u0026#34;Yes\u0026#34;}, } // The execution loop for _, tt := range tests { t.Run(tt.name, func(t *testing.T) { answer := IsDivisible(tt.input) assert.Equal(t, tt.want, answer) }) } } A table-driven test starts by defining the input structure. This can be seen like defining the columns of the table. Each row of the table lists a test case to execute. Once the table is defined, the execution loop can be created.\nThe execution loop calls t.Run(), which defines a subtest. In our example each row of the table defines a subtest named [NameOfTheFuction]/[NameOfTheSubTest].\nThis way of writing tests is very popular, and considered the canonical way to write unit tests in Go.\n","description":"Using the standard library To write a unit test for your package, create a file with the _test.go suffix. For example, if you have a package foo with a file foo.go, you can create a file foo_test.go in the same directory. The test file should have the same package name as the package being tested. By doing this, you can access all exported and unexported identifiers of the package. It is a good practice to keep the test file in the same package as the code being tested."},{"id":28,"href":"/ocis/development/unit-testing/testing-ginkgo/","title":"Testing with Ginkgo","parent":"Unit Testing","content":" Prerequisites Getting Started Bootstrap Adding Specs to the Suite Writing Specs Describe Context It Expect BeforeEach Focused Specs Pending Specs Test Driven Development Mocking In this section we try to enable developers to write tests in oCIS using Ginkgo and Gomega and explain how to mock other microservices to also cover some integration tests. The full documentation of the tools can be found on the Ginkgo and Gomega websites.\nReading the documentation This page provides only a basic introduction to get started with Ginkgo and Gomega. For more detailed information, please refer to the official documentation.\nUseful Links:\nGinkgo Gomega Mockery Prerequisites To use Ginkgo, you need to install the Ginkgo CLI. You can install it using the following command:\ngo install github.com/onsi/ginkgo/v2/ginkgo go get github.com/onsi/gomega/... Getting Started Navigate to the directory where you want to write your tests and run the following command:\nBootstrap cd ocis/ocis-pkg/config/parser ginkgo bootstrap Generating ginkgo test suite bootstrap for parser in: parser_suite_test.go This command creates a parser_suite_test.go file in the parser directory. This file contains the test suite for the parser package.\npackage parser_test import ( \u0026#34;testing\u0026#34; . \u0026#34;github.com/onsi/ginkgo/v2\u0026#34; . \u0026#34;github.com/onsi/gomega\u0026#34; ) func TestParser(t *testing.T) { RegisterFailHandler(Fail) RunSpecs(t, \u0026#34;Parser Suite\u0026#34;) } Ginkgo defaults to setting up the suite as a *_test package to encourage you to only test the external behavior of your package, not its internal implementation details.\nAfter the package parser_test declaration we import the ginkgo and gomega packages into the test\u0026rsquo;s top-level namespace by performing a . dot-import. Since Ginkgo and Gomega are DSLs (Domain-specific Languages) this makes the tests more natural to read. If you prefer, you can avoid the dot-import via ginkgo bootstrap --nodot. Throughout this documentation we\u0026rsquo;ll assume dot-imports.\nWith the bootstrap complete, you can now run your tests using the ginkgo command:\nginkgo Running Suite: Parser Suite - \u0026lt;local-path\u0026gt;/ocis/ocis-pkg/config/parser =============================================================================================== Random Seed: 1714076559 Will run 0 of 0 specs Ran 0 of 0 Specs in 0.000 seconds SUCCESS! -- 0 Passed | 0 Failed | 0 Pending | 0 Skipped PASS Ginkgo ran 1 suite in 7.0058606s Test Suite Passed Under the hood, ginkgo is simply calling go test. While you can run go test instead of the ginkgo CLI, Ginkgo has several capabilities that can only be accessed via ginkgo. We generally recommend users embrace the ginkgo CLI and treat it as a first-class member of their testing toolchain.\nAdding Specs to the Suite ginkgo generate parser Generating ginkgo test for Parser in:  ✔  7s  22:22:46  parser_test.go This will generate a parser_test.go file in the parser directory. This file contains the test suite for the parser package.\npackage parser_test import ( . \u0026#34;github.com/onsi/ginkgo/v2\u0026#34; . \u0026#34;github.com/onsi/gomega\u0026#34; \u0026#34;github.com/owncloud/ocis/v2/ocis-pkg/config/parser\u0026#34; ) var _ = Describe(\u0026#34;Parser\u0026#34;, func() { }) Writing Specs Describe The Describe block is used to describe the behavior of a particular component of your code. It is a way to group together related specs. The Describe block takes a string and a function. The string is a description of the component you are describing, and the function contains the specs that describe the behavior of that component.\nvar _ = Describe(\u0026#34;Parser\u0026#34;, func() { // Specs go here }) Context The Context block is used to further describe the behavior of a component. It is a way to group together related specs within a Describe block. The Context block takes a string and a function. The string is a description of the context you are describing, and the function contains the specs that describe the behavior of that context.\nvar _ = Describe(\u0026#34;Parser\u0026#34;, func() { Context(\u0026#34;when the input is valid\u0026#34;, func() { // Specs go here }) }) It The It block is used to describe a single spec. It takes a string and a function. The string is a description of the behavior you are specifying, and the function contains the code that exercises that behavior.\nvar _ = Describe(\u0026#34;Parser\u0026#34;, func() { Context(\u0026#34;when the input is valid\u0026#34;, func() { It(\u0026#34;parses the input\u0026#34;, func() { // Spec code goes here }) }) }) Expect The Expect function is used to make assertions in your specs. It takes a value and returns an *Expectation. You can then chain methods on the *Expectation to make assertions about the value.\nvar _ = Describe(\u0026#34;Parser\u0026#34;, func() { Context(\u0026#34;when the input is valid\u0026#34;, func() { It(\u0026#34;parses the input\u0026#34;, func() { result := parser.Parse(\u0026#34;valid input\u0026#34;) Expect(result).To(Equal(\u0026#34;expected output\u0026#34;)) }) }) }) BeforeEach The BeforeEach block is used to run a setup function before each spec in a Describe or Context block. It takes a function that contains the setup code.\npackage parser_test import ( . \u0026#34;github.com/onsi/ginkgo/v2\u0026#34; . \u0026#34;github.com/onsi/gomega\u0026#34; \u0026#34;github.com/owncloud/ocis/v2/ocis-pkg/config\u0026#34; p \u0026#34;github.com/owncloud/ocis/v2/ocis-pkg/config/parser\u0026#34; ) var _ = Describe(\u0026#34;Parser\u0026#34;, func() { var c *config.Config BeforeEach(func() { c = config.DefaultConfig() }) Context(\u0026#34;when the input is valid\u0026#34;, func() { It(\u0026#34;parses the input\u0026#34;, func() { err := p.ParseConfig(c, false) Expect(err).ToNot(HaveOccurred()) Expect(c.Commons.OcisURL).To(Equal(\u0026#34;https://localhost:9200\u0026#34;)) }) }) }) Let us take a closer look at the code above:\nWe are following the recommended practise on variables to \u0026ldquo;declare in container nodes\u0026rdquo; and \u0026ldquo;initialize in setup nodes\u0026rdquo;. This is why we are declaring the c variable at the top of the Describe block and initializing it in the BeforeEach block. This is important to get isolated test steps which can be run in any order and even in parallel.\nLet us take a look at a bad example where we are polluting the spec by not following this recommended practise:\npackage parser_test import ( . \u0026#34;github.com/onsi/ginkgo/v2\u0026#34; . \u0026#34;github.com/onsi/gomega\u0026#34; \u0026#34;github.com/owncloud/ocis/v2/ocis-pkg/config\u0026#34; p \u0026#34;github.com/owncloud/ocis/v2/ocis-pkg/config/parser\u0026#34; ) var _ = Describe(\u0026#34;Parser\u0026#34;, func() { c := config.DefaultConfig() Context(\u0026#34;when the defaults are applied\u0026#34;, func() { It(\u0026#34;fails to parse the input\u0026#34;, func() { c.TokenManager.JWTSecret = \u0026#34;\u0026#34; // bam! we have changed the closure variable and it will never be reset err := p.ParseConfig(c, false) Expect(err).To(HaveOccurred()) }) It(\u0026#34;parses the input\u0026#34;, func() { err := p.ParseConfig(c, false) Expect(err).ToNot(HaveOccurred()) Expect(c.Commons.OcisURL).To(Equal(\u0026#34;https://localhost:9200\u0026#34;)) }) }) }) Always declare variables in the container node(which are basically Describe() and Context())\nand initialize your variables in the setup nodes. (which are basically BeforeEach() and JustBeforeEach()).\nThis will ensure that your specs are clean and independent of each other.\nFocused Specs You can focus on a single spec by adding an F in front of the It block. This will run only the focused spec.\nvar _ = Describe(\u0026#34;Parser\u0026#34;, func() { Context(\u0026#34;when the input is valid\u0026#34;, func() { FIt(\u0026#34;parses the input\u0026#34;, func() { result := parser.Parse(\u0026#34;valid input\u0026#34;) Expect(result).To(Equal(\u0026#34;expected output\u0026#34;)) }) }) }) Pending Specs You can mark a spec as pending by adding a P in front of the It block. This will skip the spec.\nvar _ = Describe(\u0026#34;Parser\u0026#34;, func() { Context(\u0026#34;when the input is valid\u0026#34;, func() { PIt(\u0026#34;parses the input\u0026#34;, func() { result := parser.Parse(\u0026#34;valid input\u0026#34;) Expect(result).To(Equal(\u0026#34;expected output\u0026#34;)) }) }) }) Test Driven Development You can run the tests in watch mode to follow a test-driven development approach. This will run the tests every time you save a file.\nginkgo watch Mocking In oCIS, we use the mockery tool to generate mocks for interfaces. Mockery is a simple tool that generates mock implementations of Go interfaces. It is useful for writing tests against interfaces instead of concrete types. We can use it to mock requests to other microservices to cover some integration tests. We should already have a number of mocks in the project. The mocks are configured on the packages level in the .mockery.yaml files.\nExample file:\nwith-expecter: true filename: \u0026#34;{{.InterfaceName | snakecase }}.go\u0026#34; dir: \u0026#34;{{.PackageName}}/mocks\u0026#34; mockname: \u0026#34;{{.InterfaceName}}\u0026#34; outpkg: \u0026#34;mocks\u0026#34; packages: github.com/owncloud/ocis/v2/ocis-pkg/oidc: interfaces: OIDCClient: We should add missing mocks to this file and define the interfaces we want to mock. After that, we can generate the mocks by running mockery in the repo, it will find all the .mockery.yaml files and generate the mocks for the interfaces defined in them.\nOur mocks are generated with the setting with-expecter: true. This allows us to use type-safe methods to generate the call expectations by simply calling EXPECT() on the mock object.\nBy using EXPECT() on the mock object, we can work with type-safe methods to generate the call expectations. Example of a mocked gateway client\nIn our oCIS services we need to use a gateway pool selector to get the gateway client.\nWe should always use the constructor on a new mock like gatewayClient = cs3mocks.NewGatewayAPIClient(GinkgoT()). This brings us two advantages:\nThe AssertExpectations method is registered to be called at the end of the tests via t.Cleanup() method. The testing.TB interface is registered on the mock.Mock so that tests don\u0026rsquo;t panic when a call on the mock is unexpected. package publicshareprovider_test import ( \u0026#34;context\u0026#34; \u0026#34;time\u0026#34; \u0026#34;github.com/cs3org/reva/v2/pkg/rgrpc/todo/pool\u0026#34; cs3mocks \u0026#34;github.com/cs3org/reva/v2/tests/cs3mocks/mocks\u0026#34; . \u0026#34;github.com/onsi/ginkgo/v2\u0026#34; . \u0026#34;github.com/onsi/gomega\u0026#34; \u0026#34;google.golang.org/grpc\u0026#34; ) var _ = Describe(\u0026#34;PublicShareProvider\u0026#34;, func() { // declare in container nodes var ( gatewayClient *cs3mocks.GatewayAPIClient gatewaySelector pool.Selector ) BeforeEach(func() { // initialize in setup nodes pool.RemoveSelector(\u0026#34;GatewaySelector\u0026#34; + \u0026#34;any\u0026#34;) // create a new mock client gatewayClient = cs3mocks.NewGatewayAPIClient(GinkgoT()) gatewaySelector = pool.GetSelector[gateway.GatewayAPIClient]( \u0026#34;GatewaySelector\u0026#34;, \u0026#34;any\u0026#34;, func(cc *grpc.ClientConn) gateway.GatewayAPIClient { return gatewayClient }, ) }) Context(\u0026#34;The user has the permission to create public shares\u0026#34;, func() { BeforeEeach(func() { // set up the mock // this is implicitly creating the expectation that it will be called Once() // this will throw an error if the method is not called gatewayClient. EXPECT(). CheckPermission( mock.Anything, mock.Anything, ). Return(checkPermissionResponse, nil) }) It(\u0026#34;should return a public share\u0026#34;, func() { // call the method req := \u0026amp;link.CreatePublicShareRequest{ ResourceInfo: \u0026amp;providerpb.ResourceInfo{ Owner: \u0026amp;userpb.UserId{ OpaqueId: \u0026#34;alice\u0026#34;, }, Path: \u0026#34;./NewFolder/file.txt\u0026#34;, }, Grant: \u0026amp;link.Grant{ Permissions: \u0026amp;link.PublicSharePermissions{ Permissions: linkPermissions, }, Password: \u0026#34;SecretPassw0rd!\u0026#34;, }, Description: \u0026#34;test\u0026#34;, } res, err := provider.CreatePublicShare(ctx, req) Expect(err).ToNot(HaveOccurred()) Expect(res.GetStatus().GetCode()).To(Equal(rpc.Code_CODE_OK)) Expect(res.GetShare()).To(Equal(createdLink)) }) }) }) Use the constructor on new mocks to register the AssertExpectations method to be called at the end of the tests via the t.Cleanup() method. ","description":"Prerequisites Getting Started Bootstrap Adding Specs to the Suite Writing Specs Describe Context It Expect BeforeEach Focused Specs Pending Specs Test Driven Development Mocking In this section we try to enable developers to write tests in oCIS using Ginkgo and Gomega and explain how to mock other microservices to also cover some integration tests. The full documentation of the tools can be found on the Ginkgo and Gomega websites."},{"id":29,"href":"/architecture/","title":"Architecture","parent":"ownCloud","content":"In the architecture part of the documentation we collect useful developer documentation on different aspects of the architecture. We are using mermaid.js to collaborate on the necessary diagrams.\nPictures tell more than a thousand words.\n","description":"In the architecture part of the documentation we collect useful developer documentation on different aspects of the architecture. We are using mermaid.js to collaborate on the necessary diagrams.\nPictures tell more than a thousand words."},{"id":30,"href":"/clients/","title":"Clients","parent":"ownCloud","content":"","description":""},{"id":31,"href":"/services/","title":"Services","parent":"ownCloud","content":"The documentation of services is intended for developers and only reflects the state of the master branch of the ocis repo.\nSee the admin documentation which provides versioned content suitable for administrators. This documentation also offers other useful information including deployment guides. ","description":"The documentation of services is intended for developers and only reflects the state of the master branch of the ocis repo.\nSee the admin documentation which provides versioned content suitable for administrators. This documentation also offers other useful information including deployment guides. "},{"id":32,"href":"/services/general-info/","title":"General Information","parent":"Services","content":" General Information This section provides general information valid for all services.\n","description":"General Information This section provides general information valid for all services."},{"id":33,"href":"/ocis/adr/0010-policy-enforcement/","title":"10. Extension Policies","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1, @fschade Date: 2021-06-30 Context and Problem Statement There should be a way to impose certain limitations in areas of the code that require licensing. This document researches an approach to achieve this goal, while limiting the scope to the enforcement side of it. The architecture for a policy system must be composed of 2 parts:\nLicense creation and validation Enforcement It is desirable to keep both systems isolated, since the implementation of the latter has to be done within the constraints of the codebase. The alternative is running an enforcement service and have each and every single request evaluating whether the request is valid or not.\nDecision Drivers As a team, we want to have the licensing code concentrated in a central module We don\u0026rsquo;t want to stop/start the extension whenever a policy is updated (hot reload). It must happen during runtime. Considered Options Build the evaluation engine in-house. Use third party libraries such as Open Policy Agent (a CNCF approved project written in Go) Decision Outcome Chosen option: option 2; Use third party libraries such as Open Policy Agent (a CNCF approved project written in Go)\nPositive Consequences OPA is production battle tested. Built around performance - policies evaluations are no longer than 1ms per request. Middleware friendly: we use gRPC clients all over our ecosystem; wrappers (or middlewares) is a viable way to solve this problem instead of a dedicated service or its own package. Community support. Kubernetes friendly. Supports envoy, kong, terraform, traefik, php, node and many more. Negative Consequences More vendor code inside the binary (larger attack surface, larger footprint [to be quantified] ) Chosen option approach Make use of overloading Open Policy Agent\u0026rsquo;s input along with an external storage source (instead of an OPA service) in conjunction with go-micro\u0026rsquo;s gRPC client wrappers (a.k.a. middlewares) to leverage policy rules evaluation.\nTerminology New terms are defined to refer to new mental models:\nPolicy: self-imposed limitation of a piece of software. i.e: \u0026ldquo;after 20 users limit the use of thumbnails\u0026rdquo;. Checkers: in the context of a middleware, a checker is in charge of defining logical conditions that prevent requests (users) from doing an action. Policy file: a rego file. Policy evaluation: the act of piecing together input (from a request), data (from an external storage) and policies in order to make a decision. Temporary new Interfaces part of the PoC IStorage: provides means of extracting data from an external source (in case of the POC an etcd storage cluster). External data storages However, for this to be usable it needs state. The Rego engine works with input and data, where data is essentially a database the input is tried against, in order to expand this poc to include functionality such as counters (i.e: give access to the thumbnails only to 50 users) we need an external storage, and consequentially, Rego needs to have an option to load data from an external storage. There is an entire chapter in the documentation regarding external data: https://www.openpolicyagent.org/docs/latest/external-data/. The most \u0026ldquo;natural\u0026rdquo; option (option 5) states:\nOPA includes functionality for reaching out to external servers during evaluation. This functionality handles those cases where there is too much data to synchronize into OPA, JWTs are ineffective, or policy requires information that must be as up-to-date as possible.\nThis is a natural option because it requires service-to-service communication, and by definition using microservices it should come \u0026ldquo;natural to us\u0026rdquo;. Another approach is using JWT (which we already use) to encode the necessary data into the JWT and handing it over to rego as \u0026ldquo;data\u0026rdquo;. The issue with this approach is that depending on the features of the licenses the JWT might grow and be filled with noise and redundancy (this is, unless a new token is issued for licensing purposes).\nFuture ideas This proof of concept is very rigid in the sense that the IStorage interface only has one implementation that ties it to etcd, meaning running an oCIS cluster without an etcd service will result in a crash. This is by far ideal and less coupled implementations should be done. There is the case of using the storage metadata as a source to store data necessary to the policies, or even using the go-micro store as a kv store to achieve the exact same, since it already runs as its own service. The implementation of this is trivial and left out of the POC since it requires more time than the allotted for this task.\nMessage Broker This problem perfectly encompasses the use of a message broker, where services such as OCS will emit messages to a bus and only listeners react to them. In this case the following applies:\nThe necessary interfaces are provided to us by go-micro, only implementations are to be done.\n","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1, @fschade Date: 2021-06-30 Context and Problem Statement There should be a way to impose certain limitations in areas of the code that require licensing. This document researches an approach to achieve this goal, while limiting the scope to the enforcement side of it. The architecture for a policy system must be composed of 2 parts:\nLicense creation and validation Enforcement It is desirable to keep both systems isolated, since the implementation of the latter has to be done within the constraints of the codebase."},{"id":34,"href":"/ocis/deployment/continuous_deployment/","title":"Continuous Deployment","parent":"Deployment","content":" oCIS with Web Office Master Rolling Release Production Release Master with OnlyOffice Rolling Release with OnlyOffice oCIS and ownCloud Web with both most recent development versions Master branches oCIS with Keycloak Rolling Release oCIS with S3 storage backend (MinIO) Rolling Release oCIS with LDAP for users and groups Rolling Release We are continuously deploying the following deployment examples. Every example is deployed in two flavors:\nMaster: reflects the current master branch state of oCIS and will be updated with every commit to master Rolling: reflects the latest rolling release of oCIS and will be updated with every rolling release Production: reflects the latest production release of oCIS and will be updated with every production release The configuration for the continuous deployment can be found in the oCIS repository.\noCIS with Web Office This deployment is based on our modular ocis_full Example and uses the default configuration with Collabora Online as the office suite, traefik reverse proxy, cloudimporter and the inbucket mail catching server to showcase the full feature set of oCIS.\nCredentials:\noCIS: see default demo users Master oCIS: ocis.ocis.master.owncloud.works Mail: mail.ocis.master.owncloud.works Rolling Release oCIS: ocis.ocis.rolling.owncloud.works Mail: mail.ocis.rolling.owncloud.works Production Release oCIS: ocis.ocis.production.owncloud.works Mail: mail.ocis.production.owncloud.works Master with OnlyOffice This example is using OnlyOffice as the office suite.\noCIS: ocis.ocis-onlyoffice.master.owncloud.works Rolling Release with OnlyOffice This example is using OnlyOffice as the office suite.\noCIS: ocis.ocis-onlyoffice.rolling.owncloud.works oCIS and ownCloud Web with both most recent development versions Credentials:\noCIS: see default demo users Master branches oCIS: ocis.ocis-web.master.owncloud.works oCIS with Keycloak Credentials:\noCIS: see default demo users Keycloak: username: admin password: admin Rolling Release oCIS: ocis.ocis-keycloak.rolling.owncloud.works Keycloak admin access: keycloak.ocis-keycloak.rolling.owncloud.works Keycloak account management: keycloak.ocis-keycloak.rolling.owncloud.works/realms/oCIS/account/#/ oCIS with S3 storage backend (MinIO) This deployment is based on our modular ocis_full Example, see the oCIS with Web Office description for the feature set. In addition to that, we deployed a MinIO S3 storage backend. oCIS stores the data in the S3 server and the metadata on the local disk by using the s3ng storage driver.\nThe MinIO server provides a powerful Web UI for browser-based access to the storage which makes it possible to manage the data stored in the S3 server and understand how different policies and configurations affect the data.\nCredentials:\noCIS: see default demo users MinIO: access key: ocis secret access key: ocis-secret-key Rolling Release oCIS: ocis.ocis-s3.rolling.owncloud.works MinIO: minio.ocis-s3.rolling.owncloud.works Mail: mail.ocis-s3.rolling.owncloud.works oCIS with LDAP for users and groups Credentials:\noCIS: see default demo users LDAP admin: username: cn=admin,dc=owncloud,dc=com password: admin Rolling Release oCIS: ocis.ocis-ldap.rolling.owncloud.works LDAP admin: ldap.ocis-ldap.rolling.owncloud.works ","description":"oCIS with Web Office Master Rolling Release Production Release Master with OnlyOffice Rolling Release with OnlyOffice oCIS and ownCloud Web with both most recent development versions Master branches oCIS with Keycloak Rolling Release oCIS with S3 storage backend (MinIO) Rolling Release oCIS with LDAP for users and groups Rolling Release We are continuously deploying the following deployment examples. Every example is deployed in two flavors:\nMaster: reflects the current master branch state of oCIS and will be updated with every commit to master Rolling: reflects the latest rolling release of oCIS and will be updated with every rolling release Production: reflects the latest production release of oCIS and will be updated with every production release The configuration for the continuous deployment can be found in the oCIS repository."},{"id":35,"href":"/ocis/development/","title":"Development","parent":"oCIS - ownCloud Infinite Scale","content":"","description":""},{"id":36,"href":"/ocis/deployment/monitoring-tracing/","title":"Monitoring \u0026 Tracing","parent":"Deployment","content":" Overview about the proposed solution Monitoring \u0026amp; tracing clients Monitoring \u0026amp; tracing server Monitoring and tracing gives developers and admin insights into a complex system, in this case oCIS.\nIf you are a developer and want to trace during developing you should have a look at example server setup.\nThis documentation describes how to set up a long-running monitoring \u0026amp; tracing infrastructure for one or multiple oCIS servers or deployments. After reading this guide, you also should know everything needed to integrate oCIS into your existing monitoring and tracing infrastructure.\nOverview about the proposed solution Monitoring \u0026amp; tracing clients We assume that you already have oCIS deployed on one or multiple servers by using our deployment examples (see rectangle on the left). On these servers our monitoring \u0026amp; tracing clients, namely Telegraf and Jaeger agent, need to be added.\nTelegraf will collect host metrics (CPU, RAM, network, processes, \u0026hellip;) and docker metrics (per container CPU, RAM, network, \u0026hellip;). Telegraf is also configured to scrape metrics from Prometheus metric endpoints which oCIS exposes, this is done by the Prometheus input plugin . The metrics from oCIS and all other metrics gathered will be exposed with the Prometheus output plugin and can therefore be scraped by our monitoring \u0026amp; tracing server.\nJaeger agent is being configured as target for traces in oCIS. It then will receive traces from all oCIS services, add some process tags to them and forward them to our Jaeger collector on our monitoring \u0026amp; tracing server.\nFor more information and how to deploy it, see monitoring \u0026amp; tracing client.\nMonitoring \u0026amp; tracing server A live version of the monitoring and tracing server for our demo instances is available here: Grafana, Prometheus and Jaeger Query.\nThe monitoring \u0026amp; tracing server is considered as shared infrastructure and is normally used for different services. This means that oCIS is not the only software whose metrics and traces are available on the monitoring server. It is also possible that data of multiple oCIS instances are available on the monitoring server.\nMetrics are scraped, stored and can be queried with Prometheus. For the visualization of these metrics Grafana is used. Because Prometheus is scraping the metrics from the oCIS server (pull model instead of a push model), the Prometheus server must have access to the exposed endpoint of the Telegraf Prometheus output plugin.\nJaeger collector receives traces sent by the Jaeger agent on the oCIS servers and persists them in ElasticSearch. From there the user can query and visualize the traces in Jaeger query or in Grafana. Because Jaeger agent is actively sending traces to the monitoring \u0026amp; tracing server, the server must be reachable from the oCIS server.\nFor more information and how to deploy it, see monitoring \u0026amp; tracing server.\n","description":"Overview about the proposed solution Monitoring \u0026amp; tracing clients Monitoring \u0026amp; tracing server Monitoring and tracing gives developers and admin insights into a complex system, in this case oCIS.\nIf you are a developer and want to trace during developing you should have a look at example server setup.\nThis documentation describes how to set up a long-running monitoring \u0026amp; tracing infrastructure for one or multiple oCIS servers or deployments."},{"id":37,"href":"/clients/web/getting-started/","title":"Getting Started","parent":"ownCloud Web","content":" Installation Docker Source Code Configuration Options Scripts and Styles Sentry Setting up backend and running Running Installation Docker Make sure to have Docker, Docker-Compose, Node.js and pnpm installed.\nThis setup currently doesn\u0026rsquo;t work on Windows out of the box.\nWorkaround One of our contributors has opened a PR to a dependency that prevents us from successfully bundling the frontend. Feel free to check out [his changes](https://github.com/egoist/rollup-plugin-postcss/pull/384) and build them locally if you absolutely want to work on Windows. After cloning the source code, install the dependencies via pnpm install and bundle the frontend code by running pnpm build:w.\nThen, you can start the server by running docker-compose up ocis and access it via https://host.docker.internal:9200. If you\u0026rsquo;re not using Docker Desktop, you might have to modify your /etc/hosts and add 127.0.0.1 host.docker.internal to make the host.docker.internal links work.\nThe bundled frontend code automatically gets mounted into the Docker containers, recompiles on changes and you can log in using the demo user (admin/admin) and take a look around!\nFor more details on how to set up Web for development, please see tooling.\nSource Code The source code is hosted at https://github.com/owncloud/web. Please refer to the build documentation for Web.\nConfiguration Depending on the backend you are using, there are sample config files provided in the config folder of the ownCloud Web git repository. See below for available backends. Also, find some of the configuration details below.\ncustomTranslations You can specify one or multiple files to overwrite existing translations. For example set this option to [{url: \u0026quot;https://localhost:9200/customTranslations.json\u0026quot;}]. Options options.accountEditLink This accepts an object with the following optional fields to have a link on the account page: options.accountEditLink.href Set a different target URL for the edit link. Make sure to prepend it with http(s)://. options.disableFeedbackLink Set this option to true to disable the feedback link in the topbar. Keeping it enabled (value false or absence of the option) allows ownCloud to get feedback from your user base through a dedicated survey website. options.feedbackLink This accepts an object with the following optional fields to customize the feedback link in the topbar: options.feedbackLink.href Set a different target URL for the feedback link. Make sure to prepend it with http(s)://. Defaults to https://owncloud.com/web-design-feedback. options.feedbackLink.ariaLabel Since the link only has an icon, you can set an e.g. screen reader accessible label. Defaults to ownCloud feedback survey. options.feedbackLink.description Provide any description you want to see as tooltip and as accessible description. Defaults to Provide your feedback: We'd like to improve the web design and would be happy to hear your feedback. Thank you! Your ownCloud team. options.sharingRecipientsPerPage Sets the amount of users shown as recipients in the dropdown when sharing resources. Default amount is 200. options.runningOnEos Set this option to true if running on an EOS storage backend to enable its specific features. Defaults to false, and we recommend reaching out to the ownCloud web team if you\u0026rsquo;re not CERN and thinking about enabling this feature flag. options.cernFeatures Enabling this will activate CERN-specific features. Defaults to false. options.editor.autosaveEnabled Specifies if the autosave for the editor apps is enabled. options.editor.autosaveInterval Specifies the time interval for the autosave of editor apps in seconds. options.editor.openAsPreview Specifies if non-personal files i.e. files in shares, spaces or public links are being opened in read only mode so the user needs to manually switch to edit mode. Can be set to true, false or an array of web app/editor names. options.contextHelpersReadMore Specifies whether the \u0026ldquo;Read more\u0026rdquo; link should be displayed or not. options.tokenStorageLocal Specifies whether the access token will be stored in the local storage when set to true or in the session storage when set to false. If stored in the local storage, login state will be persisted across multiple browser tabs, means no additional logins are required. Defaults to true. options.loginUrl Specifies the target URL to the login page. This is helpful when an external IdP is used. This option is disabled by default. Example URL like: \u0026lsquo;https://www.myidp.com/login'. options.logoutUrl Adds a link to the user\u0026rsquo;s profile page to point him to an external page, where he can manage his session and devices. This is helpful when an external IdP is used. This option is disabled by default. options.userListRequiresFilter Defines whether one or more filters must be set in order to list users in the Web admin settings. Set this option to \u0026rsquo;true\u0026rsquo; if running in an environment with a lot of users and listing all users could slow down performance. Defaults to false. options.concurrentRequests This accepts an object with the following optional fields to customize the maximum number of concurrent requests in code paths where we limit concurrent requests resourceBatchActions Concurrent number of file/folder/space batch actions like e.g. accepting shares. Defaults to 4. sse Concurrent number of SSE event handlers. Defaults to 4. shares Accepts an object regarding the following sharing related options: create Concurrent number of share invites. Defaults to 4. list Concurrent number of individually loaded shares. Defaults to 2. Scripts and Styles Web supports adding additional CSS and JavaScript files to further customize the user experience and adapt it to your specific needs. Please consider opening a feature request if you feel like your customization could be a benefit to the upstream project, and keep an eye open for future major releases of web since this API may change.\nstyles expects an array of objects that specify a href attribute, pointing to the path/URL of your stylesheet, like [{ \u0026quot;href\u0026quot;: \u0026quot;css/custom.css\u0026quot; }]. scripts expects an array of objects that specify a src attribute, pointing to the path/URL of your script, and an optional async attribute (defaults to false), like [{ \u0026quot;src\u0026quot;: \u0026quot;js/custom.js\u0026quot;, \u0026quot;async\u0026quot;: true }]. Sentry Web supports Sentry to provide monitoring and error tracking. To enable sending data to a Sentry instance, you can use the following configuration keys:\nsentry.dsn Should contain the DSN for your sentry project. sentry.environment: Lets you specify the environment to use in Sentry. Defaults to production. Any other key under sentry will be forwarded to the Sentry initialization. You can find out more settings in the Sentry docs.\nIf you are using an old version of Sentry (9 and before), you might want to add the setting sentry.autoSessionTracking: false to avoid errors related to breaking changes introduced in the integration libraries. Setting up backend and running Newer versions of Web (\u0026gt; 7.0.2) can only run against oCIS, whereas older versions (\u0026lt; 7.1.0) can run against ownCloud 10 as well. Depending which one you chose, please check the matching section:\nSetting up with oCIS as backend Setting up with ownCloud as backend Running Running with oCIS as backend Running with ownCloud as backend ","description":"Installation Docker Source Code Configuration Options Scripts and Styles Sentry Setting up backend and running Running Installation Docker Make sure to have Docker, Docker-Compose, Node.js and pnpm installed.\nThis setup currently doesn\u0026rsquo;t work on Windows out of the box.\nWorkaround One of our contributors has opened a PR to a dependency that prevents us from successfully bundling the frontend. Feel free to check out [his changes](https://github.com/egoist/rollup-plugin-postcss/pull/384) and build them locally if you absolutely want to work on Windows."},{"id":38,"href":"/services/idm/admin_password_reset/","title":"Resetting a lost administrator password","parent":"IDM","content":" Resetting a lost administrator password By default, when using oCIS with the builtin IDM an ad generates the user admin (DN uid=admin,ou=users,o=libregraph-idm) if, for any reason, the password of that user is lost, it can be reset using the resetpassword sub-command:\nocis idm resetpassword It will prompt for a new password and set the password of that user accordingly. Note: As this command is accessing the idm database directly will only work while ocis is not running and nothing else is accessing database.\n","description":"Resetting a lost administrator password By default, when using oCIS with the builtin IDM an ad generates the user admin (DN uid=admin,ou=users,o=libregraph-idm) if, for any reason, the password of that user is lost, it can be reset using the resetpassword sub-command:\nocis idm resetpassword It will prompt for a new password and set the password of that user accordingly. Note: As this command is accessing the idm database directly will only work while ocis is not running and nothing else is accessing database."},{"id":39,"href":"/ocis/adr/0011-global-url-format/","title":"11. WebUI URL format","parent":"Architecture Decisions","content":" Status: accepted Deciders: @refs, @butonic, @micbar, @dragotin, @hodyroff, @pmaier1, @fschade, @tbsbdr, @kulmann Date: 2021-07-07 Context and Problem Statement When speaking about URLs we have to make a difference between browser URLs and API URLs. Only browser URLs are visible to end users and will be bookmarked. The currently existing and bookmarked ownCloud 10 URLs look something like this:\nGET https://demo.owncloud.com/apps/files/?dir=/path/to/resource\u0026amp;fileid=5472225 303 Location: https://demo.owncloud.com/apps/files/?dir=/path/to/resource When the URL contains a fileid parameter the server will look up the corresponding dir, overwriting whatever was set before the redirect. The fileid always takes precedence and the server is responsible for the lookup.\nGET https://demo.owncloud.com/apps/files/?dir=/path/to/resource The dir parameter is then used to make a WebDAV request against the /dav/files endpoint of the currently logged-in user:\nPROPFIND https://demo.owncloud.com/remote.php/dav/files/demo/path/to/resource The resulting PROPFIND response is used to render the file listing. All good so far.\nFor the new ocis web UI we want to clean up the user visible Browser URLs. They currently look like this:\nhttps://demo.owncloud.com/#/files/list/all/path/to/resource Currently, there is no fileid like parameter in the browser URL, making bookmarks of it fragile (they break when a bookmarked folder is renamed).\nThe oCIS web UI just takes the path and uses the /webdav endpoint of the currently logged-in user:\nPROPFIND https://demo.owncloud.com/remote.php/webdav/path/to/resource With the new ownCloud web client (owncloud/web)\nneeds to interpret them to make API calls. With this in mind, this is the current mapping on ownCloud Web with OC10 and OCIS backend:\nBrowser URL API URL OC10 + classic WebUI https://demo.owncloud.com/apps/files/?dir=/path/to/resource\u0026amp;fileid=5472225 https://demo.owncloud.com/remote.php/dav/files/demo/path/to/resource OC10 + OCIS WebUI https://web.owncloud.com/index.html#/files/list/all/path%2Fto%2Fresource https://demo.owncloud.com/remote.php/webdav/path/to/resource OCIS https://demo.owncloud.com/#/files/list/all/path/to/resource https://demo.owncloud.com/remote.php/webdav/path/to/resource On an OC10 backend the fileid query parameter takes precedence over the dir. In fact if dir is invalid but fileid isn\u0026rsquo;t, the resolution will succeed, as opposed to if the fileid is wrong (doesn\u0026rsquo;t exist) and dir correct, resolution will fail altogether with a 404.\nThis ADR is limited to the scope of \u0026ldquo;how will a web client deal with the browser URL?\u0026rdquo;. The API URLs will change with the spaces concept to https://demo.owncloud.com/dav/spaces/\u0026lt;space_id\u0026gt;/relative/path/to/resource. The Web UI can look up a space id and the mount path using the /graph/v1.0/drives API:\nTODO for a given resource id as part of the URL the https://demo.owncloud.com/v1.0/drive/items/123456A14B0A7750!359?$select=parentReference can be used to retrieve the drive/space: { \u0026#34;parentReference\u0026#34;: { \u0026#34;driveId\u0026#34;: \u0026#34;123456a14b0a7750\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;personal\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;123456A14B0A7750!357\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/drive/root:\u0026#34; } } TODO to fetch the list of all spaces with their mount points we need an API endpoint that allows clients (not only the web ui) to \u0026lsquo;sync\u0026rsquo; the list of storages a user has access to from the storage registry on the server side. This allows clients to directly talk to a storage provider on another instance, allowing true storage federation. The MS graph api has no notion of mount points, so we will need to add a mountpath (or mountpoint? or alias?) to our drive resource properties in the libreGraph spec. Tracked in https://github.com/owncloud/open-graph-api/issues/6 @jfd: The graph api returns a path in the parentReference, which is part of the root in a drive resource. But it contains a value in the namespace of the graph endpoint, e.g.: /drive/root:/Bilder for the /Bilder folder in the root of the currently logged-in users personal drive/space. Which is again relative to the drive. To give the clients a way to determine the mount point we need to add a new mountpath/point/alias property. Decision Drivers To reveal relevant context to the user URLs should either carry a path component or a meaningful alias To prevent bookmarks from breaking URLs should have an id component that can be used by the system to lookup the resource Considered Options Existing ownCloud 10 URLs ID based URLs Path based URLs Space based URLs Mixed Global URLs Configurable path component in URLs Decision Outcome Chosen option: \u0026ldquo;Mixed global URLs\u0026rdquo;, because it meets the requirement to contain a path and a stable identifier.\nPositive Consequences The path makes it \u0026ldquo;human readable\u0026rdquo; The URL can be bookmarked The bookmarked URLs remain stable even if the path changes All URLs can be shortened to hide any metadata like path, resource name and query parameters Negative Consequences the web UI needs to look up the space alias in a registry to build an API request for the /dav/space endpoint Pros and Cons of the Options Existing OwnCloud 10 URLs The existing ownCloud 10 URLs look like this\nURL comment https://\u0026lt;host\u0026gt;/apps/files/?dir=\u0026lt;path\u0026gt;\u0026amp;fileid=\u0026lt;fileid\u0026gt; pattern https://demo.owncloud.com/apps/files/?dir=/\u0026amp;fileid=18 root of the currently logged in user https://demo.owncloud.com/index.php/apps/files/?dir=/path/to/resource\u0026amp;fileid=192 sub folder /path/to/resource It contains a path and a fileid (which takes precedence).\nGood, because the fileid prevents bookmarks from breaking Good, because the dir reveals context in the form of a path Bad, because the web UI needs to look up the space alias in a registry to build an API request for the /dav/space endpoint Bad, because URLs still contain a long prefix (/index.php)/apps/files Bad, because the fileid needs to be accompanied by a storageid to allow efficient routing in ocis Bad, because if not configured properly an additional /index.php prefixes the route Bad, because power users cannot navigate by updating only the path in the URL, as the fileid takes precedence. They have to delete the fileid to navigate ID based URLs MS OneDrive has URLs like this:\nURL comment https://\u0026lt;host\u0026gt;/?id=\u0026lt;fileid\u0026gt;(\u0026amp;cid=\u0026lt;cid\u0026gt;) pattern, the cid is optional but added automatically https://onedrive.live.com/?id=root\u0026amp;cid=A12345A14B0A7750 root of a personal drive https://onedrive.live.com/?id=A12345A14B0A7750%21359\u0026amp;cid=A12345A14B0A7750 sub folder in a personal drive It contains only IDs but no folder names. The fileid is a URL encoded \u0026lt;cid\u0026gt;!\u0026lt;numericid\u0026gt;. Very similar to the CS3 resourceid which consists of storageid and nodeid.\nGood, because bookmarks cannot break Good, because URLs do not disclose unshared path segments Bad, because the web UI needs to look up the space id in a registry to build an API request for the /dav/space endpoint Bad, because URLs reveal no context to users Path based URLs There is a customized ownCloud instance that uses path only based URLs:\nURL comment https://\u0026lt;host\u0026gt;/apps/files/?dir=/\u0026amp; root of the currently logged in user https://demo.owncloud.com/apps/files/?dir=/\u0026amp; root of the currently logged in user https://demo.owncloud.com/apps/files/?dir=/path/to/resource\u0026amp; sub folder /path/to/resource Good, because the URLs reveal the full path context to users Good, because power users can navigate by updating the path in the url Bad, because the web UI needs to look up the space id in a registry to build an API request for the /dav/space endpoint Bad, because the bookmarks break when someone renames a folder in the path Bad, because there is no id that can be used as a fallback lookup mechanism Bad, because URLs might leak too much context (parent folders of shared files) Space based URLs URL comment https://\u0026lt;host\u0026gt;/#/s/\u0026lt;space_id\u0026gt;(/\u0026lt;relative/path\u0026gt;)(?id=\u0026lt;resource_id\u0026gt;) the pattern, relative path and resource_id are optional https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607 root of a storage space, might be the currently logged in users home https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607/relative/path/to/resource sub folder /relative/path/to/resource in the storage with id b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607, works only if path still exists https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607/relative/path/to/resource?id=ba4c1820-df12-11eb-8dcd-ff21f12c1264:beb78dd6-df12-11eb-a05c-a395505126f6 sub folder /relative/path/to/resource in the storage with id b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607, lookup can fall back to the id /# is used by the current vue router. /s denotes that this is a space url. \u0026lt;space_id\u0026gt; and \u0026lt;resource_id\u0026gt; both consist of \u0026lt;storage_id\u0026gt;:\u0026lt;node_id\u0026gt;, but the space_id can be replaced with a shorter id or an alias. See further down below. \u0026lt;relative/path\u0026gt; takes precedence over the \u0026lt;resource_id\u0026gt;, both are optional Good, because the web UI does not need to look up the space id in a registry to build an API request for the /dav/space endpoint Good, because the URLs reveal a relevant path context to users Good, because everything after the # is not sent to the server, building the webdav request to list the folder is offloaded to the clients Good, because power users can navigate by updating the path in the url Bad, because the current ids are uuid based, leading to very long URLs where the path component nearly vanishes between two very long strings Bad, because the # in the URL is just a technical requirement Bad, because ocis web requires a /#/files/s at the root of the route to distinguish the files app from other apps Bad, while navigating using the WebUI, the URL has to be updated whenever we change spaces. Bad, because the technical \u0026lt;space_id\u0026gt; is meaningless to end users With the above explained, let\u0026rsquo;s see some use cases:\nExample 1: UserA shares something from her Home folder with UserB open the browser and go to demo.owncloud.com the browser\u0026rsquo;s url changes to: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607. You\u0026rsquo;re now in YOUR home folder / personal space. you create a new folder /relative/path/to/resource and navigate into /relative/path/to the URL now changes to: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607/relative/path/to You share resource with some else You navigate into /relative/path/to/resource now the URL would look like: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:3a9305da-df17-11eb-ab99-abe09d93e08a As you can see, even if you\u0026rsquo;re the owner of /relative/path/to/resource and navigate into it, the URL changes due to a new space being entered. This ensures that while working in your home folder, copying URLs and giving them to the person you share the resource with, the receiver can still navigate within the new space.\nIn short terms, while navigating using the WebUI, the URL has to constantly change whenever we change spaces to reflect the most explicit one.\nExample 2: UserA shares something from a Workspace Assuming we only have one storage provider; a consequence of this, all storage spaces will start with the same storage_id.\nopen the browser and go to demo.owncloud.com the browser\u0026rsquo;s url changes to: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607. You\u0026rsquo;re now in YOUR home folder / personal space. you have access to a workspace called foo (created by an admin) navigate into workspace foo the URL now changes to: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:d342f9ce-df18-11eb-b319-1b6d9df4bc74. You are now at the root of the workspace foo. because we only have one storage provider, the space_id section of the URL only updates the node_id part of it. had we had more than one storage provider, the space_id would depend on which storage provider contains the storage space. you create a folder /relative/path/to/resource you navigate into /relative/path/to/resource now the URL would look like: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:d342f9ce-df18-11eb-b319-1b6d9df4bc74/relative/path/to/resource or a more robust url: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:d342f9ce-df18-11eb-b319-1b6d9df4bc74/relative/path/to/resource?id=b78c2044-5b51-446f-82f6-907a664d089c:04f1991c-df19-11eb-9cc7-3b09f04f9ca3 Spaces Registry A big drawback against this idea is that the length of the URL is increased by a lot, rendering them almost unreadable. Introducing a Spaces Registry (SR) would shorten them. Let\u0026rsquo;s see how.\nA URL without a SR would look like: https://ocis.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:d342f9ce-df18-11eb-b319-1b6d9df4bc74/TEST?id=b78c2044-5b51-446f-82f6-907a664d089c:04f1991c-df19-11eb-9cc7-3b09f04f9ca3 The same URL with a SR https://ocis.com/#/s/workspaceFoo/TEST?id=b78c2044-5b51-446f-82f6-907a664d089c:04f1991c-df19-11eb-9cc7-3b09f04f9ca3\nSpace Registry resolution can happen at the client side (i.e: the client keeps a list of space name -\u0026gt; space id [where space id = storageid + nodeid]; the client queries a SR) or server side. Server side is more resilient due to clients can have limited networking; for instance if they are running on a tight intranet.\nMixed Global URLs While ID based space URLs can be made more readable by shortening the IDs they only start to reveal context when an alias is used instead of the space id. These aliases however have to be unique identifiers. These aliases should live in namespaces like /workspaces/marketing and /personal/marketing to make phishing attacks harder (in this case a user that registered with the username marketing). But namespaced aliases is semantically equivalent to \u0026hellip; a path hierarchy.\nWhen every space has a namespaced alias and a relative path we can build a global namespace:\nURL comment https://\u0026lt;host\u0026gt;/files\u0026lt;/namespaced/alias\u0026gt;\u0026lt;/relative/path/to/resource\u0026gt;?id=\u0026lt;resource_id\u0026gt; the pattern, /files might become optional https://demo.owncloud.com/files/personal/einstein/?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607 root of user einstein https://demo.owncloud.com/files/personal/einstein/relative/path/to/resource?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21608 sub folder /relative/path/to/resource https://demo.owncloud.com/files/shares/einstein/somesharename?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21608 shared URL for /relative/path/to/resource https://demo.owncloud.com/files/personal/einstein/marie is stupid/and richard as well/resource?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21608 sub folder marie is stupid/and richard as well/resource \u0026hellip; something einstein might not want to reveal https://demo.owncloud.com/files/shares/einstein/resource (2)?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21608 named link URL for /marie is stupid/and richard as well/resource, does not disclose the actual hierarchy, has an appended counter to avoid a collision https://demo.owncloud.com/files/shares/einstein/mybestfriends?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21608 named link URL for /marie is stupid/and richard as well/resource, does not disclose the actual hierarchy, has a custom alias for the share https://demo.owncloud.com/files/public/kcZVYaXr7oZ66bg/relative/path/to/resource sub folder /relative/path/to/resource in public link with token kcZVYaXr7oZ66bg https://demo.owncloud.com/files/public/kcZVYaXr7oZ66bg/relative/path/to/resource sub folder /relative/path/to/resource in public link with token kcZVYaXr7oZ66bg https://demo.owncloud.com/s/kcZVYaXr7oZ66bg/ shortened link to a resource. This is needed to be able to copy a link to a resource without leaking any metadata. \u0026lt;/namespaced/alias\u0026gt;\u0026lt;/relative/path/to/resource\u0026gt; is the global path in the CS3 api. The CS3 Storage Registry is responsible by managing the mount points.\nIn order to be able to copy and paste URLs all resources must be uniquely identifiable:\nInstead of /home the URL always has to reflect the user: /personal/einstein Workspaces can use /workspaces/\u0026lt;alias\u0026gt; or /workspaces/\u0026lt;additional\u0026gt;/\u0026lt;classification\u0026gt;/\u0026lt;alias\u0026gt; where the hierarchy is given by the organization Experiments can use /experiments/\u0026lt;alias\u0026gt; Research institutes could set up /papers/\u0026lt;researchgroup\u0026gt;/\u0026lt;alias\u0026gt; Trash could be accessed by prefixing the namespace alias with /trash? or using /trash/\u0026lt;space_id\u0026gt; Instead of a namespaced alias a storage space id could be used with a generic /space/\u0026lt;space_id\u0026gt; namespace An url shortener can create urls like /s/\u0026lt;token\u0026gt; which could be used as a stable link to a resource. Links for anonymous users will resolve to /public/\u0026lt;token\u0026gt; The alias namespace hierarchy and depth can be pre-determined by the admin. Even if aliases change the id parameter prevents bookmarks from breaking. A user can decide to build a different hierarchy by using his own registry.\nWhat about shares? Similar to /home it must reflect the user: /shares/einstein would list all shares by einstein for the currently logged-in user. The ui needs to apply the same URL rewriting as for space based URLs: when navigating into a share the URL has to switch from /personal/einstein/relative/path/to/shared/resource to /shares/einstein/\u0026lt;unique and potentially namespaced alias for shared resource\u0026gt;. When more than one resource was shared a name collision would occur. To prevent this we can use ids /shares/einstein/id/\u0026lt;resource_id or namespaced aliases /shares/einstein/files/alias. Similar to the /trash prefix we could treat /shares as a filter for the shared resources a user has access to, but that would disclose unshared path segments in personal spaces. We could make that a feature and let users create an alias for a shared resource, similar as for public links. Then they can decide if they want to disclose the full path in their personal space (or another workspace) or if they want to use an alias which is then accessed at /shares/einstein/\u0026lt;alias\u0026gt;. As a default we could take the alias at creation time from the filename. That way two shares to a resource with the same name, e.g.: /personal/einstein/project AAA/foo and /personal/einstein/project BBB/foo would lead to /shares/einstein/foo (a CS3 internal reference to /personal/einstein/project AAA/foo) and /shares/einstein/foo (2) (a CS3 internal reference to /personal/einstein/project BBB/foo). foo (2) would keep its name even when foo is deleted or renamed. Well an id as the alias might be better then, because users might rename these aliases, which would break URLs if they have been bookmarked. In any case this would make end user more aware of what they share AND it would allow them to choose an arbitrary context for the links they want to send out: personal internal share URLs.\nWith these different namespaces the /files part in the URL becomes obsolete, because the files application can be registered for multiple namespaces: /personal, /workspaces, /shares, /trash \u0026hellip;\nGood, because it contains a global path Good, because spaces with namespaced aliases can be bookmarked and copied into mails or chat without disclosing unshared path segments, as the space is supposed to be shared Good, because the UI can detect broken paths and notify the user to update his bookmark if the resource could be found by id Good, because the /files part might only be required for id only based lookup to let the web ui know which app is responsible for the route Good, because it turns shares into deliberately named spaces in /shares/\u0026lt;owner\u0026gt;/\u0026lt;alias\u0026gt; Good, because all urls can be shortened to hide any metadata like path, resource name and query parameters Bad, because the web UI needs to look up the space alias in a registry to build an API request for the /dav/space endpoint Configurable path component in URLs Not every deployment may have the requirement to have the path in the URL. We could use id only based URLs, similar to onedrive and make showing paths configurable.\nURL comment https://\u0026lt;host\u0026gt;/files?id=\u0026lt;resource_id\u0026gt; default id based navigation https://\u0026lt;host\u0026gt;/files\u0026lt;/namespaced/alias\u0026gt;\u0026lt;/relative/path/to/resource\u0026gt;?id=\u0026lt;resource_id\u0026gt; optional path based navigation with fallback to id In contrast to ownCloud 10 path takes precedence and the user is warned when the fileid in his bookmark no longer matches the id on the server: sth. like \u0026ldquo;The path of the resource has changed, please verify and update your bookmark!\u0026rdquo;\nWhen a file is selected the filename also becomes part of the URL so individual files can be bookmarked.\nIf navigation is id based we need to look up the path for the id so we can make a webdav request, or we need to implement the graph drives and driveItem resources.\nThe URL https://\u0026lt;host\u0026gt;/files?id=\u0026lt;resource_id\u0026gt;̀ is sent to the server. It has to look up the correct path and redirect the request, including the path. But that would make all bookmarks contain tha path again, even if paths were configured to not be part of the URL.\nThe /meta/\u0026lt;fileid\u0026gt; webdav endpoint can be used to look up the path with property meta-path-for-user.\nFor now, we would use path based navigation with URLs like this:\nhttps://\u0026lt;host\u0026gt;/files\u0026lt;/namespaced/alias\u0026gt;\u0026lt;/relative/path/to/resource\u0026gt;?id=\u0026lt;resource_id\u0026gt; This means that only the resource path is part of the URL path. Any other parameter, e.g. file id, page or sort order must be given as URL parameters.\nTo make lookup by id possible we need to implement the /meta/\u0026lt;fileid\u0026gt; endpoint so the sdk can use it to look up the path. We should not implement a redirect on the ocis server side because the same redirect logic would need to be added to oc10. Having it in ocis web is the right place.\nThe old sharing links and oc10 urls still need to be redirected by ocis/reva as in oc10.\nPublic links would have the same format: https://\u0026lt;host\u0026gt;/files?id=\u0026lt;resource_id\u0026gt; The web UI has to detect if the user is logged in or not and adjust the ui accordingly.\nSince there is no difference between public and private files a logged-in user cannot see the public version of a link unless he logs out. ","description":"Status: accepted Deciders: @refs, @butonic, @micbar, @dragotin, @hodyroff, @pmaier1, @fschade, @tbsbdr, @kulmann Date: 2021-07-07 Context and Problem Statement When speaking about URLs we have to make a difference between browser URLs and API URLs. Only browser URLs are visible to end users and will be bookmarked. The currently existing and bookmarked ownCloud 10 URLs look something like this:\nGET https://demo.owncloud.com/apps/files/?dir=/path/to/resource\u0026amp;fileid=5472225 303 Location: https://demo.owncloud.com/apps/files/?dir=/path/to/resource When the URL contains a fileid parameter the server will look up the corresponding dir, overwriting whatever was set before the redirect."},{"id":40,"href":"/ocis/adr/0012-tracing/","title":"12. Tracing","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @mstingl @pmaier1, @fschade Date: 2021-08-17 Context and Problem Statement At the time of this writing we are in a situation where our logs have too much verbosity, rendering impossible or rather difficult to debug an instance. For this reason we are giving some care to our traces by updating dependencies from OpenCensus to OpenTelemetry.\nDecision Drivers We don\u0026rsquo;t want to rely only on logs to debug an instance. Logs are too verbose. Since we have micro-services, we want to holistically understand a request. Considered Options Trim down logs Use OpenCensus Migrate to OpenTelemetry Decision Outcome Chosen option: option 3; Migrate to OpenTelemetry. OpenCensus is deprecated, and OpenTelemetry is the merger from OpenCensus and OpenTelemetry and the most recent up-to-date spec.\nPositive Consequences Fix the current state of the traces on Reva. Add more contextual information on a span for a given request. Per-request filtering with the X-Request-Id header. Group the supported tracing backends to support Jaeger only for simplicity. Chosen option approach A trace is a tree, and the proxy will create the root trace and propagate it downstream. The Root trace will log the request headers. The unit that ultimately does the work will log the result of the operation if success. The unit that ultimately does the work will change the state of the span to error if any occurred. With these premises, this is by no means a fixed document and the more we learn about the usage of an instance the more context we can add to the traces.\n","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @mstingl @pmaier1, @fschade Date: 2021-08-17 Context and Problem Statement At the time of this writing we are in a situation where our logs have too much verbosity, rendering impossible or rather difficult to debug an instance. For this reason we are giving some care to our traces by updating dependencies from OpenCensus to OpenTelemetry.\nDecision Drivers We don\u0026rsquo;t want to rely only on logs to debug an instance."},{"id":41,"href":"/ocis/storage/storagedrivers/","title":"Storage drivers","parent":"Storage","content":"A storage driver implements access to a storage system:\nIt maps the path and id based CS3 references to an appropriate storage system specific reference, e.g.:\neos file ids posix inodes or paths deconstructed filesystem nodes Storage providers To manage the file tree oCIS uses storage providers that are accessing the underlying storage using a storage driver. The driver can be used to change the implementation of a storage aspect to better reflect the actual underlying storage capabilities. As an example a move operation on a POSIX filesystem (theoretically) is an atomic operation. When trying to implement a file tree on top of S3 there is no native move operation that can be used. A naive implementation might fall back on a COPY and DELETE. Some S3 implementations provide a COPY operation that uses an existing key as the source, so the file at least does not need to be reuploaded. In the worst case scenario, which is renaming a folder with hundreds of thousands of objects, a reupload for every file has to be made. Instead of hiding this complexity a better choice might be to disable renaming of files or at least folders on S3. There are however implementations of filesystems on top of S3 that store the tree metadata in dedicated objects or use a completely different persistence mechanism like a distributed key value store to implement the file tree aspect of a storage.\nWhile the storage provider is responsible for managing the tree, file up- and downloads are delegated to a dedicated data provider. See below. Storage aspects A lot of different storage technologies exist, ranging from general purpose file systems with POSIX semantics to software defined storage with multiple APIs. Choosing any of them is making a tradeoff decision. Or, if a storage technology is already in place it automatically predetermines the capabilities that can be made available. Not all storage systems are created equal.\nUnfortunately, no POSIX filesystem natively supports all storage aspects that ownCloud 10 requires:\nA hierarchical file tree An important aspect of a filesystem is organizing files and directories in a file hierarchy, or tree. It allows you to create, move and delete nodes. Beside the name a node also has well known metadata like size and mtime that are persisted in the tree as well.\nFolders are not directories There is a difference between folder and directory: a directory is a file system concept. A folder is a metaphor for the concept of a physical file folder. There are also virtual folders or smart folders like the recent files folder which are no file system directories. So, every directory and every virtual folder is a folder, but not every folder is a directory. See the folder metaphor in wikipedia. Also see the activity history below. Id based lookup While traditionally nodes in the tree are reached by traversing the path the tree persistence should be prepared to look up a node by an id. Think of an inode in a POSIX filesystem. If this operation needs to be cached for performance reasons keep in mind that cache invalidation is hard and crawling all files to update the inode to path mapping takes O(n), not O(1).\nETag propagation For the state based sync a client can discover changes by recursively descending the tree and comparing the ETag for every node. If the storage technology supports propagating ETag changes up the tree, only the root node of a tree needs to be checked to determine if a discovery needs to be started and which nodes need to be traversed. This allows using the storage technology itself to persist all metadata that is necessary for sync, without additional services or caches.\nSubtree size accounting The tree can keep track of how many bytes are stored in a folder. Similar to ETag propagation a change in file size is propagated up the hierarchy.\nETag and Size propagation When propagating the ETag (mtime) and size changes up the tree the question is where to stop. If all changes need to be propagated to the root of a storage then the root or busy folders will become a hotspot. There are two things to keep in mind: 1. propagation only happens up to the root of a single space (a user private drive or a single group drive), 2. no cross storage propagation. The latter was used in oc10 to let clients detect when a file in a received shared folder changed. This functionality is moving to the storage registry which caches the ETag for every root so clients can discover if and which storage changed. Rename Depending on the underlying storage technology some operations may either be slow, up to a point where it makes more sense to disable them entirely. One example is a folder rename: on S3 a simple folder rename translates to a copy and delete operation for every child of the renamed folder. There is an exception though: this restriction only applies if the S3 storage is treated like a filesystem, where the keys are the path and the value is the file content. There are smarter ways to implement file systems on top of S3, but again: there is always a tradeoff.\nS3 has no rename Technically, S3 has no rename operation at all. By design, the location of the value is determined by the key, so it always has to do a copy and delete. Another example is the redis RENAME operation: while being specified as O(1) it executes an implicit DEL operation, so if the deleted key contains a very big value it may cause high latency\u0026hellip; Arbitrary metadata persistence In addition to well known metadata like name size and mtime, users might be able to add arbitrary metadata like tags, comments or dublin core. In POSIX filesystems this maps to extended attributes.\nGrant persistence The CS3 API uses grants to describe access permissions. Storage systems have a wide range of permissions granularity and not all grants may be supported by every storage driver. POSIX ACLs for example have no expiry. If the storage system does not support certain grant properties, e.g. expiry, then the storage driver may choose to implement them in a different way. Expiries could be persisted in a different way and checked periodically to remove the grants. Again: every decision is a tradeoff.\nTrash persistence After deleting a node the storage allows listing the deleted nodes and has an undo mechanism for them.\nVersions persistence A user can restore a previous version of a file.\nSnapshots are not versions Modern POSIX filesystems support snapshotting of volumes. This is different from keeping track of versions to a file or folder, but might be another implementation strategy for a storage driver to allow users to restore content. Activity History The storage keeps an activity history, tracking the different actions that have been performed. This does not only include file changes but also metadata changes like renames and permission changes.\nStorage drivers Reva currently has several storage driver implementations that can be used for storage providers as well as data providers.\nOCIS and S3NG Storage Driver The oCIS storage driver is the default storage driver. It decomposes the metadata and persists it in a POSIX filesystem. Blobs are stored on the filesystem as well. The layout makes extensive use of symlinks and extended attributes. A filesystem like xfs or zfs without practical inode size limitations is recommended. We will evolve this to further integrate with file systems like cephfs or gpfs.\nExt4 limits the number of bytes that can be used for extended attribute names and their values to the size of a single block (by default 4k). This reduces the number of shares for a single file or folder to roughly 20-30, as grants have to share the available space with other metadata. The S3NG storage driver uses the same metadata layout on a POSIX storage as the oCIS driver, but it uses S3 as the blob storage.\nTradeoffs ➕ Efficient ID based lookup\n➕ Leverages Kernel VFS cache\n➕ No database needed\n➖ Not intended to be accessed by end users on the server side as it does not reflect a normal filesystem on disk\n➖ Metadata limited by Kernel VFS limits (see below)\nRelated Kernel limits The Decomposed FS currently stores CS3 grants in extended attributes. When listing extended attributes the result is currently limited to 64kB. Assuming a 20 byte uuid a grant has ~40 bytes. Which would limit the number of extended attributes to ~1630 entries or ~1600 shares. This can be extended by moving the grants from extended attributes into a dedicated file and is tracked in ocis/issues/4638.\nFrom Wikipedia on Extended file attributes:\nThe Linux kernel allows extended attribute to have names of up to 255 bytes and values of up to 64 KiB,[14] as do XFS and ReiserFS, but ext2/3/4 and btrfs impose much smaller limits, requiring all the attributes (names and values) of one file to fit in one \u0026ldquo;filesystem block\u0026rdquo; (usually 4 KiB). Per POSIX.1e,[citation needed] the names are required to start with one of security, system, trusted, and user plus a period. This defines the four namespaces of extended attributes.[15]\nAnd from the man page on listxattr:\nAs noted in xattr(7), the VFS imposes a limit of 64 kB on the size of the extended attribute name list returned by listxattr(7). If the total size of attribute names attached to a file exceeds this limit, it is no longer possible to retrieve the list of attribute names.\nLocal Storage Driver The minimal storage driver for a POSIX based filesystem. It literally supports none of the storage aspect other than basic file tree management. Sharing can - to a degree - be implemented using POSIX ACLs.\ntree provided by a POSIX filesystem inefficient path by id lookup, currently uses the file path as id, so ids are not stable can store a uuid in extended attributes and use a cache to look them up, similar to the ownCloud driver no native ETag propagation, five options are available: built in propagation (changes bypassing ocis are not picked up until a rescan) built in inotify (requires 48 bytes of RAM per file, needs to keep track of every file and folder) external inotify (same RAM requirement, but could be triggered by external tools, e.g. a workflow engine) kernel audit log (use the linux kernel audit to capture file events on the storage and offload them to a queue) fuse filesystem overlay no subtree accounting, same options as for ETag propagation efficient rename arbitrary metadata using extended attributes grant persistence using POSIX ACLs requires an LDAP server to make guest accounts available in the OS an existing LDAP could be used if guests ar provisioned in another way using extended attributes to implement expiry or sharing that does not require OS level integration fuse filesystem overlay no native trash could use The FreeDesktop.org Trash specification fuse filesystem overlay no native versions, multiple options possible git for folders rcs for single files rsnapshot for hourly / daily / weekly / monthly backups \u0026hellip; but this is not versioning as known from oc10 design new freedesktop spec, basically what is done in oc10 without the limitations or borrow ideas from the freedesktop trash spec fuse filesystem overlay To provide the other storage aspects we plan to implement a FUSE overlay filesystem which will add the different aspects on top of local filesystems like ext4, btrfs or xfs. It should work on NFSv4 as well, although NFSv4 supports RichACLs and we will explore how to leverage them to implement sharing at a future date. The idea is to use the storages native capabilities to deliver the best user experience. But again: that means making the right tradeoffs.\nEOS Storage Driver The CERN eos storage has evolved with ownCloud and natively supports id based lookup, ETag propagation, subtree size accounting, sharing, trash and versions. To use it you need to change the default configuration of the storage storage-home command (or have a look at the Makefile ̀ eos-start` target):\nexport STORAGE_DRIVER_EOS_NAMESPACE=/eos export STORAGE_DRIVER_EOS_MASTER_URL=\u0026#34;root://eos-mgm1.eoscluster.cern.ch:1094\u0026#34; export STORAGE_DRIVER_EOS_ENABLE_HOME=true export STORAGE_DRIVER_EOS_LAYOUT=\u0026#34;dockertest/{{.Username}}\u0026#34; Running it locally also requires the eos and xrootd binaries. Running it using make eos-start will use CentOS based containers that already have the necessary packages installed.\nPull requests to add explicit storage storage-(s3|custom|...) commands with working defaults are welcome. S3 Storage Driver A naive driver that treats the keys in an S3 capable storage as / delimited path names. While it does not support MOVE or ETag propagation it can be used to read and write files. Better integration with native capabilities like versioning is possible but depends on the Use Case. Several storage solutions that provide an S3 interface also support some form of notifications that can be used to implement ETag propagation.\nData Providers Clients using the CS3 API use an InitiateFileDownload and InitiateUpload request at the storage gateway to obtain a URL endpoint that can be used to either GET the file content or upload content using the resumable tus.io protocol.\nThe data provider uses the same storage driver as the storage provider but can be scaled independently.\nThe dataprovider allows uploading the file to a quarantine area where further data analysis may happen before making the file accessible again. One use case for this is antivirus scanning for files coming from untrusted sources.\nFuture work FUSE overlay filesystem We are planning to further separate the concerns and use a local storage provider with a FUSE filesystem overlaying the actual POSIX storage that can be used to capture deletes and writes that might happen outside of ocis/reva.\nIt would allow us to extend the local storage driver with missing storage aspects while keeping a tree like filesystem that end users are used to see when sshing into the machine.\nUpload to Quarantine area Antivirus scanning of random files uploaded from untrusted sources and executing metadata extraction or thumbnail generation should happen in a sandboxed system to prevent malicious users from gaining any information about the system. By spawning a new container with access to only the uploaded data we can further limit the attack surface.\n","description":"A storage driver implements access to a storage system:\nIt maps the path and id based CS3 references to an appropriate storage system specific reference, e.g.:\neos file ids posix inodes or paths deconstructed filesystem nodes Storage providers To manage the file tree oCIS uses storage providers that are accessing the underlying storage using a storage driver. The driver can be used to change the implementation of a storage aspect to better reflect the actual underlying storage capabilities."},{"id":42,"href":"/ocis/adr/0013-locking/","title":"13. Locking","parent":"Architecture Decisions","content":" Status: accepted Deciders: @hodyroff, @pmaier1, @jojowein, @dragotin, @micbar, @tbsbdr, @wkloucek Date: 2021-11-03 Context and Problem Statement At the time of this writing no locking mechanisms exists in oCIS / REVA for both directories and files. The CS3org WOPI server implements a file based locking in order to lock files. This ADR discusses if this approach is ok for the general availability of oCIS or if changes are needed.\nDecision Drivers Is the current situation acceptable for the GA Is locking needed or can we have oCIS / REVA without locking Considered Options File based locking No locking CS3 API locking Decision Outcome For the GA we chose option 2. Therefore we need to remove or disable the file based locking functionality of the CS3org WOPI server. The decision was taken because the current file based locking does not work on file-only shares. The current locking also does not guarantee exclusive access to a file since other parts of oCIS like the WebDAV API or other REVA services don\u0026rsquo;t respect the locks.\nAfter the GA we need to implement option 3.\nPros and Cons of the Options File based locking The CS3org WOPI server creates a .sys.wopilock.\u0026lt;filename\u0026gt;. and .~lock.\u0026lt;filename\u0026gt;# file when opening a file in write mode\nFile based locking is good, because:\nit is already implemented in the current CS3org WOPI server File based locking is bad, because:\nlock files should be checked by all parties manipulating files (e.g. the WebDAV api) lock files can be deleted by everyone you can not lock files in a file-only share (you need a folder share to create a lock file besides the original file) If we have file based locks, we can also sync them with e.g. the Desktop Client.\nSyncing lock files is good: because\nnative office applications can notice lock files by the WOPI server and vice versa (LibreOffice also creates .lock.\u0026lt;filename\u0026gt;# files) Syncing lock files is bad, because:\nif lockfile is not deleted, no one can edit the file creating lock files in a folder shared with 2000000 users creates a lot of noise and pressure on the server (etag propagation, therefore oC Desktop sync client has an ignore rule for .~lock.* files) No locking We remove or disable the file based locking of the CS3org WOPI server.\nNo locking is good, because:\nyou don\u0026rsquo;t need to release locks overwriting a file just creates a new version of it No locking is bad, because:\nmerging changes from different versions is a pain, since there is no way to calculate differences for most of the files (e.g. docx or xlsx files) no locking breaks the WOPI specs, as the CS3 WOPI server won\u0026rsquo;t be capable to honor the WOPI Lock related operations CS3 API locking Add CS3 API for resource (files, directories) locking, unlocking and checking locks locking always with timeout lock creation is a \u0026ldquo;create-if-not-exists\u0026rdquo; operation locks need to have arbitrary metadata (e.g. the CS3 WOPI server is stateless by storing information on / in the locks) Implement WebDAV locking using the CS3 API Implement Locking in storage drivers Change CS3 WOPI server to use CS3 API locking mechanism Optional: manual lock / unlock in ownCloud Web (who is allowed to unlock locks of another user?) CS3 API locking is good, because:\nyou can lock files on the actual storage (if the storage supports that -\u0026gt; storage driver dependent) you can lock files in ownCloud 10 when using the ownCloudSQL storage driver in the migration deployment (but oC10 Collabora / OnlyOffice also need to implement locking, to fully leverage that) clients can get the lock information via the api without ignoring / hiding lock file changes clients can use the lock information to lock the file in their context (e.g. via some file explorer integration) CS3 API locking is bad, because:\nit needs to be defined and implemented, currently not planned for the GA ","description":"Status: accepted Deciders: @hodyroff, @pmaier1, @jojowein, @dragotin, @micbar, @tbsbdr, @wkloucek Date: 2021-11-03 Context and Problem Statement At the time of this writing no locking mechanisms exists in oCIS / REVA for both directories and files. The CS3org WOPI server implements a file based locking in order to lock files. This ADR discusses if this approach is ok for the general availability of oCIS or if changes are needed.\nDecision Drivers Is the current situation acceptable for the GA Is locking needed or can we have oCIS / REVA without locking Considered Options File based locking No locking CS3 API locking Decision Outcome For the GA we chose option 2."},{"id":43,"href":"/ocis/adr/0014-microservices-runtime/","title":"14. Microservices Runtime","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @mstingl @pmaier1, @fschade Date: 2022-01-21 Context and Problem Statement In an environment where shipping a single binary makes it easier for the end user to use oCIS, embedding a whole family of microservices within a package and running it leveraging the use of the Go language has plenty of value. In such environment, a runtime is necessary to orchestrate the services that run within it. Other solutions are hot right now, such as Kubernetes, but for a single deployment this entails orbital measures.\nDecision Drivers Start oCIS microservices with a single command (ocis server). Clear separation of concerns between services. Control the lifecycle of the running services. Services can be distributed across multiple machines and still be controllable somehow. Considered Options 1.The use of frameworks such as:\nasim/go-micro go-kit/kit Build and synchronize all services in-house. A hybrid solution between framework and in-house. Options go-kit/kit Pros\nLarge community behind The creator is a maintainer of Go, so the code quality is quite high. Cons\nToo verbose. Ultimately too slow to make progress. Implementing a service would require defining interfaces and a lot of boilerplate. asim/go-micro Pros\nImplementation based in swappable interfaces. Multiple implementations, either in-memory or through external services Production ready Good compromise between high and low level code. Decision Outcome Number 3: A hybrid solution between framework and in-house.\nDesign First of, every ocis service IS a go-micro service, and because go-micro makes use of urfave/cli, a service can be conveniently wrapped inside a subcommand. Writing a supervisor is then a choice. We do use a supervisor to ensure long-running processes and embrace the \u0026ldquo;let it crash\u0026rdquo; mentality. The piece we use for this end is called Suture.\nThe code regarding the runtime can be found pretty isolated here. The runtime itself runs as a service. This is done so messages can be sent to it using the oCIS single binary to control the lifecycle of its services.\n","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @mstingl @pmaier1, @fschade Date: 2022-01-21 Context and Problem Statement In an environment where shipping a single binary makes it easier for the end user to use oCIS, embedding a whole family of microservices within a package and running it leveraging the use of the Go language has plenty of value. In such environment, a runtime is necessary to orchestrate the services that run within it."},{"id":44,"href":"/ocis/adr/0015-events/","title":"15. oCIS Event System","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @c0rby, @wkloucek Date: 2022-01-21 Context and Problem Statement Overview To be able to implement simple, flexible and independent inter service communication there is the idea to implement an event system in oCIS. A service can send out events which are received by one or more other services. The receiving service can cause different kinds of actions based on the event by utilizing the information that the event carries.\nExample: Email Notification A simple example is the notification feature for oCIS: Users should receive an email when another user shares a file with them. The information, that the file was shared should go out as an event from a storage provider or share manager, carrying the information which file was shared to which receiver. A potential notification service that sends out the email listens to these kinds of events and sends the email out once on every received event of that specific type.\nDecision Drivers Events are supposed to decouple services and raise flexibility, also considering extensions that are not directly controlled by the ownCloud project. Events should bring flexibility in the implementation of sending and receiving services. Events should not obsolete other mechanisms to communicate, i.e. grpc calls. Sending an event has to be as little resource consuming for the sender as possible. Events are never user visible. Considered Options Lightweight Events with Event Queue and \u0026ldquo;At most once\u0026rdquo; QoS As 1., but with \u0026ldquo;At least once\u0026rdquo; QoS Options 1. Lightweight Events with Event Queue and \u0026ldquo;At most once\u0026rdquo; QoS Reva will get a messaging service that is available to all services within oCIS and Reva. It is considered as one of the mandatory services of the oCIS system. If the messaging backend is not running, neither Reva nor oCIS can be considered healthy and should shut down.\nAll oCIS- and Reva-services can connect to the messaging bus and send so-called events. The sender gets an immediate return if handing the event to the message bus was successful or not.\nThe sender can not make any assumptions when the message is delivered to any receiving service. Depending on the QoS model (as proposed as alternatives in this ADR) it might even be not guaranteed that the event is delivered at all. Also, the sender can not know if zero, one or many services are listening to that event.\nEvent Data Events are identified by their namespace and their respective name. The namespace is delimited by dots and starts with either \u0026ldquo;reva\u0026rdquo; or \u0026ldquo;ocis\u0026rdquo; or a future extension name. It is followed by the name of the sending service and an unique name of the event.\nExample: ocis.ocdav.delete - an event with that name sent out if an WebDAV DELETE request arrived in the oCDav service.\nAn event can carry a payload which is encoded as json object. (See for example NATS ). There are no pre-defined members in that object, it is fully up to the sender which data will be included in the payload. Receivers must be robust to deal with changes.\nQuality of Service Events are sent with \u0026ldquo;At most once\u0026rdquo; quality of service. That means, if a receiver is not present at the moment of publishing it might not receive the event. That requires that the sender and the receiver must have functionality to back up the situation that events were missed. That adds more state to the services because they always need to behave like a FISM. Given that the event queue can be considered the backbone of the system, it is unlikely that it is not running.\nTransactions The described way of inter service communication with events is not transactional. It is not supposed to be, but only provides a lightweight, loosely coupled way to \u0026ldquo;inform\u0026rdquo;.\nIf transactions are required, proper synchronous GRPC API calls should be used. Another way would be to build asynchronous flows with request- and reply events as in saga pattern. That is only recommended for special cases.\nPros Simple setup Flexible way of connecting services Stateless event queue \u0026ldquo;State of the art\u0026rdquo; pattern in microservices architectures Cons Over engineering: Can we do without an extra message queue component? Messages might get lost, so that eventual consistency is endangered A service needs to hold more state to ensure consistency Message queue needs to be implemented in Reva 2. Lightweight Events with Event Queue and \u0026ldquo;At-least once\u0026rdquo; QoS Exactly as described above, but with a higher service level quality.\nQuality of Service Events are sent with \u0026ldquo;At least once\u0026rdquo; quality of service. That means the events will remain in the queue until they are received by all receivers. This puts more responsibility on the event bus and adds state to the events. Given that the event queue can be considered the backbone of the system, it is required to be running.\nPros Better service level: Messages do not get lost Simplifies the design of the microservices because the events are \u0026ldquo;fire-and-forget\u0026rdquo; Events would be idempotent. If a service goes down the events will stay in the queue until they are consumed Cons Stateful event system with higher cost in terms of compute and storage The queue could become a bottleneck and needs to be scaled Decision Outcome Design ","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @c0rby, @wkloucek Date: 2022-01-21 Context and Problem Statement Overview To be able to implement simple, flexible and independent inter service communication there is the idea to implement an event system in oCIS. A service can send out events which are received by one or more other services. The receiving service can cause different kinds of actions based on the event by utilizing the information that the event carries."},{"id":45,"href":"/ocis/adr/","title":"Architecture Decisions","parent":"oCIS - ownCloud Infinite Scale","content":"oCIS is documenting architecture decisions using Markdown Architectural Decision Records (MADR), following Documenting Architecture Decisions by Michael Nygard.\nTo manage the records we use butonic/adr-tools, a fork of the original npryce/adr-tools, based on a pull request that should have added MADR support. It also supports a YAML header that is used by our Hugo based doc generation\n","description":"oCIS is documenting architecture decisions using Markdown Architectural Decision Records (MADR), following Documenting Architecture Decisions by Michael Nygard.\nTo manage the records we use butonic/adr-tools, a fork of the original npryce/adr-tools, based on a pull request that should have added MADR support. It also supports a YAML header that is used by our Hugo based doc generation"},{"id":46,"href":"/ocis/development/getting-started/","title":"Getting Started","parent":"Development","content":" Requirements Repository structure Starting points Developing oCIS Developing extensions Requirements We want contribution to oCIS and the creation of extensions to be as easy as possible. So we are trying to reflect this in the tooling. It should be kept simple and quick to be set up.\nBesides standard development tools like git and a text editor, you need the following software for development:\nGo \u0026gt;= v1.22 (install instructions) pnpm (install instructions) docker (install instructions) docker-compose (install instructions) If you find tools needed besides the mentioned above, please feel free to open an issue or open a PR.\nRepository structure oCIS consists of multiple microservices, also called extensions. We started by having standalone repositories for each of them, but quickly noticed that this adds a time-consuming overhead for developers. So we ended up with a monorepo housing all the extensions in one repository.\nEach extension lives in a subfolder (e.g. accounts or settings) within this repository as an independent Go module, following the golang-standard project-layout. They have common Makefile targets and can be used to change, build and run individual extensions. This allows us to version and release each extension independently.\nThe ocis folder contains our go-micro and suture based runtime. It is used to import all extensions and implements commands to manage them, similar to a small orchestrator. With the resulting oCIS binary you can start single extensions or even all extensions at the same time.\nThe docs folder contains the source for the oCIS documentation.\nThe deployments folder contains documented deployment configurations and templates. On a single node, running a single ocis runtime is a resource efficient way to deploy ocis. For multiple nodes docker compose or helm charts for kubernetes examples can be found here.\nThe scripts folder contains scripts to perform various build, install, analysis, etc. operations.\nStarting points Depending on what you want to develop there are different starting points. These will be described below.\nDeveloping oCIS If you want to contribute to oCIS:\nsee contribution guidelines make sure the tooling is set up by building oCIS and building the docs create or pick an open issue to develop on and mention in the issue that you are working on it open a PR and get things done Developing extensions If you want to develop an extension, start here: Extensions\n","description":"Requirements Repository structure Starting points Developing oCIS Developing extensions Requirements We want contribution to oCIS and the creation of extensions to be as easy as possible. So we are trying to reflect this in the tooling. It should be kept simple and quick to be set up.\nBesides standard development tools like git and a text editor, you need the following software for development:\nGo \u0026gt;= v1.22 (install instructions) pnpm (install instructions) docker (install instructions) docker-compose (install instructions) If you find tools needed besides the mentioned above, please feel free to open an issue or open a PR."},{"id":47,"href":"/ocis/storage/namespaces/","title":"Namespaces","parent":"Storage","content":"A namespace is a set of paths with a common prefix. Depending on the endpoint you are talking to you will encounter a different kind of namespace: In ownCloud 10 all paths are considered relative to the users home. The CS3 API uses a global namespace and the storage providers use a local namespace with paths relative to the storage providers root.\nThe different paths in the namespaces need to be translated while passing references from service to service. While the oc10 endpoints all work on paths we internally reference shared resources by id, so the shares don\u0026rsquo;t break when a file is renamed or moved inside a storage space. The following table lists the various namespaces, paths and id based references:\noc10 namespace CS3 global namespace storage provider reference content /webdav/path/to/file.ext /dav/files/\u0026lt;username\u0026gt;/path/to/file.ext /home/path/to/file.ext home /\u0026lt;user_layout\u0026gt;/path/to/file.ext currently logged in users home /webdav/Shares/foo /dav/files/\u0026lt;username\u0026gt;/Shares/foo /home/Shares/foo users id based access all users, used to access collaborative shares /dav/public-files/\u0026lt;token\u0026gt;/rel/path/to/file.ext /public/\u0026lt;token\u0026gt;/rel/path/to/file.ext public id based access publicly shared files, used to access public links oCIS currently is configured to jail users into the CS3 /home namespace in the oc10 endpoints to mimic ownCloud 10. CernBox has been exposing a global namespace on /webdav for years already. The ocs service returns urls that are relative to the CS3 global namespace which makes both scenarios work, but only one of them at a time. Which is why the testsuite hiccups when trying to Allow full paths targets in reva#1605. In the global CS3 namespaces we plan to move /home/Shares, which currently lists all mounted shares of the currently logged-in user to a dedicated /shares namespace. See below and Move shares folder out from home directory to a separate mount reva#1584. ownCloud namespaces In contrast to the global namespace of CS3, ownCloud always presented a user specific namespace on all endpoints. It will always list the users private files under /. Shares can be mounted at an arbitrary location in the users private spaces. See the webdav and ocs sections for more details end examples.\nWith the spaces concept we are planning to introduce a global namespace to the ownCloud webdav endpoints. This will push the users private space down in the hierarchy: it will move from /webdav to /webdav/home or /webdav/users/\u0026lt;username\u0026gt;. The related migration stages are subject to change.\nCS3 global namespaces The CS3 global namespace in oCIS is configured in the storage spaces registry. oCIS uses these defaults:\nglobal namespace description /home an alias for the currently logged in uses private space /users/\u0026lt;user_layout\u0026gt; user private spaces /shares a virtual listing of share spaces a user has access to /public/\u0026lt;token\u0026gt; a virtual folder listing public shares /spaces/\u0026lt;spacename\u0026gt; TODO: project or group spaces Technically, the /home namespace is not necessary: the storage spaces registry knows the path to a users private space in the /users namespace and the gateway can forward the requests to the responsible storage provider.\n*@jfd: Why don\u0026rsquo;t we use /home/\u0026lt;user_layout\u0026gt; instead of /users/\u0026lt;user_layout\u0026gt;. Then the paths would be consistent with most unix systems. The /shares namespace is used to solve two problems:\nTo query all shares the current user has access to the share manager can be used to list the resource ids. While the shares can then be navigated by resource id, they will return the relative path in the actual storage provider, leaking parent folders of the shared resource. When accepting a remote share e.g., for OCM the resource does not exist on the local instance. They are made accessible in the global namespace under the /shares namespace. @jfd: Should we split /shares into /collaborations, /ocm and /links? We also have /public which uses token based authentication. They may have different latencies or polling strategies? Well, I guess we can cache them differently regardless of the mount point. Browser URLs vs API URLs In ownCloud 10 you can not only create public links but also private links. Both can be copy pasted into an email or chat to grant others access to a file. Most often though, end users will copy and paste the URL from their browsers location bar.\nURL description https://demo.owncloud.com/apps/files/?dir=/Photos/Vacation\u0026fileid=24 The normal browser URL https://demo.owncloud.com/apps/files/?fileid=24 the dir is actually not used to find the directory and will be filled when pasting this URL https://demo.owncloud.com/f/24 private links are the shortened version of this and work in the same way https://demo.owncloud.com/s/piLdAAt1m3Bg0Fk public link The dir parameter alone cannot be used to look up the directory, because the path for a file may be different depending on the currently logged-in user:\nUser A shares his /path/to/Photos with User X. User B shares his /other/path/to/Photos with User X and Y. User A shares his /path/to/Photos with User Y. (Depending on the order in which they accept the shares) X and Y now have two folders /shares/Photos and /shares/Photos (1). But if they were to copy paste a link with that path in the URL and if the directory were only looked up by path X and Y would end up in different folders.\nYou could argue that the path should always use a global path in the CS3 namespace:\nUser A shares his /users/a/path/to/Photos with User X. User B shares his /users/b/other/path/to/Photos with User X and Y. User A shares his /users/a/path/to/Photos with User Y. By using a global path like this X and Y would always end up in the correct folder. However, there are two caveats:\nThis only works for resources that reside on the instance (because only they have unique and global path). Shares from other instances need to be identified by id, or they cannot be uniquely addressed User A may not want to leak path path/to segments leading to Photos. They might contain things like low-priority or personal data. That is the reason why URLs always have to contain some kind of stable identifier. By introducing the concept of storage spaces and treating user homes, project drives and shares we can create a URL that contains an identifier for the storage space and a path relative to the root of it.\nIn ocis we will unify the way links sharing works, however there will always be at least two types of URLs:\nthe URL you see in the browsers location bar, and the URL that a client uses to actually access a file. ","description":"A namespace is a set of paths with a common prefix. Depending on the endpoint you are talking to you will encounter a different kind of namespace: In ownCloud 10 all paths are considered relative to the users home. The CS3 API uses a global namespace and the storage providers use a local namespace with paths relative to the storage providers root.\nThe different paths in the namespaces need to be translated while passing references from service to service."},{"id":48,"href":"/ocis/adr/0016-files-metadata/","title":"16. Storage for Files Metadata","parent":"Architecture Decisions","content":" Status: superseded by ADR-0024 Deciders: @butonic, @dragotin, @micbar, @c0rby Date: 2022-02-04 Context and Problem Statement In addition to the file content we need to store metadata which is attached to a file. Metadata describes additional properties of a file. These properties need to be stored as close as possible to the file content to avoid inconsistencies. Metadata are key to workflows and search. We consider them as an additional value which enhances the file content.\nDecision Drivers Metadata will become more important in the future Metadata are key to automated data processing Metadata storage should be as close as possible to the file content Metadata should be always in sync with the file content Considered Options Database Extended file attributes Metadata file next to the file content Linked metadata in separate file Decision Outcome Chosen option: \u0026ldquo;Extended File Attributes\u0026rdquo;, because we guarantee the consistency of data and have arbitrary simple storage mechanism.\nPositive Consequences Metadata is always attached to the file itself We can store arbitrary key/values No external dependencies are needed Negative consequences The storage inside extended file attributes has limits Changes to extended attributes are not atomic and need file locks Pros and Cons of the Options Database or Key-Value Store Use a Database or an external key/value store to persist metadata.\nGood, because it scales well Good, because databases provide efficient lookup mechanisms Bad, because the file content and the metadata could run out of sync Bad, because a storage backup doesn\u0026rsquo;t cover the file metadata Extended File Attributes Extended File Attributes allow storing arbitrary properties. There are 4 namespaces user, system, trusted and security. We can safely use the user namespace. An example attribute name would be user.ocis.owner.id. The linux kernel has length limits on attribute names and values.\nFrom Wikipedia on Extended file attributes:\nThe Linux kernel allows extended attribute to have names of up to 255 bytes and values of up to 64 KiB,[14] as do XFS and ReiserFS, but ext2/3/4 and btrfs impose much smaller limits, requiring all the attributes (names and values) of one file to fit in one “filesystem block” (usually 4 KiB). Per POSIX.1e,[citation needed] the names are required to start with one of security, system, trusted, and user plus a period. This defines the four namespaces of extended attributes.\nGood, because metadata is stored in the filesystem Good, because consistency is easy to maintain Good, because the data is attached to the file and survives file operations like copy and move Good, because a storage backup also covers the file metadata Bad, because we could hit the filesystem limit Bad, because changes to extended attributes are not atomic Metadata File We could store metadata in a metadata file next to the file content which has a structured content format like .json, .yaml or .toml. That would give us more space to store bigger amounts of metadata.\nGood, because there are no size limits Good, because there is more freedom to the content format Good, because a storage backup also covers the file metadata Bad, because it doubles the amount of read / write operations Bad, because it needs additional measures against concurrent overwriting changes Link metadata with an id in the extended attributes To link metadata to file content a single extended attribute with a file id (unique per storage space) is sufficient. This would also allow putting metadata in better suited storage systems like SQLite or a key value store.\nGood, because it avoids extended attribute limits Good, because the same mechanism could be used to look up files by id, when the underlying filesystem is an existing POSIX filesystem. Bad, because backup needs to cover the metadata as well. Could be mitigated by sharing metadata per space and doing space wide snapshots. Bad, because it is a bit more effort to access it to read or index it. ","description":"Status: superseded by ADR-0024 Deciders: @butonic, @dragotin, @micbar, @c0rby Date: 2022-02-04 Context and Problem Statement In addition to the file content we need to store metadata which is attached to a file. Metadata describes additional properties of a file. These properties need to be stored as close as possible to the file content to avoid inconsistencies. Metadata are key to workflows and search. We consider them as an additional value which enhances the file content."},{"id":49,"href":"/ocis/deployment/systemd/","title":"Systemd service","parent":"Deployment","content":" Install the oCIS binary Systemd service definition Starting the oCIS service Install the oCIS binary Download the oCIS binary of your preferred version and for your CPU architecture and operating system from download.owncloud.com.\nRename the downloaded binary to ocis and move it to /usr/bin/. As a next step, you need to mark it as executable with chmod +x /usr/bin/ocis.\nWhen you now run ocis help on your command line, you should see the available options for the oCIS command.\nSystemd service definition Create the Systemd service definition for oCIS in the file /etc/systemd/system/ocis.service with following content:\n[Unit] Description=OCIS server [Service] Type=simple User=root Group=root EnvironmentFile=/etc/ocis/ocis.env ExecStart=ocis server Restart=always [Install] WantedBy=multi-user.target For reasons of simplicity we are using the root user and group to run oCIS which is not recommended. Please use a non-root user in production environments and modify the oCIS service definition accordingly. In the service definition we referenced /etc/ocis/ocis.env as our file containing environment variables for the oCIS process. In order to create the file we need first to create the folder /etc/ocis/ and then we can add the actual /etc/ocis/ocis.env with following content:\nOCIS_URL=https://some-hostname-or-ip:9200 PROXY_HTTP_ADDR=0.0.0.0:9200 OCIS_INSECURE=false OCIS_LOG_LEVEL=error OCIS_CONFIG_DIR=/etc/ocis OCIS_BASE_DATA_PATH=/var/lib/ocis Since we set OCIS_CONFIG_DIR to /etc/ocis you can also place configuration files in this directory.\nPlease change your OCIS_URL in order to reflect your actual deployment. If you are using self-signed certificates you need to set OCIS_INSECURE=true in /etc/ocis/ocis.env.\noCIS will store all data in /var/lib/ocis, because we configured it so by setting OCIS_BASE_DATA_PATH. Therefore you need to create that directory and make it accessible to the user, you use to start oCIS.\nStarting the oCIS service Initialize the oCIS configuration by running ocis init --config-path /etc/ocis.\nYou can enable oCIS now by running systemctl enable --now ocis. It will ensure that oCIS also is restarted after a reboot of the host.\nIf you need to restart oCIS because of configuration changes in /etc/ocis/ocis.env, run systemctl restart ocis.\nYou can have a look at the logs of oCIS by issuing journalctl -f -u ocis.\n","description":"Install the oCIS binary Systemd service definition Starting the oCIS service Install the oCIS binary Download the oCIS binary of your preferred version and for your CPU architecture and operating system from download.owncloud.com.\nRename the downloaded binary to ocis and move it to /usr/bin/. As a next step, you need to mark it as executable with chmod +x /usr/bin/ocis.\nWhen you now run ocis help on your command line, you should see the available options for the oCIS command."},{"id":50,"href":"/ocis/deployment/basic-remote-setup/","title":"Basic Remote Setup","parent":"Deployment","content":" Start the oCIS fullstack server from binary Using automatically generated certificates Using already present certificates Start the oCIS fullstack server with Docker Compose The default configuration of the oCIS binary and the owncloud/ocis docker image assume, that you access oCIS on localhost. This enables you to do quick testing and development without any configuration.\nIf you need to access oCIS running in a docker container, on a VM or a remote machine via another hostname than localhost, you need to configure this hostname in oCIS. The same applies if you are not using hostnames but instead an IP (e.g. 192.168.178.25).\nStart the oCIS fullstack server from binary Initialize the oCIS configuration by running ./bin/ocis init.\nUpon first start of the oCIS fullstack server with ./bin/ocis server it will generate a directory tree skeleton in $HOME/.ocis. If that is already existing it will not be overwritten as it contains all relevant data for oCIS.\nFor the following examples you need to have the oCIS binary in your current working directory, we assume it is named ocis and it needs to be marked as executable. See Getting Started for where to get the binary from.\nUsing automatically generated certificates In order to run oCIS with automatically generated and self-signed certificates please execute following command. You need to replace your-host with an IP or hostname. Since you have only self-signed certificates you need to have OCIS_INSECURE set to true.\nOCIS_INSECURE=true \\ PROXY_HTTP_ADDR=0.0.0.0:9200 \\ OCIS_URL=https://your-host:9200 \\ ./ocis server Using already present certificates If you have your own certificates already in place, you may want to make oCIS use them:\nOCIS_INSECURE=false \\ PROXY_HTTP_ADDR=0.0.0.0:9200 \\ OCIS_URL=https://your-host:9200 \\ PROXY_TRANSPORT_TLS_KEY=./certs/your-host.key \\ PROXY_TRANSPORT_TLS_CERT=./certs/your-host.crt \\ ./ocis server If you generated these certificates on your own, you might need to set OCIS_INSECURE to true.\nFor more configuration options check the configuration section in oCIS and the oCIS services.\nStart the oCIS fullstack server with Docker Compose Please have a look at our other deployment examples.\n","description":"Start the oCIS fullstack server from binary Using automatically generated certificates Using already present certificates Start the oCIS fullstack server with Docker Compose The default configuration of the oCIS binary and the owncloud/ocis docker image assume, that you access oCIS on localhost. This enables you to do quick testing and development without any configuration.\nIf you need to access oCIS running in a docker container, on a VM or a remote machine via another hostname than localhost, you need to configure this hostname in oCIS."},{"id":51,"href":"/ocis/adr/0017-allow-read-only-external-user-management/","title":"17. Allow read only external User Management","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @rhafer Date: 2022-02-08 Context and Problem Statement oCIS needs to be integrated with various external Authentication and Identity Management Systems. Usually oCIS will have no administrative access to such a system and we will not be allowed to reconfigure it to suit our needs (e.g. we will not be able to enhance the schema of an already existing LDAP Directory). In most of the cases our access will be read-only.\nSidenote: There is a difference between users, identities and accounts: A user may have multiple identities which he can authenticate with, e.g. his facebook, twitter, microsoft or google identity. Multiple identities can be linked to an account in ocis, allowing to fall back to another identity provider should one of them shut down. This also allows migrating from one identity provider to another.\nThere are different cases where oCIS requires access to users:\nWhile we settled on using OpenID Connect (OIDC) as the authentication protocol for oCIS, we need to build a user object during authentication with at least an account UUID (to identify the account) and the email or a name (for display purposes). When searching for share recipients we need to be able to query existing users in the external identity management system When listing files we need to be able to look up a users display properties (username, email, avatar\u0026hellip;) based on the account UUID oCIS internally relies on a stable and persistent identifier (e.g. a UUID) for accounts in order to implement permissions and sharing. Unfortunately, some deployments are unable to deliver this kind of stable identifier for users:\nIn OIDC itself the only stable identifier that is guaranteed to be provided by the IDP is combination of the sub and iss claims. IDPs can optionally return other claims, but we cannot rely on a specific claim being present. When no other services (LDAP, SCIM, \u0026hellip;) are available that could be used look up a user UUID Decision Drivers oCIS should be a single binary that can run out of the box without external dependencies like an LDAP server. Time: we want to build a release candidate asap. oCIS should be easy to integrate with standard external identity management systems Considered Options There are two case to consider:\nExternal identity management system provides an OIDC IdP and an interface to query users External identity management system provides just an OIDC IdP with no possibility to query users Decision Outcome It\u0026rsquo;s not really possible single out any of the options for this ADR. In the end we will likely need to support both scenarios.\nPositive Consequences: Very flexible integration with a wide range of external systems Negative consequences: configuration complexity, high support efforts Increasingly complex code in oCIS Pros and Cons of the Options External identity management system is read only and provides an interface to query users (e.g. Corporate Active Directory) IdP sends sub \u0026amp; iss and mail or username claims, Identity Management System provides APIs (e.g. LDAP, SCIM, REST \u0026hellip;) to lookup additional user information. All oCIS services use the CS3 API to look up the account for the given email or username, where CS3 then uses a backend that relies on the APIs provided by the IdM.\nGood, because we can rely on the external identity management Good, because ocis services only need to know about the CS3 user provider API, which acts as an abstraction layer for different identity management systems Good, because there is only a single source of truth (the external IdM) and we don\u0026rsquo;t need to implement a synchronization mechanism to maintain an internal user database (we will likely need some form of caching though, see below) Bad, because the identity management needs to provide a stable, persistent, non-reassignable user identifier for an account, e.g. owncloudUUID or ms-DS-ConsistencyGuid Bad, because we need to implement tools that can change the account id when it did change anyway Bad, because without caching we will hammer the identity management system with lookup requests External identity management system is read only and does NOT provide an API to query users Idp sends sub \u0026amp; iss and mail or username claims. We need to provision an internal account mapping, creating a unique ID, upon the first login of a user to be able to look up user properties by account id.\nGood, because this has very little external requirements Good, because we have accounts fully under our control Bad, because we have to provide the user lookup APIs Bad, because users will only a visible after the first login Bad, because our internal account mapping might get out of date when user attribute (e.g. name or mail) change. At least until the next time that user logs in Links [Link type] [Link to ADR] … supersedes 3. Use external User Management ","description":"Status: proposed Deciders: @butonic, @micbar, @rhafer Date: 2022-02-08 Context and Problem Statement oCIS needs to be integrated with various external Authentication and Identity Management Systems. Usually oCIS will have no administrative access to such a system and we will not be allowed to reconfigure it to suit our needs (e.g. we will not be able to enhance the schema of an already existing LDAP Directory). In most of the cases our access will be read-only."},{"id":52,"href":"/ocis/storage/users/","title":"Users","parent":"Storage","content":"TODO add this to the storage overview? or is this a different part? That should be started as a separate service ? And documented elsewhere, e.g. in the accounts?\nUser and Group provisioning In oc10 users are identified by a username, which cannot change, because it is used as a foreign key in several tables. For oCIS we are internally identifying users by a UUID, while using the username in the WebDAV and OCS APIs for backwards compatability. To distinguish this in the URLs we are using \u0026lt;username\u0026gt; instead of \u0026lt;userid\u0026gt;. You may have encountered \u0026lt;user_layout\u0026gt;, which refers to a template that can be configured to build several path segments by filling in user properties, e.g. the first character of the username ({{substr 0 1 .Username}}/{{.Username}}), the identity provider ({{.Id.Idp}}/{{.Username}}) or the email ({{.Mail}})\nMake no mistake, the OCS Provisioning API uses userid while it actually is the username, because it is what you use to login. We are currently working on adding user management through the CS3 API to handle user and group provisioning (and deprovisioning).\nDemo driver This is a simple user driver for testing. It contains three users:\neinstein:relativity marie:radioactivity richard:superfluidity In order to use the demo driver you need to export the relevant environment variable:\nexport STORAGE_USERS_DRIVER=demo JSON driver In order to switch from the ldap driver to JSON based users you need to export the relevant environment variables:\nexport STORAGE_USERS_DRIVER=json export STORAGE_USERS_JSON=/path/to/users.json For the format of the users.json have a look at the reva examples\nLDAP driver This is the default user driver.\nIf the following defaults don\u0026rsquo;t match your environment then change them accordingly:\nexport STORAGE_LDAP_HOSTNAME=localhost export STORAGE_LDAP_PORT=9126 export STORAGE_LDAP_BASE_DN=\u0026#39;dc=ocis,dc=test\u0026#39; export STORAGE_LDAP_USER_FILTER=\u0026#39;(\u0026amp;(objectclass=posixAccount)(cn=%s))\u0026#39; export STORAGE_LDAP_GROUP_FILTER=\u0026#39;(\u0026amp;(objectclass=posixGroup)(cn=%s))\u0026#39; export STORAGE_LDAP_BIND_DN=\u0026#39;cn=reva,ou=sysusers,dc=ocis,dc=test\u0026#39; export STORAGE_LDAP_BIND_PASSWORD=reva export STORAGE_LDAP_USER_SCHEMA_UID=uid export STORAGE_LDAP_USER_SCHEMA_MAIL=mail export STORAGE_LDAP_USER_SCHEMA_DISPLAYNAME=sn export STORAGE_LDAP_USER_SCHEMA_CN=cn Then restart the bin/storage users and bin/storage auth-basic services for the changes to take effect.\n","description":"TODO add this to the storage overview? or is this a different part? That should be started as a separate service ? And documented elsewhere, e.g. in the accounts?\nUser and Group provisioning In oc10 users are identified by a username, which cannot change, because it is used as a foreign key in several tables. For oCIS we are internally identifying users by a UUID, while using the username in the WebDAV and OCS APIs for backwards compatability."},{"id":53,"href":"/ocis/storage/terminology/","title":"Terminology","parent":"Storage","content":"Communication is hard. And clear communication is even harder. You may encounter the following terms throughout the documentation, in the code or when talking to other developers. Just keep in mind that whenever you hear or read storage, that term needs to be clarified, because on its own it is too vague. PR welcome.\nLogical concepts Resources A resource is the basic building block that oCIS manages. It can be of different types:\nan actual file a container, e.g. a folder or bucket a symlink, or a reference which can point to a resource in another storage provider References A reference identifies a resource. A CS3 reference can carry a path and a CS3 resource id. The references come in two flavors: absolute and combined. Absolute references have either the path or the resource id set:\nAn absolute path MUST start with a /. The resource id MUST be empty. An absolute resource id uniquely identifies a resource and is used as a stable identifier for sharing. The path MUST be empty. Combined references have both, path and resource id set: the resource id identifies the root resource the path is relative to that root. It MUST start with . References A reference is a logical concept that identifies a resource. A CS3 reference consists of either\na path based reference, used to identify a resource in the namespace of a storage provider. It must start with a /. a CS3 id based reference, uniquely identifying a resource in the namespace of a storage provider. It consists of a storage provider id and an opaque id. The storage provider id must NOT start with a /. The / is important because currently the static storage registry uses a map to look up which storage provider is responsible for the resource. Paths must be prefixed with / so there can be no collisions between paths and storage provider ids in the same map. Storage Drivers A storage driver implements access to a storage system:\nIt maps the path and id based CS3 references to an appropriate storage system specific reference, e.g.:\neos file ids posix inodes or paths deconstructed filesystem nodes Proposed Change iOS clients can only queue single requests to be executed in the background. The queue an upload and need to be able to identify the uploaded file after it has been uploaded to the server. The disconnected nature of the connection might cause workflows or manual user interaction with the file on the server to move the file to a different place or changing the content while the device is offline. However, on the device users might have marked the file as favorite or added it to other iOS specific collections. To be able to reliably identify the file the client can generate a uuid and attach it to the file metadata during the upload. While it is not necessary to look up files by this uuid having a second file id that serves exactly the same purpose as the file id is redundant.\nAnother aspect for the file id / uuid is that it must be a logical identifier that can be set, at least by internal systems. Without a writeable fileid we cannot restore backups or migrate storage spaces from one storage provider to another storage provider.\nTechnically, this means that every storage driver needs to have a map of a uuid to in internal resource identifier. This internal resource identifier can be\nan eos fileid, because eos can look up files by id an inode if the filesystem and the storage driver support looking up by inode a path if the storage driver has no way of looking up files by id. In this case other mechanisms like inotify, kernel audit or a fuse overlay might be used to keep the paths up to date. to prevent excessive writes when deep folders are renamed a reverse map might be used: it will map the uuid to \u0026lt;parentuuid\u0026gt;:\u0026lt;childname\u0026gt;, allowing to trade writes for reads Storage Providers Technical concepts Storage Systems A storage provider manages multiple storage spaces by accessing a storage system with a storage driver.\nStorage Space Registries A storage spaces registry manages the namespace for a user\nStorage Spaces A storage space is a logical concept: It is a tree of resourcesresources with a single owner (user or group), a quota and permissions, identified by a storage space id.\nExamples would be every user\u0026rsquo;s home storage space, project storage spaces or group storage spaces. While they all serve different purposes and may or may not have workflows like antivirus scanning enabled, we need a way to identify and manage these subtrees in a generic way. By creating a dedicated concept for them this becomes easier and literally makes the codebase cleaner. A storage space registry then allows listing the capabilities of storage spaces, e.g. free space, quota, owner, syncable, root etag, upload workflow steps, \u0026hellip;\nFinally, a logical storage space id is not tied to a specific storage provider. If the storage driver supports it, we can import existing files including their file id, which makes it possible to move storage spaces between storage providers to implement storage classes, e.g. with or without archival, workflows, on SSDs or HDDs.\nShares To be clarified: we are aware that storage spaces may be too \u0026lsquo;heavyweight\u0026rsquo; for ad hoc sharing with groups. That being said, there is no technical reason why group shares should not be treated like storage spaces that users can provision themselves. They would share the quota with the users home storage space and the share initiator would be the sole owner. Technically, the mechanism of treating a share like a new storage space would be the same. This obviously also extends to user shares and even file individual shares that would be wrapped in a virtual collection. It would also become possible to share collections of arbitrary files in a single storage space, e.g. the ten best pictures from a large album.\nStorage Systems Every storage system has different native capabilities like id and path based lookups, recursive change time propagation, permissions, trash, versions, archival and more. A storage provider makes the storage system available in the CS3 API by wrapping the capabilities as good as possible using a storage driver. There might be multiple storage drivers for a storage system, implementing different tradeoffs to match varying requirements.\nGateways A gateway acts as a facade to the storage related services. It authenticates and forwards API calls that are publicly accessible.\n","description":"Communication is hard. And clear communication is even harder. You may encounter the following terms throughout the documentation, in the code or when talking to other developers. Just keep in mind that whenever you hear or read storage, that term needs to be clarified, because on its own it is too vague. PR welcome.\nLogical concepts Resources A resource is the basic building block that oCIS manages. It can be of different types:"},{"id":54,"href":"/ocis/adr/0018-file-search-api/","title":"18. File Search API","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @c0rby Date: 2022-03-18 Context and Problem Statement The ability to find files based on certain search terms is a key requirement for a system that provides the ability to store unstructured data on a large scale.\nDecision Drivers Have a simple yet powerful, scalable and performant way of finding files in oCIS Be able to construct intelligent searches based on metadata Allow the user to filter the search queries based on metadata Considered Options Libre Graph API WebDAV API Decision Outcome Chosen option: WebDAV API because the current WebUI is compatible with that API. We may use the GraphAPI later in a second iteration.\nPositive Consequences The existing Clients can continue to use the well-known API There are existing API tests which cover the basic behavior Negative consequences We have no server side result filtering capabilities Pros and Cons of the Options Libre Graph API Good, because we try to switch most of our HTTP requests to Libre Graph Good, because the Graph API supports scopes, sorting and query language Good, because it supports server side result filtering Bad, because there are currently no clients which support that WebDAV API Good, because WebDAV is a well-known and widely adopted Standard Good, because existing Clients continue to work without extra efforts Bad, because the syntax is limited Bad, because we cannot do server side result filtering Links Search Indexing Search Query Language ","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @c0rby Date: 2022-03-18 Context and Problem Statement The ability to find files based on certain search terms is a key requirement for a system that provides the ability to store unstructured data on a large scale.\nDecision Drivers Have a simple yet powerful, scalable and performant way of finding files in oCIS Be able to construct intelligent searches based on metadata Allow the user to filter the search queries based on metadata Considered Options Libre Graph API WebDAV API Decision Outcome Chosen option: WebDAV API because the current WebUI is compatible with that API."},{"id":55,"href":"/ocis/storage/proposedchanges/","title":"Proposed Changes","parent":"Storage","content":"Some architectural changes still need to be clarified or changed. Maybe an ADR is in order for all of the below.\nReva Gateway changes A dedicated shares storage provider Currently, when a user accepts a share, a cs3 reference is created in the users /home/shares folder. This reference represents the mount point of a share and can be renamed, similar to the share jail in ownCloud 10. This spreads the metadata of a share in two places:\nthe share is persisted in the share manager the mount point of a share is persisted in the home storage provider Furthermore, the gateway treats /home/shares different than any other path: it will stat all children and calculate an etag to allow clients to discover changes in accepted shares. This requires the storage provider to cooperate and provide this special /shares folder in the root of a users home when it is accessed as a home storage. That is the origin of the enable_home config flag that needs to be implemented for every storage driver.\nIn order to have a single source of truth we need to make the share manager aware of the mount point. We can then move all the logic that aggregates the etag in the share folder to a dedicated shares storage provider that is using the share manager for persistence. The shares storage provider would provide a /shares namespace outside of /home that lists all accepted shares for the current user. As a result the storage drivers no longer need to have a enable_home flag that jails users into their home. The /home/shares folder would move outside of the /home. In fact /home will no longer be needed, because the home folder concept can be implemented as a space: CreateHome would create a personal space on the.\nWork on this is done in https://github.com/cs3org/reva/pull/2023\nWhat about copy pasting links from the browser? Well this storage is only really needed to have a path to ocm shares that actually reside on other instances. In the UI the shares would be listed by querying a share manager. It returns ResourceIds, which can be stated to fetch a path that is then accessible in the CS3 global namespace. Two caveats:\nThis only works for resources that are actually hosted by the current instance. For those it would leak the parent path segments to a shared resource. For accepted OCM shares there must be a path in the CS3 global namespace that has to be the same for all users, otherwise they cannot copy and share those URLs. The gateway should be responsible for path transformations Currently, storage providers are aware af their mount point, coupling them tightly with the gateway.\nTracked in https://github.com/cs3org/reva/issues/578\nWork is done in https://github.com/cs3org/reva/pull/1866\nURL escaped string representation of a CS3 reference For the spaces concept we introduced the /dav/spaces/ endpoint. It encodes a cs3 reference in a URL compatible way.\nWe can separate the path using a /: /dav/spaces/\u0026lt;spaceid\u0026gt;/\u0026lt;path\u0026gt; The spaceid currently is a cs3 resourceid, consisting of \u0026lt;storageid\u0026gt; and \u0026lt;opaqueid\u0026gt;. Since the opaqueid might contain / e.g. for the local driver we have to urlencode the spaceid. To access resources by id we need to make the /dav/meta/\u0026lt;resourceid\u0026gt; able to list directories\u0026hellip; Otherwise id based navigation first has to look up the path. Or we use the libregraph api for id based navigation.\nA reference is a logical concept. It identifies a resource and consists of a \u0026lt;resource_id\u0026gt; and a \u0026lt;path\u0026gt;. A \u0026lt;resource_id\u0026gt; consists of a \u0026lt;storage_id\u0026gt; and a \u0026lt;node_id\u0026gt;. They can be concatenated using the separators ! and ::\n\u0026lt;storage_id\u0026gt;!\u0026lt;node_id\u0026gt;:\u0026lt;path\u0026gt; While all components are optional, only three cases are used:\nformat example description !:\u0026lt;absolute_path\u0026gt; !:/absolute/path/to/file.ext absolute path \u0026lt;storage_space\u0026gt;!:\u0026lt;relative_path\u0026gt; ee1687e5-ac7f-426d-a6c0-03fed91d5f62!:path/to/file.ext path relative to the root of the storage space \u0026lt;storage_space\u0026gt;!\u0026lt;root\u0026gt;:\u0026lt;relative_path\u0026gt; ee1687e5-ac7f-426d-a6c0-03fed91d5f62!c3cf23bb-8f47-4719-a150-1d25a1f6fb56:to/file.ext path relative to the specified node in the storage space, used to reference resources without disclosing parent paths \u0026lt;storage_space\u0026gt; should be a UUID to prevent references from breaking when a user or storage space gets renamed. But it can also be derived from a migration of an oc10 instance by concatenating an instance identifier and the numeric storage id from oc10, e.g. oc10-instance-a$1234.\nA reference will often start as an absolute/global path, e.g. !:/home/Projects/Foo. The gateway will look up the storage provider that is responsible for the path\nName Description Who resolves it? !:/home/Projects/Foo the absolute path a client like davfs will use. The gateway uses the storage registry to look up the responsible storage provider ee1687e5-ac7f-426d-a6c0-03fed91d5f62!:/Projects/Foo the storage_space is the same as the root, the path becomes relative to the root the storage provider can use this reference to identify this resource Now, the same file is accessed as a share\nName Description !:/users/Einstein/Projects/Foo Foo is the shared folder ee1687e5-ac7f-426d-a6c0-03fed91d5f62!56f7ceca-e7f8-4530-9a7a-fe4b7ec8089a: 56f7ceca-e7f8-4530-9a7a-fe4b7ec8089a is the id of Foo, the path is empty The :, ! and $ are chosen from the set of RFC3986 sub delimiters on purpose. They can be used in URLs without having to be encoded. In some cases, a delimiter can be left out if a component is not set:\nreference interpretation /absolute/path/to/file.ext absolute path, all delimiters omitted ee1687e5-ac7f-426d-a6c0-03fed91d5f62!path/to/file.ext relative path in the given storage space, root delimiter : omitted 56f7ceca-e7f8-4530-9a7a-fe4b7ec8089a:to/file.ext relative path in the given root node, storage space delimiter ! omitted ee1687e5-ac7f-426d-a6c0-03fed91d5f62!56f7ceca-e7f8-4530-9a7a-fe4b7ec8089a: node id in the given storage space, : must be present ee1687e5-ac7f-426d-a6c0-03fed91d5f62 root of the storage space, all delimiters omitted, can be distinguished by the / space providers When looking up an id based resource the reference must use a logical space id, not a CS3 resource id. Otherwise id based requests, which only have a resourceid consisting of a storage id and a node id cannot be routed to the correct storage provider if the storage has moved from one storage provider to another.\nif the registry routes based on the storageid AND the nodeid it has to keep a cache of all nodeids in order to route all requests for a storage space (which consists of storage it + nodeid) to the correct storage provider. the correct resourceid for a node in a storage space would be \u0026lt;storageid\u0026gt;$\u0026lt;rootnodeid\u0026gt;!\u0026lt;nodeid\u0026gt;. The \u0026lt;storageid\u0026gt;$\u0026lt;rootnodeid\u0026gt; part allow the storage registry to route all id based requests to the correct storage provider. This becomes relevant when the storage space was moved from one storage provider to another. The storage space id remains the same, but the internal address and port change.\nTODO discuss to clarify further\nStorage drivers allow clients to send a uuid on upload iOS clients can only queue single requests to be executed in the background. They queue an upload and need to be able to identify the uploaded file after it has been uploaded to the server. The disconnected nature of the connection might cause workflows or manual user interaction with the file on the server to move the file to a different place or changing the content while the device is offline. However, on the device users might have marked the file as favorite or added it to other iOS specific collections. To be able to reliably identify the file the client can generate a uuid and attach it to the file metadata during the upload. While it is not necessary to look up files by this uuid having a second file id that serves exactly the same purpose as the file id is redundant.\nAnother aspect for the file id / uuid is that it must be a logical identifier that can be set, at least by internal systems. Without a writeable fileid we cannot restore backups or migrate storage spaces from one storage provider to another storage provider.\nTechnically, this means that every storage driver needs to have a map of a uuid to an internal resource identifier. This internal resource identifier can be\nan eos fileid, because eos can look up files by id an inode if the filesystem and the storage driver support looking up by inode a path if the storage driver has no way of looking up files by id. In this case other mechanisms like inotify, kernel audit or a fuse overlay might be used to keep the paths up to date. to prevent excessive writes when deep folders are renamed a reverse map might be used: it will map the uuid to \u0026lt;parentuuid\u0026gt;:\u0026lt;childname\u0026gt;, in order to trade writes for reads as a fallback a sync job can read the file id from the metadata of the resources and populate the uuid to internal id map. The TUS upload can take metadata, for PUT we might need a header.\nSpace id vs resource id vs storage id We have /dav/meta/\u0026lt;fileid\u0026gt; where the fileid is a string that was returned by a PROPFIND or by the /graph/v1.0/me/drives/ endpoint? That returns a space id and the root drive item which has an id\nDoes that id have a specific format? We currently concatenate as \u0026lt;storageid\u0026gt;!\u0026lt;nodeid\u0026gt;.\nA request against /dav/meta/fileid will use the reva storage registry to look up a path.\nWhat if the storage space is moved to another storage provider. This happens during a migration:\nthe current oc10 fileids need to be prefixed with at least the numeric storage id to shard them. 123 becomes instanceprefix$345!123 if we use a custom prefix that identifies an instance (so we can merge multiple instances into one ocis instance) and append the numeric storageid 345. The pattern is \u0026lt;instanceprefix\u0026gt;$\u0026lt;numericstorageid\u0026gt;!\u0026lt;fileid\u0026gt;.\nEvery \u0026lt;instanceprefix\u0026gt;$\u0026lt;numericstorageid\u0026gt; identifies a space.\nthe owncloudsql driver can return these spaceids when listing spaces. Why does it not work if we just use the fileid of the root node in the db?\nSay we have a space with three resources: \u0026lt;instanceprefix\u0026gt;$\u0026lt;numericstorageid\u0026gt;!\u0026lt;fileid\u0026gt; instanceprefix$345!1 instanceprefix$345!2 instanceprefix$345!3\nAll users have moved to ocis and the registry contains a regex to route all instanceprefix.* references to the storageprovider with the owncloudsql driver. It is up to the driver to locate the correct resource by using the filecache table. In this case the numeric storage id is unnecessary.\nNow we migrate the space 345 to another storage driver:\nthe storage registry contains a new entry for instanceprefix$345 to send all resource ids for that space to the new storage provider the new storage driver has to take into account the full storageid because the nodeid may only be unique per storage space. If we now have to fetch the path on the /dav/meta/ endpoint: /dav/meta/instanceprefix$345!1 /dav/meta/instanceprefix$345!2 /dav/meta/instanceprefix$345!3\nThis would work because the registry always sees instanceprefix$345 as the storageid.\nNow if we use the fileids directly and leave out the numeric storageid: \u0026lt;instanceprefix\u0026gt;!\u0026lt;fileid\u0026gt; instanceprefix!1 instanceprefix!2 instanceprefix!3\nThis is the current \u0026lt;storageid\u0026gt;!\u0026lt;nodeid\u0026gt; format.\nThe reva storage registry contains a instanceid entry pointing to the storage provider with the owncloudsql driver.\nResources can be looked up because the oc_filecache has a unique fileid over all storages.\nNow we again migrate the space 345 to another storage driver:\nthe storage registry contains a new entry for instanceprefix!1 so the storage space root now points to the new storage provider The registry needs to be aware of node ids to route properly. This is a no-go. We don\u0026rsquo;t want to keep a cache of all nodeids in the registry. Only the root nodes of spaces. The new storage driver only has a nodeid which might collide with other nodeids from other storage spaces, e.g. when two instances are imported into one ocis instance. Although it would be possible to just set up two storage providers extra care would have to be taken to prevent nodeid collisions when importing a space. If we now have to fetch the path on the /dav/meta/ endpoint: /dav/meta/instanceprefix!1 would work because it is the root of a space /dav/meta/instanceprefix!2 would cause the gateway to poll all storage providers because the registry has no way to determine the responsible storage provider /dav/meta/instanceprefix!3 same\nThe problem is that without a part in the storageid that allows differentiating storage spaces we cannot route them individually.\nNow, we could use the nodeid of the root of a storage space as the spaceid \u0026hellip; if it is a uuid. If it is numeric it needs a prefix to distinguish it from other spaces. \u0026lt;space-root-uuid\u0026gt;!\u0026lt;fileid\u0026gt; would be easy for the decomposedfs. eos might use numeric ids: \u0026lt;eosprefix\u0026gt;$\u0026lt;space-root-fileid\u0026gt;!\u0026lt;fileid\u0026gt;, but it needs a custom prefix to distinguish multiple eos instances.\nFurthermore, when migrating spaces between storage providers we want to stay collision free, which is why we should recommend uuids.\nAll this has implications for the decomposedfs, because it needs to split the nodes per space to prevent them from colliding.\n","description":"Some architectural changes still need to be clarified or changed. Maybe an ADR is in order for all of the below.\nReva Gateway changes A dedicated shares storage provider Currently, when a user accepts a share, a cs3 reference is created in the users /home/shares folder. This reference represents the mount point of a share and can be renamed, similar to the share jail in ownCloud 10. This spreads the metadata of a share in two places:"},{"id":56,"href":"/ocis/adr/0019-file-search-index/","title":"19. File Search Index","parent":"Architecture Decisions","content":" Status: accepted Deciders: @butonic, @micbar, @dragotin, @c0rby Date: 2022-03-18 Context and Problem Statement The ability to find files based on certain search terms is a key requirement for a system that provides the ability to store unstructured data on a large scale.\nMore sophisticated search capabilities are expected and can be implemented, especially based on metadata.\nTo trigger the indexing of a file, the search service listens to create, update and delete events on the internal event bus of oCIS.\nThe events need to contain a valid reference that defines the file space and file id of the file in question. The event only must be sent when the file operation (update, creation, removal) is finished.\nSharing adds more complexity because the index also needs to react to create, delete and modify shares events. Sharing should not duplicate the indexed data, especially within spaces or group shares.\nDecision Drivers Have a simple yet powerful, scalable and performant way of finding files in oCIS Be able to construct intelligent searches based on metadata Allow the user to filter the search queries based on metadata Basic File Search needs to be implemented out of the box without external dependencies The Search Indexing Service should be replaceable with more sophisticated technologies like Elasticsearch Make use of the spaces architecture to shard search indexes by space The Search Indexing Service needs to deal with multiple users accessing the same resources due to shares The Search Service should be compatible with different search indexing technologies Considered Options Bleve Search Elastic Search Decision Outcome Chosen option: Bleve Search, because we can fulfill the MVP and include it into the single binary.\nPositive Consequences Basic File Search works out of the box We do not need heavy external dependencies which need to be deployed alongside Negative consequences We need to be aware of the scaling limits We need to find a way to work with shares and spaces It has a limited query language Pros and Cons of the Options Bleve Search Good, because it is written in GoLang and can be bundled into the single oCIS binary Good, because it is a lightweight but powerful solution which could fulfill a lot of use cases Bad, because we do not know exactly how we can represent shares in the index without duplicating data Bad, because it is a single process Bad, because the query language is limited Elastic Search Good, because it has become an industry standard Good, because it supports a rich query language Good, because it has built in cluster support and scales well Good, because it has a permission system and supports multiple users and groups to access the same resource Bad, because it is a heavy setup and needs extra effort and knowledge Links Search API Search Query Language Bleve Search on GitHub ElasticSearch ","description":"Status: accepted Deciders: @butonic, @micbar, @dragotin, @c0rby Date: 2022-03-18 Context and Problem Statement The ability to find files based on certain search terms is a key requirement for a system that provides the ability to store unstructured data on a large scale.\nMore sophisticated search capabilities are expected and can be implemented, especially based on metadata.\nTo trigger the indexing of a file, the search service listens to create, update and delete events on the internal event bus of oCIS."},{"id":57,"href":"/services/gateway/","title":"Gateway","parent":"Services","content":" Abstract The gateway service is responsible for passing requests to the storage providers. Other services never talk to the storage providers directly but will always send their requests via the gateway service.\nTable of Contents Caching Service Endpoints Storage Registry Example Yaml Config Caching The gateway service is using caching as it is highly frequented with the same requests. As of now it uses two different caches:\nthe provider cache is caching requests to list or get storage providers. the create home cache is caching requests to create personal spaces (as they only need to be executed once). Both caches can be configured via the OCIS_CACHE_* envvars (or GATEWAY_PROVIDER_CACHE_* and GATEWAY_CREATE_HOME_CACHE_* respectively). See the envvar section for details.\nUse OCIS_CACHE_STORE (GATEWAY_PROVIDER_CACHE_STORE, GATEWAY_CREATE_HOME_CACHE_STORE) to define the type of cache to use:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Service Endpoints IMPORTANT\nThis functionality is currently highly experimental and intended for testing only! There are known bugs that need to be sorted out like not removing sockets when a service ends.\nThe gateway acts as a proxy for other CS3 services. As such it has to forward requests to a lot of services and needs to establish connections by looking up the IP address using the service registry. Instead of using the service registry each endpoint can also be configured to use the grpc dns:// or kubernetes:// URLs, which might be useful when running in kubernetes.\nFor a local single node deployment you might want to use unix: sockets as shown below. Using unix sockets will reduce the amount of service lookups and omit the TCP stack. For now, this is experimental and the services do not delete the socket on shutdown. PRs welcome.\nThe scheme for this setup is the following. Note that there is, except storage, always a service and a gateway envvar triple:\nenvvar default alternative OCIS_GRPC_PROTOCOL or \u0026lt;service\u0026gt;_GRPC_PROTOCOL tcp unix \u0026lt;service\u0026gt;_GRPC_ADDR 127.0.0.1:\u0026lt;port\u0026gt; /var/run/ocis/\u0026lt;service\u0026gt;.sock GATEWAY_\u0026lt;service\u0026gt;_ENDPOINT com.owncloud.api.\u0026lt;service\u0026gt; unix:/var/run/ocis/\u0026lt;service\u0026gt;.sock dns: \u0026hellip; kubernetes: \u0026hellip; USERS_GRPC_PROTOCOL=unix\u0026#34; USERS_GRPC_ADDR=/var/run/ocis/users.sock\u0026#34; GATEWAY_USERS_ENDPOINT=unix:/var/run/ocis/users.sock\u0026#34; GROUPS_GRPC_PROTOCOL=unix\u0026#34; GROUPS_GRPC_ADDR=/var/run/ocis/groups.sock\u0026#34; GATEWAY_GROUPS_ENDPOINT=unix:/var/run/ocis/groups.sock\u0026#34; AUTH_APP_GRPC_PROTOCOL=unix\u0026#34; AUTH_APP_GRPC_ADDR=/var/run/ocis/auth-app.sock\u0026#34; GATEWAY_AUTH_APP_ENDPOINT=unix:/var/run/ocis/auth-app.sock\u0026#34; AUTH_BASIC_GRPC_PROTOCOL=unix\u0026#34; AUTH_BASIC_GRPC_ADDR=/var/run/ocis/auth-basic.sock\u0026#34; GATEWAY_AUTH_BASIC_ENDPOINT=unix:/var/run/ocis/auth-basic.sock\u0026#34; AUTH_MACHINE_GRPC_PROTOCOL=unix\u0026#34; AUTH_MACHINE_GRPC_ADDR=/var/run/ocis/auth-machine.sock\u0026#34; GATEWAY_AUTH_MACHINE_ENDPOINT=unix:/var/run/ocis/auth-machine.sock\u0026#34; AUTH_SERVICE_GRPC_PROTOCOL=unix\u0026#34; AUTH_SERVICE_GRPC_ADDR=/var/run/ocis/auth-service.sock\u0026#34; GATEWAY_AUTH_SERVICE_ENDPOINT=unix:/var/run/ocis/auth-service.sock\u0026#34; STORAGE_PUBLIC_LINK_GRPC_PROTOCOL=unix\u0026#34; STORAGE_PUBLIC_LINK_GRPC_ADDR=/var/run/ocis/storage-public-link.sock\u0026#34; GATEWAY_STORAGE_PUBLIC_LINK_ENDPOINT=unix:/var/run/ocis/storage-public-link.sock\u0026#34; STORAGE_USERS_GRPC_PROTOCOL=unix\u0026#34; STORAGE_USERS_GRPC_ADDR=/var/run/ocis/storage-users.sock\u0026#34; GATEWAY_STORAGE_USERS_ENDPOINT=unix:/var/run/ocis/storage-users.sock\u0026#34; // graph sometimes bypasses the gateway so we need to configure the socket here as wel GRAPH_SPACES_STORAGE_USERS_ADDRESS=unix:/var/run/ocis/storage-users.sock\u0026#34; STORAGE_SHARES_GRPC_PROTOCOL=unix\u0026#34; STORAGE_SHARES_GRPC_ADDR=/var/run/ocis/storage-shares.sock\u0026#34; GATEWAY_STORAGE_SHARES_ENDPOINT=unix:/var/run/ocis/storage-shares.sock\u0026#34; APP_REGISTRY_GRPC_PROTOCOL=unix\u0026#34; APP_REGISTRY_GRPC_ADDR=/var/run/ocis/app-registry.sock\u0026#34; GATEWAY_APP_REGISTRY_ENDPOINT=unix:/var/run/ocis/app-registry.sock\u0026#34; OCM_GRPC_PROTOCOL=unix\u0026#34; OCM_GRPC_ADDR=/var/run/ocis/ocm.sock\u0026#34; GATEWAY_OCM_ENDPOINT=unix:/var/run/ocis/ocm.sock\u0026#34; // storage related SETTINGS_STORAGE_GATEWAY_GRPC_ADDR=\u0026#34;unix:/var/run/ocis/storage-system.sock\u0026#34; SETTINGS_STORAGE_GRPC_ADDR=\u0026#34;unix:/var/run/ocis/storage-system.sock\u0026#34; STORAGE_SYSTEM_GRPC_PROTOCOL=\u0026#34;unix\u0026#34; STORAGE_SYSTEM_GRPC_ADDR=\u0026#34;/var/run/ocis/storage-system.sock\u0026#34; SHARING_USER_CS3_PROVIDER_ADDR=\u0026#34;unix:/var/run/ocis/storage-system.sock\u0026#34; SHARING_USER_JSONCS3_PROVIDER_ADDR=\u0026#34;unix:/var/run/ocis/storage-system.sock\u0026#34; SHARING_PUBLIC_CS3_PROVIDER_ADDR=\u0026#34;unix:/var/run/ocis/storage-system.sock\u0026#34; SHARING_PUBLIC_JSONCS3_PROVIDER_ADDR=\u0026#34;unix:/var/run/ocis/storage-system.sock\u0026#34; Storage Registry In order to add another storage provider the CS3 storage registry that is running as part of the CS3 gateway hes to be made aware of it. The easiest cleanest way to do it is to set GATEWAY_STORAGE_REGISTRY_CONFIG_JSON=/path/to/storages.json and list all storage providers like this:\n{ \u0026#34;com.owncloud.api.storage-users\u0026#34;: { \u0026#34;providerid\u0026#34;: \u0026#34;{storage-users-mount-uuid}\u0026#34;, \u0026#34;spaces\u0026#34;: { \u0026#34;personal\u0026#34;: { \u0026#34;mount_point\u0026#34;: \u0026#34;/users\u0026#34;, \u0026#34;path_template\u0026#34;: \u0026#34;/users/{{.Space.Owner.Id.OpaqueId}}\u0026#34; }, \u0026#34;project\u0026#34;: { \u0026#34;mount_point\u0026#34;: \u0026#34;/projects\u0026#34;, \u0026#34;path_template\u0026#34;: \u0026#34;/projects/{{.Space.Name}}\u0026#34; } } }, \u0026#34;com.owncloud.api.storage-shares\u0026#34;: { \u0026#34;providerid\u0026#34;: \u0026#34;a0ca6a90-a365-4782-871e-d44447bbc668\u0026#34;, \u0026#34;spaces\u0026#34;: { \u0026#34;virtual\u0026#34;: { \u0026#34;mount_point\u0026#34;: \u0026#34;/users/{{.CurrentUser.Id.OpaqueId}}/Shares\u0026#34; }, \u0026#34;grant\u0026#34;: { \u0026#34;mount_point\u0026#34;: \u0026#34;.\u0026#34; }, \u0026#34;mountpoint\u0026#34;: { \u0026#34;mount_point\u0026#34;: \u0026#34;/users/{{.CurrentUser.Id.OpaqueId}}/Shares\u0026#34;, \u0026#34;path_template\u0026#34;: \u0026#34;/users/{{.CurrentUser.Id.OpaqueId}}/Shares/{{.Space.Name}}\u0026#34; } } }, \u0026#34;com.owncloud.api.storage-publiclink\u0026#34;: { \u0026#34;providerid\u0026#34;: \u0026#34;7993447f-687f-490d-875c-ac95e89a62a4\u0026#34;, \u0026#34;spaces\u0026#34;: { \u0026#34;grant\u0026#34;: { \u0026#34;mount_point\u0026#34;: \u0026#34;.\u0026#34; }, \u0026#34;mountpoint\u0026#34;: { \u0026#34;mount_point\u0026#34;: \u0026#34;/public\u0026#34;, \u0026#34;path_template\u0026#34;: \u0026#34;/public/{{.Space.Root.OpaqueId}}\u0026#34; } } }, \u0026#34;com.owncloud.api.ocm\u0026#34;: { \u0026#34;providerid\u0026#34;: \u0026#34;89f37a33-858b-45fa-8890-a1f2b27d90e1\u0026#34;, \u0026#34;spaces\u0026#34;: { \u0026#34;grant\u0026#34;: { \u0026#34;mount_point\u0026#34;: \u0026#34;.\u0026#34; }, \u0026#34;mountpoint\u0026#34;: { \u0026#34;mount_point\u0026#34;: \u0026#34;/ocm\u0026#34;, \u0026#34;path_template\u0026#34;: \u0026#34;/ocm/{{.Space.Root.OpaqueId}}\u0026#34; } } }, \u0026#34;com.owncloud.api.storage-hello\u0026#34;: { \u0026#34;providerid\u0026#34;: \u0026#34;hello-storage-id\u0026#34;, \u0026#34;spaces\u0026#34;: { \u0026#34;project\u0026#34;: { \u0026#34;mount_point\u0026#34;: \u0026#34;/hello\u0026#34;, \u0026#34;path_template\u0026#34;: \u0026#34;/hello/{{.Space.Name}}\u0026#34; } } } } In the above replace {storage-users-mount-uuid} with the mount UUID that was generated for the storage-users service. You can find it in the config.yaml generated on by ocis init. The last entry com.owncloud.api.storage-hello and its providerid \u0026quot;hello-storage-id\u0026quot; are an example for in additional storage provider, in this case running hellofs, an example minimal storage driver.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: gateway-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9143 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9142 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false commit_share_to_storage_grant: true share_folder_name: Shares disable_home_creation_on_login: true transfer_secret: \u0026#34;\u0026#34; transfer_expires: 86400 cache: provider_cache_store: noop provider_cache_nodes: - 127.0.0.1:9233 provider_cache_database: cache-providers provider_cache_ttl: 5m0s provider_cache_disable_persistence: false provider_cache_auth_username: \u0026#34;\u0026#34; provider_cache_auth_password: \u0026#34;\u0026#34; create_home_cache_store: memory create_home_cache_nodes: - 127.0.0.1:9233 create_home_cache_database: cache-createhome create_home_cache_ttl: 5m0s create_home_cache_disable_persistence: false create_home_cache_auth_username: \u0026#34;\u0026#34; create_home_cache_auth_password: \u0026#34;\u0026#34; frontend_public_url: https://localhost:9200 users_endpoint: com.owncloud.api.users groups_endpoint: com.owncloud.api.groups permissions_endpoint: com.owncloud.api.settings sharing_endpoint: com.owncloud.api.sharing auth_app_endpoint: com.owncloud.api.auth-app auth_basic_endpoint: com.owncloud.api.auth-basic auth_bearer_endpoint: \u0026#34;\u0026#34; auth_machine_endpoint: com.owncloud.api.auth-machine auth_service_endpoint: com.owncloud.api.auth-service storage_public_link_endpoint: com.owncloud.api.storage-publiclink storage_users_endpoint: com.owncloud.api.storage-users storage_shares_endpoint: com.owncloud.api.storage-shares app_registry_endpoint: com.owncloud.api.app-registry ocm_endpoint: com.owncloud.api.ocm storage_registry: driver: spaces rules: [] json: \u0026#34;\u0026#34; storage_users_mount_id: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGATEWAY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGATEWAY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGATEWAY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGATEWAY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGATEWAY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYGATEWAY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORGATEWAY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEGATEWAY_LOG_FILE string The path to the log file. Activates logging to this file if set. GATEWAY_DEBUG_ADDR string 127.0.0.1:9143 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. GATEWAY_DEBUG_TOKEN string Token to secure the metrics endpoint. GATEWAY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. GATEWAY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_GATEWAY_GRPC_ADDRGATEWAY_GRPC_ADDR string 127.0.0.1:9142 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLGATEWAY_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETGATEWAY_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. GATEWAY_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. GATEWAY_COMMIT_SHARE_TO_STORAGE_GRANT bool true Commit shares to storage grants. This grants access to shared resources for the share receiver directly on the storage. GATEWAY_SHARE_FOLDER_NAME string Shares Name of the share folder in users\u0026rsquo; home space. GATEWAY_DISABLE_HOME_CREATION_ON_LOGIN bool true Disable creation of the home space on login. OCIS_TRANSFER_SECRET string The storage transfer secret. GATEWAY_TRANSFER_EXPIRES int 86400 Expiry for the gateway tokens. OCIS_CACHE_STOREGATEWAY_PROVIDER_CACHE_STORE string noop The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESGATEWAY_PROVIDER_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-providers The database name the configured store should use. OCIS_CACHE_TTLGATEWAY_PROVIDER_CACHE_TTL Duration 5m0s Default time to live for user info in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEGATEWAY_PROVIDER_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the provider cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEGATEWAY_PROVIDER_CACHE_AUTH_USERNAME string The username to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDGATEWAY_PROVIDER_CACHE_AUTH_PASSWORD string The password to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_STOREGATEWAY_CREATE_HOME_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESGATEWAY_CREATE_HOME_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-createhome The database name the configured store should use. OCIS_CACHE_TTLGATEWAY_CREATE_HOME_CACHE_TTL Duration 5m0s Default time to live for user info in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEGATEWAY_CREATE_HOME_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the create home cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEGATEWAY_CREATE_HOME_CACHE_AUTH_USERNAME string The username to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDGATEWAY_CREATE_HOME_CACHE_AUTH_PASSWORD string The password to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_URLGATEWAY_FRONTEND_PUBLIC_URL string https://localhost:9200 The public facing URL of the oCIS frontend. GATEWAY_USERS_ENDPOINT string com.owncloud.api.users The endpoint of the users service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_GROUPS_ENDPOINT string com.owncloud.api.groups The endpoint of the groups service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_PERMISSIONS_ENDPOINT string com.owncloud.api.settings The endpoint of the permissions service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_SHARING_ENDPOINT string com.owncloud.api.sharing The endpoint of the shares service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_APP_ENDPOINT string com.owncloud.api.auth-app The endpoint of the auth-app service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_BASIC_ENDPOINT string com.owncloud.api.auth-basic The endpoint of the auth-basic service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_BEARER_ENDPOINT string The endpoint of the auth-bearer service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_MACHINE_ENDPOINT string com.owncloud.api.auth-machine The endpoint of the auth-machine service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_SERVICE_ENDPOINT string com.owncloud.api.auth-service The endpoint of the auth-service service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_PUBLIC_LINK_ENDPOINT string com.owncloud.api.storage-publiclink The endpoint of the storage-publiclink service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_USERS_ENDPOINT string com.owncloud.api.storage-users The endpoint of the storage-users service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_SHARES_ENDPOINT string com.owncloud.api.storage-shares The endpoint of the storage-shares service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_APP_REGISTRY_ENDPOINT string com.owncloud.api.app-registry The endpoint of the app-registry service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_OCM_ENDPOINT string com.owncloud.api.ocm The endpoint of the ocm service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_REGISTRY_DRIVER string spaces The driver name of the storage registry to use. GATEWAY_STORAGE_REGISTRY_RULES []string [] The rules for the storage registry. See the Environment Variable Types description for more details. GATEWAY_STORAGE_REGISTRY_CONFIG_JSON string Additional configuration for the storage registry in json format. GATEWAY_STORAGE_USERS_MOUNT_ID string Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format. ","description":"Abstract The gateway service is responsible for passing requests to the storage providers. Other services never talk to the storage providers directly but will always send their requests via the gateway service.\nTable of Contents Caching Service Endpoints Storage Registry Example Yaml Config Caching The gateway service is using caching as it is highly frequented with the same requests. As of now it uses two different caches:\nthe provider cache is caching requests to list or get storage providers."},{"id":58,"href":"/services/graph/","title":"Graph","parent":"Services","content":" Abstract The graph service provides the Graph API which is a RESTful web API used to access Infinite Scale resources. It is inspired by the Microsoft Graph API and can be used by clients or other services or extensions. Visit the Libre Graph API for a detailed specification of the API implemented by the graph service.\nTable of Contents Sequence Diagram Users and Groups API LDAP Configuration Read-Only Access to Existing LDAP Servers Using a Write Enabled LDAP Server Query Filters Provided by the Graph API Caching Keycloak Configuration For The Personal Data Export Keycloak Client Configuration Translations Translation Rules Default Language Unified Role Management Example Yaml Config Sequence Diagram The following image gives an overview of the scenario when a client requests to list available spaces the user has access to. To do so, the client is directed with his request automatically via the proxy service to the graph service.\nUsers and Groups API The graph service provides endpoints for querying users and groups. It features two different backend implementations:\nldap: This is currently the default backend. It queries user and group information from an LDAP server. Depending on the configuration, it can also be used to manage (create, update, delete) users and groups provided by an LDAP server. cs3: This backend queries users and groups using the CS3 identity APIs as implemented by the users and groups service. This backend is currently still experimental and only implements a subset of the Libre Graph API. It should not be used in production. LDAP Configuration The LDAP backend is configured using a set of environment variables. A detailed list of all the available configuration options can be found in the documentation. The LDAP related options are prefixed with OCIS_LDAP_ (or GRAPH_LDAP_ for settings specific to graph service).\nRead-Only Access to Existing LDAP Servers To connect the graph service to an existing LDAP server, set OCIS_LDAP_SERVER_WRITE_ENABLED to false to prevent the graph service from sending write operations to the LDAP server. Also set the various OCIS_LDAP_* environment variables to match the configuration of the LDAP server you are connecting to. An example configuration for connecting oCIS to an instance of Microsoft Active Directory is available here.\nUsing a Write Enabled LDAP Server To use the graph service for managing (create, update, delete) users and groups, a write enabled LDAP server is required. In the default configuration, the graph service will use the simple LDAP server that is bundled with oCIS in the idm service which provides all the required features. It is also possible to setup up an external LDAP server with write access for use with oCIS. It is recommend to use OpenLDAP for this. The LDAP server needs to fulfill a couple of requirements with respect to the available schema:\nThe LDAP server must provide the inetOrgPerson object class for users and the groupOfNames object class for groups. The graph service maintains a few additional attributes for users and groups that are not available in the standard LDAP schema. An schema file, ready to use with OpenLDAP, defining those additional attributes is available here. Query Filters Provided by the Graph API Some API endpoints provided by the graph service allow to specify query filters. The filter syntax is based on the OData Specification. See the Libre Graph API for examples on the filters supported when querying users.\nCaching The graph service can use a configured store via GRAPH_CACHE_STORE. Possible stores are:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Keycloak Configuration For The Personal Data Export If Keycloak is used for authentication, GDPR regulations require to add all personal identifiable information that Keycloak has about the user to the personal data export. To do this, the following environment variables must be set:\nOCIS_KEYCLOAK_BASE_PATH - The URL to the keycloak instance. OCIS_KEYCLOAK_CLIENT_ID - The client ID of the client that is used to authenticate with keycloak, this client has to be able to list users and get the credential data. OCIS_KEYCLOAK_CLIENT_SECRET - The client secret of the client that is used to authenticate with keycloak. OCIS_KEYCLOAK_CLIENT_REALM - The realm the client is defined in. OCIS_KEYCLOAK_USER_REALM - The realm the oCIS users are defined in. OCIS_KEYCLOAK_INSECURE_SKIP_VERIFY - If set to true, the TLS certificate of the keycloak instance is not verified. For more details see the User-Triggered GDPR Report in the ocis admin documentation.\nKeycloak Client Configuration The client that is used to authenticate with keycloak has to be able to list users and get the credential data. To do this, the following roles have to be assigned to the client and they have to be about the realm that contains the oCIS users:\nview-users view-identity-providers view-realm view-clients view-events view-authorization Note that these roles are only available to assign if the client is in the master realm.\nTranslations The graph service has embedded translations sourced via transifex to provide a basic set of translated languages. These embedded translations are available for all deployment scenarios. In addition, the service supports custom translations, though it is currently not possible to just add custom translations to embedded ones. If custom translations are configured, the embedded ones are not used. To configure custom translations, the GRAPH_TRANSLATION_PATH environment variable needs to point to a base folder that will contain the translation files. This path must be available from all instances of the graph service, a shared storage is recommended. Translation files must be of type .po or .mo. For each language, the filename needs to be graph.po (or graph.mo) and stored in a folder structure defining the language code. In general the path/name pattern for a translation file needs to be:\n{GRAPH_TRANSLATION_PATH}/{language-code}/LC_MESSAGES/graph.po The language code pattern is composed of language[_territory] where language is the base language and _territory is optional and defines a country.\nFor example, for the language de, one needs to place the corresponding translation files to {GRAPH_TRANSLATION_PATH}/de_DE/LC_MESSAGES/graph.po.\nImportant: For the time being, the embedded ownCloud Web frontend only supports the main language code but does not handle any territory. When strings are available in the language code language_territory, the web frontend does not see it as it only requests language. In consequence, any translations made must exist in the requested language to avoid a fallback to the default.\nTranslation Rules If a requested language code is not available, the service tries to fall back to the base language if available. For example, if the requested language-code de_DE is not available, the service tries to fall back to translations in the de folder. If the base language de is also not available, the service falls back to the system\u0026rsquo;s default English (en), which is the source of the texts provided by the code. Default Language The default language can be defined via the OCIS_DEFAULT_LANGUAGE environment variable. See the settings service for a detailed description.\nUnified Role Management Unified Roles are roles granted a user for sharing and can be enabled or disabled. A CLI command is provided to list existing roles and their state among other data.\nNote that a disabled role does not lose previously assigned permissions. It only means that the role is not available for new assignments. The following roles are enabled by default:\nUnifiedRoleViewerID UnifiedRoleSpaceViewer UnifiedRoleEditor UnifiedRoleSpaceEditor UnifiedRoleFileEditor UnifiedRoleEditorLite UnifiedRoleManager The following role is disabled by default:\nUnifiedRoleSecureViewer To enable disabled roles like the UnifiedRoleSecureViewer, you must provide the UID(s) by one of the following methods:\nUsing the GRAPH_AVAILABLE_ROLES environment variable. Setting the available_roles configuration value. The following CLI command simplifies the process of finding out which UID belongs to which role:\nocis graph list-unified-roles The output of this command includes the following information for each role:\nUID\nThe unique identifier of the role. Enabled\nWhether the role is enabled or not. Description\nA short description of the role. Condition Allowed resource actions Example output (shortned)\n+--------------------------------------+----------+--------------------------------+--------------------------------+------------------------------------------+ | UID | ENABLED | DESCRIPTION | CONDITION | ALLOWED RESOURCE ACTIONS | +--------------------------------------+----------+--------------------------------+--------------------------------+------------------------------------------+ | a8d5fe5e-96e3-418d-825b-534dbdf22b99 | enabled | View and download. | exists @Resource.Root | libre.graph/driveItem/path/read | | | | | | libre.graph/driveItem/quota/read | | | | | | libre.graph/driveItem/content/read | | | | | | libre.graph/driveItem/permissions/read | | | | | | libre.graph/driveItem/children/read | | | | | | libre.graph/driveItem/deleted/read | | | | | | libre.graph/driveItem/basic/read | +--------------------------------------+----------+--------------------------------+--------------------------------+------------------------------------------+ Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 # Autogenerated # Filename: graph-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; cache: store: memory nodes: - 127.0.0.1:9233 database: cache-roles table: \u0026#34;\u0026#34; ttl: 336h0m0s disable_persistence: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9124 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9120 root: /graph tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; apitoken: \u0026#34;\u0026#34; cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - PUT - PATCH - DELETE - OPTIONS allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Purge - Restore allow_credentials: true api: group_members_patch_limit: 20 graph_username_match: default graph_assign_default_user_role: true graph_identity_search_min_length: 3 show_email_in_results: false reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; grpc_client_tls: null application: id: \u0026#34;\u0026#34; displayname: ownCloud Infinite Scale spaces: webdav_base: https://localhost:9200 webdav_path: /dav/spaces/ default_quota: \u0026#34;1000000000\u0026#34; extended_space_properties_cache_ttl: 60000000000 users_cache_ttl: 60000000000 groups_cache_ttl: 60000000000 storage_users_address: com.owncloud.api.storage-users default_language: \u0026#34;\u0026#34; translation_path: \u0026#34;\u0026#34; identity: backend: ldap ldap: uri: ldaps://localhost:9235 cacert: /var/lib/ocis/idm/ldap.crt insecure: false bind_dn: uid=libregraph,ou=sysusers,o=libregraph-idm bind_password: \u0026#34;\u0026#34; use_server_uuid: false use_password_modify_exop: true write_enabled: true refint_enabled: false user_base_dn: ou=users,o=libregraph-idm user_search_scope: sub user_filter: \u0026#34;\u0026#34; user_objectclass: inetOrgPerson user_mail_attribute: mail user_displayname_attribute: displayName user_name_attribute: uid user_id_attribute: owncloudUUID user_id_is_octet_string: false user_type_attribute: ownCloudUserType user_enabled_attribute: ownCloudUserEnabled disable_user_mechanism: attribute ldap_disabled_users_group_dn: cn=DisabledUsersGroup,ou=groups,o=libregraph-idm group_base_dn: ou=groups,o=libregraph-idm group_create_base_dn: ou=groups,o=libregraph-idm group_search_scope: sub group_filter: \u0026#34;\u0026#34; group_objectclass: groupOfNames group_name_attribute: cn group_member_attribute: member group_id_attribute: owncloudUUID group_id_is_octet_string: false education_resources_enabled: false educationconfig: school_base_dn: \u0026#34;\u0026#34; school_search_scope: \u0026#34;\u0026#34; school_filter: \u0026#34;\u0026#34; school_objectclass: \u0026#34;\u0026#34; school_name_attribute: \u0026#34;\u0026#34; school_number_attribute: \u0026#34;\u0026#34; school_id_attribute: \u0026#34;\u0026#34; school_termination_min_grace_days: 0 include_ocm_sharees: false events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; unified_roles: available_roles: - b1e2218d-eef8-4d4c-b82d-0f1a1b48f3b5 - a8d5fe5e-96e3-418d-825b-534dbdf22b99 - fb6c3e19-e378-47e5-b277-9732f9de6e21 - 58c63c02-1d89-4572-916a-870abc5a1b7d - 2d00ce52-1fc2-4dbc-8b95-a73b73395f5a - 1c996275-f1c9-4e71-abdf-a42f6495e960 - 312c0871-5ef7-4b3a-85b6-0e4074c64049 max_concurrency: 20 keycloak: base_path: \u0026#34;\u0026#34; client_id: \u0026#34;\u0026#34; client_secret: \u0026#34;\u0026#34; client_realm: \u0026#34;\u0026#34; user_realm: \u0026#34;\u0026#34; insecure_skip_verify: false service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGRAPH_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGRAPH_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGRAPH_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGRAPH_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGRAPH_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYGRAPH_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORGRAPH_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEGRAPH_LOG_FILE string The path to the log file. Activates logging to this file if set. OCIS_CACHE_STOREGRAPH_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESGRAPH_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. GRAPH_CACHE_STORE_DATABASE string cache-roles The database name the configured store should use. GRAPH_CACHE_STORE_TABLE string The database table the store should use. OCIS_CACHE_TTLGRAPH_CACHE_TTL Duration 336h0m0s Time to live for cache records in the graph. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks). See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEGRAPH_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEGRAPH_CACHE_AUTH_USERNAME string The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDGRAPH_CACHE_AUTH_PASSWORD string The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. GRAPH_DEBUG_ADDR string 127.0.0.1:9124 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. GRAPH_DEBUG_TOKEN string Token to secure the metrics endpoint. GRAPH_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. GRAPH_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. GRAPH_HTTP_ADDR string 127.0.0.1:9120 The bind address of the HTTP service. GRAPH_HTTP_ROOT string /graph Subdirectory that serves as the root for this HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. GRAPH_HTTP_API_TOKEN string An optional API bearer token OCIS_CORS_ALLOW_ORIGINSGRAPH_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSGRAPH_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSGRAPH_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Purge Restore] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSGRAPH_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. GRAPH_GROUP_MEMBERS_PATCH_LIMIT int 20 The amount of group members allowed to be added with a single patch request. GRAPH_USERNAME_MATCH string default Apply restrictions to usernames. Supported values are \u0026lsquo;default\u0026rsquo; and \u0026rsquo;none\u0026rsquo;. When set to \u0026lsquo;default\u0026rsquo;, user names must not start with a number and are restricted to ASCII characters. When set to \u0026rsquo;none\u0026rsquo;, no restrictions are applied. The default value is \u0026lsquo;default\u0026rsquo;. GRAPH_ASSIGN_DEFAULT_USER_ROLE bool true Whether to assign newly created users the default role \u0026lsquo;User\u0026rsquo;. Set this to \u0026lsquo;false\u0026rsquo; if you want to assign roles manually, or if the role assignment should happen at first login. Set this to \u0026rsquo;true\u0026rsquo; (the default) to assign the role \u0026lsquo;User\u0026rsquo; when creating a new user. GRAPH_IDENTITY_SEARCH_MIN_LENGTH int 3 The minimum length the search term needs to have for unprivileged users when searching for users or groups. OCIS_SHOW_USER_EMAIL_IN_RESULTS bool false Include user email addresses in responses. If absent or set to false emails will be omitted from results. Please note that admin users can always see all email addresses. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_JWT_SECRETGRAPH_JWT_SECRET string The secret to mint and validate jwt tokens. GRAPH_APPLICATION_ID string The ocis application ID shown in the graph. All app roles are tied to this ID. GRAPH_APPLICATION_DISPLAYNAME string ownCloud Infinite Scale The ocis application name. OCIS_URLGRAPH_SPACES_WEBDAV_BASE string https://localhost:9200 The public facing URL of WebDAV. GRAPH_SPACES_WEBDAV_PATH string /dav/spaces/ The WebDAV sub-path for spaces. GRAPH_SPACES_DEFAULT_QUOTA string 1000000000 The default quota in bytes. GRAPH_SPACES_EXTENDED_SPACE_PROPERTIES_CACHE_TTL int 60000000000 Max TTL in seconds for the spaces property cache. GRAPH_SPACES_USERS_CACHE_TTL int 60000000000 Max TTL in seconds for the spaces users cache. GRAPH_SPACES_GROUPS_CACHE_TTL int 60000000000 Max TTL in seconds for the spaces groups cache. GRAPH_SPACES_STORAGE_USERS_ADDRESS string com.owncloud.api.storage-users The address of the storage-users service. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_TRANSLATION_PATHGRAPH_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. GRAPH_IDENTITY_BACKEND string ldap The user identity backend to use. Supported backend types are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;cs3\u0026rsquo;. OCIS_LDAP_URIGRAPH_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo; OCIS_LDAP_CACERTGRAPH_LDAP_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. OCIS_LDAP_INSECUREGRAPH_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. OCIS_LDAP_BIND_DNGRAPH_LDAP_BIND_DN string uid=libregraph,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDGRAPH_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. GRAPH_LDAP_SERVER_UUID bool false If set to true, rely on the LDAP Server to generate a unique ID for users and groups, like when using \u0026rsquo;entryUUID\u0026rsquo; as the user ID attribute. GRAPH_LDAP_SERVER_USE_PASSWORD_MODIFY_EXOP bool true Use the \u0026lsquo;Password Modify Extended Operation\u0026rsquo; for updating user passwords. OCIS_LDAP_SERVER_WRITE_ENABLEDGRAPH_LDAP_SERVER_WRITE_ENABLED bool true Allow creating, modifying and deleting LDAP users via the GRAPH API. This can only be set to \u0026rsquo;true\u0026rsquo; when keeping default settings for the LDAP user and group attribute types (the \u0026lsquo;OCIS_LDAP_USER_SCHEMA_* and \u0026lsquo;OCIS_LDAP_GROUP_SCHEMA_* variables). GRAPH_LDAP_REFINT_ENABLED bool false Signals that the server has the refint plugin enabled, which makes some actions not needed. OCIS_LDAP_USER_BASE_DNGRAPH_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_USER_SCOPEGRAPH_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_USER_FILTERGRAPH_LDAP_USER_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_USER_OBJECTCLASSGRAPH_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;). OCIS_LDAP_USER_SCHEMA_MAILGRAPH_LDAP_USER_EMAIL_ATTRIBUTE string mail LDAP Attribute to use for the email address of users. OCIS_LDAP_USER_SCHEMA_DISPLAYNAMELDAP_USER_SCHEMA_DISPLAY_NAMEGRAPH_LDAP_USER_DISPLAYNAME_ATTRIBUTE string displayName LDAP Attribute to use for the display name of users. OCIS_LDAP_USER_SCHEMA_USERNAMEGRAPH_LDAP_USER_NAME_ATTRIBUTE string uid LDAP Attribute to use for username of users. OCIS_LDAP_USER_SCHEMA_IDGRAPH_LDAP_USER_UID_ATTRIBUTE string owncloudUUID LDAP Attribute to use as the unique ID for users. This should be a stable globally unique ID like a UUID. OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGGRAPH_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user ID\u0026rsquo;s. OCIS_LDAP_USER_SCHEMA_USER_TYPEGRAPH_LDAP_USER_TYPE_ATTRIBUTE string ownCloudUserType LDAP Attribute to distinguish between \u0026lsquo;Member\u0026rsquo; and \u0026lsquo;Guest\u0026rsquo; users. Default is \u0026lsquo;ownCloudUserType\u0026rsquo;. OCIS_LDAP_USER_ENABLED_ATTRIBUTEGRAPH_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP Attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_DISABLE_USER_MECHANISMGRAPH_DISABLE_USER_MECHANISM string attribute An option to control the behavior for disabling users. Supported options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed. Default is \u0026lsquo;attribute\u0026rsquo;. OCIS_LDAP_DISABLED_USERS_GROUP_DNGRAPH_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;. OCIS_LDAP_GROUP_BASE_DNGRAPH_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups. GRAPH_LDAP_GROUP_CREATE_BASE_DN string ou=groups,o=libregraph-idm Parent DN under which new groups are created. This DN needs to be subordinate to the \u0026lsquo;GRAPH_LDAP_GROUP_BASE_DN\u0026rsquo;. This setting is only relevant when \u0026lsquo;GRAPH_LDAP_SERVER_WRITE_ENABLED\u0026rsquo; is \u0026rsquo;true\u0026rsquo;. It defaults to the value of \u0026lsquo;GRAPH_LDAP_GROUP_BASE_DN\u0026rsquo;. All groups outside of this subtree are treated as readonly groups and cannot be updated. OCIS_LDAP_GROUP_SCOPEGRAPH_LDAP_GROUP_SEARCH_SCOPE string sub LDAP search scope to use when looking up groups. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_GROUP_FILTERGRAPH_LDAP_GROUP_FILTER string LDAP filter to add to the default filters for group searches. OCIS_LDAP_GROUP_OBJECTCLASSGRAPH_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;). OCIS_LDAP_GROUP_SCHEMA_GROUPNAMEGRAPH_LDAP_GROUP_NAME_ATTRIBUTE string cn LDAP Attribute to use for the name of groups. OCIS_LDAP_GROUP_SCHEMA_MEMBERGRAPH_LDAP_GROUP_MEMBER_ATTRIBUTE string member LDAP Attribute that is used for group members. OCIS_LDAP_GROUP_SCHEMA_IDGRAPH_LDAP_GROUP_ID_ATTRIBUTE string owncloudUUID LDAP Attribute to use as the unique id for groups. This should be a stable globally unique ID like a UUID. OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGGRAPH_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s. GRAPH_LDAP_EDUCATION_RESOURCES_ENABLED bool false Enable LDAP support for managing education related resources. GRAPH_LDAP_SCHOOL_BASE_DN string Search base DN for looking up LDAP schools. GRAPH_LDAP_SCHOOL_SEARCH_SCOPE string LDAP search scope to use when looking up schools. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. GRAPH_LDAP_SCHOOL_FILTER string LDAP filter to add to the default filters for school searches. GRAPH_LDAP_SCHOOL_OBJECTCLASS string The object class to use for schools in the default school search filter. GRAPH_LDAP_SCHOOL_NAME_ATTRIBUTE string LDAP Attribute to use for the name of a school. GRAPH_LDAP_SCHOOL_NUMBER_ATTRIBUTE string LDAP Attribute to use for the number of a school. GRAPH_LDAP_SCHOOL_ID_ATTRIBUTE string LDAP Attribute to use as the unique id for schools. This should be a stable globally unique ID like a UUID. GRAPH_LDAP_SCHOOL_TERMINATION_MIN_GRACE_DAYS int 0 When setting a \u0026rsquo;terminationDate\u0026rsquo; for a school, require the date to be at least this number of days in the future. OCIS_ENABLE_OCMGRAPH_INCLUDE_OCM_SHAREES bool false Include OCM sharees when listing users. OCIS_EVENTS_ENDPOINTGRAPH_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Set to a empty string to disable emitting events. OCIS_EVENTS_CLUSTERGRAPH_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_INSECUREGRAPH_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEGRAPH_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided GRAPH_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSGRAPH_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEGRAPH_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDGRAPH_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. GRAPH_AVAILABLE_ROLES []string [b1e2218d-eef8-4d4c-b82d-0f1a1b48f3b5 a8d5fe5e-96e3-418d-825b-534dbdf22b99 fb6c3e19-e378-47e5-b277-9732f9de6e21 58c63c02-1d89-4572-916a-870abc5a1b7d 2d00ce52-1fc2-4dbc-8b95-a73b73395f5a 1c996275-f1c9-4e71-abdf-a42f6495e960 312c0871-5ef7-4b3a-85b6-0e4074c64049] A comma separated list of roles that are available for assignment. OCIS_MAX_CONCURRENCYGRAPH_MAX_CONCURRENCY int 20 The maximum number of concurrent requests the service will handle. OCIS_KEYCLOAK_BASE_PATHGRAPH_KEYCLOAK_BASE_PATH string The URL to access keycloak. OCIS_KEYCLOAK_CLIENT_IDGRAPH_KEYCLOAK_CLIENT_ID string The client id to authenticate with keycloak. OCIS_KEYCLOAK_CLIENT_SECRETGRAPH_KEYCLOAK_CLIENT_SECRET string The client secret to use in authentication. OCIS_KEYCLOAK_CLIENT_REALMGRAPH_KEYCLOAK_CLIENT_REALM string The realm the client is defined in. OCIS_KEYCLOAK_USER_REALMGRAPH_KEYCLOAK_USER_REALM string The realm users are defined. OCIS_KEYCLOAK_INSECURE_SKIP_VERIFYGRAPH_KEYCLOAK_INSECURE_SKIP_VERIFY bool false Disable TLS certificate validation for Keycloak connections. Do not set this in production environments. OCIS_SERVICE_ACCOUNT_IDGRAPH_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETGRAPH_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Abstract The graph service provides the Graph API which is a RESTful web API used to access Infinite Scale resources. It is inspired by the Microsoft Graph API and can be used by clients or other services or extensions. Visit the Libre Graph API for a detailed specification of the API implemented by the graph service.\nTable of Contents Sequence Diagram Users and Groups API LDAP Configuration Read-Only Access to Existing LDAP Servers Using a Write Enabled LDAP Server Query Filters Provided by the Graph API Caching Keycloak Configuration For The Personal Data Export Keycloak Client Configuration Translations Translation Rules Default Language Unified Role Management Example Yaml Config Sequence Diagram The following image gives an overview of the scenario when a client requests to list available spaces the user has access to."},{"id":59,"href":"/services/idm/","title":"IDM","parent":"Services","content":" Abstract The IDM service provides a minimal LDAP Service, based on Libregraph idm, for oCIS. It is started as part of the default configuration and serves as a central place for storing user and group information.\nIt is mainly targeted at small oCIS installations. For larger setups it is recommended to replace IDM with a “real” LDAP server or to switch to an external identity management solution.\nIDM listens on port 9235 by default. In the default configuration it only accepts TLS-protected connections (LDAPS). The BaseDN of the LDAP tree is o=libregraph-idm. IDM gives LDAP write permissions to a single user (DN: uid=libregraph,ou=sysusers,o=libregraph-idm). Any other authenticated user has read-only access. IDM stores its data in a boltdb file idm/ocis.boltdb inside the oCIS base data directory.\nNote: IDM is limited in its functionality. It only supports a subset of the LDAP operations (namely BIND, SEARCH, ADD, MODIFY, DELETE). Also, IDM currently does not do any schema verification (like. structural vs. auxiliary object classes, require and option attributes, syntax checks, …). Therefore it is not meant as a general purpose LDAP server.\nTable of Contents Example Yaml Config Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Autogenerated # Filename: idm-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9239 token: \u0026#34;\u0026#34; pprof: false zpages: false idm: ldaps_addr: 127.0.0.1:9235 cert: /var/lib/ocis/idm/ldap.crt key: /var/lib/ocis/idm/ldap.key database: /var/lib/ocis/idm/ocis.boltdb create_demo_users: false demo_users_issuer_url: https://localhost:9200 service_user_passwords: admin_password: \u0026#34;\u0026#34; idm_password: \u0026#34;\u0026#34; reva_password: \u0026#34;\u0026#34; idp_password: \u0026#34;\u0026#34; admin_user_id: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDIDM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEIDM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTIDM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORIDM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELIDM_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYIDM_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORIDM_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEIDM_LOG_FILE string The path to the log file. Activates logging to this file if set. IDM_DEBUG_ADDR string 127.0.0.1:9239 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. IDM_DEBUG_TOKEN string Token to secure the metrics endpoint. IDM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. IDM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. IDM_LDAPS_ADDR string 127.0.0.1:9235 Listen address for the LDAPS listener (ip-addr:port). IDM_LDAPS_CERT string /var/lib/ocis/idm/ldap.crt File name of the TLS server certificate for the LDAPS listener. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. IDM_LDAPS_KEY string /var/lib/ocis/idm/ldap.key File name for the TLS certificate key for the server certificate. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. IDM_DATABASE_PATH string /var/lib/ocis/idm/ocis.boltdb Full path to the IDM backend database. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. IDM_CREATE_DEMO_USERS bool false Flag to enable or disable the creation of the demo users. OCIS_URLOCIS_OIDC_ISSUER string https://localhost:9200 The OIDC issuer URL to assign to the demo users. IDM_ADMIN_PASSWORD string Password to set for the oCIS \u0026lsquo;admin\u0026rsquo; user. Either cleartext or an argon2id hash. IDM_SVC_PASSWORD string Password to set for the \u0026lsquo;idm\u0026rsquo; service user. Either cleartext or an argon2id hash. IDM_REVASVC_PASSWORD string Password to set for the \u0026lsquo;reva\u0026rsquo; service user. Either cleartext or an argon2id hash. IDM_IDPSVC_PASSWORD string Password to set for the \u0026lsquo;idp\u0026rsquo; service user. Either cleartext or an argon2id hash. OCIS_ADMIN_USER_IDIDM_ADMIN_USER_ID string ID of the user that should receive admin privileges. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand. ","description":"Abstract The IDM service provides a minimal LDAP Service, based on Libregraph idm, for oCIS. It is started as part of the default configuration and serves as a central place for storing user and group information.\nIt is mainly targeted at small oCIS installations. For larger setups it is recommended to replace IDM with a “real” LDAP server or to switch to an external identity management solution.\nIDM listens on port 9235 by default."},{"id":60,"href":"/services/idp/","title":"IDP","parent":"Services","content":" Abstract This service provides a builtin minimal OpenID Connect provider based on LibreGraph Connect (lico) for ocis.\nIt is mainly targeted at smaller installations. For larger setups it is recommended to replace IDP with an external OpenID Connect Provider.\nBy default, it is configured to use the ocis IDM service as its LDAP backend for looking up and authenticating users. Other backends like an external LDAP server can be configured via a set of enviroment variables.\nNote that translations provided by the IDP service are not maintained via ownCloud but part of the embedded LibreGraph Connect Identifier package.\nTable of Contents Example Yaml Config Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 # Autogenerated # Filename: idp-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9134 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9130 root: / tls_cert: /var/lib/ocis/idp/server.crt tls_key: /var/lib/ocis/idp/server.key tls: false reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; machine_auth_api_key: \u0026#34;\u0026#34; asset: asset: \u0026#34;\u0026#34; login-background-url: \u0026#34;\u0026#34; idp: iss: https://localhost:9200 identity_manager: ldap uri_base_path: \u0026#34;\u0026#34; sign_in_uri: \u0026#34;\u0026#34; signed_out_uri: \u0026#34;\u0026#34; authorization_endpoint_uri: \u0026#34;\u0026#34; ldap_insecure: false trusted_proxy: [] allow_scope: [] allow_client_guests: false allow_dynamic_client_registration: false encrypt_secret_file: /var/lib/ocis/idp/encryption.key listen: \u0026#34;\u0026#34; identifierdefaultbannerlogo: \u0026#34;\u0026#34; identifierdefaultsigninpagetext: \u0026#34;\u0026#34; identifierdefaultusernamehinttext: \u0026#34;\u0026#34; identifieruilocales: [] signing_kid: private-key signing_method: PS256 signing_private_key_files: - /var/lib/ocis/idp/private-key.pem validation_keys_path: \u0026#34;\u0026#34; cookiebackenduri: \u0026#34;\u0026#34; cookienames: [] cookiesamesite: 3 access_token_duration_seconds: 300 id_token_duration_seconds: 300 refresh_token_duration_seconds: 2592000 dynamic_client_secret_duration_seconds: 0 clients: - id: web name: ownCloud Web app trusted: true secret: \u0026#34;\u0026#34; redirect_uris: - \u0026#39;{{OCIS_URL}}/\u0026#39; - \u0026#39;{{OCIS_URL}}/oidc-callback.html\u0026#39; - \u0026#39;{{OCIS_URL}}/oidc-silent-redirect.html\u0026#39; origins: - \u0026#39;{{OCIS_URL}}\u0026#39; application_type: \u0026#34;\u0026#34; - id: xdXOt13JKxym1B1QcEncf2XDkLAexMBFwiT9j6EfhhHFJhs2KM9jbjTmf8JBXE69 name: ownCloud desktop app trusted: false secret: UBntmLjC2yYCeHwsyj73Uwo9TAaecAetRwMw0xYcvNL9yRdLSUi0hUAHfvCHFeFh redirect_uris: - http://127.0.0.1 - http://localhost origins: [] application_type: native - id: e4rAsNUSIUs0lF4nbv9FmCeUkTlV9GdgTLDH1b5uie7syb90SzEVrbN7HIpmWJeD name: ownCloud Android app trusted: false secret: dInFYGV33xKzhbRmpqQltYNdfLdJIfJ9L5ISoKhNoT9qZftpdWSP71VrpGR9pmoD redirect_uris: - oc://android.owncloud.com origins: [] application_type: native - id: mxd5OQDk6es5LzOzRvidJNfXLUZS2oN3oUFeXPP8LpPrhx3UroJFduGEYIBOxkY1 name: ownCloud iOS app trusted: false secret: KFeFWWEZO9TkisIQzR3fo7hfiMXlOpaqP8CFuTbSHzV1TUuGECglPxpiVKJfOXIx redirect_uris: - oc://ios.owncloud.com origins: [] application_type: native ldap: uri: ldaps://localhost:9235 cacert: /var/lib/ocis/idm/ldap.crt bind_dn: uid=idp,ou=sysusers,o=libregraph-idm bind_password: \u0026#34;\u0026#34; base_dn: ou=users,o=libregraph-idm scope: sub login_attribute: uid email_attribute: mail name_attribute: displayName uuid_attribute: ownCloudUUID uuid_attribute_type: text user_enabled_attribute: ownCloudUserEnabled filter: \u0026#34;\u0026#34; objectclass: inetOrgPerson Environment Variables Name Type Default Value Description IDP_PASSWORD_RESET_URI string The URI where a user can reset their password. OCIS_TRACING_ENABLEDIDP_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEIDP_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTIDP_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORIDP_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELIDP_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYIDP_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORIDP_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEIDP_LOG_FILE string The path to the log file. Activates logging to this file if set. IDP_DEBUG_ADDR string 127.0.0.1:9134 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. IDP_DEBUG_TOKEN string Token to secure the metrics endpoint. IDP_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. IDP_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. IDP_HTTP_ADDR string 127.0.0.1:9130 The bind address of the HTTP service. IDP_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. IDP_TRANSPORT_TLS_CERT string /var/lib/ocis/idp/server.crt Path/File name of the TLS server certificate (in PEM format) for the IDP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. IDP_TRANSPORT_TLS_KEY string /var/lib/ocis/idp/server.key Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the IDP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. IDP_TLS bool false Disable or Enable HTTPS for the communication between the Proxy service and the IDP service. If set to \u0026rsquo;true\u0026rsquo;, the key and cert files need to be configured and present. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_MACHINE_AUTH_API_KEYIDP_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. IDP_ASSET_PATH string Serve IDP assets from a path on the filesystem instead of the builtin assets. IDP_LOGIN_BACKGROUND_URL string Configure an alternative URL to the background image for the login page. OCIS_URLOCIS_OIDC_ISSUERIDP_ISS string https://localhost:9200 The OIDC issuer URL to use. IDP_IDENTITY_MANAGER string ldap The identity manager implementation to use. Supported identity managers are \u0026rsquo;ldap\u0026rsquo;, \u0026lsquo;cs3\u0026rsquo;, \u0026rsquo;libregraph\u0026rsquo; and \u0026lsquo;guest\u0026rsquo;. IDP_URI_BASE_PATH string IDP uri base path (defaults to \u0026lsquo;\u0026rsquo;). IDP_SIGN_IN_URI string IDP sign-in url. IDP_SIGN_OUT_URI string IDP sign-out url. IDP_ENDPOINT_URI string URL of the IDP endpoint. OCIS_LDAP_INSECUREIDP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. IDP_ALLOW_CLIENT_GUESTS bool false Allow guest clients to access oCIS. IDP_ALLOW_DYNAMIC_CLIENT_REGISTRATION bool false Allow dynamic client registration. IDP_ENCRYPTION_SECRET_FILE string /var/lib/ocis/idp/encryption.key Path to the encryption secret file, if unset, a new certificate will be autogenerated upon each restart, thus invalidating all existing sessions. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. IDP_SIGNING_KID string private-key Value of the KID (Key ID) field which is used in created tokens to uniquely identify the signing-private-key. IDP_SIGNING_METHOD string PS256 Signing method of IDP requests like \u0026lsquo;PS256\u0026rsquo; IDP_SIGNING_PRIVATE_KEY_FILES []string [/var/lib/ocis/idp/private-key.pem] A list of private key files for signing IDP requests. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. See the Environment Variable Types description for more details. IDP_VALIDATION_KEYS_PATH string Path to validation keys for IDP requests. IDP_ACCESS_TOKEN_EXPIRATION uint64 300 \u0026lsquo;Access token lifespan in seconds (time before an access token is expired).\u0026rsquo; IDP_ID_TOKEN_EXPIRATION uint64 300 ID token lifespan in seconds (time before an ID token is expired). IDP_REFRESH_TOKEN_EXPIRATION uint64 2592000 Refresh token lifespan in seconds (time before an refresh token is expired). This also limits the duration of an idle offline session. IDP_DYNAMIC_CLIENT_SECRET_DURATION uint64 0 Lifespan in seconds of a dynamically registered OIDC client. OCIS_LDAP_URIIDP_LDAP_URI string ldaps://localhost:9235 Url of the LDAP service to use as IDP. OCIS_LDAP_CACERTIDP_LDAP_TLS_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. OCIS_LDAP_BIND_DNIDP_LDAP_BIND_DN string uid=idp,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDIDP_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. OCIS_LDAP_USER_BASE_DNIDP_LDAP_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_USER_SCOPEIDP_LDAP_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. IDP_LDAP_LOGIN_ATTRIBUTE string uid LDAP User attribute to use for login like \u0026lsquo;uid\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_MAILIDP_LDAP_EMAIL_ATTRIBUTE string mail LDAP User email attribute like \u0026lsquo;mail\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_USERNAMEIDP_LDAP_NAME_ATTRIBUTE string displayName LDAP User name attribute like \u0026lsquo;displayName\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_IDIDP_LDAP_UUID_ATTRIBUTE string ownCloudUUID LDAP User UUID attribute like \u0026lsquo;uid\u0026rsquo;. IDP_LDAP_UUID_ATTRIBUTE_TYPE string text LDAP User uuid attribute type like \u0026rsquo;text\u0026rsquo;. OCIS_LDAP_USER_ENABLED_ATTRIBUTEIDP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP Attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_USER_FILTERIDP_LDAP_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_USER_OBJECTCLASSIDP_LDAP_OBJECTCLASS string inetOrgPerson LDAP User ObjectClass like \u0026lsquo;inetOrgPerson\u0026rsquo;. ","description":"Abstract This service provides a builtin minimal OpenID Connect provider based on LibreGraph Connect (lico) for ocis.\nIt is mainly targeted at smaller installations. For larger setups it is recommended to replace IDP with an external OpenID Connect Provider.\nBy default, it is configured to use the ocis IDM service as its LDAP backend for looking up and authenticating users. Other backends like an external LDAP server can be configured via a set of enviroment variables."},{"id":61,"href":"/services/invitations/","title":"Invitations","parent":"Services","content":" Abstract The invitations service provides an Invitation Manager that can be used to invite external users, aka guests, to an organization.\nUsers invited via the Invitation Manager (via the libre graph API) will have the userType=\u0026quot;Guest\u0026quot;. Users belonging to the organization have the userType=\u0026quot;Member\u0026quot;. The corresponding CS3 API user types used to reperesent this are: USER_TYPE_GUEST and USER_TYPE_PRIMARY.\nTable of Contents Provisioning Backends Keycloak Keycloak Realm Configuration Backend Configuration Bridging Provisioning Delay Example Yaml Config Provisioning Backends When Infinite Scale is used via the IDM service for the user management, users are created using the /graph/v1.0/users endpoint via the libre graph API. For larger deployments, the Keycloak admin API can be used to provision users. In a future step, the endpoint, credentials and body might be made configurable using templates.\nKeycloak The default and currently only available backend used to handle invitations is Keycloak. Keycloak is an open source identity and access management (IAM) system which is also integrated by other Infinite Scale services as an authentication and authorization backend.\nKeycloak Realm Configuration See the example configuration json file of a Keycloak realm the backend will work with. This file includes the invitations client, which is relevant for this service.\nTo use the example json, set the INVITATIONS_KEYCLOAK_CLIENT_ID setting to invitations, though any other client ID can be configured.\nImporting this example into Keycloak will give you a realm that federates with an LDAP server, has the right clients configured and all mappers correctly set. Be sure to set all the credentials after the import, as they will be disabled.\nThe most relevant bits are the mappers for the OWNCLOUD_ID and OWNCLOUD_USER_TYPE user properties.\nBackend Configuration After Keycloak has been configured, the invitation service needs to be configured with the following environment variables:\nINVITATIONS_KEYCLOAK_BASE_PATH: The URL to access Keycloak. INVITATIONS_KEYCLOAK_CLIENT_ID: The client ID of the client to use. In the above example, invitations is used. INVITATIONS_KEYCLOAK_CLIENT_SECRET: The client secret used to authenticate. This can be found in the Keycloak UI. INVITATIONS_KEYCLOAK_CLIENT_REALM: The realm where the client was added. In the example above, ocis is used. INVITATIONS_KEYCLOAK_USER_REALM: The realm where to add the users. In the example above, ocis is used. INVITATIONS_KEYCLOAK_INSECURE_SKIP_VERIFY: If set to true, the verification of the Keycloak HTTPS certificate is skipped. This is not recommended in production environments. Bridging Provisioning Delay Consider that when a guest account has to be provisioned in an external user management, there might be a delay between creating the user and the user being available in the local Infinite Scale system.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 # Autogenerated # Filename: invitations-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9269 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9265 root: /graph/v1.0 cors: allow_origins: - https://localhost:9200 allow_methods: [] allow_headers: [] allow_credentials: false tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; keycloak: base_path: \u0026#34;\u0026#34; client_id: \u0026#34;\u0026#34; client_secret: \u0026#34;\u0026#34; client_realm: \u0026#34;\u0026#34; user_realm: \u0026#34;\u0026#34; insecure_skip_verify: false token_manager: jwt_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDINVITATIONS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEINVITATIONS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTINVITATIONS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORINVITATIONS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELINVITATIONS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYINVITATIONS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORINVITATIONS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEINVITATIONS_LOG_FILE string The path to the log file. Activates logging to this file if set. INVITATIONS_DEBUG_ADDR string 127.0.0.1:9269 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. INVITATIONS_DEBUG_TOKEN string Token to secure the metrics endpoint. INVITATIONS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. INVITATIONS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. INVITATIONS_HTTP_ADDR string 127.0.0.1:9265 The bind address of the HTTP service. INVITATIONS_HTTP_ROOT string /graph/v1.0 Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSINVITATIONS_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSINVITATIONS_CORS_ALLOW_METHODS []string [] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSINVITATIONS_CORS_ALLOW_HEADERS []string [] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSINVITATIONS_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_KEYCLOAK_BASE_PATHINVITATIONS_KEYCLOAK_BASE_PATH string The URL to access keycloak. OCIS_KEYCLOAK_CLIENT_IDINVITATIONS_KEYCLOAK_CLIENT_ID string The client ID to authenticate with keycloak. OCIS_KEYCLOAK_CLIENT_SECRETINVITATIONS_KEYCLOAK_CLIENT_SECRET string The client secret to use in authentication. OCIS_KEYCLOAK_CLIENT_REALMINVITATIONS_KEYCLOAK_CLIENT_REALM string The realm the client is defined in. OCIS_KEYCLOAK_USER_REALMINVITATIONS_KEYCLOAK_USER_REALM string The realm users are defined. OCIS_KEYCLOAK_INSECURE_SKIP_VERIFYINVITATIONS_KEYCLOAK_INSECURE_SKIP_VERIFY bool false Disable TLS certificate validation for Keycloak connections. Do not set this in production environments. OCIS_JWT_SECRETINVITATIONS_JWT_SECRET string The secret to mint and validate jwt tokens. ","description":"Abstract The invitations service provides an Invitation Manager that can be used to invite external users, aka guests, to an organization.\nUsers invited via the Invitation Manager (via the libre graph API) will have the userType=\u0026quot;Guest\u0026quot;. Users belonging to the organization have the userType=\u0026quot;Member\u0026quot;. The corresponding CS3 API user types used to reperesent this are: USER_TYPE_GUEST and USER_TYPE_PRIMARY.\nTable of Contents Provisioning Backends Keycloak Keycloak Realm Configuration Backend Configuration Bridging Provisioning Delay Example Yaml Config Provisioning Backends When Infinite Scale is used via the IDM service for the user management, users are created using the /graph/v1."},{"id":62,"href":"/services/nats/","title":"Nats","parent":"Services","content":" Abstract The nats service is the event broker of the system. It distributes events among all other services and enables other services to communicate asynchronous.\nServices can Publish events to the nats service and nats will store these events on disk and distribute these events to other services eventually. Services can Consume events from the nats service by registering to a ConsumerGroup. Each ConsumerGroup is guaranteed to get each event exactly once. In most cases, each service will register its own ConsumerGroup. When there are multiple instances of a service, those instances will usually use that ConsumerGroup as common resource.\nTable of Contents Underlying Technology Default Registry Persistance TLS Encryption Example Yaml Config Underlying Technology As the service name suggests, this service is based on NATS specifically on NATS Jetstream to enable persistence.\nDefault Registry By default, nats-js-kv is configured as embedded default registry via the MICRO_REGISTRY environment variable. If you do not want using the build-in nats registry, set MICRO_REGISTRY_ADDRESS to the address of the nats-js cluster, which is the same value as OCIS_EVENTS_ENDPOINT. Optionally use MICRO_REGISTRY_AUTH_USERNAME and MICRO_REGISTRY_AUTH_PASSWORD to authenticate with the external nats cluster.\nPersistance To be able to deliver events even after a system or service restart, nats will store events in a folder on the local filesystem. This folder can be specified by setting the NATS_NATS_STORE_DIR enviroment variable. If not set, the service will fall back to $OCIS_BASE_DATA_PATH/nats.\nTLS Encryption Connections to the nats service (Publisher/Consumer see above) can be TLS encrypted by setting the corresponding env vars NATS_TLS_CERT, NATS_TLS_KEY to the cert and key files and ENABLE_TLS to true. Checking the certificate of incoming request can be disabled with the NATS_EVENTS_ENABLE_TLS environment variable.\nCertificate files can also be set via global variables starting with OCIS_, for details see the environment variable list.\nNote that using TLS is highly recommended for productive environments, especially when using container orchestration with Kubernetes.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 # Autogenerated # Filename: nats-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9234 token: \u0026#34;\u0026#34; pprof: false zpages: false nats: host: 127.0.0.1 port: 9233 clusterid: ocis-cluster store_dir: /var/lib/ocis/nats tls_cert: /var/lib/ocis/nats/tls.crt tls_key: /var/lib/ocis/nats/tls.key tls_skip_verify_client_cert: false enable_tls: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDNATS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPENATS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTNATS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORNATS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELNATS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYNATS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORNATS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILENATS_LOG_FILE string The path to the log file. Activates logging to this file if set. NATS_DEBUG_ADDR string 127.0.0.1:9234 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. NATS_DEBUG_TOKEN string Token to secure the metrics endpoint. NATS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. NATS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. NATS_NATS_HOST string 127.0.0.1 Bind address. NATS_NATS_PORT int 9233 Bind port. NATS_NATS_CLUSTER_ID string ocis-cluster ID of the NATS cluster. NATS_NATS_STORE_DIR string /var/lib/ocis/nats The directory where the filesystem storage will store NATS JetStream data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/nats. NATS_TLS_CERT string /var/lib/ocis/nats/tls.crt Path/File name of the TLS server certificate (in PEM format) for the NATS listener. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/nats. NATS_TLS_KEY string /var/lib/ocis/nats/tls.key Path/File name for the TLS certificate key (in PEM format) for the NATS listener. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/nats. OCIS_INSECURENATS_TLS_SKIP_VERIFY_CLIENT_CERT bool false Whether the NATS server should skip the client certificate verification during the TLS handshake. OCIS_EVENTS_ENABLE_TLSNATS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. ","description":"Abstract The nats service is the event broker of the system. It distributes events among all other services and enables other services to communicate asynchronous.\nServices can Publish events to the nats service and nats will store these events on disk and distribute these events to other services eventually. Services can Consume events from the nats service by registering to a ConsumerGroup. Each ConsumerGroup is guaranteed to get each event exactly once."},{"id":63,"href":"/services/notifications/","title":"Notification","parent":"Services","content":" Abstract The notification service is responsible for sending emails to users informing them about events that happened. To do this, it hooks into the event system and listens for certain events that the users need to be informed about.\nTable of Contents Email Notification Templates Templates subfolder hierarchy Translations Translation Rules Default Language Example Yaml Config Email Notification Templates The notifications service has embedded email text and html body templates.\nEmail templates can use the placeholders {{ .Greeting }}, {{ .MessageBody }} and {{ .CallToAction }} which are replaced with translations when sent, see the Translations section for more details. Though the email subject is also part of translations, it has no placeholder as it is a mandatory email component.\nDepending on the email purpose, placeholders will contain different strings. An individual translatable string is available for each purpose, finally resolved by the placeholder. The embedded templates are available for all deployment scenarios.\ntemplate placeholders translated strings \u0026lt;-- source strings \u0026lt;-- purpose final output In addition, the notifications service supports custom templates. Custom email templates take precedence over the embedded ones. If a custom email template exists, the embedded templates are not used. To configure custom email templates, the NOTIFICATIONS_EMAIL_TEMPLATE_PATH environment variable needs to point to a base folder that will contain the email templates and follow the templates subfolder hierarchy.This path must be available from all instances of the notifications service, a shared storage is recommended.\n{NOTIFICATIONS_EMAIL_TEMPLATE_PATH}/templates/text/email.text.tmpl {NOTIFICATIONS_EMAIL_TEMPLATE_PATH}/templates/html/email.html.tmpl {NOTIFICATIONS_EMAIL_TEMPLATE_PATH}/templates/html/img/ The source templates provided by ocis you can derive from are located in the following base folder https://github.com/owncloud/ocis/tree/master/services/notifications/pkg/email/templates with subfolders templates/text and templates/html.\ntext/email.text.tmpl html/email.html.tmpl Templates subfolder hierarchy templates │ └───html │ │ email.html.tmpl │ │ │ └───img │ │ logo-mail.gif │ └───text │ email.text.tmpl Custom email templates referenced via NOTIFICATIONS_EMAIL_TEMPLATE_PATH must also be located in subfolder templates/text and templates/html and must have the same names as the embedded templates. It is important that the names of these files and folders match the embedded ones. The templates/html subfolder contains a default HTML template provided by ocis. When using a custom HTML template, hosted images can either be linked with standard HTML code like \u0026lt;img src=\u0026quot;https://raw.githubusercontent.com/owncloud/core/master/core/img/logo-mail.gif\u0026quot; alt=\u0026quot;logo-mail\u0026quot;/\u0026gt; or embedded as a CID source \u0026lt;img src=\u0026quot;cid:logo-mail.gif\u0026quot; alt=\u0026quot;logo-mail\u0026quot;/\u0026gt;. In the latter case, image files must be located in the templates/html/img subfolder. Supported embedded image types are png, jpeg, and gif. Consider that embedding images via a CID resource may not be fully supported in all email web clients.\nTranslations The notifications service has embedded translations sourced via transifex to provide a basic set of translated languages. These embedded translations are available for all deployment scenarios.\nIn addition, the service supports custom translations, though it is currently not possible to just add custom translations to embedded ones. If custom translations are configured, the embedded ones are not used. To configure custom translations, the NOTIFICATIONS_TRANSLATION_PATH environment variable needs to point to a base folder that will contain the translation files. This path must be available from all instances of the notifications service, a shared storage is recommended. Translation files must be of type .po or .mo. For each language, the filename needs to be notifications.po (or notifications.mo) and stored in a folder structure defining the language code. In general the path/name pattern for a translation file needs to be:\n{NOTIFICATIONS_TRANSLATION_PATH}/{language-code}/LC_MESSAGES/notifications.po The language code pattern is composed of language[_territory] where language is the base language and _territory is optional and defines a country.\nFor example, for the language de, one needs to place the corresponding translation files to {NOTIFICATIONS_TRANSLATION_PATH}/de/LC_MESSAGES/notifications.po.\nImportant: For the time being, the embedded ownCloud Web frontend only supports the main language code but does not handle any territory. When strings are available in the language code language_territory, the web frontend does not see it as it only requests language. In consequence, any translations made must exist in the requested language to avoid a fallback to the default.\nTranslation Rules If a requested language code is not available, the service tries to fall back to the base language if available. For example, if the requested language-code de_DE is not available, the service tries to fall back to translations in the de folder. If the base language de is also not available, the service falls back to the system\u0026rsquo;s default English (en), which is the source of the texts provided by the code. Default Language The default language can be defined via the OCIS_DEFAULT_LANGUAGE environment variable. See the settings service for a detailed description.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 # Autogenerated # Filename: notifications-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9174 token: \u0026#34;\u0026#34; pprof: false zpages: false ocis_url: https://localhost:9200 notifications: SMTP: smtp_host: \u0026#34;\u0026#34; smtp_port: 0 smtp_sender: \u0026#34;\u0026#34; smtp_username: \u0026#34;\u0026#34; smtp_password: \u0026#34;\u0026#34; insecure: false smtp_authentication: \u0026#34;\u0026#34; smtp_encryption: none events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; email_template_path: \u0026#34;\u0026#34; translation_path: \u0026#34;\u0026#34; default_language: \u0026#34;\u0026#34; reva_gateway: com.owncloud.api.gateway grpc_client_tls: null grpc_client_tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDNOTIFICATIONS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPENOTIFICATIONS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTNOTIFICATIONS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORNOTIFICATIONS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELNOTIFICATIONS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYNOTIFICATIONS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORNOTIFICATIONS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILENOTIFICATIONS_LOG_FILE string The path to the log file. Activates logging to this file if set. NOTIFICATIONS_DEBUG_ADDR string 127.0.0.1:9174 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. NOTIFICATIONS_DEBUG_TOKEN string Token to secure the metrics endpoint. NOTIFICATIONS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. NOTIFICATIONS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_URLNOTIFICATIONS_WEB_UI_URL string https://localhost:9200 The public facing URL of the oCIS Web UI, used e.g. when sending notification eMails NOTIFICATIONS_SMTP_HOST string SMTP host to connect to. NOTIFICATIONS_SMTP_PORT int 0 Port of the SMTP host to connect to. NOTIFICATIONS_SMTP_SENDER string Sender address of emails that will be sent (e.g. \u0026lsquo;ownCloud noreply@example.com\u0026rsquo;. NOTIFICATIONS_SMTP_USERNAME string Username for the SMTP host to connect to. NOTIFICATIONS_SMTP_PASSWORD string Password for the SMTP host to connect to. NOTIFICATIONS_SMTP_INSECURE bool false Allow insecure connections to the SMTP server. NOTIFICATIONS_SMTP_AUTHENTICATION string Authentication method for the SMTP communication. Possible values are \u0026rsquo;login\u0026rsquo;, \u0026lsquo;plain\u0026rsquo;, \u0026lsquo;crammd5\u0026rsquo;, \u0026rsquo;none\u0026rsquo; or \u0026lsquo;auto\u0026rsquo;. If set to \u0026lsquo;auto\u0026rsquo; or unset, the authentication method is automatically negotiated with the server. NOTIFICATIONS_SMTP_ENCRYPTION string none Encryption method for the SMTP communication. Possible values are \u0026lsquo;starttls\u0026rsquo;, \u0026lsquo;ssltls\u0026rsquo; and \u0026rsquo;none\u0026rsquo;. OCIS_EVENTS_ENDPOINTNOTIFICATIONS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERNOTIFICATIONS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURENOTIFICATIONS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATENOTIFICATIONS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSNOTIFICATIONS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMENOTIFICATIONS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDNOTIFICATIONS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EMAIL_TEMPLATE_PATHNOTIFICATIONS_EMAIL_TEMPLATE_PATH string Path to Email notification templates overriding embedded ones. OCIS_TRANSLATION_PATHNOTIFICATIONS_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_SERVICE_ACCOUNT_IDNOTIFICATIONS_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETNOTIFICATIONS_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Abstract The notification service is responsible for sending emails to users informing them about events that happened. To do this, it hooks into the event system and listens for certain events that the users need to be informed about.\nTable of Contents Email Notification Templates Templates subfolder hierarchy Translations Translation Rules Default Language Example Yaml Config Email Notification Templates The notifications service has embedded email text and html body templates."},{"id":64,"href":"/services/ocdav/","title":"ocDAV","parent":"Services","content":" Abstract The ocdav service provides the WebDAV API which is required by ownCloud clients. Previews (thumbnails) are provided by the WebDAV service.\nTable of Contents Example Yaml Config Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 # Autogenerated # Filename: ocdav-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9163 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9350 protocol: tcp prefix: \u0026#34;\u0026#34; cors: allow_origins: - https://localhost:9200 allow_methods: - OPTIONS - HEAD - GET - PUT - POST - DELETE - MKCOL - PROPFIND - PROPPATCH - MOVE - COPY - REPORT - SEARCH allow_headers: - Origin - Accept - Content-Type - Depth - Authorization - Ocs-Apirequest - If-None-Match - If-Match - Destination - Overwrite - X-Request-Id - X-Requested-With - Tus-Resumable - Tus-Checksum-Algorithm - Upload-Concat - Upload-Length - Upload-Metadata - Upload-Defer-Length - Upload-Expires - Upload-Checksum - Upload-Offset - X-HTTP-Method-Override - Cache-Control allow_credentials: false token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false webdav_namespace: /users/{{.Id.OpaqueId}} files_namespace: /users/{{.Id.OpaqueId}} shares_namespace: /Shares ocm_namespace: /public public_url: https://localhost:9200 insecure: false gateway_request_timeout: 84300 machine_auth_api_key: \u0026#34;\u0026#34; allow_propfind_depth_infinity: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCDAV_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCDAV_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCDAV_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCDAV_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCDAV_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYOCDAV_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOROCDAV_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEOCDAV_LOG_FILE string The path to the log file. Activates logging to this file if set. OCDAV_DEBUG_ADDR string 127.0.0.1:9163 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. OCDAV_DEBUG_TOKEN string Token to secure the metrics endpoint. OCDAV_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. OCDAV_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCDAV_HTTP_ADDR string 127.0.0.1:9350 The bind address of the HTTP service. OCDAV_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCDAV_HTTP_PREFIX string A URL path prefix for the handler. OCIS_CORS_ALLOW_ORIGINSOCDAV_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSOCDAV_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT POST DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSOCDAV_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSOCDAV_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_JWT_SECRETOCDAV_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCDAV_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. OCDAV_WEBDAV_NAMESPACE string /users/{{.Id.OpaqueId}} Jail requests to /dav/webdav into this CS3 namespace. Supports template layouting with CS3 User properties. OCDAV_FILES_NAMESPACE string /users/{{.Id.OpaqueId}} Jail requests to /dav/files/{username} into this CS3 namespace. Supports template layouting with CS3 User properties. OCDAV_SHARES_NAMESPACE string /Shares The human readable path for the share jail. Relative to a users personal space root. Upcased intentionally. OCDAV_OCM_NAMESPACE string /public The human readable path prefix for the ocm shares. OCIS_URLOCDAV_PUBLIC_URL string https://localhost:9200 URL where oCIS is reachable for users. OCIS_INSECUREOCDAV_INSECURE bool false Allow insecure connections to the GATEWAY service. OCDAV_GATEWAY_REQUEST_TIMEOUT int64 84300 Request timeout in seconds for requests from the oCDAV service to the GATEWAY service. OCIS_MACHINE_AUTH_API_KEYOCDAV_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. OCIS_EDITIONOCDAV_EDITION string Community Edition of oCIS. Used for branding purposes. OCDAV_ALLOW_PROPFIND_DEPTH_INFINITY bool false Allow the use of depth infinity in PROPFINDS. When enabled, a propfind will traverse through all subfolders. If many subfolders are expected, depth infinity can cause heavy server load and/or delayed response times. ","description":"Abstract The ocdav service provides the WebDAV API which is required by ownCloud clients. Previews (thumbnails) are provided by the WebDAV service.\nTable of Contents Example Yaml Config Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 # Autogenerated # Filename: ocdav-config-example."},{"id":65,"href":"/services/ocm/","title":"OCM","parent":"Services","content":" Abstract The ocm service provides federated sharing functionality based on the sciencemesh and ocm HTTP APIs. Internally the ocm service consists of the following services and endpoints:\nExternal HTTP APIs:\nsciencemesh: serves the API for the invitation workflow ocmd: serves the API for managing federated shares Internal GRPC APIs:\nocmproviderauthorizer: manages the list of trusted providers and verifies requests ocminvitemanager: manages the list and state of invite tokens ocmshareprovider: manages ocm shares on the sharer ocmcore: used for creating federated shares on the receiver side authprovider: authenticates webdav requests using the ocm share tokens Table of Contents Enable OCM Trust Between Instances Invitation Workflow Creating Shares Example Yaml Config Enable OCM To enable OpenCloudMesh, you have to set the following environment variable.\nOCIS_ENABLE_OCM=true Trust Between Instances The ocm services implements an invitation workflow which needs to be followed before creating federated shares. Invitations are limited to trusted instances, however.\nThe list of trusted instances is managed by the ocmproviderauthorizer service. The only supported backend currently is json which stores the list in a json file on disk. Note that the ocmproviders.json file, which holds that configuration, is expected to be located in the root of the ocis config directory if not otherwise defined. See the OCM_OCM_PROVIDER_AUTHORIZER_PROVIDERS_FILE envvar for more details.\nWhen all instances of a federation should trust each other, an ocmproviders.json file like this can be used for all instances:\n[ { \u0026#34;name\u0026#34;: \u0026#34;oCIS Test\u0026#34;, \u0026#34;full_name\u0026#34;: \u0026#34;oCIS Test provider\u0026#34;, \u0026#34;organization\u0026#34;: \u0026#34;oCIS\u0026#34;, \u0026#34;domain\u0026#34;: \u0026#34;cloud.ocis.test\u0026#34;, \u0026#34;homepage\u0026#34;: \u0026#34;https://ocis.test\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;oCIS Example cloud storage\u0026#34;, \u0026#34;services\u0026#34;: [ { \u0026#34;endpoint\u0026#34;: { \u0026#34;type\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;OCM\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;cloud.ocis.test Open Cloud Mesh API\u0026#34; }, \u0026#34;name\u0026#34;: \u0026#34;cloud.ocis.test - OCM API\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;https://cloud.ocis.test/ocm/\u0026#34;, \u0026#34;is_monitored\u0026#34;: true }, \u0026#34;api_version\u0026#34;: \u0026#34;0.0.1\u0026#34;, \u0026#34;host\u0026#34;: \u0026#34;http://cloud.ocis.test\u0026#34; }, { \u0026#34;endpoint\u0026#34;: { \u0026#34;type\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;Webdav\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;cloud.ocis.test Webdav API\u0026#34; }, \u0026#34;name\u0026#34;: \u0026#34;cloud.ocis.test Example - Webdav API\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;https://cloud.ocis.test/dav/\u0026#34;, \u0026#34;is_monitored\u0026#34;: true }, \u0026#34;api_version\u0026#34;: \u0026#34;0.0.1\u0026#34;, \u0026#34;host\u0026#34;: \u0026#34;https://cloud.ocis.test/\u0026#34; } ] }, { \u0026#34;name\u0026#34;: \u0026#34;ownCloud Test\u0026#34;, \u0026#34;full_name\u0026#34;: \u0026#34;ownCloud Test provider\u0026#34;, \u0026#34;organization\u0026#34;: \u0026#34;ownCloud\u0026#34;, \u0026#34;domain\u0026#34;: \u0026#34;cloud.owncloud.test\u0026#34;, \u0026#34;homepage\u0026#34;: \u0026#34;https://owncloud.test\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;ownCloud Example cloud storage\u0026#34;, \u0026#34;services\u0026#34;: [ { \u0026#34;endpoint\u0026#34;: { \u0026#34;type\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;OCM\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;cloud.owncloud.test Open Cloud Mesh API\u0026#34; }, \u0026#34;name\u0026#34;: \u0026#34;cloud.owncloud.test - OCM API\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;https://cloud.owncloud.test/ocm/\u0026#34;, \u0026#34;is_monitored\u0026#34;: true }, \u0026#34;api_version\u0026#34;: \u0026#34;0.0.1\u0026#34;, \u0026#34;host\u0026#34;: \u0026#34;http://cloud.owncloud.test\u0026#34; }, { \u0026#34;endpoint\u0026#34;: { \u0026#34;type\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;Webdav\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;cloud.owncloud.test Webdav API\u0026#34; }, \u0026#34;name\u0026#34;: \u0026#34;cloud.owncloud.test Example - Webdav API\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;https://cloud.owncloud.test/dav/\u0026#34;, \u0026#34;is_monitored\u0026#34;: true }, \u0026#34;api_version\u0026#34;: \u0026#34;0.0.1\u0026#34;, \u0026#34;host\u0026#34;: \u0026#34;https://cloud.owncloud.test/\u0026#34; } ] } ] Note: the domain must not contain the protocol as it has to match the GOCDB site object domain. The above federation consists of two instances: cloud.owncloud.test and cloud.ocis.test that can use the Invitation workflow described below to generate, send and accept invitations.\nInvitation Workflow Before sharing a resource with a remote user this user has to be invited by the sharer.\nIn order to do so a POST request is sent to the generate-invite endpoint of the sciencemesh API. The generated token is passed on to the receiver, who will then use the accept-invite endpoint to accept the invitation. As a result remote users will be added to the ocminvitemanager on both sides. See invitation flow for the according sequence diagram.\nThe data backend of the ocminvitemanager is configurable. The only supported backend currently is json which stores the data in a json file on disk.\nCreating Shares The below info is outdated as we allow creating federated shares using the graph API. Clients can now discover the available sharing roles and invite federated users using the graph API. OCM Shares are currently created using the ocs API, just like regular shares. The difference is the share type, which is 6 (ShareTypeFederatedCloudShare) in this case, and a few additional parameters required for identifying the remote user.\nSee Create share flow for the according sequence diagram.\nThe data backends of the ocmshareprovider and ocmcore services are configurable. The only supported backend currently is json which stores the data in a json file on disk.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 # Autogenerated # Filename: ocm-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9281 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9280 protocol: tcp prefix: \u0026#34;\u0026#34; cors: allow_origins: - https://localhost:9200 allow_methods: - OPTIONS - HEAD - GET - PUT - POST - DELETE - MKCOL - PROPFIND - PROPPATCH - MOVE - COPY - REPORT - SEARCH allow_headers: - Origin - Accept - Content-Type - Depth - Authorization - Ocs-Apirequest - If-None-Match - If-Match - Destination - Overwrite - X-Request-Id - X-Requested-With - Tus-Resumable - Tus-Checksum-Algorithm - Upload-Concat - Upload-Length - Upload-Metadata - Upload-Defer-Length - Upload-Expires - Upload-Checksum - Upload-Offset - X-HTTP-Method-Override - Cache-Control allow_credentials: false middleware: auth: credentials_by_user_agent: {} grpc: addr: 127.0.0.1:9282 tls: null protocol: \u0026#34;\u0026#34; grpc_client_tls: null service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; ocmd: prefix: ocm expose_recipient_display_name: false sciencemesh: prefix: sciencemesh science_mesh_directory_url: \u0026#34;\u0026#34; ocm_invite_manager: driver: json drivers: json: file: /var/lib/ocis/storage/ocm/ocminvites.json token_expiration: 24h0m0s timeout: 30s insecure: false ocm_provider_authorizer_driver: json ocm_provider_authorizer_drivers: json: providers: /etc/ocis/ocmproviders.json ocm_share_provider: driver: json drivers: json: file: /var/lib/ocis/storage/ocm/ocmshares.json insecure: false webapp_template: \u0026#34;\u0026#34; ocm_core: driver: json drivers: json: file: /var/lib/ocis/storage/ocm/ocmshares.json ocm_storage_provider: insecure: false storage_root: /var/lib/ocis/storage/ocm data_server_url: http://localhost:9280/data Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCM_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYOCM_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOROCM_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEOCM_LOG_FILE string The path to the log file. Activates logging to this file if set. OCM_DEBUG_ADDR string 127.0.0.1:9281 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. OCM_DEBUG_TOKEN string Token to secure the metrics endpoint. OCM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. OCM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCM_HTTP_ADDR string 127.0.0.1:9280 The bind address of the HTTP service. OCM_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCM_HTTP_PREFIX string The path prefix where OCM can be accessed (defaults to /). OCIS_CORS_ALLOW_ORIGINSOCM_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSOCM_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT POST DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSOCM_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSOCM_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCM_GRPC_ADDR string 127.0.0.1:9282 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLOCM_GRPC_PROTOCOL string The transport protocol of the GRPC service. OCIS_SERVICE_ACCOUNT_IDOCM_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETOCM_SERVICE_ACCOUNT_SECRET string The service account secret. OCIS_EVENTS_ENDPOINTOCM_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTEROCM_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREOCM_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEOCM_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided OCM_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSOCM_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEOCM_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDOCM_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_JWT_SECRETOCM_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCM_OCMD_PREFIX string ocm URL path prefix for the OCMD service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;. OCM_OCMD_EXPOSE_RECIPIENT_DISPLAY_NAME bool false Expose the display name of OCM share recipients. OCM_SCIENCEMESH_PREFIX string sciencemesh URL path prefix for the ScienceMesh service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;. OCM_MESH_DIRECTORY_URL string URL of the mesh directory service. OCM_OCM_INVITE_MANAGER_DRIVER string json Driver to be used to persist OCM invites. Supported value is only \u0026lsquo;json\u0026rsquo;. OCM_OCM_INVITE_MANAGER_JSON_FILE string /var/lib/ocis/storage/ocm/ocminvites.json Path to the JSON file where OCM invite data will be stored. This file is maintained by the instance and must not be changed manually. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/ocm. OCM_OCM_INVITE_MANAGER_TOKEN_EXPIRATION Duration 24h0m0s Expiry duration for invite tokens. OCM_OCM_INVITE_MANAGER_TIMEOUT Duration 30s Timeout specifies a time limit for requests made to OCM endpoints. OCM_OCM_INVITE_MANAGER_INSECURE bool false Disable TLS certificate validation for the OCM connections. Do not set this in production environments. SHARING_OCM_PROVIDER_AUTHORIZER_DRIVER string json Driver to be used to persist ocm invites. Supported value is only \u0026lsquo;json\u0026rsquo;. OCM_OCM_PROVIDER_AUTHORIZER_PROVIDERS_FILE string /etc/ocis/ocmproviders.json Path to the JSON file where ocm invite data will be stored. Defaults to $OCIS_CONFIG_DIR/ocmproviders.json. OCM_OCM_SHARE_PROVIDER_DRIVER string json Driver to be used for the OCM share provider. Supported value is only \u0026lsquo;json\u0026rsquo;. OCM_OCM_SHAREPROVIDER_JSON_FILE string /var/lib/ocis/storage/ocm/ocmshares.json Path to the JSON file where OCM share data will be stored. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. OCM_OCM_SHARE_PROVIDER_INSECURE bool false Disable TLS certificate validation for the OCM connections. Do not set this in production environments. OCM_WEBAPP_TEMPLATE string Template for the webapp url. OCM_OCM_CORE_DRIVER string json Driver to be used for the OCM core. Supported value is only \u0026lsquo;json\u0026rsquo;. OCM_OCM_CORE_JSON_FILE string /var/lib/ocis/storage/ocm/ocmshares.json Path to the JSON file where OCM share data will be stored. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. OCM_OCM_STORAGE_PROVIDER_INSECURE bool false Disable TLS certificate validation for the OCM connections. Do not set this in production environments. OCM_OCM_STORAGE_PROVIDER_STORAGE_ROOT string /var/lib/ocis/storage/ocm Directory where the ocm storage provider persists its data like tus upload info files. OCM_OCM_STORAGE_DATA_SERVER_URL string http://localhost:9280/data URL of the data server, needs to be reachable by the data gateway provided by the frontend service or the user if directly exposed. ","description":"Abstract The ocm service provides federated sharing functionality based on the sciencemesh and ocm HTTP APIs. Internally the ocm service consists of the following services and endpoints:\nExternal HTTP APIs:\nsciencemesh: serves the API for the invitation workflow ocmd: serves the API for managing federated shares Internal GRPC APIs:\nocmproviderauthorizer: manages the list of trusted providers and verifies requests ocminvitemanager: manages the list and state of invite tokens ocmshareprovider: manages ocm shares on the sharer ocmcore: used for creating federated shares on the receiver side authprovider: authenticates webdav requests using the ocm share tokens Table of Contents Enable OCM Trust Between Instances Invitation Workflow Creating Shares Example Yaml Config Enable OCM To enable OpenCloudMesh, you have to set the following environment variable."},{"id":66,"href":"/services/ocs/","title":"OCS Service","parent":"Services","content":" Abstract The ocs service (open collaboration services) serves one purpose: it has an endpoint for signing keys which the web frontend accesses when uploading data.\nTable of Contents Signing-Keys Endpoint Signing-Keys Store Example Yaml Config Signing-Keys Endpoint The ocs service contains an endpoint /cloud/user/signing-key on which a user can GET a signing key. Note, this functionality might be deprecated or moved in the future.\nSigning-Keys Store To authenticate presigned URLs the proxy service needs to read the signing keys from a store that is populated by the ocs service. Possible stores that can be configured via OCS_PRESIGNEDURL_SIGNING_KEYS_STORE are:\nnats-js-kv: Stores data using key-value-store feature of nats jetstream redis-sentinel: Stores data in a configured Redis Sentinel cluster. ocisstoreservice: Stores data in the legacy ocis store service. Requires setting OCS_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES to com.owncloud.api.store. The memory store cannot be used as it does not share the memory from the ocs service signing key memory store, even in a single process.\nMake sure to configure the same store in the proxy service.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCS_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES to the same value as OCS_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES. That way the proxy uses the same nats instance as the ocs service. When using ocisstoreservice the OCS_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES must be set to the service name com.owncloud.api.store. It does not support TTL and stores the presigning keys indefinitely. Also, the store service needs to be started. Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 # Autogenerated # Filename: ocs-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9114 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9110 root: /ocs cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - PUT - PATCH - DELETE - OPTIONS allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Cache-Control allow_credentials: true tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; grpc_client_tls: null signing_keys: store: nats-js-kv addresses: - 127.0.0.1:9233 ttl: 12h0m0s username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYOCS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOROCS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEOCS_LOG_FILE string The path to the log file. Activates logging to this file if set. OCS_DEBUG_ADDR string 127.0.0.1:9114 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. OCS_DEBUG_TOKEN string Token to secure the metrics endpoint. OCS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. OCS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCS_HTTP_ADDR string 127.0.0.1:9110 The bind address of the HTTP service. OCS_HTTP_ROOT string /ocs Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSOCS_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSOCS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSOCS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSOCS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_CACHE_STOREOCS_PRESIGNEDURL_SIGNING_KEYS_STORE string nats-js-kv The type of the signing key store. Supported values are: \u0026lsquo;redis-sentinel\u0026rsquo; and \u0026rsquo;nats-js-kv\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_TTLOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_TTL Duration 12h0m0s Default time to live for signing keys. See the Environment Variable Types description for more details. OCIS_CACHE_AUTH_USERNAMEOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_JWT_SECRETOCS_JWT_SECRET string The secret to mint and validate jwt tokens. ","description":"Abstract The ocs service (open collaboration services) serves one purpose: it has an endpoint for signing keys which the web frontend accesses when uploading data.\nTable of Contents Signing-Keys Endpoint Signing-Keys Store Example Yaml Config Signing-Keys Endpoint The ocs service contains an endpoint /cloud/user/signing-key on which a user can GET a signing key. Note, this functionality might be deprecated or moved in the future.\nSigning-Keys Store To authenticate presigned URLs the proxy service needs to read the signing keys from a store that is populated by the ocs service."},{"id":67,"href":"/services/policies/","title":"Policies","parent":"Services","content":" Abstract The policies service provides a new gRPC API which can be used to check whether a requested operation is allowed or not. To do so, Open Policy Agent (OPA) is used to define the set of rules of what is permitted and what is not.\nPolicies are written in the rego query language. The location of the rego files can be configured via yaml, a configuration via environment variables is not possible.\nTable of Contents General Information Modules gRPC API Proxy Middleware Event Service (Postprocessing) Defining Policies to Evaluate Setting the Query Configuration Proxy Postprocessing Rego Key Match Extend Mimetype File Extension Mapping Example Policies Example Yaml Config General Information The policies service consists of the following modules:\nProxy authorization (middleware) Event authorization (async post-processing) gRPC API (can be used by other services) To configure the policies service, three environment variables need to be defined:\nPOLICIES_ENGINE_TIMEOUT POLICIES_POSTPROCESSING_QUERY PROXY_POLICIES_QUERY Note that each query setting defines the Complete Rules variable defined in the rego rule set the corresponding step uses for the evaluation. If the variable is mistyped or not found, the evaluation defaults to deny. Individual query definitions can be defined for each module.\nTo activate the policies service for a module, it must be started with a yaml configuration that points to one or more rego files. Note that if the service is scaled horizontally, each instance should have access to the same rego files to avoid unpredictable results. If a file path has been configured but the file is not present or accessible, the evaluation defaults to deny.\nWhen using async post-processing which is done via the postprocessing service, the value policies must be added to the POSTPROCESSING_STEPS configuration in postprocessing service in the order where the evaluation should take place.\nvariable defined in the Rego rule set the corresponding step uses for the evaluation. If the variable is mistyped or not found, the evaluation defaults to deny. Individual query definitions can be defined for each module.\nTo activate the policies service for a module, it must be started with a yaml configuration that points to at least one Rego file that contains the complete rule variable to be queried. Note that if the service is scaled horizontally, each instance should have access to the same Rego files to avoid unpredictable results. If a file path has been configured but the file it is not present or accessible, the evaluation defaults to deny.\nWhen using async post-processing via the postprocessing service, the value policies must be added to the POSTPROCESSING_STEPS configuration in the order in which the evaluation should take place. Example: First check if a file contains questionable content via policies. If it looks okay, continue to check for viruses.\nFor configuration examples, the Example Policies from below are used.\nModules gRPC API The gRPC API can be used by any other internal service. It can also be used for example by third parties to find out if an action is allowed or not. This layer is already used by the proxy middleware. There is no configuration necessary, because the query setting (complete rule variable) must be part of the request.\nProxy Middleware The proxy service already includes a middleware which uses the internal gRPC API to evaluate the policies. Since the proxy is in heavy use and every HTTP request is processed here, only simple and quick decisions should be evaluated. More complex queries such as file content evaluation are strongly discouraged.\nIf the evaluation in the proxy results in a \u0026ldquo;denied\u0026rdquo; outcome, the response will return a 403 Permission Denied with the following response body\n{ \u0026#34;error\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;deniedByPolicy\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;Operation denied due to security policies\u0026#34;, \u0026#34;innererror\u0026#34;: { \u0026#34;date\u0026#34;: \u0026#34;2023-09-19T13:22:20Z\u0026#34;, \u0026#34;filename\u0026#34;: \u0026#34;File\u0026#34;, \u0026#34;method\u0026#34;: \u0026#34;POST\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/dav/spaces/some-space-id/Folder/\u0026#34;, \u0026#34;request-id\u0026#34;: \u0026#34;9CFCE925-F9D9-4F26-AB3B-2C1C40A9CD0C\u0026#34; } } } Event Service (Postprocessing) This layer is event-based and part of the postprocessing service. Since processing at this point is asynchronous, the operations can also take longer and be more expensive, like evaluating the contents of a file.\nDefining Policies to Evaluate Each module can have as many policy files as needed for evaluation. Files can also include other files if necessary. To use policies, they have to be saved to a location that is accessible to the policies service. As a good starting point, take the config directory and use a subdirectory collecting all the .rego files, though any other directory can be defined. The config directory is already accessible by all services and usually is included in a xref:maintenance/b-r/backup.adoc[backup] plan.\nIf this is done, it\u0026rsquo;s required to configure the policies service to use these files:\nNOTE: It is important that all necessary files are added to the list of files the policies service uses.\npolicies: engine: policies: - your_path_to_policies/proxy.rego - your_path_to_policies/postprocessing.rego - your_path_to_policies/util.rego Once the references to policy files are configured correctly, the _QUERY configuration needs to be defined for the proxy middleware and for the events service.\nSetting the Query Configuration To define a value for the query evaluation, the following scheme is necessary:\ndata.\u0026lt;package-name\u0026gt;.\u0026lt;complete-rule-variable-name\u0026gt;\nThe keyword data is mandatory and must be present. The package-name is defined in one .rego file like package postprocessing. It is not related to the filename. For more details, see the packages documentation. The complete-rule-variable-name is the variable providing the result of the evaluation. Exact one of the defined files, which is responsible for returning the evaluation result, must contain the combination of \u0026lt;package-name\u0026gt; and \u0026lt;complete-rule-variable-name\u0026gt;. Proxy Note that this setting has to be part of the proxy configuration.\nproxy: policies_middleware: query: data.proxy.granted The same can be achieved by setting the following environment variable:\nexport PROXY_POLICIES_QUERY=data.proxy.granted Postprocessing policies: postprocessing: query: data.postprocessing.granted The same can be achieved by setting the following environment variable:\nexport POLICIES_POSTPROCESSING_QUERY=data.postprocessing.granted As soon as that query is configured, the postprocessing service must be informed to use the policies step by setting the environment variable:\nexport POSTPROCESSING_STEPS=policies Note that additional steps can be configured and their position in the list defines the order of processing. For details see the postprocessing service documentation.\nRego Key Match To identify available keys for OPA, you need to look at engine.go and the policies.swagger.json file. Note that which keys are available depends on from which module it is used.\nExtend Mimetype File Extension Mapping In the extended set of the rego query language, it is possible to get a list of associated file extensions based on a mimetype, for example ocis.mimetype.extensions(\u0026quot;application/pdf\u0026quot;).\nThe list of mappings is restricted by default and is provided by the host system ocis is installed on.\nIn order to extend this list, ocis must be provided with the path to a custom mime.types file that maps mimetypes to extensions. The location for the file must be accessible by all instances of the policy service. As a rule of thumb, use the directory where the ocis configuration files are stored. Note that existing mappings from the host are extended by the definitions from the mime types file, but not replaced.\nThe path to that file can be provided via a yaml configuration or an environment variable. Note to replace the OCIS_CONFIG_DIR string by an existing path.\nexport POLICIES_ENGINE_MIMES=OCIS_CONFIG_DIR/mime.types policies: engine: mimes: OCIS_CONFIG_DIR/mime.types A good example of how such a file should be formatted can be found in the Apache svn repository.\nExample Policies The policies service contains a set of preconfigured example policies. See the deployment examples directory for details. The contained policies disallow Infinite Scale to create certain file types, both via the proxy middleware and the events service via postprocessing.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # Autogenerated # Filename: policies-config-example.yaml grpc: addr: 127.0.0.1:9125 tls: null debug: addr: 127.0.0.1:9129 token: \u0026#34;\u0026#34; pprof: false zpages: false events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; grpc_client_tls: null log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; engine: timeout: 10s policies: [] mimes: \u0026#34;\u0026#34; postprocessing: query: \u0026#34;\u0026#34; tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description POLICIES_GRPC_ADDR string 127.0.0.1:9125 The bind address of the GRPC service. POLICIES_DEBUG_ADDR string 127.0.0.1:9129 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. POLICIES_DEBUG_TOKEN string Token to secure the metrics endpoint. POLICIES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. POLICIES_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_EVENTS_ENDPOINTPOLICIES_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERPOLICIES_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREPOLICIES_EVENTS_TLS_INSECURE bool false Whether the server should skip the client certificate verification during the TLS handshake. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEPOLICIES_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided POLICIES_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSPOLICIES_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEPOLICIES_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDPOLICIES_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_LOG_LEVELPOLICIES_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYPOLICIES_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORPOLICIES_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEPOLICIES_LOG_FILE string The path to the log file. Activates logging to this file if set. POLICIES_ENGINE_TIMEOUT Duration 10s Sets the timeout the rego expression evaluation can take. Rules default to deny if the timeout was reached. See the Environment Variable Types description for more details. POLICIES_ENGINE_MIMES string Sets the mimes file path which maps mimetypes to associated file extensions. See the text description for details. POLICIES_POSTPROCESSING_QUERY string Defines the \u0026lsquo;Complete Rules\u0026rsquo; variable defined in the rego rule set this step uses for its evaluation. Defaults to deny if the variable was not found. OCIS_TRACING_ENABLEDPOLICIES_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPOLICIES_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPOLICIES_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPOLICIES_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. ","description":"Abstract The policies service provides a new gRPC API which can be used to check whether a requested operation is allowed or not. To do so, Open Policy Agent (OPA) is used to define the set of rules of what is permitted and what is not.\nPolicies are written in the rego query language. The location of the rego files can be configured via yaml, a configuration via environment variables is not possible."},{"id":68,"href":"/services/postprocessing/","title":"Postprocessing","parent":"Services","content":" Abstract The postprocessing service handles the coordination of asynchronous postprocessing steps.\nTable of Contents General Prerequisites Postprocessing Functionality Storing Postprocessing Data Additional Prerequisites for the Postprocessing Service Postprocessing Steps Virus Scanning Delay Custom Postprocessing Steps Prerequisites Workflow CLI Commands Resume Postprocessing Example Yaml Config General Prerequisites To use the postprocessing service, an event system needs to be configured for all services. By default, ocis ships with a preconfigured nats service.\nPostprocessing Functionality The storageprovider service (storage-users) can be configured to initiate asynchronous postprocessing by setting the OCIS_ASYNC_UPLOADS environment variable to true. If this is the case, postprocessing will get initiated after uploading a file and all bytes have been received.\nThe postprocessing service will then coordinate configured postprocessing steps like scanning the file for viruses. During postprocessing, the file will be in a processing state where only a limited set of actions are available. Note that this processing state excludes file accessibility by users.\nWhen all postprocessing steps have completed successfully, the file will be made accessible for users.\nStoring Postprocessing Data The postprocessing service needs to store some metadata about uploads to be able to orchestrate post-processing. When running in single binary mode, the default in-memory implementation will be just fine. In distributed deployments it is recommended to use a persistent store, see below for more details.\nThe postprocessing service stores its metadata via the configured store in POSTPROCESSING_STORE. Possible stores are:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Additional Prerequisites for the Postprocessing Service When postprocessing has been enabled, configuring any postprocessing step will require the requested services to be enabled and pre-configured. For example, to use the virusscan step, one needs to have an enabled and configured antivirus service.\nPostprocessing Steps The postporcessing service is individually configurable. This is achieved by allowing a list of postprocessing steps that are processed in order of their appearance in the POSTPROCESSING_STEPS envvar. This envvar expects a comma separated list of steps that will be executed. Currently known steps to the system are virusscan and delay. Custom steps can be added but need an existing target for processing.\nVirus Scanning To enable virus scanning as a postprocessing step after uploading a file, the environment variable POSTPROCESSING_STEPS needs to contain the word virusscan at one location in the list of steps. As a result, each uploaded file gets virus scanned as part of the postprocessing steps. Note that the antivirus service is required to be enabled and configured for this to work.\nDelay Though this is for development purposes only and NOT RECOMMENDED on production systems, setting the environment variable POSTPROCESSING_DELAY to a duration not equal to zero will add a delay step with the configured amount of time. ocis will continue postprocessing the file after the configured delay. Use the environment variable POSTPROCESSING_STEPS and the keyword delay if you have multiple postprocessing steps and want to define their order. If POSTPROCESSING_DELAY is set but the keyword delay is not contained in POSTPROCESSING_STEPS, it will be processed as last postprocessing step without being listed there. In this case, a log entry will be written on service startup to notify the admin about that situation. That log entry can be avoided by adding the keyword delay to POSTPROCESSING_STEPS.\nCustom Postprocessing Steps By using the envvar POSTPROCESSING_STEPS, custom postprocessing steps can be added. Any word can be used as step name but be careful not to conflict with exising keywords like virusscan and delay. In addition, if a keyword is misspelled or the corresponding service does either not exist or does not follow the necessary event communication, the postprocessing service will wait forever getting the required response to proceed and does not continue any other processing.\nPrerequisites For using custom postprocessing steps you need a custom service listening to the configured event system (see General Prerequisites)\nWorkflow When defining a custom postprocessing step (eg. \u0026quot;customstep\u0026quot;), the postprocessing service will eventually send an event during postprocessing. The event will be of type StartPostprocessingStep with its field StepToStart set to \u0026quot;customstep\u0026quot;. When the service defined as custom step receives this event, it can safely execute its actions. The postprocessing service will wait until it has finished its work. The event contains further information (filename, executing user, size, \u0026hellip;) and also requires tokens and URLs to download the file in case byte inspection is necessary.\nOnce the service defined as custom step has finished its work, it should send an event of type PostprocessingFinished via the configured events system back to the postprocessing service. This event needs to contain a FinishedStep field set to \u0026quot;customstep\u0026quot;. It also must contain the outcome of the step, which can be one of the following:\ndelete: Abort postprocessing, delete the file. abort: Abort postprocessing, keep the file. retry: There was a problem that was most likely temporary and may be solved by trying again after some backoff duration. Retry runs automatically and is defined by the backoff behavior as described below. continue: Continue postprocessing, this is the success case. The backoff behavior as mentioned in the retry outcome can be configured using the POSTPROCESSING_RETRY_BACKOFF_DURATION and POSTPROCESSING_MAX_RETRIES environment variables. The backoff duration is calculated using the following formula after each failure: backoff_duration = POSTPROCESSING_RETRY_BACKOFF_DURATION * 2^(number of failures - 1). This means that the time between the next round grows exponentially limited by the number of retries. Steps that still don\u0026rsquo;t succeed after the maximum number of retries will be automatically moved to the abort state.\nSee the cs3 org for up-to-date information of reserved step names and event definitions.\nCLI Commands Resume Postprocessing IMPORTANT\nIf not noted otherwise, commands with the restart option can also use the resume option. This changes behaviour slightly.\nrestart\nWhen restarting an upload, all steps for open items will be restarted, except if otherwise defined. resume\nWhen resuming an upload, processing will continue unfinished items from their last completed step. If post-processing fails in one step due to an unforeseen error, current uploads will not be resumed automatically. A system administrator can instead run CLI commands to resume the failed upload manually which is at minimum a two step process.\nFor details on the storage-users command see the Manage Unfinished Uploads documentation in the storage-users service documentation.\nDepending if you want to restart/resume all or defined failed uploads, different commands are used.\nFirst, list ongoing upload sessions to identify possibly failed ones.\nNote that there never can be a clear identification of a failed upload session due to various reasons causing them. You need to apply more critera like free space on disk, a failed service like antivirus etc. to declare an upload as failed.\nocis storage-users uploads sessions All failed uploads\nIf you want to restart/resume all failed uploads, just rerun the command with the relevant flag. Note that this is the preferred command to handle failed processing steps:\nocis storage-users uploads sessions --resume Particular failed uploads\nUse the postprocessing command to resume defined failed uploads. For postprocessing steps, the default is to resume . Note that at the moment, resume is an alias for restart to keep old functionality. restart is subject of change and will most likely be removed in a later version.\nDefined by ID\nIf you want to resume only a specific upload, use the postprocessing resume command with the ID selected:\nocis postprocessing resume -u \u0026lt;uploadID\u0026gt; Defined by step\nAlternatively, instead of restarting one specific upload, a system admin can also resume all uploads that are currently in a specific step.\nExamples:\\\nocis postprocessing resume # Resumes all uploads where postprocessing is finished, but upload is not finished ocis postprocessing resume -s \u0026#34;finished\u0026#34; # Equivalent to the above ocis postprocessing resume -s \u0026#34;virusscan\u0026#34; # Resume all uploads currently in virusscan step Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 # Autogenerated # Filename: postprocessing-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9255 token: \u0026#34;\u0026#34; pprof: false zpages: false store: store: nats-js-kv nodes: - 127.0.0.1:9233 database: postprocessing table: \u0026#34;\u0026#34; ttl: 0s username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; postprocessing: events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; workers: 3 steps: [] delayprocessing: 0s retry_backoff_duration: 5s max_retries: 14 Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDPOSTPROCESSING_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPOSTPROCESSING_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPOSTPROCESSING_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPOSTPROCESSING_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELPOSTPROCESSING_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYPOSTPROCESSING_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORPOSTPROCESSING_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEPOSTPROCESSING_LOG_FILE string The path to the log file. Activates logging to this file if set. POSTPROCESSING_DEBUG_ADDR string 127.0.0.1:9255 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. POSTPROCESSING_DEBUG_TOKEN string Token to secure the metrics endpoint. POSTPROCESSING_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. POSTPROCESSING_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_PERSISTENT_STOREPOSTPROCESSING_STORE string nats-js-kv The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESPOSTPROCESSING_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. POSTPROCESSING_STORE_DATABASE string postprocessing The database name the configured store should use. POSTPROCESSING_STORE_TABLE string The database table the store should use. OCIS_PERSISTENT_STORE_TTLPOSTPROCESSING_STORE_TTL Duration 0s Time to live for events in the store. See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEPOSTPROCESSING_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDPOSTPROCESSING_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_EVENTS_ENDPOINTPOSTPROCESSING_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERPOSTPROCESSING_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREPOSTPROCESSING_EVENTS_TLS_INSECURE bool false Whether the ocis server should skip the client certificate verification during the TLS handshake. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEPOSTPROCESSING_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided POSTPROCESSING_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSPOSTPROCESSING_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEPOSTPROCESSING_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDPOSTPROCESSING_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. POSTPROCESSING_WORKERS int 3 The number of concurrent go routines that fetch events from the event queue. POSTPROCESSING_STEPS []string [] A list of postprocessing steps processed in order of their appearance. Currently supported values by the system are: \u0026lsquo;virusscan\u0026rsquo;, \u0026lsquo;policies\u0026rsquo; and \u0026lsquo;delay\u0026rsquo;. Custom steps are allowed. See the documentation for instructions. See the Environment Variable Types description for more details. POSTPROCESSING_DELAY Duration 0s After uploading a file but before making it available for download, a delay step can be added. Intended for developing purposes only. If a duration is set but the keyword \u0026lsquo;delay\u0026rsquo; is not explicitely added to \u0026lsquo;POSTPROCESSING_STEPS\u0026rsquo;, the delay step will be processed as last step. In such a case, a log entry will be written on service startup to remind the admin about that situation. See the Environment Variable Types description for more details. POSTPROCESSING_RETRY_BACKOFF_DURATION Duration 5s The base for the exponential backoff duration before retrying a failed postprocessing step. See the Environment Variable Types description for more details. POSTPROCESSING_MAX_RETRIES int 14 The maximum number of retries for a failed postprocessing step. ","description":"Abstract The postprocessing service handles the coordination of asynchronous postprocessing steps.\nTable of Contents General Prerequisites Postprocessing Functionality Storing Postprocessing Data Additional Prerequisites for the Postprocessing Service Postprocessing Steps Virus Scanning Delay Custom Postprocessing Steps Prerequisites Workflow CLI Commands Resume Postprocessing Example Yaml Config General Prerequisites To use the postprocessing service, an event system needs to be configured for all services. By default, ocis ships with a preconfigured nats service."},{"id":69,"href":"/services/proxy/","title":"Proxy","parent":"Services","content":" Abstract The proxy service is an API-Gateway for the ownCloud Infinite Scale microservices. Every HTTP request goes through this service. Authentication, logging and other preprocessing of requests also happens here. Mechanisms like request rate limiting or intrusion prevention are not included in the proxy service and must be setup in front like with an external reverse proxy.\nThe proxy service is the only service communicating to the outside and needs therefore usual protections against DDOS, Slow Loris or other attack vectors. All other services are not exposed to the outside, but also need protective measures when it comes to distributed setups like when using container orchestration over various physical servers.\nTable of Contents Authentication Configuring Routes Automatic User and Group Provisioning Prequisites Configuration How it Works Claim Updates Impacts Automatic Quota Assignments Automatic Role Assignments Recommendations for Production Deployments Content Security Policy Caching Presigned Urls Special Settings Metrics 1) Single Process Mode-single-process-mode) 2) Standalone Mode-standalone-mode) Available Metrics Prometheus Configuration Example Yaml Config Authentication The following request authentication schemes are implemented:\nBasic Auth (Only use in development, never in production setups!) OpenID Connect Signed URL Public Share Token Configuring Routes The proxy handles routing to all endpoints that ocis offers. The currently availabe default routes can be found in the code. Changing or adding routes can be necessary when writing own ocis extensions.\nDue to the complexity when defining routes, these can only be defined in the yaml file but not via environment variables.\nFor overwriting default routes, use the following yaml example:\npolicies: - name: ocis routes: - endpoint: / service: com.owncloud.web.web - endpoint: /dav/ service: com.owncloud.web.ocdav For adding additional routes to the default routes use:\nadditional_policies: - name: ocis routes: - endpoint: /custom/endpoint service: com.owncloud.custom.custom A route has the following configurable parameters:\nendpoint: \u0026#34;\u0026#34; # the url that should be routed service: \u0026#34;\u0026#34; # the service the url should be routed to unprotected: false # with false (default), calling the endpoint requires authorization. # with true, anyone can call the endpoint without authorisation. Automatic User and Group Provisioning When using an external OpenID Connect IDP, the proxy can be configured to automatically provision users upon their first login.\nPrequisites A number of prerequisites must be met for automatic user provisioning to work:\nownCloud Infinite Scale must be configured to use an external OpenID Connect IDP The graph service must be configured to allow updating users and groups (GRAPH_LDAP_SERVER_WRITE_ENABLED). One of the claim values returned by the IDP as part of the userinfo response or the access token must be unique and stable for the user. I.e. the value must not change for the whole lifetime of the user. This claim is configured via the PROXY_USER_OIDC_CLAIM environment variable (see below). A natural choice would e.g. be the sub claim which is guaranteed to be unique and stable per IDP. If a claim like email or preferred_username is used, you have to ensure that the user\u0026rsquo;s email address or username never changes. Configuration To enable automatic user provisioning, the following environment variables must be set for the proxy service:\nPROXY_AUTOPROVISION_ACCOUNTS\nSet to true to enable automatic user provisioning. PROXY_AUTOPROVISION_CLAIM_USERNAME\nThe name of an OIDC claim whose value should be used as the username for the autoprovsioned user in ownCloud Infinite Scale. Defaults to preferred_username. Can also be set to e.g. sub to guarantee a unique and stable username. PROXY_AUTOPROVISION_CLAIM_EMAIL\nThe name of an OIDC claim whose value should be used for the mail attribute of the autoprovisioned user in ownCloud Infinite Scale. Defaults to email. PROXY_AUTOPROVISION_CLAIM_DISPLAYNAME\nThe name of an OIDC claim whose value should be used for the displayname attribute of the autoprovisioned user in ownCloud Infinite Scale. Defaults to name. PROXY_AUTOPROVISION_CLAIM_GROUPS\nThe name of an OIDC claim whose value should be used to maintain a user\u0026rsquo;s group membership. The claim value should contain a list of group names the user should be a member of. Defaults to groups. PROXY_USER_OIDC_CLAIM\nWhen resolving and authenticated OIDC user, the value of this claims is used to lookup the user in the users service. For auto provisioning setups this usually is the same claims as set via PROXY_AUTOPROVISION_CLAIM_USERNAME. PROXY_USER_CS3_CLAIM\nThis is the name of the user attribute in ocis that is used to lookup the user by the value of the PROXY_USER_OIDC_CLAIM. For auto provisioning setups this usually needs to be set to username. How it Works When a user logs into ownCloud Infinite Scale for the first time, the proxy checks if that user already exists. This is done by querying the users service for users, where the attribute set in PROXY_USER_CS3_CLAIM matches the value of the OIDC claim configured in PROXY_USER_OIDC_CLAIM.\nIf the users does not exist, the proxy will create a new user via the graph service using the claim values configured in PROXY_AUTOPROVISION_CLAIM_USERNAME, PROXY_AUTOPROVISION_CLAIM_EMAIL and PROXY_AUTOPROVISION_CLAIM_DISPLAYNAME.\nIf the user does already exist, the proxy checks if the displayname has changed and updates that accordingly via graph service.\nUnless the claim configured via PROXY_AUTOPROVISION_CLAIM_EMAIL is the same as the one set via PROXY_USER_OIDC_CLAIM the proxy will also check if the email address has changed and update that as well.\nNext, the proxy will check if the user is a member of the groups configured in PROXY_AUTOPROVISION_CLAIM_GROUPS. It will add the user to the groups listed via the OIDC claim that holds the groups defined in the envvar and removes it from all other groups that he is currently a member of. Groups that do not exist in the external IDP yet will be created. Note: This can be a somewhat costly operation, especially if the user is a member of a large number of groups. If the group memberships of a user are changed in the IDP after the first login, it can take up to 5 minutes until the changes are reflected in Infinite Scale.\nClaim Updates OpenID Connect (OIDC) scopes are used by an application during authentication to authorize access to a user\u0026rsquo;s detail, like name, email or picture information. A scope can also contain among other things groups, roles, and permissions data. Each scope returns a set of attributes, which are called claims. The scopes an application requests, depends on which attributes the application needs. Once the user authorizes the requested scopes, the claims are returned in a token.\nThese issued JWT tokens are immutable and integrity-protected. Which means, any change in the source requires issuing a new token containing updated claims. On the other hand side, there is no active synchronisation process between the identity provider (IDP) who issues the token and Infinite Scale. The earliest possible time that Infinite Scale will notice changes is, when the current access token has expired and a new access token is issued by the IDP, or the user logs out and relogs in.\nNOTES\nFor resource optimisation, Infinite Scale skips any checks and updates on groupmemberships, if the last update happened less than 5min ago.\nInfinite Scale can\u0026rsquo;t differentiate between a group being renamed in the IDP and users being reassigned to a different group.\nInfinite Scale does not get aware when a group is being deleted in the IDP, a new claim will not hold any information from the deleted group. Infinite Scale does not track a claim history to compare.\nImpacts For shares or space memberships based on groups, a renamed or deleted group will impact accessing the resource:\nThere is no user notification about the inability accessing the resource. The user will only experience rejected access. This also applies for connected apps like the Desktop, iOS or Android app! To give access for rejected users on a resource, one with rights to share must update the group information.\nAutomatic Quota Assignments It is possible to automatically assign a specific quota to new users depending on their role. To do this, you need to configure a mapping between roles defined by their ID and the quota in bytes. The assignment can only be done via a yaml configuration and not via environment variables. See the following proxy.yaml config snippet for a configuration example.\nrole_quotas: \u0026lt;role ID1\u0026gt;: \u0026lt;quota1\u0026gt; \u0026lt;role ID2\u0026gt;: \u0026lt;quota2\u0026gt; Automatic Role Assignments When users login, they do automatically get a role assigned. The automatic role assignment can be configured in different ways. The PROXY_ROLE_ASSIGNMENT_DRIVER environment variable (or the driver setting in the role_assignment section of the configuration file select which mechanism to use for the automatic role assignment.\nWhen set to default, all users which do not have a role assigned at the time for the first login will get the role \u0026lsquo;user\u0026rsquo; assigned. (This is also the default behavior if PROXY_ROLE_ASSIGNMENT_DRIVER is unset.\nWhen PROXY_ROLE_ASSIGNMENT_DRIVER is set to oidc the role assignment for a user will happen based on the values of an OpenID Connect Claim of that user. The name of the OpenID Connect Claim to be used for the role assignment can be configured via the PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM environment variable. It is also possible to define a mapping of claim values to role names defined in Infinite Scale via a yaml configuration. See the following proxy.yaml snippet for an example.\nrole_assignment: driver: oidc oidc_role_mapper: role_claim: ocisRoles role_mapping: - role_name: admin claim_value: myAdminRole - role_name: spaceadmin claim_value: mySpaceAdminRole - role_name: user claim_value: myUserRole - role_name: guest claim_value: myGuestRole This would assign the role admin to users with the value myAdminRole in the claim ocisRoles. The role user to users with the values myUserRole in the claims ocisRoles and so on.\nClaim values that are not mapped to a specific ownCloud Infinite Scale role will be ignored.\nNote: An ownCloud Infinite Scale user can only have a single role assigned. If the configured role_mapping and a user\u0026rsquo;s claim values result in multiple possible roles for a user, the order in which the role mappings are defined in the configuration is important. The first role in the role_mappings where the claim_value matches a value from the user\u0026rsquo;s roles claim will be assigned to the user. So if e.g. a user\u0026rsquo;s ocisRoles claim has the values myUserRole and mySpaceAdminRole that user will get the ocis role spaceadmin assigned (because spaceadmin appears before user in the above sample configuration).\nIf a user\u0026rsquo;s claim values don\u0026rsquo;t match any of the configured role mappings an error will be logged and the user will not be able to login.\nThe default role_claim (or PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM) is roles. The default role_mapping is:\n- role_name: admin claim_value: ocisAdmin - role_name: spaceadmin claim_value: ocisSpaceAdmin - role_name: user claim_value: ocisUser - role_name: guest claim_value: ocisGuest Recommendations for Production Deployments In a production deployment, you want to have basic authentication (PROXY_ENABLE_BASIC_AUTH) disabled which is the default state. You also want to setup a firewall to only allow requests to the proxy service or the reverse proxy if you have one. Requests to the other services should be blocked by the firewall.\nContent Security Policy For Infinite Scale, external resources like an IDP (e.g. Keycloak) or when using web office documents or web apps, require defining a CSP. If not defined, the referenced services will not work.\nTo create a Content Security Policy (CSP), you need to create a yaml file containing the CSP definitions. To activate the settings, reference the file as value in the PROXY_CSP_CONFIG_FILE_LOCATION environment variable. For each change, a restart of the Infinite Scale deployment or the proxy service is required.\nA working example for a CSP can be found in a sub path of the config directory of the ocis_full deployment example.\nSee the Content Security Policy (CSP) Quick Reference Guide for a description of directives.\nCaching The proxy service can use a configured store via PROXY_OIDC_USERINFO_CACHE_STORE. Possible stores are:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Presigned Urls To authenticate presigned URLs the proxy service needs to read signing keys from a store that is populated by the ocs service. Possible stores are:\nnats-js-kv: Stores data using key-value-store feature of nats jetstream redis-sentinel: Stores data in a configured Redis Sentinel cluster. ocisstoreservice: Stores data in the legacy ocis store service. Requires setting PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES to com.owncloud.api.store. The memory store cannot be used as it does not share the memory from the ocs service signing key memory store, even in a single process.\nMake sure to configure the same store in the ocs service.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCS_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES to the same value as PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES. That way the ocs uses the same nats instance as the proxy service. When using the nats-js-kv store, it is possible to set PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_DISABLE_PERSISTENCE to instruct nats to not persist signing key data on disc. When using ocisstoreservice the PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES must be set to the service name com.owncloud.api.store. It does not support TTL and stores the presigning keys indefinitely. Also, the store service needs to be started. Special Settings When using the ocis IDP service instead of an external IDP:\nUse the environment variable OCIS_URL to define how ocis can be accessed, mandatory use https as protocol for the URL. If no reverse proxy is set up, the PROXY_TLS environment variable must be set to true because the embedded libreConnect shipped with the IDP service has a hard check if the connection is on TLS and uses the HTTPS protocol. If this mismatches, an error will be logged and no connection from the client can be established. PROXY_TLS can be set to false if a reverse proxy is used and the https connection is terminated at the reverse proxy. When setting to false, the communication between the reverse proxy and ocis is not secured. If set to true, you must provide certificates. Metrics The proxy service in ocis has the ability to expose metrics in the prometheus format. The metrics are exposed on the /metrics endpoint. There are two ways to run the ocis proxy service which has an impact on the number of metrics exposed.\n1) Single Process Mode In the single process mode, all ocis services are running inside a single process. This is the default mode when using the ocis server command to start the services. In this mode, the proxy service exposes metrics about the proxy service itself and about the ocis services it is proxying. This is due to the nature of the prometheus registry which is a singleton. The metrics exposed by the proxy service itself are prefixed with ocis_proxy_ and the metrics exposed by other ocis services are prefixed with ocis_\u0026lt;service-name\u0026gt;_.\n2) Standalone Mode In this mode, the proxy service only exposes its own metrics. The metrics of the other ocis services are exposed on their own metrics endpoints.\nAvailable Metrics The following metrics are exposed by the proxy service:\nMetric Name Description Labels ocis_proxy_requests_total Counter metric which reports the total number of HTTP requests. method: HTTP method of the request ocis_proxy_errors_total Counter metric which reports the total number of HTTP requests which have failed. That counts all response codes \u0026gt;= 500 method: HTTP method of the request ocis_proxy_duration_seconds Histogram of the time (in seconds) each request took. A histogram metric uses buckets to count the number of events that fall into each bucket. method: HTTP method of the request ocis_proxy_build_info{version} A metric with a constant 1 value labeled by version, exposing the version of the ocis proxy service. version: Build version of the proxy Prometheus Configuration The following is an example prometheus configuration for the single process mode. It assumes that the proxy debug address is configured to bind on all interfaces PROXY_DEBUG_ADDR=0.0.0.0:9205 and that the proxy is available via the ocis service name (typically in docker-compose). The prometheus service detects the /metrics endpoint automatically and scrapes it every 15 seconds.\nglobal: scrape_interval: 15s scrape_configs: - job_name: ocis_proxy static_configs: - targets: [\u0026#34;ocis:9205\u0026#34;] Example Yaml Configutogenerated # Filename: proxy-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9205 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 0.0.0.0:9200 root: / tls_cert: /var/lib/ocis/proxy/server.crt tls_key: /var/lib/ocis/proxy/server.key tls: true reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; grpc_client_tls: null role_quotas: {} policies: - name: ocis routes: - endpoint: / service: com.owncloud.web.web unprotected: true - endpoint: /.well-known/ocm service: com.owncloud.web.ocm unprotected: true - endpoint: /.well-known/webfinger service: com.owncloud.web.webfinger unprotected: true - endpoint: /.well-known/openid-configuration service: com.owncloud.web.idp unprotected: true - endpoint: /branding/logo service: com.owncloud.web.web - endpoint: /konnect/ service: com.owncloud.web.idp unprotected: true - endpoint: /signin/ service: com.owncloud.web.idp unprotected: true - endpoint: /archiver service: com.owncloud.web.frontend - endpoint: /ocs/v2.php/apps/notifications/api/v1/notifications/sse service: com.owncloud.sse.sse - endpoint: /ocs/v2.php/apps/notifications/api/v1/notifications service: com.owncloud.web.userlog - type: regex endpoint: /ocs/v[12].php/cloud/user/signing-key service: com.owncloud.web.ocs - type: regex endpoint: /ocs/v[12].php/config service: com.owncloud.web.frontend unprotected: true - endpoint: /sciencemesh/ service: com.owncloud.web.ocm - endpoint: /ocm/ service: com.owncloud.web.ocm - endpoint: /ocs/ service: com.owncloud.web.frontend - type: query endpoint: /remote.php/?preview=1 service: com.owncloud.web.webdav - type: regex method: REPORT endpoint: (/remote.php)?/(web)?dav service: com.owncloud.web.webdav - type: query endpoint: /dav/?preview=1 service: com.owncloud.web.webdav - type: query endpoint: /webdav/?preview=1 service: com.owncloud.web.webdav - endpoint: /remote.php/ service: com.owncloud.web.ocdav - endpoint: /dav/ service: com.owncloud.web.ocdav - endpoint: /webdav/ service: com.owncloud.web.ocdav - endpoint: /status service: com.owncloud.web.ocdav unprotected: true - endpoint: /status.php service: com.owncloud.web.ocdav unprotected: true - endpoint: /index.php/ service: com.owncloud.web.ocdav - endpoint: /apps/ service: com.owncloud.web.ocdav - endpoint: /data service: com.owncloud.web.frontend unprotected: true - endpoint: /app/list service: com.owncloud.web.frontend unprotected: true - endpoint: /app/ service: com.owncloud.web.frontend - endpoint: /graph/v1beta1/extensions/org.libregraph/activities service: com.owncloud.web.activitylog - endpoint: /graph/v1.0/invitations service: com.owncloud.web.invitations - endpoint: /graph/ service: com.owncloud.web.graph - endpoint: /api/v0/settings service: com.owncloud.web.settings - endpoint: /auth-app/tokens service: com.owncloud.web.auth-app additional_policies: [] oidc: issuer: https://localhost:9200 insecure: false access_token_verify_method: jwt skip_user_info: false user_info_cache: store: memory addresses: - 127.0.0.1:9233 database: cache-userinfo table: \u0026#34;\u0026#34; ttl: 10s disable_persistence: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; jwks: refresh_interval: 60 refresh_timeout: 10 refresh_limit: 60 refresh_unknown_kid: true rewrite_well_known: false service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; role_assignment: driver: default oidc_role_mapper: role_claim: roles role_mapping: - role_name: admin claim_value: ocisAdmin - role_name: spaceadmin claim_value: ocisSpaceAdmin - role_name: user claim_value: ocisUser - role_name: user-light claim_value: ocisGuest policy_selector: static: policy: ocis claims: null regex: null pre_signed_url: allowed_http_methods: - GET enabled: true signing_keys: store: nats-js-kv addresses: - 127.0.0.1:9233 ttl: 12h0m0s disable_persistence: true username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; account_backend: cs3 user_oidc_claim: preferred_username user_cs3_claim: username machine_auth_api_key: \u0026#34;\u0026#34; auto_provision_accounts: false auto_provision_claims: username: preferred_username email: email display_name: name groups: groups enable_basic_auth: false insecure_backends: false backend_https_cacert: \u0026#34;\u0026#34; auth_middleware: credentials_by_user_agent: {} allow_app_auth: false policies_middleware: query: \u0026#34;\u0026#34; csp_config_file_location: \u0026#34;\u0026#34; events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDPROXY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPROXY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPROXY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPROXY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELPROXY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYPROXY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORPROXY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEPROXY_LOG_FILE string The path to the log file. Activates logging to this file if set. PROXY_DEBUG_ADDR string 127.0.0.1:9205 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. PROXY_DEBUG_TOKEN string Token to secure the metrics endpoint. PROXY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. PROXY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. PROXY_HTTP_ADDR string 0.0.0.0:9200 The bind address of the HTTP service. PROXY_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. PROXY_TRANSPORT_TLS_CERT string /var/lib/ocis/proxy/server.crt Path/File name of the TLS server certificate (in PEM format) for the external http services. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/proxy. PROXY_TRANSPORT_TLS_KEY string /var/lib/ocis/proxy/server.key Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the external http services. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/proxy. PROXY_TLS bool true Enable/Disable HTTPS for external HTTP services. Must be set to \u0026rsquo;true\u0026rsquo; if the built-in IDP service an no reverse proxy is used. See the text description for details. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_URLOCIS_OIDC_ISSUERPROXY_OIDC_ISSUER string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP. OCIS_INSECUREPROXY_OIDC_INSECURE bool false Disable TLS certificate validation for connections to the IDP. Note that this is not recommended for production environments. PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD string jwt Sets how OIDC access tokens should be verified. Possible values are \u0026rsquo;none\u0026rsquo; and \u0026lsquo;jwt\u0026rsquo;. When using \u0026rsquo;none\u0026rsquo;, no special validation apart from using it for accessing the IPD\u0026rsquo;s userinfo endpoint will be done. When using \u0026lsquo;jwt\u0026rsquo;, it tries to parse the access token as a jwt token and verifies the signature using the keys published on the IDP\u0026rsquo;s \u0026lsquo;jwks_uri\u0026rsquo;. PROXY_OIDC_SKIP_USER_INFO bool false Do not look up user claims at the userinfo endpoint and directly read them from the access token. Incompatible with \u0026lsquo;PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD=none\u0026rsquo;. OCIS_CACHE_STOREPROXY_OIDC_USERINFO_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESPROXY_OIDC_USERINFO_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-userinfo The database name the configured store should use. PROXY_OIDC_USERINFO_CACHE_TABLE string The database table the store should use. OCIS_CACHE_TTLPROXY_OIDC_USERINFO_CACHE_TTL Duration 10s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEPROXY_OIDC_USERINFO_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEPROXY_OIDC_USERINFO_CACHE_AUTH_USERNAME string The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDPROXY_OIDC_USERINFO_CACHE_AUTH_PASSWORD string The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. PROXY_OIDC_JWKS_REFRESH_INTERVAL uint64 60 The interval for refreshing the JWKS (JSON Web Key Set) in minutes in the background via a new HTTP request to the IDP. PROXY_OIDC_JWKS_REFRESH_TIMEOUT uint64 10 The timeout in seconds for an outgoing JWKS request. PROXY_OIDC_JWKS_REFRESH_RATE_LIMIT uint64 60 Limits the rate in seconds at which refresh requests are performed for unknown keys. This is used to prevent malicious clients from imposing high network load on the IDP via ocis. PROXY_OIDC_JWKS_REFRESH_UNKNOWN_KID bool true If set to \u0026rsquo;true\u0026rsquo;, the JWKS refresh request will occur every time an unknown KEY ID (KID) is seen. Always set a \u0026lsquo;refresh_limit\u0026rsquo; when enabling this. PROXY_OIDC_REWRITE_WELLKNOWN bool false Enables rewriting the /.well-known/openid-configuration to the configured OIDC issuer. Needed by the Desktop Client, Android Client and iOS Client to discover the OIDC provider. OCIS_SERVICE_ACCOUNT_IDPROXY_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETPROXY_SERVICE_ACCOUNT_SECRET string The service account secret. PROXY_ROLE_ASSIGNMENT_DRIVER string default The mechanism that should be used to assign roles to user upon login. Supported values: \u0026lsquo;default\u0026rsquo; or \u0026lsquo;oidc\u0026rsquo;. \u0026lsquo;default\u0026rsquo; will assign the role \u0026lsquo;user\u0026rsquo; to users which don\u0026rsquo;t have a role assigned at the time they login. \u0026lsquo;oidc\u0026rsquo; will assign the role based on the value of a claim (configured via PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM) from the users OIDC claims. PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM string roles The OIDC claim used to create the users role assignment. PROXY_ENABLE_PRESIGNEDURLS bool true Allow OCS to get a signing key to sign requests. OCIS_CACHE_STOREPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE string nats-js-kv The type of the signing key store. Supported values are: \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo; and \u0026lsquo;ocisstoreservice\u0026rsquo; (deprecated). See the text description for details. OCIS_CACHE_STORE_NODESPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_TTLPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_TTL Duration 12h0m0s Default time to live for signing keys. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_DISABLE_PERSISTENCE bool true Disables persistence of the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to true. OCIS_CACHE_AUTH_USERNAMEPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. PROXY_ACCOUNT_BACKEND_TYPE string cs3 Account backend the PROXY service should use. Currently only \u0026lsquo;cs3\u0026rsquo; is possible here. PROXY_USER_OIDC_CLAIM string preferred_username The name of an OpenID Connect claim that is used for resolving users with the account backend. The value of the claim must hold a per user unique, stable and non re-assignable identifier. The availability of claims depends on your Identity Provider. There are common claims available for most Identity providers like \u0026rsquo;email\u0026rsquo; or \u0026lsquo;preferred_username\u0026rsquo; but you can also add your own claim. PROXY_USER_CS3_CLAIM string username The name of a CS3 user attribute (claim) that should be mapped to the \u0026lsquo;user_oidc_claim\u0026rsquo;. Supported values are \u0026lsquo;username\u0026rsquo;, \u0026lsquo;mail\u0026rsquo; and \u0026lsquo;userid\u0026rsquo;. OCIS_MACHINE_AUTH_API_KEYPROXY_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary to access resources from other services. PROXY_AUTOPROVISION_ACCOUNTS bool false Set this to \u0026rsquo;true\u0026rsquo; to automatically provision users that do not yet exist in the users service on-demand upon first sign-in. To use this a write-enabled libregraph user backend needs to be setup an running. PROXY_AUTOPROVISION_CLAIM_USERNAME string preferred_username The name of the OIDC claim that holds the username. PROXY_AUTOPROVISION_CLAIM_EMAIL string email The name of the OIDC claim that holds the email. PROXY_AUTOPROVISION_CLAIM_DISPLAYNAME string name The name of the OIDC claim that holds the display name. PROXY_AUTOPROVISION_CLAIM_GROUPS string groups The name of the OIDC claim that holds the groups. PROXY_ENABLE_BASIC_AUTH bool false Set this to true to enable \u0026lsquo;basic authentication\u0026rsquo; (username/password). PROXY_INSECURE_BACKENDS bool false Disable TLS certificate validation for all HTTP backend connections. PROXY_HTTPS_CACERT string Path/File for the root CA certificate used to validate the server’s TLS certificate for https enabled backend services. PROXY_ENABLE_APP_AUTH bool false Allow app authentication. This can be used to authenticate 3rd party applications. Note that auth-app service must be running for this feature to work. PROXY_POLICIES_QUERY string Defines the \u0026lsquo;Complete Rules\u0026rsquo; variable defined in the rego rule set this step uses for its evaluation. Rules default to deny if the variable was not found. PROXY_CSP_CONFIG_FILE_LOCATION string The location of the CSP configuration file. OCIS_EVENTS_ENDPOINTPROXY_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Set to a empty string to disable emitting events. OCIS_EVENTS_CLUSTERPROXY_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_INSECUREPROXY_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEPROXY_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided PROXY_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSPROXY_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEPROXY_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDPROXY_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. ","description":"Abstract The proxy service is an API-Gateway for the ownCloud Infinite Scale microservices. Every HTTP request goes through this service. Authentication, logging and other preprocessing of requests also happens here. Mechanisms like request rate limiting or intrusion prevention are not included in the proxy service and must be setup in front like with an external reverse proxy.\nThe proxy service is the only service communicating to the outside and needs therefore usual protections against DDOS, Slow Loris or other attack vectors."},{"id":70,"href":"/services/search/","title":"Search","parent":"Services","content":" Abstract The search service is responsible for metadata and content extraction, stores that data as index and makes it searchable. The following clarifies the extraction terms metadata and content:\nMetadata: all data that describes the file like Name, Size, MimeType, Tags and Mtime. Content: all data that relates to content of the file like words, geo data, exif data etc. Table of Contents General Considerations Search engines Query language Extraction Engines Content Extraction Basic Extractor Tika Extractor Search Functionality Indexing Search State Changes which Trigger Indexing Resource Trashed Resource Deleted Resource Restored Resource Moved Folder Created File Created File Version Restored Resource Tag Added Resource Tag Removed File Uploaded - Synchronous File Uploaded - Asynchronous Manually Trigger Re-Indexing a Space Notes Example Yaml Config General Considerations To use the search service, an event system needs to be configured for all services like NATS, which is shipped and preconfigured. The search service consumes events and does not block other tasks. When looking for content extraction, Apache Tika - a content analysis toolkit can be used but needs to be installed separately. Extractions are stored as index via the search service. Consider that indexing requires adequate storage capacity - and the space requirement will grow. To avoid filling up the filesystem with the index and rendering Infinite Scale unusable, the index should reside on its own filesystem.\nYou can change the path to where search maintains its data in case the filesystem gets close to full and you need to relocate the data. Stop the service, move the data, reconfigure the path in the environment variable and restart the service.\nWhen using content extraction, more resources and time are needed, because the content of the file needs to be analyzed. This is especially true for big and multiple concurrent files.\nThe search service runs out of the box with the shipped default basic configuration. No further configuration is needed, except when using content extraction.\nNote that as of now, the search service can not be scaled. Consider using a dedicated hardware for this service in case more resources are needed.\nSearch engines By default, the search service is shipped with bleve as its primary search engine. The available engines can be extended by implementing the Engine interface and making that engine available.\nQuery language By default, KQL is used as query language, for an overview of how the syntax works, please read the microsoft documentation.\nNot all parts are supported, the following list gives an overview of parts that are not implemented yet:\nSynonym operators Inclusion and exclusion operators Dynamic ranking operator ONEAR operator NEAR operator Date intervals In the following ADR you can read why we chose KQL.\nExtraction Engines The search service provides the following extraction engines and their results are used as index for searching:\nThe embedded basic configuration provides metadata extraction which is always on. The tika configuration, which additionally provides content extraction, if installed and configured. Content Extraction The search service is able to manage and retrieve many types of information. For this purpose the following content extractors are included:\nBasic Extractor This extractor is the most simple one and just uses the resource information provided by Infinite Scale. It does not do any further analysis. The following fields are included in the index: Name, Size, MimeType, Tags, Mtime.\nTika Extractor This extractor is more advanced compared to the Basic extractor. The main difference is that this extractor is able to search file contents. However, Apache Tika is required for this task. Read the Getting Started with Apache Tika guide on how to install and run Tika or use a ready to run Tika container. See the Tika container usage document for a quickstart. Note that at the time of writing, containers are only available for the amd64 platform.\nAs soon as Tika is installed and accessible, the search service must be configured for the use with Tika. The following settings must be set:\nSEARCH_EXTRACTOR_TYPE=tika SEARCH_EXTRACTOR_TIKA_TIKA_URL=http://YOUR-TIKA.URL When the search service can reach Tika, it begins to read out the content on demand. Note that files must be downloaded during the process, which can lead to delays with larger documents.\nContent extraction and handling the extracted content can be very resource intensive. Content extraction is therefore limited to files with a certain file size. The default limit is 20MB and can be configured using the SEARCH_CONTENT_EXTRACTION_SIZE_LIMIT variable.\nWhen extracting content, you can specify whether stop words like I, you, the are ignored or not. Noramlly, these stop words are removed automatically. To keep them, the environment variable SEARCH_EXTRACTOR_TIKA_CLEAN_STOP_WORDS must be set to false.\nWhen using the Tika container and docker-compose, consider the following:\nSee the ocis_full example. Containers for the linked service are reachable at a hostname identical to the alias or the service name if no alias was specified. If using the tika extractor, make sure to also set FRONTEND_FULL_TEXT_SEARCH_ENABLED in the frontend service to true. This will tell the webclient that full-text search has been enabled.\nSearch Functionality The search service consists of two main parts which are file indexing and file search.\nIndexing Every time a resource changes its state, a corresponding event is triggered. Based on the event, the search service processes the file and adds the result to its index. There are a few more steps between accepting the file and updating the index.\nSearch A query via the search service will return results based on the index created.\nState Changes which Trigger Indexing The following state changes in the life cycle of a file can trigger the creation of an index or an update:\nResource Trashed The service checks its index to see if the file has been processed. If an index entry exists, the index will be marked as deleted. In consequence, the file won\u0026rsquo;t appear in search requests anymore. The index entry stays intact and could be restored via Resource Restored.\nResource Deleted The service checks its index to see if the file has been processed. If an index entry exists, the index will be finally deleted. In consequence, the file won\u0026rsquo;t appear in search requests anymore.\nResource Restored This step is the counterpart of Resource Trashed. When a file is deleted, is isn\u0026rsquo;t removed from the index, instead the service just marks it as deleted. This mark is removed when the file has been restored, and it shows up in search results again.\nResource Moved This comes into play whenever a file or folder is renamed or moved. The search index then updates the resource location path or starts indexing if no index has been created so far for all items affected. See Notes for an example.\nFolder Created The creation of a folder always triggers indexing. The search service extracts all necessary information and stores it in the search index\nFile Created This case is similar to Folder created with the difference that a file can contain far more valuable information. This gets interesting but time-consuming when data content needs to be analyzed and indexed. Content extraction is part of the search service if configured.\nFile Version Restored Since Infinite Scale is capable of storing multiple versions of the same file, the search service also needs to take care of those versions. When a file version is restored, the service starts to extract all needed information, creates the index and makes the file discoverable.\nResource Tag Added Whenever a resource gets a new tag, the service takes care of it and makes that resource discoverable by the tag.\nResource Tag Removed This is the counterpart of Resource tag added. It takes care that a tag gets unassigned from the referenced resource.\nFile Uploaded - Synchronous This case only triggers indexing if async post processing is disabled. If so, the service starts to extract all needed file information, stores it in the index and makes it discoverable.\nFile Uploaded - Asynchronous This is exactly the same as File uploaded - synchronous with the only difference that it is used for asynchronous uploads.\nManually Trigger Re-Indexing a Space The service includes a command-line interface to trigger re-indexing a space:\nocis search index --space $SPACE_ID It can also be used to re-index all spaces:\nocis search index --all-spaces Note that either --space $SPACE_ID or --all-spaces must be set.\nNotes The indexing process tries to be self-healing in some situations.\nIn the following example, let\u0026rsquo;s assume a file tree foo/bar/baz exists. If the folder bar gets renamed to new-bar, the path to baz is no longer foo/bar/baz but foo/new-bar/baz. The search service checks the change and either just updates the path in the index or creates a new index for all items affected if none was present.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 # Autogenerated # Filename: search-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9224 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9220 tls: null token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; grpc_client_tls: null events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster async_uploads: true num_consumers: 0 debounce_duration: 1000 tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; engine: type: bleve bleve: data_path: /var/lib/ocis/search extractor: type: basic cs3_allow_insecure: false tika: tika_url: http://127.0.0.1:9998 clean_stop_words: true content_extraction_size_limit: 20971520 service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSEARCH_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESEARCH_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSEARCH_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSEARCH_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSEARCH_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSEARCH_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSEARCH_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESEARCH_LOG_FILE string The path to the log file. Activates logging to this file if set. SEARCH_DEBUG_ADDR string 127.0.0.1:9224 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SEARCH_DEBUG_TOKEN string Token to secure the metrics endpoint. SEARCH_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. SEARCH_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. SEARCH_GRPC_ADDR string 127.0.0.1:9220 The bind address of the GRPC service. OCIS_JWT_SECRETSEARCH_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_EVENTS_ENDPOINTSEARCH_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERSEARCH_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_ASYNC_UPLOADSSEARCH_EVENTS_ASYNC_UPLOADS bool true Enable asynchronous file uploads. SEARCH_EVENTS_NUM_CONSUMERS int 0 The amount of concurrent event consumers to start. Event consumers are used for searching files. Multiple consumers increase parallelisation, but will also increase CPU and memory demands. The default value is 0. SEARCH_EVENTS_REINDEX_DEBOUNCE_DURATION int 1000 The duration in milliseconds the reindex debouncer waits before triggering a reindex of a space that was modified. OCIS_INSECURESEARCH_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATESEARCH_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SEARCH_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSSEARCH_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMESEARCH_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDSEARCH_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. SEARCH_ENGINE_TYPE string bleve Defines which search engine to use. Defaults to \u0026lsquo;bleve\u0026rsquo;. Supported values are: \u0026lsquo;bleve\u0026rsquo;. SEARCH_ENGINE_BLEVE_DATA_PATH string /var/lib/ocis/search The directory where the filesystem will store search data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/search. SEARCH_EXTRACTOR_TYPE string basic Defines the content extraction engine. Defaults to \u0026lsquo;basic\u0026rsquo;. Supported values are: \u0026lsquo;basic\u0026rsquo; and \u0026rsquo;tika\u0026rsquo;. OCIS_INSECURESEARCH_EXTRACTOR_CS3SOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the CS3 source. SEARCH_EXTRACTOR_TIKA_TIKA_URL string http://127.0.0.1:9998 URL of the tika server. SEARCH_EXTRACTOR_TIKA_CLEAN_STOP_WORDS bool true Defines if stop words should be cleaned or not. See the documentation for more details. SEARCH_CONTENT_EXTRACTION_SIZE_LIMIT uint64 20971520 Maximum file size in bytes that is allowed for content extraction. OCIS_SERVICE_ACCOUNT_IDSEARCH_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETSEARCH_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Abstract The search service is responsible for metadata and content extraction, stores that data as index and makes it searchable. The following clarifies the extraction terms metadata and content:\nMetadata: all data that describes the file like Name, Size, MimeType, Tags and Mtime. Content: all data that relates to content of the file like words, geo data, exif data etc. Table of Contents General Considerations Search engines Query language Extraction Engines Content Extraction Basic Extractor Tika Extractor Search Functionality Indexing Search State Changes which Trigger Indexing Resource Trashed Resource Deleted Resource Restored Resource Moved Folder Created File Created File Version Restored Resource Tag Added Resource Tag Removed File Uploaded - Synchronous File Uploaded - Asynchronous Manually Trigger Re-Indexing a Space Notes Example Yaml Config General Considerations To use the search service, an event system needs to be configured for all services like NATS, which is shipped and preconfigured."},{"id":71,"href":"/services/settings/","title":"Settings","parent":"Services","content":" Abstract The settings service provides functionality for other services to register new settings as well as storing and retrieving the respective settings\u0026rsquo; values.\nTable of Contents Settings Managed Caching Settings Management Settings Usage Service Accounts Default Language Custom Roles Example Yaml Config Settings Managed The settings service is currently used for managing the:\nusers\u0026rsquo; profile settings like the language and the email notification settings, possible user roles and their respective permissions, assignment of roles to users. As an example, user profile settings that can be changed in the Web UI must be persistent.\nThe settings service persists the settings data via the storage-system service.\nCaching The settings service caches the results of queries against the storage backend to provide faster responses. The content of this cache is independent of the cache used in the storage-system service as it caches directory listing and settings content stored in files.\nThe store used for the cache can be configured using the SETTINGS_CACHE_STORE environment variable. Possible stores are:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Settings Management Infinite Scale services can register settings bundles with the settings service.\nSettings Usage Services can set or query Infinite Scale setting values of a user from settings bundles.\nService Accounts The settings service needs to know the IDs of service accounts but it doesn\u0026rsquo;t need their secrets. They can be configured using the SETTINGS_SERVICE_ACCOUNTS_IDS envvar. When only using one service account OCIS_SERVICE_ACCOUNT_ID can also be used. All configured service accounts will get a hidden \u0026lsquo;service-account\u0026rsquo; role. This role contains all permissions the service account needs but will not appear calls to the list roles endpoint. It is not possible to assign the \u0026lsquo;service-account\u0026rsquo; role to a normal user.\nDefault Language The default language can be defined via the OCIS_DEFAULT_LANGUAGE environment variable. If this variable is not defined, English will be used as default. The value has the ISO 639-1 format (\u0026ldquo;de\u0026rdquo;, \u0026ldquo;en\u0026rdquo;, etc.) and is limited by the list supported languages. This setting can be used to set the default language for notification and invitation emails.\nImportant developer note: the list of supported languages is at the moment not easy defineable, as it is the minimum intersection of languages shown in the WebUI and languages defined in the ocis code for the use of notifications and userlog. Even more, not all languages where there are translations available on transifex, are available in the WebUI respectively for ocis notifications, and the translation rate for existing languages is partially not that high. You will see therefore quite often English default strings though a supported language may exist and was selected.\nThe OCIS_DEFAULT_LANGUAGE setting impacts the notification and userlog services and the WebUI. Note that translations must exist for all named components to be presented correctly.\nIf OCIS_DEFAULT_LANGUAGE is not set, the expected behavior is:\nThe notification and userlog services and the WebUI use English by default until a user sets another language in the WebUI via Account -\u0026gt; Language. If a user sets another language in the WebUI in Account -\u0026gt; Language, then the notification and userlog services and WebUI use the language defined by the user. If no translation is found, it falls back to English. If OCIS_DEFAULT_LANGUAGE is set, the expected behavior is:\nThe notification and userlog services and the WebUI use OCIS_DEFAULT_LANGUAGE by default until a user sets another language in the WebUI via Account -\u0026gt; Language. If a user sets another language in the WebUI in Account -\u0026gt; Language, the notification and userlog services and WebUI use the language defined by the user. If no translation is found, it falls back to OCIS_DEFAULT_LANGUAGE and then to English. Custom Roles It is possible to replace the default ocis roles (admin, user) with custom roles that contain custom permissions. One can set SETTINGS_BUNDLES_PATH to the path of a json file containing the new roles.\nRole Example:\n[ { \u0026#34;id\u0026#34;: \u0026#34;38071a68-456a-4553-846a-fa67bf5596cc\u0026#34;, // ID of the role. Recommendation is to use a random uuidv4. But any unique string will do. \u0026#34;name\u0026#34;: \u0026#34;user-light\u0026#34;, // Internal name of the role. This is used by the system to identify the role. Any string will do here, but it should be unique among the other roles. \u0026#34;type\u0026#34;: \u0026#34;TYPE_ROLE\u0026#34;, // Always use `TYPE_ROLE` \u0026#34;extension\u0026#34;: \u0026#34;ocis-roles\u0026#34;, // Always use `ocis-roles` \u0026#34;displayName\u0026#34;: \u0026#34;User Light\u0026#34;, // DisplayName of the role used in webui \u0026#34;settings\u0026#34;: [ ], // Permissions attached to the role. See Details below. \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; // Always use `TYPE_SYSTEM` } } ] To create custom roles:\nCopy the role example to a json file. Change id, name, and displayName to your liking. Copy the desired permissions from the user-all-permissions example below to the settings array of the role. Set the SETTINGS_BUNDLE_PATH envvar to the path of the json file and start ocis Example File:\n[ { \u0026#34;id\u0026#34;: \u0026#34;38071a68-456a-4553-846a-fa67bf5596cc\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;user-1-permission\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;TYPE_ROLE\u0026#34;, \u0026#34;extension\u0026#34;: \u0026#34;ocis-roles\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;User with one permission only\u0026#34;, \u0026#34;settings\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;7d81f103-0488-4853-bce5-98dcce36d649\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Language.ReadWrite\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Permission to read and set the language\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_OWN\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SETTING\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;aa8cfbe5-95d4-4f7e-a032-c3c01f5f062f\u0026#34; } } ], \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;71881883-1768-46bd-a24d-a356a2afdf7f\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;user-all-permissions\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;TYPE_ROLE\u0026#34;, \u0026#34;extension\u0026#34;: \u0026#34;ocis-roles\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;User with all available permissions\u0026#34;, \u0026#34;settings\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;8e587774-d929-4215-910b-a317b1e80f73\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Accounts.ReadWrite\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Account Management\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission gives full access to everything that is related to account management.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_USER\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;all\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;4e41363c-a058-40a5-aec8-958897511209\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;AutoAcceptShares.ReadWriteDisabled\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;enable/disable auto accept shares\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_OWN\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SETTING\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;ec3ed4a3-3946-4efc-8f9f-76d38b12d3a9\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;ed83fc10-1f54-4a9e-b5a7-fb517f5f3e01\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Logo.Write\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Change logo\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission permits to change the system logo.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;11516bbd-7157-49e1-b6ac-d00c820f980b\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;PublicLink.Write\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Write publiclink\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows creating public links.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_WRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SHARE\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;069c08b1-e31f-4799-9ed6-194b310e7244\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Shares.Write\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Write share\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows creating shares.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_WRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SHARE\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;79e13b30-3e22-11eb-bc51-0b9f0bad9a58\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Drives.Create\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Create Space\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows creating new spaces.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;5de9fe0a-4bc5-4a47-b758-28f370caf169\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Drives.DeletePersonal\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Delete All Home Spaces\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows deleting home spaces.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_DELETE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;fb60b004-c1fa-4f09-bf87-55ce7d46ac61\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Drives.DeleteProject\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Delete AllSpaces\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows deleting all spaces.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_DELETE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;e9a697c5-c67b-40fc-982b-bcf628e9916d\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;ReadOnlyPublicLinkPassword.Delete\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Delete Read-Only Public link password\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission permits to opt out of a public link password enforcement.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_WRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SHARE\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;ad5bb5e5-dc13-4cd3-9304-09a424564ea8\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;EmailNotifications.ReadWriteDisabled\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Disable Email Notifications\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_OWN\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SETTING\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;33ffb5d6-cd07-4dc0-afb0-84f7559ae438\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;522adfbe-5908-45b4-b135-41979de73245\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Groups.ReadWrite\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Group Management\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission gives full access to everything that is related to group management.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_GROUP\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;all\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;7d81f103-0488-4853-bce5-98dcce36d649\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Language.ReadWrite\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Permission to read and set the language\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SETTING\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;aa8cfbe5-95d4-4f7e-a032-c3c01f5f062f\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;4ebaa725-bfaa-43c5-9817-78bc9994bde4\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Favorites.List\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;List Favorites\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows listing favorites.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READ\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_OWN\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;016f6ddd-9501-4a0a-8ebe-64a20ee8ec82\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Drives.List\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;List All Spaces\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows listing all spaces.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READ\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;b44b4054-31a2-42b8-bb71-968b15cfbd4f\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Drives.ReadWrite\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Manage space properties\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows managing space properties such as name and description.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;a53e601e-571f-4f86-8fec-d4576ef49c62\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Roles.ReadWrite\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Role Management\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission gives full access to everything that is related to role management.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_USER\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;all\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;4e6f9709-f9e7-44f1-95d4-b762d27b7896\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Drives.ReadWritePersonalQuota\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Set Personal Space Quota\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows managing personal space quotas.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;977f0ae6-0da2-4856-93f3-22e0a8482489\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Drives.ReadWriteProjectQuota\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Set Project Space Quota\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows managing project space quotas.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;3d58f441-4a05-42f8-9411-ef5874528ae1\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Settings.ReadWrite\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Settings Management\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission gives full access to everything that is related to settings management.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_USER\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;all\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;cf3faa8c-50d9-4f84-9650-ff9faf21aa9d\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Drives.ReadWriteEnabled\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Space ability\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows enabling and disabling spaces.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_READWRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_ALL\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;a54778fd-1c45-47f0-892d-655caf5236f2\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Favorites.Write\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Write Favorites\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This permission allows marking files as favorites.\u0026#34;, \u0026#34;permissionValue\u0026#34;: { \u0026#34;operation\u0026#34;: \u0026#34;OPERATION_WRITE\u0026#34;, \u0026#34;constraint\u0026#34;: \u0026#34;CONSTRAINT_OWN\u0026#34; }, \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_FILE\u0026#34; } } ], \u0026#34;resource\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TYPE_SYSTEM\u0026#34; } } ] Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: settings-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9194 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9190 tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; root: / cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - PUT - PATCH - DELETE - OPTIONS allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id allow_credentials: true grpc: addr: 127.0.0.1:9191 tls: null grpc_client_tls: null metadata_config: gateway_addr: com.owncloud.api.storage-system storage_addr: com.owncloud.api.storage-system system_user_id: \u0026#34;\u0026#34; system_user_idp: internal system_user_api_key: \u0026#34;\u0026#34; cache: store: memory addresses: - 127.0.0.1:9233 database: settings-cache files_table: settings_files directories_table: settings_dirs ttl: 10m0s disable_persistence: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; bundles_path: \u0026#34;\u0026#34; admin_user_id: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; set_default_assignments: false service_account_ids: - service-user-id default_language: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSETTINGS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESETTINGS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSETTINGS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSETTINGS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSETTINGS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSETTINGS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSETTINGS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESETTINGS_LOG_FILE string The path to the log file. Activates logging to this file if set. SETTINGS_DEBUG_ADDR string 127.0.0.1:9194 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SETTINGS_DEBUG_TOKEN string Token to secure the metrics endpoint. SETTINGS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. SETTINGS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. SETTINGS_HTTP_ADDR string 127.0.0.1:9190 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. SETTINGS_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSSETTINGS_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSSETTINGS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSSETTINGS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSSETTINGS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. SETTINGS_GRPC_ADDR string 127.0.0.1:9191 The bind address of the GRPC service. SETTINGS_STORAGE_GATEWAY_GRPC_ADDRSTORAGE_GATEWAY_GRPC_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. SETTINGS_STORAGE_GRPC_ADDRSTORAGE_GRPC_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSETTINGS_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSETTINGS_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. OCIS_CACHE_STORESETTINGS_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSETTINGS_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string settings-cache The database name the configured store should use. SETTINGS_FILE_CACHE_TABLE string settings_files The database table the store should use for the file cache. SETTINGS_DIRECTORY_CACHE_TABLE string settings_dirs The database table the store should use for the directory cache. OCIS_CACHE_TTLSETTINGS_CACHE_TTL Duration 10m0s Default time to live for entries in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESETTINGS_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESETTINGS_CACHE_AUTH_USERNAME string The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSETTINGS_CACHE_AUTH_PASSWORD string The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. SETTINGS_BUNDLES_PATH string The path to a JSON file with a list of bundles. If not defined, the default bundles will be loaded. OCIS_ADMIN_USER_IDSETTINGS_ADMIN_USER_ID string ID of the user that should receive admin privileges. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand. OCIS_JWT_SECRETSETTINGS_JWT_SECRET string The secret to mint and validate jwt tokens. SETTINGS_SETUP_DEFAULT_ASSIGNMENTSIDM_CREATE_DEMO_USERS bool false The default role assignments the demo users should be setup. SETTINGS_SERVICE_ACCOUNT_IDSOCIS_SERVICE_ACCOUNT_ID []string [service-user-id] The list of all service account IDs. These will be assigned the hidden \u0026lsquo;service-account\u0026rsquo; role. Note: When using \u0026lsquo;OCIS_SERVICE_ACCOUNT_ID\u0026rsquo; this will contain only one value while \u0026lsquo;SETTINGS_SERVICE_ACCOUNT_IDS\u0026rsquo; can have multiple. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details about service accounts. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. ","description":"Abstract The settings service provides functionality for other services to register new settings as well as storing and retrieving the respective settings\u0026rsquo; values.\nTable of Contents Settings Managed Caching Settings Management Settings Usage Service Accounts Default Language Custom Roles Example Yaml Config Settings Managed The settings service is currently used for managing the:\nusers\u0026rsquo; profile settings like the language and the email notification settings, possible user roles and their respective permissions, assignment of roles to users."},{"id":72,"href":"/services/sse/","title":"SSE","parent":"Services","content":" Abstract The sse service is responsible for sending sse (Server-Sent Events) to a user. See What is Server-Sent Events for a simple introduction and examples of server sent events.\nTable of Contents The Log Service Ecosystem Subscribing Keep SSE Connections Alive Example Yaml Config The Log Service Ecosystem Log services like the userlog, clientlog and sse are responsible for composing notifications for a certain audience.\nThe userlog service translates and adjusts messages to be human readable. The clientlog service composes machine readable messages, so clients can act without the need to query the server. The sse service is only responsible for sending these messages. It does not care about their form or language. Subscribing Clients can subscribe to the /sse endpoint to be informed by the server when an event happens. The sse endpoint will respect language changes of the user without needing to reconnect. Note that SSE has a limitation of six open connections per browser which can be reached if one has opened various tabs of the Web UI pointing to the same Infinite Scale instance.\nKeep SSE Connections Alive Some intermediate proxies drop connections after an idle time with no activity. If this is the case, configure the SSE_KEEPALIVE_INTERVAL envvar. This will send periodic SSE comments to keep connections open.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 # Autogenerated # Filename: sse-config-example.yaml log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9139 token: \u0026#34;\u0026#34; pprof: false zpages: false tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; keepalive_interval: 0s events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; http: addr: 127.0.0.1:9135 root: / cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Ocs-Apirequest allow_credentials: true tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_LOG_LEVELSSE_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSSE_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSSE_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESSE_LOG_FILE string The path to the log file. Activates logging to this file if set. SSE_DEBUG_ADDR string 127.0.0.1:9139 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SSE_DEBUG_TOKEN string Token to secure the metrics endpoint. SSE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. SSE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_TRACING_ENABLEDSSE_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESSE_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSSE_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSSE_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. SSE_KEEPALIVE_INTERVAL Duration 0s To prevent intermediate proxies from closing the SSE connection, send periodic SSE comments to keep it open. OCIS_EVENTS_ENDPOINTSSE_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERSSE_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURESSE_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATESSE_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SSE_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSSSE_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMESSE_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDSSE_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. SSE_HTTP_ADDR string 127.0.0.1:9135 The bind address of the HTTP service. SSE_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSSSE_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSSSE_CORS_ALLOW_METHODS []string [GET] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSSSE_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Ocs-Apirequest] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSSSE_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_JWT_SECRETSSE_JWT_SECRET string The secret to mint and validate jwt tokens. ","description":"Abstract The sse service is responsible for sending sse (Server-Sent Events) to a user. See What is Server-Sent Events for a simple introduction and examples of server sent events.\nTable of Contents The Log Service Ecosystem Subscribing Keep SSE Connections Alive Example Yaml Config The Log Service Ecosystem Log services like the userlog, clientlog and sse are responsible for composing notifications for a certain audience.\nThe userlog service translates and adjusts messages to be human readable."},{"id":73,"href":"/services/storage-system/","title":"Storage-System","parent":"Services","content":" Abstract The Infinite Scale Storage-System service persists and caches user related data that is defined via Infinite Scale. This can be among other data role assignments, user settings and users shares.\nTable of Contents Caching Example Yaml Config Caching The storage-system service caches file metadata via the configured store in STORAGE_SYSTEM_CACHE_STORE. Possible stores are:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # Autogenerated # Filename: storage-system-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9217 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9215 tls: null protocol: tcp http: addr: 127.0.0.1:9216 protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; system_user_id: \u0026#34;\u0026#34; system_user_api_key: \u0026#34;\u0026#34; skip_user_groups_in_token: false cache: store: memory nodes: - 127.0.0.1:9233 database: storage-system ttl: 24m0s disable_persistence: false auth_username: \u0026#34;\u0026#34; auth_password: \u0026#34;\u0026#34; driver: ocis drivers: ocis: root: /var/lib/ocis/storage/metadata max_acquire_lock_cycles: 20 lock_cycle_duration_factor: 30 data_server_url: http://localhost:9216/data Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSTORAGE_SYSTEM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_SYSTEM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_SYSTEM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_SYSTEM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_SYSTEM_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSTORAGE_SYSTEM_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSTORAGE_SYSTEM_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESTORAGE_SYSTEM_LOG_FILE string The path to the log file. Activates logging to this file if set. STORAGE_SYSTEM_DEBUG_ADDR string 127.0.0.1:9217 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. STORAGE_SYSTEM_DEBUG_TOKEN string Token to secure the metrics endpoint STORAGE_SYSTEM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling STORAGE_SYSTEM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. STORAGE_SYSTEM_GRPC_ADDR string 127.0.0.1:9215 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSTORAGE_SYSTEM_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. STORAGE_SYSTEM_HTTP_ADDR string 127.0.0.1:9216 The bind address of the HTTP service. STORAGE_SYSTEM_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCIS_JWT_SECRETSTORAGE_SYSTEM_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_SYSTEM_USER_ID string ID of the oCIS storage-system system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. STORAGE_SYSTEM_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. OCIS_CACHE_STORESTORAGE_SYSTEM_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSTORAGE_SYSTEM_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string storage-system The database name the configured store should use. OCIS_CACHE_TTLSTORAGE_SYSTEM_CACHE_TTL Duration 24m0s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESTORAGE_SYSTEM_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESTORAGE_SYSTEM_CACHE_AUTH_USERNAME string Username for the configured store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSTORAGE_SYSTEM_CACHE_AUTH_PASSWORD string Password for the configured store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. STORAGE_SYSTEM_DRIVER string ocis The driver which should be used by the service. STORAGE_SYSTEM_OCIS_ROOT string /var/lib/ocis/storage/metadata Path for the directory where the STORAGE-SYSTEM service stores it\u0026rsquo;s persistent data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. STORAGE_SYSTEM_OCIS_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used. STORAGE_SYSTEM_OCIS_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used. STORAGE_SYSTEM_DATA_SERVER_URL string http://localhost:9216/data URL of the data server, needs to be reachable by other services using this service. ","description":"Abstract The Infinite Scale Storage-System service persists and caches user related data that is defined via Infinite Scale. This can be among other data role assignments, user settings and users shares.\nTable of Contents Caching Example Yaml Config Caching The storage-system service caches file metadata via the configured store in STORAGE_SYSTEM_CACHE_STORE. Possible stores are:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster."},{"id":74,"href":"/services/storage-users/","title":"Storage-Users","parent":"Services","content":" Abstract Purpose and description to be added\nTable of Contents Graceful Shutdown CLI Commands Manage Unfinished Uploads Sessions command Command Examples Manage Trash-Bin Items Purge Expired List and Restore Trash-Bins Items Caching Example Yaml Config Graceful Shutdown Starting with Infinite Scale version 3.1, you can define a graceful shutdown period for the storage-users service.\nIMPORTANT: The graceful shutdown period is only applicable if the storage-users service runs as standalone service. It does not apply if the storage-users service runs as part of the single binary or as single Docker environment. To build an environment where the storage-users service runs as a standalone service, you must start two instances, one without the storage-users service and one only with the the storage-users service. Note that both instances must be able to communicate on the same network.\nWhen hard-stopping Infinite Scale, for example with the kill \u0026lt;pid\u0026gt; command (SIGKILL), it is possible and likely that not all data from the decomposedfs (metadata) has been written to the storage which may result in an inconsistent decomposedfs. When gracefully shutting down Infinite Scale, using a command like SIGTERM, the process will no longer accept any write requests from other services and will try to write the internal open requests which can take an undefined duration based on many factors. To mitigate that situation, the following things have been implemented:\nWith the value of the environment variable STORAGE_USERS_GRACEFUL_SHUTDOWN_TIMEOUT, the storage-users service will delay its shutdown giving it time to finalize writing necessary data. This delay can be necessary if there is a lot of data to be saved and/or if storage access/thruput is slow. In such a case you would receive an error log entry informing you that not all data could be saved in time. To prevent such occurrences, you must increase the default value.\nIf a shutdown error has been logged, the command-line maintenance tool Inspect and Manipulate Node Metadata can help to fix the issue. Please contact support for details.\nCLI Commands For any command listed, use --help to get more details and possible options and arguments.\nTo authenticate CLI commands use:\nOCIS_SERVICE_ACCOUNT_SECRET=\u0026lt;acc-secret\u0026gt; and OCIS_SERVICE_ACCOUNT_ID=\u0026lt;acc-id\u0026gt;. The storage-users CLI tool uses the default address to establish the connection to the gateway service. If the connection fails, check your custom gateway service GATEWAY_GRPC_ADDR configuration and set the same address in storage-users OCIS_GATEWAY_GRPC_ADDR or STORAGE_USERS_GATEWAY_GRPC_ADDR.\nManage Unfinished Uploads When using Infinite Scale as user storage, a directory named storage/users/uploads can be found in the Infinite Scale data folder. This is an intermediate directory based on TUS which is an open protocol for resumable uploads. Each upload consists of a blob and a blob.info file. Note that the term blob is just a placeholder.\nIf an upload succeeds, the blob file will be moved to the target and the blob.info file will be deleted.\nIn case of incomplete uploads, the blob and blob.info files will continue to receive data until either the upload succeeds in time or the upload expires based on the STORAGE_USERS_UPLOAD_EXPIRATION variable, see the table below for details.\nIn case of expired uploads, the blob and blob.info files will not be removed automatically. Thus a lot of data can pile up over time wasting storage space.\nIn the rare case of a failure, after the upload succeeded but the file was not moved to its target location, which can happen when postprocessing fails, the situation is the same as with expired uploads.\nExample cases for expired uploads:\nWhen a user uploads a big file but the file exceeds the user-quota, the upload can\u0026rsquo;t be moved to the target after it has finished. The file stays at the upload location until it is manually cleared.\nIf the bandwidth is limited and the file to transfer can\u0026rsquo;t be transferred completely before the upload expiration time is reached, the file expires and can\u0026rsquo;t be processed.\nIf the upload was technically successful, but the postprocessing step failed due to an internal error, it will not get further processed. See the procedure Resume Post-Processing in the postprocessing service documentation for details how to solve this.\nThe following commands are available to manage unfinished uploads:\nocis storage-users uploads \u0026lt;command\u0026gt; COMMANDS: sessions Print a list of upload sessions Sessions command The sessions command is the entry point for listing, restarting and cleaning unfinished uploads.\nIMPORTANT\nIf not noted otherwise, commands with the restart option can also use the resume option. This changes behaviour slightly.\nrestart\nWhen restarting an upload, all steps for open items will be restarted, except if otherwise defined. resume\nWhen resuming an upload, processing will continue unfinished items from their last completed step. ocis storage-users uploads sessions \u0026lt;commandoptions\u0026gt; NAME: ocis storage-users uploads sessions - Print a list of upload sessions USAGE: ocis storage-users uploads sessions [command options] OPTIONS: --id value filter sessions by upload session id (default: unset) --processing filter sessions by processing status (default: unset) --expired filter sessions by expired status (default: unset) --has-virus filter sessions by virus scan result (default: unset) --json output as json (default: false) --restart send restart event for all listed sessions (default: false) --resume send resume event for all listed sessions (default: false) --clean remove uploads (default: false) --help, -h show help This will always output a list of uploads that match the criteria. See Command Examples section.\nSome additional information on returned information:\nOffset is the amount of bytes the server has already received. If Offset == Size the server has reveived all bytes of the upload. Processing indicates if the uploaded file is currently going through postprocessing. Scan Date and Scan Result indicate the scanning status. If Scan Date is set and Scan Result is empty the file is not virus infected. Command Examples Command to list ongoing upload sessions\nocis storage-users uploads sessions --expired=false --processing=false Not expired sessions: +--------------------------------------+--------------------------------------+---------+--------+------+--------------------------------------+--------------------------------------+---------------------------+------------+---------------------------+-----------------------+ | Space | Upload Id | Name | Offset | Size | Executant | Owner | Expires | Processing | Scan Date | Scan Result | +--------------------------------------+--------------------------------------+---------+--------+------+--------------------------------------+--------------------------------------+---------------------------+------------+---------------------------+-----------------------+ | f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c | 5e387954-7313-4223-a904-bf996da6ec0b | foo.txt | 0 | 1234 | f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c | f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c | 2024-01-26T13:04:31+01:00 | false | 2024-04-24T11:24:14+02:00 | infected: virus A | | f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c | f066244d-97b2-48e7-a30d-b40fcb60cec6 | bar.txt | 0 | 4321 | f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c | f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c | 2024-01-26T13:18:47+01:00 | false | 2024-04-24T14:38:29+02:00 | | +--------------------------------------+--------------------------------------+---------+--------+------+--------------------------------------+--------------------------------------+---------------------------+------------+---------------------------+-----------------------+ The sessions command can also output json\nocis storage-users uploads sessions --expired=false --processing=false --json {\u0026#34;id\u0026#34;:\u0026#34;5e387954-7313-4223-a904-bf996da6ec0b\u0026#34;,\u0026#34;space\u0026#34;:\u0026#34;f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c\u0026#34;,\u0026#34;filename\u0026#34;:\u0026#34;foo.txt\u0026#34;,\u0026#34;offset\u0026#34;:0,\u0026#34;size\u0026#34;:1234,\u0026#34;executant\u0026#34;:{\u0026#34;idp\u0026#34;:\u0026#34;https://cloud.ocis.test\u0026#34;,\u0026#34;opaque_id\u0026#34;:\u0026#34;f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c\u0026#34;},\u0026#34;spaceowner\u0026#34;:{\u0026#34;opaque_id\u0026#34;:\u0026#34;f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c\u0026#34;},\u0026#34;expires\u0026#34;:\u0026#34;2024-01-26T13:04:31+01:00\u0026#34;,\u0026#34;processing\u0026#34;:false, \u0026#34;scanDate\u0026#34;: \u0026#34;2024-04-24T11:24:14+02:00\u0026#34;, \u0026#34;scanResult\u0026#34;: \u0026#34;infected: virus A\u0026#34;} {\u0026#34;id\u0026#34;:\u0026#34;f066244d-97b2-48e7-a30d-b40fcb60cec6\u0026#34;,\u0026#34;space\u0026#34;:\u0026#34;f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c\u0026#34;,\u0026#34;filename\u0026#34;:\u0026#34;bar.txt\u0026#34;,\u0026#34;offset\u0026#34;:0,\u0026#34;size\u0026#34;:4321,\u0026#34;executant\u0026#34;:{\u0026#34;idp\u0026#34;:\u0026#34;https://cloud.ocis.test\u0026#34;,\u0026#34;opaque_id\u0026#34;:\u0026#34;f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c\u0026#34;},\u0026#34;spaceowner\u0026#34;:{\u0026#34;opaque_id\u0026#34;:\u0026#34;f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c\u0026#34;},\u0026#34;expires\u0026#34;:\u0026#34;2024-01-26T13:18:47+01:00\u0026#34;,\u0026#34;processing\u0026#34;:false, \u0026#34;scanDate\u0026#34;: \u0026#34;2024-04-24T14:38:29+02:00\u0026#34;, \u0026#34;scanResult\u0026#34;: \u0026#34;\u0026#34;} The sessions command can also clear and restart/resume uploads. The output is the same as if run without --clean or --restart flag. Note: It is recommended to run to command first without the --clean (--processing) flag to double check which uploads get cleaned (restarted/resumed).\n# cleans all expired uploads regardless of processing and virus state. ocis storage-users uploads sessions --expired=true --clean # resumes all uploads that are processing and are not virus infected ocis storage-users uploads sessions --processing=false --has-virus=false --resume Manage Trash-Bin Items This command set provides commands to get an overview of trash-bin items, restore items and purge old items of personal spaces and project spaces (spaces that have been created manually). trash-bin commands require a spaceID as parameter. See List all spaces or Listing Space IDs for details of how to get them.\nocis storage-users trash-bin \u0026lt;command\u0026gt; COMMANDS: purge-expired Purge expired trash-bin items list Print a list of all trash-bin items of a space. restore-all Restore all trash-bin items for a space. restore Restore a trash-bin item by ID. Purge Expired Purge all expired items from the trash-bin. ocis storage-users trash-bin purge-expired The behaviour of the purge-expired command can be configured by using the following environment variables.\nSTORAGE_USERS_PURGE_TRASH_BIN_USER_ID\nUsed to obtain space trash-bin information and takes the system admin user as the default which is the OCIS_ADMIN_USER_ID but can be set individually. It should be noted, that the OCIS_ADMIN_USER_ID is only assigned automatically when using the single binary deployment and must be manually assigned in all other deployments. The command only considers spaces to which the assigned user has access and delete permission.\nSTORAGE_USERS_PURGE_TRASH_BIN_PERSONAL_DELETE_BEFORE\nHas a default value of 720h which equals 30 days. This means, the command will delete all files older than 30 days. The value is human-readable, for valid values see the duration type described in the Environment Variable Types. A value of 0 is equivalent to disable and prevents the deletion of personal space trash-bin files.\nSTORAGE_USERS_PURGE_TRASH_BIN_PROJECT_DELETE_BEFORE\nHas a default value of 720h which equals 30 days. This means, the command will delete all files older than 30 days. The value is human-readable, for valid values see the duration type described in the Environment Variable Types. A value of 0 is equivalent to disable and prevents the deletion of project space trash-bin files.\nList and Restore Trash-Bins Items Restoring is possible only to the original location. The personal or project spaceID is required for the items to be restored. To authenticate the CLI tool use:\nOCIS_SERVICE_ACCOUNT_SECRET=\u0026lt;acc-secret\u0026gt; OCIS_SERVICE_ACCOUNT_ID=\u0026lt;acc-id\u0026gt; The storage-users CLI tool uses the default address to establish the connection to the gateway service. If the connection fails, check the GATEWAY_GRPC_ADDR configuration from your gateway service and set the same address to the storage-users variable STORAGE_USERS_GATEWAY_GRPC_ADDR or globally with OCIS_GATEWAY_GRPC_ADDR.\nExport the gateway address if your configuration differs from the default\nexport STORAGE_USERS_GATEWAY_GRPC_ADDR=127.0.0.1:9142 Print a list of all trash-bin items of a space\nocis storage-users trash-bin list [command options] [\u0026#39;spaceID\u0026#39; required] The restore option defines the behavior for an item to be restored, when the item name already exists in the target space. Supported options are: skip, replace and keep-both. The default value is skip.\nWhen the CLI tool restores the item with the replace option, the existing item will be moved to a trash-bin. When the CLI tool restores the item with the keep-both option and the designated item already exists, the name of the restored item will be changed by adding a numeric suffix in parentheses. The variable STORAGE_USERS_CLI_MAX_ATTEMPTS_RENAME_FILE defines a maximum number of attempts to rename an item.\nRestore all trash-bin items for a space\nocis storage-users trash-bin restore-all [command options] [\u0026#39;spaceID\u0026#39; required] Restore a trash-bin item by ID\nocis storage-users trash-bin restore [command options] [\u0026#39;spaceID\u0026#39; required] [\u0026#39;itemID\u0026#39; required] Caching The storage-users service caches stat, metadata and uuids of files and folders via the configured store in STORAGE_USERS_STAT_CACHE_STORE, STORAGE_USERS_FILEMETADATA_CACHE_STORE and STORAGE_USERS_ID_CACHE_STORE. Possible stores are:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 # Autogenerated # Filename: storage-users-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9159 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9157 tls: null protocol: tcp http: addr: 127.0.0.1:9158 protocol: tcp prefix: data cors: allow_origins: - https://localhost:9200 allow_methods: - POST - HEAD - PATCH - OPTIONS - GET - DELETE allow_headers: - Authorization - Origin - X-Requested-With - X-Request-Id - X-HTTP-Method-Override - Content-Type - Upload-Length - Upload-Offset - Tus-Resumable - Upload-Metadata - Upload-Defer-Length - Upload-Concat - Upload-Incomplete - Upload-Draft-Interop-Version allow_credentials: false expose_headers: - Upload-Offset - Location - Upload-Length - Tus-Version - Tus-Resumable - Tus-Max-Size - Tus-Extension - Upload-Metadata - Upload-Defer-Length - Upload-Concat - Upload-Incomplete - Upload-Draft-Interop-Version max_age: 86400 token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false graceful_shutdown_timeout: 30 driver: ocis drivers: ocis: propagator: sync async_propagator_options: propagation_delay: 0s root: /var/lib/ocis/storage/users user_layout: \u0026#39;{{.Id.OpaqueId}}\u0026#39; permissions_endpoint: com.owncloud.api.settings personalspacealias_template: \u0026#39;{{.SpaceType}}/{{.User.Username | lower}}\u0026#39; personalspacepath_template: \u0026#34;\u0026#34; generalspacealias_template: \u0026#39;{{.SpaceType}}/{{.SpaceName | replace \u0026#34; \u0026#34; \u0026#34;-\u0026#34; | lower}}\u0026#39; generalspacepath_template: \u0026#34;\u0026#34; share_folder: /Shares max_acquire_lock_cycles: 20 lock_cycle_duration_factor: 30 max_concurrency: 5 async_uploads: true max_quota: 0 disable_versioning: false s3ng: propagator: sync async_propagator_options: propagation_delay: 0s root: /var/lib/ocis/storage/users user_layout: \u0026#39;{{.Id.OpaqueId}}\u0026#39; permissions_endpoint: com.owncloud.api.settings region: default access_key: \u0026#34;\u0026#34; secret_key: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; bucket: \u0026#34;\u0026#34; put_object_disable_content_sha254: false put_object_disable_multipart: true put_object_send_content_md5: true put_object_concurrent_stream_parts: true put_object_num_threads: 4 put_object_part_size: 0 personalspacealias_template: \u0026#39;{{.SpaceType}}/{{.User.Username | lower}}\u0026#39; personalspacepath_template: \u0026#34;\u0026#34; generalspacealias_template: \u0026#39;{{.SpaceType}}/{{.SpaceName | replace \u0026#34; \u0026#34; \u0026#34;-\u0026#34; | lower}}\u0026#39; generalspacepath_template: \u0026#34;\u0026#34; share_folder: /Shares max_acquire_lock_cycles: 20 lock_cycle_duration_factor: 30 max_concurrency: 5 disable_versioning: false owncloudsql: root: /var/lib/ocis/storage/owncloud share_folder: /Shares user_layout: \u0026#39;{{.Username}}\u0026#39; upload_info_dir: /var/lib/ocis/storage/uploadinfo db_username: owncloud db_password: owncloud db_host: \u0026#34;\u0026#34; db_port: 3306 db_name: owncloud users_provider_endpoint: com.owncloud.api.users posix: root: /var/lib/ocis/storage/users personalspacepath_template: users/{{.User.Username}} generalspacepath_template: projects/{{.SpaceId}} permissions_endpoint: com.owncloud.api.settings async_uploads: true scan_debounce_delay: 1s use_space_groups: false watch_type: \u0026#34;\u0026#34; watch_path: \u0026#34;\u0026#34; watch_folder_kafka_hosts: \u0026#34;\u0026#34; data_server_url: http://localhost:9158/data data_gateway_url: https://localhost:9200/data transfer_expires: 86400 events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_cert_path: \u0026#34;\u0026#34; enable_tls: false num_consumers: 0 username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; filemetadata_cache: store: memory nodes: - 127.0.0.1:9233 database: storage-users ttl: 24m0s disable_persistence: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; id_cache: store: memory nodes: - 127.0.0.1:9233 database: ids-storage-users ttl: 24m0s disable_persistence: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; mount_id: \u0026#34;\u0026#34; expose_data_server: false readonly: false upload_expiration: 86400 tasks: purge_trash_bin: user_id: \u0026#34;\u0026#34; personal_delete_before: 720h0m0s project_delete_before: 720h0m0s service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; gateway_addr: 127.0.0.1:9142 machine_auth_api_key: \u0026#34;\u0026#34; max_attempts_rename_file: 0 Environment Variables Name Type Default Value Description STORAGE_USERS_SERVICE_NAME string storage-users Service name to use. Change this when starting an additional storage provider with a custom configuration to prevent it from colliding with the default \u0026lsquo;storage-users\u0026rsquo; service. OCIS_TRACING_ENABLEDSTORAGE_USERS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_USERS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_USERS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_USERS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_USERS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSTORAGE_USERS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSTORAGE_USERS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESTORAGE_USERS_LOG_FILE string The path to the log file. Activates logging to this file if set. STORAGE_USERS_DEBUG_ADDR string 127.0.0.1:9159 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. STORAGE_USERS_DEBUG_TOKEN string Token to secure the metrics endpoint. STORAGE_USERS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. STORAGE_USERS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. STORAGE_USERS_GRPC_ADDR string 127.0.0.1:9157 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSTORAGE_USERS_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. STORAGE_USERS_HTTP_ADDR string 127.0.0.1:9158 The bind address of the HTTP service. STORAGE_USERS_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCIS_CORS_ALLOW_ORIGINSSTORAGE_USERS_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSSTORAGE_USERS_CORS_ALLOW_METHODS []string [POST HEAD PATCH OPTIONS GET DELETE] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSSTORAGE_USERS_CORS_ALLOW_HEADERS []string [Authorization Origin X-Requested-With X-Request-Id X-HTTP-Method-Override Content-Type Upload-Length Upload-Offset Tus-Resumable Upload-Metadata Upload-Defer-Length Upload-Concat Upload-Incomplete Upload-Draft-Interop-Version] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSSTORAGE_USERS_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_CORS_EXPOSE_HEADERSSTORAGE_USERS_CORS_EXPOSE_HEADERS []string [Upload-Offset Location Upload-Length Tus-Version Tus-Resumable Tus-Max-Size Tus-Extension Upload-Metadata Upload-Defer-Length Upload-Concat Upload-Incomplete Upload-Draft-Interop-Version] A list of exposed CORS headers. See following chapter for more details: Access-Control-Expose-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers. See the Environment Variable Types description for more details. OCIS_CORS_MAX_AGESTORAGE_USERS_CORS_MAX_AGE uint 86400 The max cache duration of preflight headers. See following chapter for more details: Access-Control-Max-Age at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age. See the Environment Variable Types description for more details. OCIS_JWT_SECRETSTORAGE_USERS_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. STORAGE_USERS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. STORAGE_USERS_GRACEFUL_SHUTDOWN_TIMEOUT int 30 The number of seconds to wait for the \u0026lsquo;storage-users\u0026rsquo; service to shutdown cleanly before exiting with an error that gets logged. Note: This setting is only applicable when running the \u0026lsquo;storage-users\u0026rsquo; service as a standalone service. See the text description for more details. STORAGE_USERS_DRIVER string ocis The storage driver which should be used by the service. Defaults to \u0026lsquo;ocis\u0026rsquo;, Supported values are: \u0026lsquo;ocis\u0026rsquo;, \u0026lsquo;s3ng\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;. The \u0026lsquo;ocis\u0026rsquo; driver stores all data (blob and meta data) in an POSIX compliant volume. The \u0026lsquo;s3ng\u0026rsquo; driver stores metadata in a POSIX compliant volume and uploads blobs to the s3 bucket. OCIS_DECOMPOSEDFS_PROPAGATORSTORAGE_USERS_OCIS_PROPAGATOR string sync The propagator used for decomposedfs. At the moment, only \u0026lsquo;sync\u0026rsquo; is fully supported, \u0026lsquo;async\u0026rsquo; is available as an experimental option. STORAGE_USERS_ASYNC_PROPAGATOR_PROPAGATION_DELAY Duration 0s The delay between a change made to a tree and the propagation start on treesize and treetime. Multiple propagations are computed to a single one. See the Environment Variable Types description for more details. STORAGE_USERS_OCIS_ROOT string /var/lib/ocis/storage/users The directory where the filesystem storage will store blobs and metadata. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/users. STORAGE_USERS_OCIS_USER_LAYOUT string {{.Id.OpaqueId}} Template string for the user storage layout in the user directory. STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_OCIS_PERMISSIONS_ENDPOINT string com.owncloud.api.settings Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;. STORAGE_USERS_OCIS_PERSONAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.User.Username | lower}} Template string to construct personal space aliases. STORAGE_USERS_OCIS_PERSONAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the personal space roots. STORAGE_USERS_OCIS_GENERAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.SpaceName | replace \u0026quot; \u0026quot; \u0026quot;-\u0026quot; | lower}} Template string to construct general space aliases. STORAGE_USERS_OCIS_GENERAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the projects space roots. STORAGE_USERS_OCIS_SHARE_FOLDER string /Shares Name of the folder jailing all shares. STORAGE_USERS_OCIS_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value will be used. STORAGE_USERS_OCIS_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value will be used. OCIS_MAX_CONCURRENCYSTORAGE_USERS_OCIS_MAX_CONCURRENCY int 5 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. OCIS_ASYNC_UPLOADS bool true Enable asynchronous file uploads. OCIS_SPACES_MAX_QUOTASTORAGE_USERS_OCIS_MAX_QUOTA uint64 0 Set a global max quota for spaces in bytes. A value of 0 equals unlimited. If not using the global OCIS_SPACES_MAX_QUOTA, you must define the FRONTEND_MAX_QUOTA in the frontend service. OCIS_DISABLE_VERSIONING bool false Disables versioning of files. When set to true, new uploads with the same filename will overwrite existing files instead of creating a new version. OCIS_DECOMPOSEDFS_PROPAGATORSTORAGE_USERS_S3NG_PROPAGATOR string sync The propagator used for decomposedfs. At the moment, only \u0026lsquo;sync\u0026rsquo; is fully supported, \u0026lsquo;async\u0026rsquo; is available as an experimental option. STORAGE_USERS_ASYNC_PROPAGATOR_PROPAGATION_DELAY Duration 0s The delay between a change made to a tree and the propagation start on treesize and treetime. Multiple propagations are computed to a single one. See the Environment Variable Types description for more details. STORAGE_USERS_S3NG_ROOT string /var/lib/ocis/storage/users The directory where the filesystem storage will store metadata for blobs. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/users. STORAGE_USERS_S3NG_USER_LAYOUT string {{.Id.OpaqueId}} Template string for the user storage layout in the user directory. STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_S3NG_PERMISSIONS_ENDPOINT string com.owncloud.api.settings Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;. STORAGE_USERS_S3NG_REGION string default Region of the S3 bucket. STORAGE_USERS_S3NG_ACCESS_KEY string Access key for the S3 bucket. STORAGE_USERS_S3NG_SECRET_KEY string Secret key for the S3 bucket. STORAGE_USERS_S3NG_ENDPOINT string Endpoint for the S3 bucket. STORAGE_USERS_S3NG_BUCKET string Name of the S3 bucket. STORAGE_USERS_S3NG_PUT_OBJECT_DISABLE_CONTENT_SHA256 bool false Disable sending content sha256 when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_DISABLE_MULTIPART bool true Disable multipart uploads when copying objects to S3 STORAGE_USERS_S3NG_PUT_OBJECT_SEND_CONTENT_MD5 bool true Send a Content-MD5 header when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_CONCURRENT_STREAM_PARTS bool true Always precreate parts when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_NUM_THREADS uint 4 Number of concurrent uploads to use when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_PART_SIZE uint64 0 Part size for concurrent uploads to S3. STORAGE_USERS_S3NG_PERSONAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.User.Username | lower}} Template string to construct personal space aliases. STORAGE_USERS_S3NG_PERSONAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the personal space roots. STORAGE_USERS_S3NG_GENERAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.SpaceName | replace \u0026quot; \u0026quot; \u0026quot;-\u0026quot; | lower}} Template string to construct general space aliases. STORAGE_USERS_S3NG_GENERAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the projects space roots. STORAGE_USERS_S3NG_SHARE_FOLDER string /Shares Name of the folder jailing all shares. STORAGE_USERS_S3NG_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used. STORAGE_USERS_S3NG_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used. OCIS_MAX_CONCURRENCYSTORAGE_USERS_S3NG_MAX_CONCURRENCY int 5 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value of 100 will be used. OCIS_DISABLE_VERSIONING bool false Disables versioning of files. When set to true, new uploads with the same filename will overwrite existing files instead of creating a new version. STORAGE_USERS_OWNCLOUDSQL_DATADIR string /var/lib/ocis/storage/owncloud The directory where the filesystem storage will store SQL migration data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/owncloud. STORAGE_USERS_OWNCLOUDSQL_SHARE_FOLDER string /Shares Name of the folder jailing all shares. STORAGE_USERS_OWNCLOUDSQL_LAYOUT string {{.Username}} Path layout to use to navigate into a users folder in an owncloud data directory STORAGE_USERS_OWNCLOUDSQL_UPLOADINFO_DIR string /var/lib/ocis/storage/uploadinfo The directory where the filesystem will store uploads temporarily. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/uploadinfo. STORAGE_USERS_OWNCLOUDSQL_DB_USERNAME string owncloud Username for the database. STORAGE_USERS_OWNCLOUDSQL_DB_PASSWORD string owncloud Password for the database. STORAGE_USERS_OWNCLOUDSQL_DB_HOST string Hostname or IP of the database server. STORAGE_USERS_OWNCLOUDSQL_DB_PORT int 3306 Port that the database server is listening on. STORAGE_USERS_OWNCLOUDSQL_DB_NAME string owncloud Name of the database to be used. STORAGE_USERS_OWNCLOUDSQL_USERS_PROVIDER_ENDPOINT string com.owncloud.api.users Endpoint of the users provider. STORAGE_USERS_POSIX_ROOT string /var/lib/ocis/storage/users The directory where the filesystem storage will store its data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/users. STORAGE_USERS_POSIX_PERSONAL_SPACE_PATH_TEMPLATE string users/{{.User.Username}} Template string to construct the paths of the personal space roots. STORAGE_USERS_POSIX_GENERAL_SPACE_PATH_TEMPLATE string projects/{{.SpaceId}} Template string to construct the paths of the projects space roots. STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_POSIX_PERMISSIONS_ENDPOINT string com.owncloud.api.settings Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo;, \u0026lsquo;posix\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;. OCIS_ASYNC_UPLOADS bool true Enable asynchronous file uploads. STORAGE_USERS_POSIX_SCAN_DEBOUNCE_DELAY Duration 1s The time in milliseconds to wait before scanning the filesystem for changes after a change has been detected. STORAGE_USERS_POSIX_USE_SPACE_GROUPS bool false Use space groups to manage permissions on spaces. STORAGE_USERS_POSIX_WATCH_TYPE string Type of the watcher to use for getting notified about changes to the filesystem. Currently available options are \u0026lsquo;inotifywait\u0026rsquo; (default), \u0026lsquo;gpfswatchfolder\u0026rsquo; and \u0026lsquo;gpfsfileauditlogging\u0026rsquo;. STORAGE_USERS_POSIX_WATCH_PATH string Path to the watch directory/file. Only applies to the \u0026lsquo;gpfsfileauditlogging\u0026rsquo; and \u0026lsquo;inotifywait\u0026rsquo; watcher, in which case it is the path of the file audit log file/base directory to watch. STORAGE_USERS_POSIX_WATCH_FOLDER_KAFKA_BROKERS string Comma-separated list of kafka brokers to read the watchfolder events from. STORAGE_USERS_DATA_SERVER_URL string http://localhost:9158/data URL of the data server, needs to be reachable by the data gateway provided by the frontend service or the user if directly exposed. STORAGE_USERS_DATA_GATEWAY_URL string https://localhost:9200/data URL of the data gateway server STORAGE_USERS_TRANSFER_EXPIRES int64 86400 The time after which the token for upload postprocessing expires OCIS_EVENTS_ENDPOINTSTORAGE_USERS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERSTORAGE_USERS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURESTORAGE_USERS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATESTORAGE_USERS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided STORAGE_USERS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSSTORAGE_USERS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. STORAGE_USERS_EVENTS_NUM_CONSUMERS int 0 The amount of concurrent event consumers to start. Event consumers are used for post-processing files. Multiple consumers increase parallelisation, but will also increase CPU and memory demands. The setting has no effect when the OCIS_ASYNC_UPLOADS is set to false. The default and minimum value is 1. OCIS_EVENTS_AUTH_USERNAMESTORAGE_USERS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDSTORAGE_USERS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_CACHE_STORESTORAGE_USERS_FILEMETADATA_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSTORAGE_USERS_FILEMETADATA_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string storage-users The database name the configured store should use. OCIS_CACHE_TTLSTORAGE_USERS_FILEMETADATA_CACHE_TTL Duration 24m0s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESTORAGE_USERS_FILEMETADATA_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESTORAGE_USERS_FILEMETADATA_CACHE_AUTH_USERNAME string The username to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSTORAGE_USERS_FILEMETADATA_CACHE_AUTH_PASSWORD string The password to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_STORESTORAGE_USERS_ID_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSTORAGE_USERS_ID_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string ids-storage-users The database name the configured store should use. OCIS_CACHE_TTLSTORAGE_USERS_ID_CACHE_TTL Duration 24m0s Default time to live for user info in the user info cache. Only applied when access tokens have no expiration. Defaults to 300s which is derived from the underlaying package though not explicitly set as default. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESTORAGE_USERS_ID_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESTORAGE_USERS_ID_CACHE_AUTH_USERNAME string The username to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSTORAGE_USERS_ID_CACHE_AUTH_PASSWORD string The password to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. STORAGE_USERS_MOUNT_ID string Mount ID of this storage. STORAGE_USERS_EXPOSE_DATA_SERVER bool false Exposes the data server directly to users and bypasses the data gateway. Ensure that the data server address is reachable by users. STORAGE_USERS_READ_ONLY bool false Set this storage to be read-only. STORAGE_USERS_UPLOAD_EXPIRATION int64 86400 Duration in seconds after which uploads will expire. Note that when setting this to a low number, uploads could be cancelled before they are finished and return a 403 to the user. OCIS_ADMIN_USER_IDSTORAGE_USERS_PURGE_TRASH_BIN_USER_ID string ID of the user who collects all necessary information for deletion. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand. STORAGE_USERS_PURGE_TRASH_BIN_PERSONAL_DELETE_BEFORE Duration 720h0m0s Specifies the period of time in which items that have been in the personal trash-bin for longer than this value should be deleted. A value of 0 means no automatic deletion. See the Environment Variable Types description for more details. STORAGE_USERS_PURGE_TRASH_BIN_PROJECT_DELETE_BEFORE Duration 720h0m0s Specifies the period of time in which items that have been in the project trash-bin for longer than this value should be deleted. A value of 0 means no automatic deletion. See the Environment Variable Types description for more details. OCIS_SERVICE_ACCOUNT_IDSTORAGE_USERS_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETSTORAGE_USERS_SERVICE_ACCOUNT_SECRET string The service account secret. OCIS_GATEWAY_GRPC_ADDRSTORAGE_USERS_GATEWAY_GRPC_ADDR string 127.0.0.1:9142 The bind address of the gateway GRPC address. OCIS_MACHINE_AUTH_API_KEYSTORAGE_USERS_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. STORAGE_USERS_CLI_MAX_ATTEMPTS_RENAME_FILE int 0 The maximum number of attempts to rename a file when a user restores a file to an existing destination with the same name. The minimum value is 100. ","description":"Abstract Purpose and description to be added\nTable of Contents Graceful Shutdown CLI Commands Manage Unfinished Uploads Sessions command Command Examples Manage Trash-Bin Items Purge Expired List and Restore Trash-Bins Items Caching Example Yaml Config Graceful Shutdown Starting with Infinite Scale version 3.1, you can define a graceful shutdown period for the storage-users service.\nIMPORTANT: The graceful shutdown period is only applicable if the storage-users service runs as standalone service."},{"id":75,"href":"/services/thumbnails/","title":"Thumbnails","parent":"Services","content":" Abstract The thumbnails service provides methods to generate thumbnails for various files and resolutions based on requests. It retrieves the sources at the location where the user files are stored and saves the thumbnails where system files are stored. Those locations have defaults but can be manually defined via environment variables.\nTable of Contents File Locations Overview Thumbnail Location Thumbnail Source File Types Thumbnail Target File Types Thumbnail Query String Parameters Thumbnail Resolution Thumbnail Processors Deleting Thumbnails Memory Considerations Thumbnails and SecureView Using libvips for Thumbnail Generation Example Yaml Config File Locations Overview The relevant environment variables defining file locations are:\n(1) OCIS_BASE_DATA_PATH (2) STORAGE_USERS_OCIS_ROOT (3) THUMBNAILS_FILESYSTEMSTORAGE_ROOT (1) \u0026hellip; Having a default set by the Infinite Scale code, but if defined, used as base path for other services. (2) \u0026hellip; Source files, defaults to (1) plus path component, but can be freely defined if required. (3) \u0026hellip; Target files, defaults to (1) plus path component, but can be freely defined if required.\nFor details and defaults for these environment variables see the ocis admin documentation.\nThumbnail Location It may be beneficial to define the location of the thumbnails to be other than the default (with system files). This is due the fact that storing thumbnails can consume a lot of space over time which not necessarily needs to reside on the same partition or mount or expensive drives.\nThumbnail Source File Types Thumbnails can be generated from the following source file types:\npng jpg gif tiff bmp txt The thumbnail service retrieves source files using the information provided by the backend. The Linux backend identifies source files usually based on the extension.\nIf a file type was not properly assigned or the type identification failed, thumbnail generation will fail and an error will be logged.\nThumbnail Target File Types Thumbnails can either be generated as png, jpg or gif files. These types are hardcoded and no other types can be requested. A requestor, like another service or a client, can request one of the available types to be generated. If more than one type is required, each type must be requested individually.\nThumbnail Query String Parameters Clients can request thumbnail previews for files by adding ?preview=1 to the file URL. Requests for files with no thumbnail available respond with HTTP status 404.\nThe following query parameters are supported:\nParameter Required Default Value Description preview YES 1 generates preview x YES first x-value configured in THUMBNAILS_RESOLUTIONS horizontal target size y YES first y-value configured in THUMBNAILS_RESOLUTIONS vertical target size scalingup NO 0 prevents up-scaling of small images a NO 1 aspect ratio c NO Caching string Clients should send the etag, so they get a fresh thumbnail after a file change processor NO resize for gifs and thumbnail for all others preferred thumbnail processor Thumbnail Resolution Various resolutions can be defined via THUMBNAILS_RESOLUTIONS. A requestor can request any arbitrary resolution and the thumbnail service will use the one closest to the requested resolution. If more than one resolution is required, each resolution must be requested individually.\nExample:\nRequested: 18x12\nAvailable: 30x20, 15x10, 9x6\nReturned: 15x10\nThumbnail Processors Normally, an image might get cropped when creating a preview, depending on the aspect ratio of the original image. This can have negative impacts on previews as only a part of the image will be shown. When using an optional processor in the request, cropping can be avoided by defining on how the preview image generation will be done. The following processors are available:\nresize resizes the image to the specified width and height and returns the transformed image. If one of width or height is 0, the image aspect ratio is preserved. fit scales down the image to fit the specified maximum width and height and returns the transformed image. fill: creates an image with the specified dimensions and fills it with the scaled source image. To achieve the correct aspect ratio without stretching, the source image will be cropped. thumbnail scales the image up or down, crops it to the specified width and height and returns the transformed image. To apply one of those, a query parameter has to be added to the request, like ?processor=fit. If no query parameter or processor is added, the default behaviour applies which is resize for gifs and thumbnail for all others.\nDeleting Thumbnails As of now, there is no automated thumbnail deletion. This is especially true when a source file gets deleted or moved. This situation will be solved at a later stage. For the time being, if you run short on physical thumbnails space, you have to manually delete the thumbnail store to free space. Thumbnails will then be recreated on request.\nMemory Considerations Since source files need to be loaded into memory when generating thumbnails, large source files could potentially crash this service if there is insufficient memory available. For bigger instances when using container orchestration deployment methods, this service can be dedicated to its own server(s) with more memory. To have more control over memory (and CPU) consumption the maximum number of concurrent requests can be limited by setting the environment variable THUMBNAILS_MAX_CONCURRENT_REQUESTS. The default value is 0 which does not apply any restrictions to the number of concurrent requests. As soon as the number of concurrent requests is reached any further request will be responded with 429/Too Many Requests and the client can retry at a later point in time.\nThumbnails and SecureView If a resource is shared using SecureView, the share reciever will get a 403 (forbidden) response when requesting a thumbnail. The requesting client needs to decide what to show and usually a placeholder thumbnail is used.\nUsing libvips for Thumbnail Generation To improve performance and to support a wider range of images formats, the thumbnails service is able to utilize the libvips library for thumbnail generation. Support for libvips needs to be enabled at buildtime and has a couple of implications:\nWith libvips support enabled, it is not possible to create a statically linked ocis binary. Therefore, the libvips shared libraries need to be available at runtime in the same release that was used to build the ocis binary. When using the ocis docker images, the libvips shared libraries are included in the image and are correctly embedded. Support of libvips is disabled by default. To enable it, make sure libvips and its buildtime dependencies are installed in your build environment. For macOS users, add the build time dependencies via:\nbrew install vips pkg-config export PKG_CONFIG_PATH=\u0026#34;/usr/local/opt/libffi/lib/pkgconfig\u0026#34; Then you just need to set the ENABLE_VIPS variable on the make command:\nmake -C ocis build ENABLE_VIPS=1 Or include the enable_vips build tag in the go build command:\ngo build -tags enable_vips -o ocis -o bin/ocis ./cmd/ocis When building a docker image using the Dockerfile in the top-level directory of ocis, libvips support is enabled and the libvips shared libraries are included in the resulting docker image.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: thumbnails-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9189 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9185 tls: null max_concurrent_requests: 0 http: addr: 127.0.0.1:9186 tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; root: /thumbnails cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - PUT - PATCH - DELETE - OPTIONS allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Cache-Control allow_credentials: true grpc_client_tls: null thumbnail: resolutions: - 16x16 - 32x32 - 64x64 - 128x128 - 1080x1920 - 1920x1080 - 2160x3840 - 3840x2160 - 4320x7680 - 7680x4320 filesystem_storage: root_directory: /var/lib/ocis/thumbnails webdav_allow_insecure: false cs3_allow_insecure: false reva_gateway: com.owncloud.api.gateway font_map_file: \u0026#34;\u0026#34; transfer_secret: \u0026#34;\u0026#34; data_endpoint: http://127.0.0.1:9186/thumbnails/data max_input_width: 7680 max_input_height: 7680 max_input_image_file_size: 50MB Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDTHUMBNAILS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPETHUMBNAILS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTTHUMBNAILS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORTHUMBNAILS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELTHUMBNAILS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYTHUMBNAILS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORTHUMBNAILS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILETHUMBNAILS_LOG_FILE string The path to the log file. Activates logging to this file if set. THUMBNAILS_DEBUG_ADDR string 127.0.0.1:9189 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. THUMBNAILS_DEBUG_TOKEN string Token to secure the metrics endpoint. THUMBNAILS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. THUMBNAILS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. THUMBNAILS_GRPC_ADDR string 127.0.0.1:9185 The bind address of the GRPC service. THUMBNAILS_MAX_CONCURRENT_REQUESTS int 0 Number of maximum concurrent thumbnail requests. Default is 0 which is unlimited. THUMBNAILS_HTTP_ADDR string 127.0.0.1:9186 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. THUMBNAILS_HTTP_ROOT string /thumbnails Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSTHUMBNAILS_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSTHUMBNAILS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSTHUMBNAILS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSTHUMBNAILS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. THUMBNAILS_RESOLUTIONS []string [16x16 32x32 64x64 128x128 1080x1920 1920x1080 2160x3840 3840x2160 4320x7680 7680x4320] The supported list of target resolutions in the format WidthxHeight like 32x32. You can define any resolution as required. See the Environment Variable Types description for more details. THUMBNAILS_FILESYSTEMSTORAGE_ROOT string /var/lib/ocis/thumbnails The directory where the filesystem storage will store the thumbnails. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/thumbnails. OCIS_INSECURETHUMBNAILS_WEBDAVSOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the webdav source. OCIS_INSECURETHUMBNAILS_CS3SOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the CS3 source. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata THUMBNAILS_TXT_FONTMAP_FILE string The path to a font file for txt thumbnails. THUMBNAILS_TRANSFER_TOKEN string The secret to sign JWT to download the actual thumbnail file. THUMBNAILS_DATA_ENDPOINT string http://127.0.0.1:9186/thumbnails/data The HTTP endpoint where the actual thumbnail file can be downloaded. THUMBNAILS_MAX_INPUT_WIDTH int 7680 The maximum width of an input image which is being processed. THUMBNAILS_MAX_INPUT_HEIGHT int 7680 The maximum height of an input image which is being processed. THUMBNAILS_MAX_INPUT_IMAGE_FILE_SIZE string 50MB The maximum file size of an input image which is being processed. Usable common abbreviations: [KB, KiB, MB, MiB, GB, GiB, TB, TiB, PB, PiB, EB, EiB], example: 2GB. ","description":"Abstract The thumbnails service provides methods to generate thumbnails for various files and resolutions based on requests. It retrieves the sources at the location where the user files are stored and saves the thumbnails where system files are stored. Those locations have defaults but can be manually defined via environment variables.\nTable of Contents File Locations Overview Thumbnail Location Thumbnail Source File Types Thumbnail Target File Types Thumbnail Query String Parameters Thumbnail Resolution Thumbnail Processors Deleting Thumbnails Memory Considerations Thumbnails and SecureView Using libvips for Thumbnail Generation Example Yaml Config File Locations Overview The relevant environment variables defining file locations are:"},{"id":76,"href":"/services/userlog/","title":"Userlog","parent":"Services","content":" Abstract The userlog service is a mediator between the eventhistory service and clients who want to be informed about user related events. It provides an API to retrieve those.\nTable of Contents The Log Service Ecosystem Prerequisites Storing Configuring Retrieving Posting Authentication Deprovisioning Deleting Translations Translation Rules Default Language Example Yaml Config The Log Service Ecosystem Log services like the userlog, clientlog and sse are responsible for composing notifications for a certain audience.\nThe userlog service translates and adjusts messages to be human readable. The clientlog service composes machine readable messages, so clients can act without the need to query the server. The sse service is only responsible for sending these messages. It does not care about their form or language. Prerequisites Running the userlog service without running the eventhistory service is not possible.\nStoring The userlog service persists information via the configured store in USERLOG_STORE. Possible stores are:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Configuring For the time being, the configuration which user related events are of interest is hardcoded and cannot be changed.\nRetrieving The userlog service provides an API to retrieve configured events. For now, this API is mostly following the oc10 notification GET API.\nPosting The userlog service is able to store global messages that will be displayed in the Web UI to all users. If a user deletes the message in the Web UI, it reappears on reload. Global messages use the endpoint /ocs/v2.php/apps/notifications/api/v1/notifications/global and are activated by sending a POST request. Note that sending another POST request of the same type overwrites the previous one. For the time being, only the type deprovision is supported.\nAuthentication POST and DELETE endpoints provide notifications to all users. Therefore only certain users can configure them. Two authentication methods for this endpoint are provided. Users with the admin role can always access these endpoints. Additionally, a static secret via the USERLOG_GLOBAL_NOTIFICATIONS_SECRET can be defined to enable access for users knowing this secret, which has to be sent with the header containing the request.\nDeprovisioning Deprovision messages announce a deprovision text including a deprovision date of the instance to all users. With this message, users get informed that the instance will be shut down and deprovisioned and no further access to their data is possible past the given date. This implies that users must download their data before the given date. The text shown to users refers to this information. Note that the task to deprovision the instance does not depend on the message. The text of the message can be translated according to the translation settings, see section Translations. The endpoint only expects a deprovision_date parameter in the POST request body as the final text is assembled automatically. The string hast to be in RFC3339 format, however, this format can be changed by using deprovision_date_format. See the go time formating for more details.\nDeleting To delete events for an user, use a DELETE request to ocs/v2.php/apps/notifications/api/v1/notifications containing the IDs to delete.\nSending a DELETE request to the ocs/v2.php/apps/notifications/api/v1/notifications/global endpoint to remove a global message is a restricted action, see the Authentication section for more details.)\nTranslations The userlog service has embedded translations sourced via transifex to provide a basic set of translated languages. These embedded translations are available for all deployment scenarios. In addition, the service supports custom translations, though it is currently not possible to just add custom translations to embedded ones. If custom translations are configured, the embedded ones are not used. To configure custom translations, the USERLOG_TRANSLATION_PATH environment variable needs to point to a base folder that will contain the translation files. This path must be available from all instances of the userlog service, a shared storage is recommended. Translation files must be of type .po or .mo. For each language, the filename needs to be userlog.po (or userlog.mo) and stored in a folder structure defining the language code. In general the path/name pattern for a translation file needs to be:\n{USERLOG_TRANSLATION_PATH}/{language-code}/LC_MESSAGES/userlog.po The language code pattern is composed of language[_territory] where language is the base language and _territory is optional and defines a country.\nFor example, for the language de, one needs to place the corresponding translation files to {USERLOG_TRANSLATION_PATH}/de_DE/LC_MESSAGES/userlog.po.\nImportant: For the time being, the embedded ownCloud Web frontend only supports the main language code but does not handle any territory. When strings are available in the language code language_territory, the web frontend does not see it as it only requests language. In consequence, any translations made must exist in the requested language to avoid a fallback to the default.\nTranslation Rules If a requested language code is not available, the service tries to fall back to the base language if available. For example, if the requested language-code de_DE is not available, the service tries to fall back to translations in the de folder. If the base language de is also not available, the service falls back to the system\u0026rsquo;s default English (en), which is the source of the texts provided by the code. Default Language The default language can be defined via the OCIS_DEFAULT_LANGUAGE environment variable. See the settings service for a detailed description.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 # Autogenerated # Filename: userlog-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9214 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9210 root: / cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Ocs-Apirequest allow_credentials: true tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; grpc_client_tls: null token_manager: jwt_secret: \u0026#34;\u0026#34; reva_gateway: com.owncloud.api.gateway translation_path: \u0026#34;\u0026#34; default_language: \u0026#34;\u0026#34; events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; max_concurrency: 1 persistence: store: memory nodes: [] database: userlog table: events ttl: 336h0m0s username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; disable_sse: false global_notifications_secret: \u0026#34;\u0026#34; service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDUSERLOG_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEUSERLOG_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTUSERLOG_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORUSERLOG_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELUSERLOG_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYUSERLOG_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORUSERLOG_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEUSERLOG_LOG_FILE string The path to the log file. Activates logging to this file if set. USERLOG_DEBUG_ADDR string 127.0.0.1:9214 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. USERLOG_DEBUG_TOKEN string Token to secure the metrics endpoint. USERLOG_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. USERLOG_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. USERLOG_HTTP_ADDR string 127.0.0.1:9210 The bind address of the HTTP service. USERLOG_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSUSERLOG_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSUSERLOG_CORS_ALLOW_METHODS []string [GET] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSUSERLOG_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Ocs-Apirequest] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSUSERLOG_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_JWT_SECRETUSERLOG_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_TRANSLATION_PATHUSERLOG_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_EVENTS_ENDPOINTUSERLOG_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERUSERLOG_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREUSERLOG_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEUSERLOG_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSUSERLOG_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEUSERLOG_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDUSERLOG_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_MAX_CONCURRENCYUSERLOG_MAX_CONCURRENCY int 1 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. OCIS_PERSISTENT_STOREUSERLOG_STORE string memory The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESUSERLOG_STORE_NODES []string [] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. USERLOG_STORE_DATABASE string userlog The database name the configured store should use. USERLOG_STORE_TABLE string events The database table the store should use. OCIS_PERSISTENT_STORE_TTLUSERLOG_STORE_TTL Duration 336h0m0s Time to live for events in the store. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks). See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEUSERLOG_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDUSERLOG_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_DISABLE_SSE,USERLOG_DISABLE_SSE bool false Disables server-sent events (sse). When disabled, clients will no longer receive sse notifications. USERLOG_GLOBAL_NOTIFICATIONS_SECRET string The secret to secure the global notifications endpoint. Only system admins and users knowing that secret can call the global notifications POST/DELETE endpoints. OCIS_SERVICE_ACCOUNT_IDUSERLOG_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETUSERLOG_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Abstract The userlog service is a mediator between the eventhistory service and clients who want to be informed about user related events. It provides an API to retrieve those.\nTable of Contents The Log Service Ecosystem Prerequisites Storing Configuring Retrieving Posting Authentication Deprovisioning Deleting Translations Translation Rules Default Language Example Yaml Config The Log Service Ecosystem Log services like the userlog, clientlog and sse are responsible for composing notifications for a certain audience."},{"id":77,"href":"/services/web/","title":"Web","parent":"Services","content":" Abstract The web service embeds and serves the static files for the Infinite Scale Web Client. Note that clients will respond with a connection error if the web service is not available.\nThe web service also provides a minimal API for branding functionality like changing the logo shown.\nTable of Contents Custom Compiled Web Assets Web UI Configuration Web UI Options Web UI Config File Embedding Web Web Apps Loading Themes Loading Applications Application Structure Application Configuration Using Custom Assets Miscellaneous Example Yaml Config Custom Compiled Web Assets If you want to use your custom compiled web client assets instead of the embedded ones, then you can do that by setting the WEB_ASSET_PATH variable to point to your compiled files. See ownCloud Web / Getting Started and ownCloud Web / Setup with oCIS for more details.\nWeb UI Configuration Single configuration settings of the embedded web UI can be defined via WEB_OPTION_xxx environment variables. A json based configuration file can be used via the WEB_UI_CONFIG_FILE environment variable. If a json based configuration file is used, these configurations take precedence over single options set. Web UI Options Besides theming, the behavior of the web UI can be configured via options. See the environment variables WEB_OPTION_xxx for more details.\nWeb UI Config File When defined via the WEB_UI_CONFIG_FILE environment variable, the configuration of the web UI can be made with a json based file.\nEmbedding Web Web can be consumed by another application in a stripped down version called “Embed mode”. This mode is supposed to be used in the context of selecting or sharing resources.\nFor more details see the developer documentation ownCloud Web / Embed Mode. See the environment variables: WEB_OPTION_MODE and WEB_OPTION_EMBED_TARGET to configure the embedded mode.\nWeb Apps The administrator of the environment is capable of providing custom web applications to the users. This feature is useful for organizations that want to provide third party or custom apps to their users.\nIt\u0026rsquo;s important to note that the feature at the moment is only capable of providing static (js, mjs, e.g.) web applications and does not support injection of dynamic web applications (custom dynamic backends).\nLoading Themes Web themes are loaded, if added in the Infinite Scale source code, at build-time from \u0026lt;ocis_repo\u0026gt;/services/web/assets/themes. This cannot be manipulated at runtime.\nAdditionally, the administrator can provide custom themes by storing it in the path defined by the environment variable WEB_ASSET_THEMES_PATH.\nWith the theme root directory defined, the system needs to know which theme to use. This can be done by setting the WEB_UI_THEME_PATH environment variable.\nThe final theme is composed of the built-in and the custom theme provided by the administrator via WEB_ASSET_THEMES_PATH and WEB_UI_THEME_PATH.\nFor example, Infinite Scale by default contains a built-in ownCloud theme. If the administrator provides a custom theme via the WEB_ASSET_THEMES_PATH directory like, WEB_ASSET_THEMES_PATH/owncloud/themes.json, this one will be used instead of the built-in one.\nSome theme keys are mandatory, like the common.shareRoles settings. Such mandatory keys are injected automatically at runtime if not provided.\nLoading Applications Web applications are loaded, if added in the Infinite Scale source code, at build-time from \u0026lt;ocis_repo\u0026gt;/services/web/assets/apps. This cannot be manipulated at runtime.\nAdditionally, the administrator can provide custom applications by storing them in the path defined by the environment variable WEB_ASSET_APPS_PATH.\nThis environment variable defaults to the Infinite Scale base data directory $OCIS_BASE_DATA_PATH/web/assets/apps, but can be redefined with any path set manually.\nThe final list of available applications is composed of the built-in and the custom applications provided by the administrator via WEB_ASSET_APPS_PATH.\nFor example, if Infinite Scale contains a built-in extension named image-viewer-dfx and the administrator provides a custom application named image-viewer-obj via the WEB_ASSET_APPS_PATH directory, the user will be able to access both applications from the WebUI.\nApplication Structure Applications always have to follow a strict structure.\nEverything else is skipped and not considered as an application.\nEach application must be in its own directory accessed via WEB_ASSET_APPS_PATH. Each application directory must contain a manifest.json file. Each application directory can contain a config.json file. The manifest.json file contains the following fields:\nentrypoint - required\nThe entrypoint of the application like index.js, the path is relative to the parent directory. config - optional\nA list of key-value pairs that are passed to the global web application configuration apps.yaml. Application Configuration If a custom configuration is needed, the administrator must provide the required configuration inside the $OCIS_BASE_DATA_PATH/config/apps.yaml file.\nNOTE: An application manifest should never be changed manually, see Using Custom Assets for customisation.\nThe apps.yaml file must contain a list of key-value pairs which gets merged with the config field. For example, if the image-viewer-obj application contains the following configuration:\n{ \u0026#34;entrypoint\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;config\u0026#34;: { \u0026#34;maxWidth\u0026#34;: 1280, \u0026#34;maxHeight\u0026#34;: 1280 } } The apps.yaml file contains the following configuration:\nimage-viewer-obj: config: maxHeight: 640 maxSize: 512 optional each application can have its own configuration file, which will be loaded by the WEB service.\n{ \u0026#34;config\u0026#34;: { \u0026#34;maxWidth\u0026#34;: 320 } } The Merge order is as follows: local.config overwrites \u0026gt; global.config overwrites \u0026gt; manifest.config. The result will be:\n{ \u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;image-viewer-obj\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;config\u0026#34;: { \u0026#34;maxWidth\u0026#34;: 320, \u0026#34;maxHeight\u0026#34;: 640, \u0026#34;maxSize\u0026#34;: 512 } } ] } Besides the configuration from the manifest.json file, the apps.yaml or the config.json file can also contain the following fields:\ndisabled - optional\nDefaults to false. If set to true, the application will not be loaded. Using Custom Assets Besides the configuration and application registration, in the process of loading the application assets, the system uses a mechanism to load custom assets.\nThis is useful for cases where just a single asset should be overwritten, like a logo or similar.\nConsider the following: Infinite Scale is shipped with a default web app named image-viewer-dfx which contains a logo, but the administrator wants to provide a custom logo for that application.\nThis can be achieved using the path defined via WEB_ASSET_APPS_PATH and adding a custom structure like WEB_ASSET_APPS_PATH/image-viewer-dfx/. Here you can add all custom assets to load like logo.png. On loading the web app, custom assets defined overwrite default ones.\nThis also applies for the manifest.json file, if the administrator wants to provide a custom one.\nMiscellaneous Please note that Infinite Scale, in particular the web service, needs a restart to load new applications or changes to the apps.yaml file.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 # Autogenerated # Filename: web-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9104 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9100 tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; root: / cache_ttl: 604800 cors: allow_origins: - https://localhost:9200 allow_methods: - OPTIONS - HEAD - GET - PUT - PATCH - POST - DELETE - MKCOL - PROPFIND - PROPPATCH - MOVE - COPY - REPORT - SEARCH allow_headers: - Origin - Accept - Content-Type - Depth - Authorization - Ocs-Apirequest - If-None-Match - If-Match - Destination - Overwrite - X-Request-Id - X-Requested-With - Tus-Resumable - Tus-Checksum-Algorithm - Upload-Concat - Upload-Length - Upload-Metadata - Upload-Defer-Length - Upload-Expires - Upload-Checksum - Upload-Offset - X-HTTP-Method-Override allow_credentials: false asset: core_path: /var/lib/ocis/web/assets/core themes_path: /var/lib/ocis/web/assets/themes apps_path: /var/lib/ocis/web/assets/apps file: \u0026#34;\u0026#34; web: theme_server: https://localhost:9200 theme_path: /themes/owncloud/theme.json config: server: https://localhost:9200 oidc: metadata_url: https://localhost:9200/.well-known/openid-configuration authority: https://localhost:9200 client_id: web response_type: code scope: openid profile email post_logout_redirect_uri: \u0026#34;\u0026#34; apps: - files - search - text-editor - pdf-viewer - external - admin-settings - epub-reader - preview - app-store applications: [] external_apps: [] options: openAppsInTab: false accountEditLink: null disableFeedbackLink: false feedbackLink: null runningOnEos: false cernFeatures: false upload: null editor: null contextHelpersReadMore: true logoutUrl: \u0026#34;\u0026#34; loginUrl: \u0026#34;\u0026#34; tokenStorageLocal: true disabledExtensions: [] embed: enabled: \u0026#34;\u0026#34; target: \u0026#34;\u0026#34; messagesOrigin: \u0026#34;\u0026#34; delegateAuthentication: false delegateAuthenticationOrigin: \u0026#34;\u0026#34; userListRequiresFilter: false concurrentRequests: resourceBatchActions: 0 sse: 0 shares: create: 0 list: 0 styles: [] scripts: [] custom_translations: [] apps: {} token_manager: jwt_secret: \u0026#34;\u0026#34; gateway_addr: com.owncloud.api.gateway Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEB_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEB_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEB_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEB_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEB_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYWEB_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORWEB_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEWEB_LOG_FILE string The path to the log file. Activates logging to this file if set. WEB_DEBUG_ADDR string 127.0.0.1:9104 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. WEB_DEBUG_TOKEN string Token to secure the metrics endpoint. WEB_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. WEB_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. WEB_HTTP_ADDR string 127.0.0.1:9100 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. WEB_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. WEB_CACHE_TTL int 604800 Cache policy in seconds for ownCloud Web assets. OCIS_CORS_ALLOW_ORIGINSWEB_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSWEB_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT PATCH POST DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSWEB_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSWEB_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS. See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. WEB_ASSET_CORE_PATH string /var/lib/ocis/web/assets/core Serve ownCloud Web assets from a path on the filesystem instead of the builtin assets. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/web/assets/core OCIS_ASSET_THEMES_PATHWEB_ASSET_THEMES_PATH string /var/lib/ocis/web/assets/themes Serve ownCloud themes from a path on the filesystem instead of the builtin assets. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/web/assets/themes WEB_ASSET_APPS_PATH string /var/lib/ocis/web/assets/apps Serve ownCloud Web apps assets from a path on the filesystem instead of the builtin assets. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/web/assets/apps WEB_UI_CONFIG_FILE string Read the ownCloud Web json based configuration from this path/file. The config file takes precedence over WEB_OPTION_xxx environment variables. See the text description for more details. OCIS_URLWEB_UI_THEME_SERVER string https://localhost:9200 Base URL to load themes from. Will be prepended to the theme path. WEB_UI_THEME_PATH string /themes/owncloud/theme.json Path to the theme json file. Will be appended to the URL of the theme server. OCIS_URLWEB_UI_CONFIG_SERVER string https://localhost:9200 URL, where the oCIS APIs are reachable for ownCloud Web. WEB_OIDC_METADATA_URL string https://localhost:9200/.well-known/openid-configuration URL for the OIDC well-known configuration endpoint. Defaults to the oCIS API URL + \u0026lsquo;/.well-known/openid-configuration\u0026rsquo;. OCIS_URLOCIS_OIDC_ISSUERWEB_OIDC_AUTHORITY string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP. OCIS_OIDC_CLIENT_IDWEB_OIDC_CLIENT_ID string web The OIDC client ID which ownCloud Web uses. This client needs to be set up in your IDP. Note that this setting has no effect when using the builtin IDP. WEB_OIDC_RESPONSE_TYPE string code The OIDC response type to use for authentication. WEB_OIDC_SCOPE string openid profile email OIDC scopes to request during authentication to authorize access to user details. Defaults to \u0026lsquo;openid profile email\u0026rsquo;. Values are separated by blank. More example values but not limited to are \u0026lsquo;address\u0026rsquo; or \u0026lsquo;phone\u0026rsquo; etc. WEB_OIDC_POST_LOGOUT_REDIRECT_URI string This value needs to point to a valid and reachable web page. The web client will trigger a redirect to that page directly after the logout action. The default value is empty and redirects to the login page. WEB_OPTION_OPEN_APPS_IN_TAB bool false Configures whether apps and extensions should generally open in a new tab. Defaults to false. WEB_OPTION_DISABLE_FEEDBACK_LINK bool false Set this option to \u0026rsquo;true\u0026rsquo; to disable the feedback link in the top bar. Keeping it enabled by setting the value to \u0026lsquo;false\u0026rsquo; or with the absence of the option, allows ownCloud to get feedback from your user base through a dedicated survey website. WEB_OPTION_RUNNING_ON_EOS bool false Set this option to \u0026rsquo;true\u0026rsquo; if running on an EOS storage backend (https://eos-web.web.cern.ch/eos-web/) to enable its specific features. Defaults to \u0026lsquo;false\u0026rsquo;. WEB_OPTION_CONTEXTHELPERS_READ_MORE bool true Specifies whether the \u0026lsquo;Read more\u0026rsquo; link should be displayed or not. WEB_OPTION_LOGOUT_URL string Adds a link to the user\u0026rsquo;s profile page to point him to an external page, where he can manage his session and devices. This is helpful when an external IdP is used. This option is disabled by default. WEB_OPTION_LOGIN_URL string Specifies the target URL to the login page. This is helpful when an external IdP is used. This option is disabled by default. Example URL like: https://www.myidp.com/login. WEB_OPTION_TOKEN_STORAGE_LOCAL bool true Specifies whether the access token will be stored in the local storage when set to \u0026rsquo;true\u0026rsquo; or in the session storage when set to \u0026lsquo;false\u0026rsquo;. If stored in the local storage, login state will be persisted across multiple browser tabs, means no additional logins are required. WEB_OPTION_DISABLED_EXTENSIONS []string [] A list to disable specific Web extensions identified by their ID. The ID can e.g. be taken from the \u0026lsquo;index.ts\u0026rsquo; file of the web extension. Example: \u0026lsquo;com.github.owncloud.web.files.search,com.github.owncloud.web.files.print\u0026rsquo;. See the Environment Variable Types description for more details. WEB_OPTION_EMBED_ENABLED string Defines whether Web should be running in \u0026rsquo;embed\u0026rsquo; mode. Setting this to \u0026rsquo;true\u0026rsquo; will enable a stripped down version of Web with reduced functionality used to integrate Web into other applications like via iFrame. Setting it to \u0026lsquo;false\u0026rsquo; or not setting it (default) will run Web as usual with all functionality enabled. See the text description for more details. WEB_OPTION_EMBED_TARGET string Defines how Web is being integrated when running in \u0026rsquo;embed\u0026rsquo; mode. Currently, the only supported options are \u0026rsquo;\u0026rsquo; (empty) and \u0026rsquo;location\u0026rsquo;. With \u0026rsquo;\u0026rsquo; which is the default, Web will run regular as defined via the \u0026rsquo;embed.enabled\u0026rsquo; config option. With \u0026rsquo;location\u0026rsquo;, Web will run embedded as location picker. Resource selection will be disabled and the selected resources array always includes the current folder as the only item. See the text description for more details. WEB_OPTION_EMBED_MESSAGES_ORIGIN string Defines a URL under which Web can be integrated via iFrame in \u0026rsquo;embed\u0026rsquo; mode. Note that setting this is mandatory when running Web in \u0026rsquo;embed\u0026rsquo; mode. Use \u0026lsquo;*\u0026rsquo; as value to allow running the iFrame under any URL, although this is not recommended for security reasons. See the text description for more details. WEB_OPTION_EMBED_DELEGATE_AUTHENTICATION bool false Defines whether Web should require authentication to be done by the parent application when running in \u0026rsquo;embed\u0026rsquo; mode. If set to \u0026rsquo;true\u0026rsquo; Web will not try to authenticate the user on its own but will require an access token coming from the parent application. Defaults to being unset. WEB_OPTION_EMBED_DELEGATE_AUTHENTICATION_ORIGIN string Defines the host to validate the message event origin against when running Web in \u0026rsquo;embed\u0026rsquo; mode with delegated authentication. Defaults to event message origin validation being omitted, which is only recommended for development setups. WEB_OPTION_USER_LIST_REQUIRES_FILTER bool false Defines whether one or more filters must be set in order to list users in the Web admin settings. Set this option to \u0026rsquo;true\u0026rsquo; if running in an environment with a lot of users and listing all users could slow down performance. Defaults to \u0026lsquo;false\u0026rsquo;. WEB_OPTION_CONCURRENT_REQUESTS_RESOURCE_BATCH_ACTIONS int 0 Defines the maximum number of concurrent requests per file/folder/space batch action. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SSE int 0 Defines the maximum number of concurrent requests in SSE event handlers. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SHARES_CREATE int 0 Defines the maximum number of concurrent requests per sharing invite batch. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SHARES_LIST int 0 Defines the maximum number of concurrent requests when loading individual share information inside listings. Defaults to 2. OCIS_JWT_SECRETWEB_JWT_SECRET string The secret to mint and validate jwt tokens. WEB_GATEWAY_GRPC_ADDR string com.owncloud.api.gateway The bind address of the GRPC service. ","description":"Abstract The web service embeds and serves the static files for the Infinite Scale Web Client. Note that clients will respond with a connection error if the web service is not available.\nThe web service also provides a minimal API for branding functionality like changing the logo shown.\nTable of Contents Custom Compiled Web Assets Web UI Configuration Web UI Options Web UI Config File Embedding Web Web Apps Loading Themes Loading Applications Application Structure Application Configuration Using Custom Assets Miscellaneous Example Yaml Config Custom Compiled Web Assets If you want to use your custom compiled web client assets instead of the embedded ones, then you can do that by setting the WEB_ASSET_PATH variable to point to your compiled files."},{"id":78,"href":"/services/webdav/","title":"Webdav","parent":"Services","content":" Abstract The webdav service, like the ocdav service, provides a HTTP API following the webdav protocol. It receives HTTP calls from requestors like clients and issues gRPC calls to other services executing these requests. After the called service has finished the request, the webdav service will render their responses in xml and sends them back to the requestor.\nTable of Contents Endpoints Overview Thumbnails Search Scalability Example Yaml Config Endpoints Overview Currently, the webdav service handles request for two functionalities, which are Thumbnails and Search.\nThumbnails The webdav service provides various GET endpoints to get the thumbnails of a file in authenticated and unauthenticated contexts. It also provides thumbnails for spaces on different endpoints.\nSee the thumbnail service for more information about thumbnails.\nSearch The webdav service provides access to the search functionality. It offers multiple REPORT endpoints for getting search results.\nSee the search service for more details about search functionality.\nScalability The webdav service does not persist any data and does not cache any information. Therefore multiple instances of this service can be spawned in a bigger deployment like when using container orchestration with Kubernetes, without any extra configuration.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # Autogenerated # Filename: webdav-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9119 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc_client_tls: null http: addr: 127.0.0.1:9115 root: / cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - PUT - PATCH - DELETE - OPTIONS allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Cache-Control allow_credentials: true tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; disablePreviews: false ocis_public_url: https://127.0.0.1:9200 webdav_namespace: /users/{{.Id.OpaqueId}} reva_gateway: com.owncloud.api.gateway reva_gateway_tls_mode: \u0026#34;\u0026#34; reva_gateway_tls_cacert: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEBDAV_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEBDAV_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEBDAV_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEBDAV_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEBDAV_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYWEBDAV_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORWEBDAV_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEWEBDAV_LOG_FILE string The path to the log file. Activates logging to this file if set. WEBDAV_DEBUG_ADDR string 127.0.0.1:9119 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. WEBDAV_DEBUG_TOKEN string Token to secure the metrics endpoint. WEBDAV_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. WEBDAV_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. WEBDAV_HTTP_ADDR string 127.0.0.1:9115 The bind address of the HTTP service. WEBDAV_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSWEBDAV_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSWEBDAV_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSWEBDAV_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSWEBDAV_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_DISABLE_PREVIEWSWEBDAV_DISABLE_PREVIEWS bool false Set this option to \u0026rsquo;true\u0026rsquo; to disable rendering of thumbnails triggered via webdav access. Note that when disabled, all access to preview related webdav paths will return a 404. OCIS_URLOCIS_PUBLIC_URL string https://127.0.0.1:9200 URL, where oCIS is reachable for users. WEBDAV_WEBDAV_NAMESPACE string /users/{{.Id.OpaqueId}} CS3 path layout to use when forwarding /webdav requests OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_REVA_GATEWAY_TLS_MODE string TLS mode for grpc connection to the CS3 gateway endpoint. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_REVA_GATEWAY_TLS_CACERT string The root CA certificate used to validate the gateway\u0026rsquo;s TLS certificate. ","description":"Abstract The webdav service, like the ocdav service, provides a HTTP API following the webdav protocol. It receives HTTP calls from requestors like clients and issues gRPC calls to other services executing these requests. After the called service has finished the request, the webdav service will render their responses in xml and sends them back to the requestor.\nTable of Contents Endpoints Overview Thumbnails Search Scalability Example Yaml Config Endpoints Overview Currently, the webdav service handles request for two functionalities, which are Thumbnails and Search."},{"id":79,"href":"/services/webfinger/","title":"Webfinger","parent":"Services","content":" Abstract The webfinger service provides an RFC7033 WebFinger lookup of ownCloud instances relevant for a given user account via endpoints a the /.well-known/webfinger implementation.\nIt is based on https://github.com/owncloud/lookup-webfinger-sciebo but also returns localized titles in addition to the href property.\nTable of Contents OpenID Connect Discovery Authenticated Instance Discovery Configure Different Instances Based on OpenidConnect UserInfo Claims Example Yaml Config OpenID Connect Discovery Clients can make an unauthenticated GET https://drive.ocis.test/.well-known/webfinger?resource=https%3A%2F%2Fdrive.ocis.test request to discover the OpenID Connect Issuer in the http://openid.net/specs/connect/1.0/issuer relation:\n{ \u0026#34;subject\u0026#34;: \u0026#34;https://drive.ocis.test\u0026#34;, \u0026#34;links\u0026#34;: [ { \u0026#34;rel\u0026#34;: \u0026#34;http://openid.net/specs/connect/1.0/issuer\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://sso.example.org/cas/oidc/\u0026#34; } ] } Here, the resource takes the instance domain URI, but an acct: URI works as well.\nAuthenticated Instance Discovery When using OpenID connect to authenticate requests, clients can look up the owncloud instances a user has access to.\nAuthentication is necessary to prevent leaking information about existing users. Basic auth is not supported. The default configuration will simply return the OCIS_URL and direct clients to that domain:\n{ \u0026#34;subject\u0026#34;: \u0026#34;acct:einstein@drive.ocis.test\u0026#34;, \u0026#34;links\u0026#34;: [ { \u0026#34;rel\u0026#34;: \u0026#34;http://openid.net/specs/connect/1.0/issuer\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://sso.example.org/cas/oidc/\u0026#34; }, { \u0026#34;rel\u0026#34;: \u0026#34;http://webfinger.owncloud/rel/server-instance\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://abc.drive.example.org\u0026#34;, \u0026#34;titles\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance\u0026#34; } } ] } Configure Different Instances Based on OpenidConnect UserInfo Claims A more complex example for configuring different instances could look like this:\nwebfinger: instances: - claim: email regex: einstein@example\\.org href: \u0026#34;https://{{.preferred_username}}.cloud.ocis.test\u0026#34; title: \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for Einstein\u0026#34; \u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für Einstein\u0026#34; break: true - claim: \u0026#34;email\u0026#34; regex: marie@example\\.org href: \u0026#34;https://{{.preferred_username}}.cloud.ocis.test\u0026#34; title: \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for Marie\u0026#34; \u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für Marie\u0026#34; break: false - claim: \u0026#34;email\u0026#34; regex: .+@example\\.org href: \u0026#34;https://example-org.cloud.ocis.test\u0026#34; title: \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for example.org\u0026#34; \u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für example.org\u0026#34; break: true - claim: \u0026#34;email\u0026#34; regex: .+@example\\.com href: \u0026#34;https://example-com.cloud.ocis.test\u0026#34; title: \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for example.com\u0026#34; \u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für example.com\u0026#34; break: true - claim: \u0026#34;email\u0026#34; regex: .+@.+\\..+ href: \u0026#34;https://cloud.ocis.test\u0026#34; title: \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance\u0026#34; \u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz\u0026#34; break: true Now, an authenticated webfinger request for acct:me@example.org (when logged in as marie) would return two instances, based on her email claim, the regex matches and break flags:\n{ \u0026#34;subject\u0026#34;: \u0026#34;acct:marie@example.org\u0026#34;, \u0026#34;links\u0026#34;: [ { \u0026#34;rel\u0026#34;: \u0026#34;http://openid.net/specs/connect/1.0/issuer\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://sso.example.org/cas/oidc/\u0026#34; }, { \u0026#34;rel\u0026#34;: \u0026#34;http://webfinger.owncloud/rel/server-instance\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://marie.cloud.ocis.test\u0026#34;, \u0026#34;titles\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for Marie\u0026#34;, \u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für Marie\u0026#34; } }, { \u0026#34;rel\u0026#34;: \u0026#34;http://webfinger.owncloud/rel/server-instance\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://xyz.drive.example.org\u0026#34;, \u0026#34;titles\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for example.org\u0026#34;, \u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für example.org\u0026#34; } } ] } Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 # Autogenerated # Filename: webfinger-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9279 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9275 root: / cors: allow_origins: - https://localhost:9200 allow_methods: [] allow_headers: [] allow_credentials: false tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; instances: - claim: sub regex: .+ href: \u0026#39;{{.OCIS_URL}}\u0026#39; titles: en: oCIS Instance break: false relations: - http://openid.net/specs/connect/1.0/issuer - http://webfinger.owncloud/rel/server-instance idp: https://localhost:9200 ocis_url: https://localhost:9200 insecure: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEBFINGER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEBFINGER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEBFINGER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEBFINGER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEBFINGER_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYWEBFINGER_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORWEBFINGER_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEWEBFINGER_LOG_FILE string The path to the log file. Activates logging to this file if set. WEBFINGER_DEBUG_ADDR string 127.0.0.1:9279 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. WEBFINGER_DEBUG_TOKEN string Token to secure the metrics endpoint. WEBFINGER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. WEBFINGER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. WEBFINGER_HTTP_ADDR string 127.0.0.1:9275 The bind address of the HTTP service. WEBFINGER_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSWEBFINGER_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSWEBFINGER_CORS_ALLOW_METHODS []string [] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSWEBFINGER_CORS_ALLOW_HEADERS []string [] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSWEBFINGER_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. WEBFINGER_RELATIONS []string [http://openid.net/specs/connect/1.0/issuer http://webfinger.owncloud/rel/server-instance] A list of relation URIs or registered relation types to add to webfinger responses. See the Environment Variable Types description for more details. OCIS_URLOCIS_OIDC_ISSUERWEBFINGER_OIDC_ISSUER string https://localhost:9200 The identity provider href for the openid-discovery relation. OCIS_URLWEBFINGER_OWNCLOUD_SERVER_INSTANCE_URL string https://localhost:9200 The URL for the legacy ownCloud server instance relation (not to be confused with the product ownCloud Server). It defaults to the OCIS_URL but can be overridden to support some reverse proxy corner cases. To shard the deployment, multiple instances can be configured in the configuration file. OCIS_INSECUREWEBFINGER_INSECURE bool false Allow insecure connections to the WEBFINGER service. ","description":"Abstract The webfinger service provides an RFC7033 WebFinger lookup of ownCloud instances relevant for a given user account via endpoints a the /.well-known/webfinger implementation.\nIt is based on https://github.com/owncloud/lookup-webfinger-sciebo but also returns localized titles in addition to the href property.\nTable of Contents OpenID Connect Discovery Authenticated Instance Discovery Configure Different Instances Based on OpenidConnect UserInfo Claims Example Yaml Config OpenID Connect Discovery Clients can make an unauthenticated GET https://drive."},{"id":80,"href":"/services/activitylog/","title":"Activitylog","parent":"Services","content":" Abstract The activitylog service is responsible for storing events (activities) per resource.\nTable of Contents The Log Service Ecosystem Activitylog Store Translations Translation Rules Default Language Example Yaml Config The Log Service Ecosystem Log services like the activitylog, userlog, clientlog and sse are responsible for composing notifications for a specific audience.\nThe userlog service translates and adjusts messages to be human readable. The clientlog service composes machine readable messages, so clients can act without the need to query the server. The sse service is only responsible for sending these messages. It does not care about their form or language. The activitylog service stores events per resource. These can be retrieved to show item activities Activitylog Store The activitylog stores activities for each resource. It works in conjunction with the eventhistory service to keep the data it needs to store to a minimum.\nTranslations The activitylog service has embedded translations sourced via transifex to provide a basic set of translated languages. These embedded translations are available for all deployment scenarios. In addition, the service supports custom translations, though it is currently not possible to just add custom translations to embedded ones. If custom translations are configured, the embedded ones are not used. To configure custom translations, the ACTIVITYLOG_TRANSLATION_PATH environment variable needs to point to a base folder that will contain the translation files. This path must be available from all instances of the activitylog service, a shared storage is recommended. Translation files must be of type .po or .mo. For each language, the filename needs to be activitylog.po (or activitylog.mo) and stored in a folder structure defining the language code. In general the path/name pattern for a translation file needs to be:\n{ACTIVITYLOG_TRANSLATION_PATH}/{language-code}/LC_MESSAGES/activitylog.po The language code pattern is composed of language[_territory] where language is the base language and _territory is optional and defines a country.\nFor example, for the language de, one needs to place the corresponding translation files to {ACTIVITYLOG_TRANSLATION_PATH}/de_DE/LC_MESSAGES/activitylog.po.\nImportant: For the time being, the embedded ownCloud Web frontend only supports the main language code but does not handle any territory. When strings are available in the language code language_territory, the web frontend does not see it as it only requests language. In consequence, any translations made must exist in the requested language to avoid a fallback to the default.\nTranslation Rules If a requested language code is not available, the service tries to fall back to the base language if available. For example, if the requested language-code de_DE is not available, the service tries to fall back to translations in the de folder. If the base language de is also not available, the service falls back to the system\u0026rsquo;s default English (en), which is the source of the texts provided by the code. Default Language The default language can be defined via the OCIS_DEFAULT_LANGUAGE environment variable. See the settings service for a detailed description.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 # Autogenerated # Filename: activitylog-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9197 token: \u0026#34;\u0026#34; pprof: false zpages: false events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; store: store: nats-js-kv nodes: - 127.0.0.1:9233 database: activitylog table: \u0026#34;\u0026#34; ttl: 0s username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; reva_gateway: com.owncloud.api.gateway grpc_client_tls: null http: addr: 127.0.0.1:9195 root: / cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Ocs-Apirequest allow_credentials: true tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; translation_path: \u0026#34;\u0026#34; default_language: en service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDACTIVITYLOG_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEACTIVITYLOG_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTACTIVITYLOG_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORACTIVITYLOG_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELACTIVITYLOG_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYACTIVITYLOG_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORACTIVITYLOG_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEACTIVITYLOG_LOG_FILE string The path to the log file. Activates logging to this file if set. ACTIVITYLOG_DEBUG_ADDR string 127.0.0.1:9197 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. ACTIVITYLOG_DEBUG_TOKEN string Token to secure the metrics endpoint. ACTIVITYLOG_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. ACTIVITYLOG_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_PERSISTENT_STOREACTIVITYLOG_STORE string nats-js-kv The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESACTIVITYLOG_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. ACTIVITYLOG_STORE_DATABASE string activitylog The database name the configured store should use. ACTIVITYLOG_STORE_TABLE string The database table the store should use. OCIS_PERSISTENT_STORE_TTLACTIVITYLOG_STORE_TTL Duration 0s Time to live for events in the store. See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEACTIVITYLOG_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDACTIVITYLOG_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata ACTIVITYLOG_HTTP_ADDR string 127.0.0.1:9195 The bind address of the HTTP service. ACTIVITYLOG_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSACTIVITYLOG_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSACTIVITYLOG_CORS_ALLOW_METHODS []string [GET] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSACTIVITYLOG_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Ocs-Apirequest] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSACTIVITYLOG_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_JWT_SECRETACTIVITYLOG_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_TRANSLATION_PATHACTIVITYLOG_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. OCIS_DEFAULT_LANGUAGE string en The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_SERVICE_ACCOUNT_IDACTIVITYLOG_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETACTIVITYLOG_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Abstract The activitylog service is responsible for storing events (activities) per resource.\nTable of Contents The Log Service Ecosystem Activitylog Store Translations Translation Rules Default Language Example Yaml Config The Log Service Ecosystem Log services like the activitylog, userlog, clientlog and sse are responsible for composing notifications for a specific audience.\nThe userlog service translates and adjusts messages to be human readable. The clientlog service composes machine readable messages, so clients can act without the need to query the server."},{"id":81,"href":"/services/antivirus/","title":"Antivirus","parent":"Services","content":" Abstract The antivirus service is responsible for scanning files for viruses.\nTable of Contents Memory Considerations Configuration Antivirus Scanner Type Maximum Scan Size Antivirus Workers Infected File Handling Scanner Inaccessibility Operation Modes Postprocessing Scaling in Kubernetes Example Yaml Config Memory Considerations The antivirus service can consume considerably amounts of memory. This is relevant to provide or define sufficient memory for the deployment selected. To avoid out of memory (OOM) situations, the following equation gives a rough overview based on experiences made. The memory calculation comes without any guarantee, is intended as overview only and subject of change.\nmemory limit = max file size x workers x factor 8 - 14\nWith: ANTIVIRUS_WORKERS == 1\n50MB file --\u0026gt; factor 14 --\u0026gt; 700MB memory 844MB file --\u0026gt; factor 8,3 --\u0026gt; 7GB memory Configuration Antivirus Scanner Type The antivirus service currently supports ICAP and ClamAV as antivirus scanners. The ANTIVIRUS_SCANNER_TYPE environment variable is used to select the scanner. The detailed configuration for each scanner heavily depends on the scanner type selected. See the environment variables for more details.\nFor icap, only scanners using the X-Infection-Found header are currently supported. For clamav only local sockets can currently be configured. Maximum Scan Size Several factors can make it necessary to limit the maximum filesize the antivirus service will use for scanning. Use the ANTIVIRUS_MAX_SCAN_SIZE environment variable to scan only a given amount of bytes. Obviously, it is recommended to scan the whole file, but several factors like scanner type and version, bandwidth, performance issues, etc. might make a limit necessary.\nIMPORTANT\nStreaming of files to the virus scan service still needs to be implemented. To prevent OOM errors ANTIVIRUS_MAX_SCAN_SIZE needs to be set lower than available ram.\nAntivirus Workers The number of concurrent scans can be increased by setting ANTIVIRUS_WORKERS. Be aware that this will also increase memory usage.\nInfected File Handling The antivirus service allows three different ways of handling infected files. Those can be set via the ANTIVIRUS_INFECTED_FILE_HANDLING environment variable:\ndelete: (default): Infected files will be deleted immediately, further postprocessing is cancelled. abort: (advanced option): Infected files will be kept, further postprocessing is cancelled. Files can be manually retrieved and inspected by an admin. To identify the file for further investigation, the antivirus service logs the abort/infected state including the file ID. The file is located in the storage/users/uploads folder of the ocis data directory and persists until it is manually deleted by the admin via the Manage Unfinished Uploads command. continue: (obviously not recommended): Infected files will be marked via metadata as infected but postprocessing continues normally. Note: Infected Files are moved to their final destination and therefore not prevented from download which includes the risk of spreading viruses. In all cases, a log entry is added declaring the infection and handling method and a notification via the userlog service sent.\nScanner Inaccessibility In case a scanner is not accessible by the antivirus service like a network outage, service outage or hardware outage, the antivirus service uses the abort case for further processing, independent of the actual setting made. In any case, an error is logged noting the inaccessibility of the scanner used.\nOperation Modes The antivirus service can scan files during postprocessing. on demand scanning is currently not available and might be added in a future release.\nPostprocessing The antivirus service will scan files during postprocessing. It listens for a postprocessing step called virusscan. This step can be added in the environment variable POSTPROCESSING_STEPS. Read the documentation of the postprocessing service for more details.\nThe number of concurrent scans can be increased by setting ANTIVIRUS_WORKERS, but be aware that this will also increase the memory usage.\nScaling in Kubernetes In kubernetes, ANTIVIRUS_WORKERS and ANTIVIRUS_MAX_SCAN_SIZE can be used to trigger the horizontal pod autoscaler by requesting a memory size that is below ANTIVIRUS_MAX_SCAN_SIZE. Keep in mind that ANTIVIRUS_MAX_SCAN_SIZE amount of memory might be held by ANTIVIRUS_WORKERS number of go routines.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 # Autogenerated # Filename: antivirus-config-example.yaml file: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9277 token: \u0026#34;\u0026#34; pprof: false zpages: false tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; infected-file-handling: delete events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; workers: 10 scanner: type: clamav clamav: socket: /run/clamav/clamd.ctl icap: scan_timeout: 5m0s url: icap://127.0.0.1:1344 service: avscan max-scan-size: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_LOG_LEVELANTIVIRUS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYANTIVIRUS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORANTIVIRUS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEANTIVIRUS_LOG_FILE string The path to the log file. Activates logging to this file if set. ANTIVIRUS_DEBUG_ADDR string 127.0.0.1:9277 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. ANTIVIRUS_DEBUG_TOKEN string Token to secure the metrics endpoint. ANTIVIRUS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. ANTIVIRUS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_TRACING_ENABLEDANTIVIRUS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEANTIVIRUS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTANTIVIRUS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORANTIVIRUS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. ANTIVIRUS_INFECTED_FILE_HANDLING string delete Defines the behaviour when a virus has been found. Supported options are: \u0026lsquo;delete\u0026rsquo;, \u0026lsquo;continue\u0026rsquo; and \u0026lsquo;abort \u0026lsquo;. Delete will delete the file. Continue will mark the file as infected but continues further processing. Abort will keep the file in the uploads folder for further admin inspection and will not move it to its final destination. OCIS_EVENTS_ENDPOINTANTIVIRUS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERANTIVIRUS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREANTIVIRUS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEANTIVIRUS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided ANTIVIRUS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSANTIVIRUS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEANTIVIRUS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDANTIVIRUS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. ANTIVIRUS_WORKERS int 10 The number of concurrent go routines that fetch events from the event queue. ANTIVIRUS_SCANNER_TYPE string clamav The antivirus scanner to use. Supported values are \u0026lsquo;clamav\u0026rsquo; and \u0026lsquo;icap\u0026rsquo;. ANTIVIRUS_CLAMAV_SOCKET string /run/clamav/clamd.ctl The socket clamav is running on. Note the default value is an example which needs adaption according your OS. ANTIVIRUS_ICAP_SCAN_TIMEOUT Duration 5m0s Scan timeout for the ICAP client. Defaults to \u0026lsquo;5m\u0026rsquo; (5 minutes). See the Environment Variable Types description for more details. ANTIVIRUS_ICAP_URL string icap://127.0.0.1:1344 URL of the ICAP server. ANTIVIRUS_ICAP_SERVICE string avscan The name of the ICAP service. ANTIVIRUS_MAX_SCAN_SIZE string The maximum scan size the virus scanner can handle. Only this many bytes of a file will be scanned. 0 means unlimited and is the default. Usable common abbreviations: [KB, KiB, MB, MiB, GB, GiB, TB, TiB, PB, PiB, EB, EiB], example: 2GB. ANTIVIRUS_DEBUG_SCAN_OUTCOME string A predefined outcome for virus scanning, FOR DEBUG PURPOSES ONLY! (example values: \u0026lsquo;found,infected\u0026rsquo;) ","description":"Abstract The antivirus service is responsible for scanning files for viruses.\nTable of Contents Memory Considerations Configuration Antivirus Scanner Type Maximum Scan Size Antivirus Workers Infected File Handling Scanner Inaccessibility Operation Modes Postprocessing Scaling in Kubernetes Example Yaml Config Memory Considerations The antivirus service can consume considerably amounts of memory. This is relevant to provide or define sufficient memory for the deployment selected. To avoid out of memory (OOM) situations, the following equation gives a rough overview based on experiences made."},{"id":82,"href":"/services/app-registry/","title":"App Registry","parent":"Services","content":" Abstract The app-registry service is the single point where all apps register themselves and their respective supported mime types.\nAdministrators can set default applications on a per MIME type basis and also allow the creation of new files for certain MIME types. This per MIME type configuration also features a description, file extension option and an icon.\nTable of Contents MIME Type Configuration / Creation Allow List MIME Type Configuration App Drivers CS3org WOPI Server App Driver App Provider Configuration Endpoint Access Listing available apps and mime types Open a File With ownCloud Web Open a File With the App Provider Creating a File With the App Provider Example Yaml Config MIME Type Configuration / Creation Allow List The apps will register their supported MIME types automatically, so that users can open supported files with them.\nAdministrators can set default applications for each MIME type and also allow the creation of new files for certain mime types. This, per MIME type configuration, also features a description, file extension option and an icon.\nMIME Type Configuration Modifing the MIME type config can only be achieved via a yaml configuration. Using environment variables is not possible. For an example, see the ocis_full/config/ocis/app-registry.yaml at docker-compose example. The following is a brief structure and a field description:\nStructure\napp_registry: mimetypes: - mime_type: application/vnd.oasis.opendocument.spreadsheet extension: ods name: OpenSpreadsheet description: OpenDocument spreadsheet document icon: https://some-website.test/opendocument-spreadsheet-icon.png default_app: Collabora allow_creation: true - mime_type: ... Fields\nmime_type\nThe MIME type you want to configure. extension\nThe file extension to be used for new files. name\nThe name of the file / MIME type. description\nThe human-readable description of the file / MIME type. icon\nThe URL to an icon which should be used for that MIME type. default_app\nThe name of the default app which opens this MIME type if the user doesn’t specify one. allow_creation\nWhether a user should be able to create new files of that MIME type (true or false). App Drivers App drivers represent apps if the app is not able to register itself. Currently there is only the CS3org WOPI server app driver.\nCS3org WOPI Server App Driver The CS3org WOPI server app driver is included in Infinite Scale by default. It needs at least one WOPI-compliant app like Collabora, OnlyOffice or the Microsoft Online Server or a CS3org WOPI bridge supported app like CodiMD or Etherpad and the CS3org WOPI server.\nApp Provider Configuration The configuration of the actual app provider in a docker-compose example can be found in the full ocis-wopi example directory especially in the config sections ocis-appprovider-collabora and ocis-appprovider-onlyoffice.\nEndpoint Access Listing available apps and mime types Clients, for example ownCloud Web, need to offer users the available apps to open files and mime types for new file creation. This information can be obtained from this endpoint.\nEndpoint: specified in the capabilities in apps_url, currently /app/list\nMethod: HTTP GET\nAuthentication: None\nRequest example:\ncurl \u0026#39;https://ocis.test/app/list\u0026#39; Response example:\nHTTP status code: 200\n{ \u0026#34;mime-types\u0026#34;: [ { \u0026#34;mime_type\u0026#34;: \u0026#34;application/pdf\u0026#34;, \u0026#34;ext\u0026#34;: \u0026#34;pdf\u0026#34;, \u0026#34;app_providers\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;OnlyOffice\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://some-website.test/onlyoffice-pdf-icon.png\u0026#34; } ], \u0026#34;name\u0026#34;: \u0026#34;PDF\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;PDF document\u0026#34; }, { \u0026#34;mime_type\u0026#34;: \u0026#34;application/vnd.oasis.opendocument.text\u0026#34;, \u0026#34;ext\u0026#34;: \u0026#34;odt\u0026#34;, \u0026#34;app_providers\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Collabora\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://some-website.test/collabora-odt-icon.png\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;OnlyOffice\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://some-website.test/onlyoffice-odt-icon.png\u0026#34; } ], \u0026#34;name\u0026#34;: \u0026#34;OpenDocument\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://some-website.test/opendocument-text-icon.png\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;OpenDocument text document\u0026#34;, \u0026#34;allow_creation\u0026#34;: true, \u0026#34;default_application\u0026#34;: \u0026#34;Collabora\u0026#34; }, { \u0026#34;mime_type\u0026#34;: \u0026#34;text/markdown\u0026#34;, \u0026#34;ext\u0026#34;: \u0026#34;md\u0026#34;, \u0026#34;app_providers\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;CodiMD\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://some-website.test/codimd-md-icon.png\u0026#34; } ], \u0026#34;name\u0026#34;: \u0026#34;Markdown file\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Markdown file\u0026#34;, \u0026#34;allow_creation\u0026#34;: true, \u0026#34;default_application\u0026#34;: \u0026#34;CodiMD\u0026#34; }, { \u0026#34;mime_type\u0026#34;: \u0026#34;application/vnd.ms-word.document.macroenabled.12\u0026#34;, \u0026#34;app_providers\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Collabora\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://some-website.test/collabora-word-icon.png\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;OnlyOffice\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://some-website.test/onlyoffice-word-icon.png\u0026#34; } ] }, { \u0026#34;mime_type\u0026#34;: \u0026#34;application/vnd.ms-powerpoint.template.macroenabled.12\u0026#34;, \u0026#34;app_providers\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Collabora\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://some-website.test/collabora-powerpoint-icon.png\u0026#34; } ] } ] } Open a File With ownCloud Web Endpoint: specified in the capabilities in open_web_url, currently /app/open-with-web\nMethod: HTTP POST\nAuthentication (one of them):\nAuthorization header with OIDC Bearer token for authenticated users or basic auth credentials (if enabled in oCIS) X-Access-Token header with a REVA token for authenticated users Query parameters:\nfile_id (mandatory): id of the file to be opened app_name (optional) default (not given): default app for mime type possible values depend on the app providers for a mimetype from the /app/open endpoint Request examples:\ncurl -X POST \u0026#39;https://ocis.test/app/open-with-web?file_id=ZmlsZTppZAo=\u0026#39; curl -X POST \u0026#39;https://ocis.test/app/open-with-web?file_id=ZmlsZTppZAo=\u0026amp;app_name=Collabora\u0026#39; Response examples:\nThe URI from the response JSON is intended to be opened with a GET request in a browser. If the user has not yet a session in the browser, a login flow is handled by ownCloud Web.\nHTTP status code: 200\n{ \u0026#34;uri\u0026#34;: \u0026#34;https://.....\u0026#34; } Example responses (error case):\nSee error cases for Open a file with the app provider\nOpen a File With the App Provider Endpoint: specified in the capabilities in open_url, currently /app/open\nMethod: HTTP POST\nAuthentication (one of them):\nAuthorization header with OIDC Bearer token for authenticated users or basic auth credentials (if enabled in oCIS) Public-Token header with public link token for public links X-Access-Token header with a REVA token for authenticated users Query parameters:\nfile_id (mandatory): id of the file to be opened app_name (optional) default (not given): default app for mime type possible values depend on the app providers for a mimetype from the /app/open endpoint view_mode (optional) default (not given): highest possible view mode, depending on the file permissions possible values: write: user can edit and download in the opening app read: user can view and download from the opening app view: user can view in the opening app (download is not possible) lang (optional) default (not given): default language of the application (which might maybe use the browser language) possible value is any ISO 639-1 language code. Examples: de en es \u0026hellip; Request examples:\ncurl -X POST \u0026#39;https://ocis.test/app/open?file_id=ZmlsZTppZAo=\u0026#39; curl -X POST \u0026#39;https://ocis.test/app/open?file_id=ZmlsZTppZAo=\u0026amp;lang=de\u0026#39; curl -X POST \u0026#39;https://ocis.test/app/open?file_id=ZmlsZTppZAo=\u0026amp;app_name=Collabora\u0026#39; curl -X POST \u0026#39;https://ocis.test/app/open?file_id=ZmlsZTppZAo=\u0026amp;view_mode=read\u0026#39; curl -X POST \u0026#39;https://ocis.test/app/open?file_id=ZmlsZTppZAo=\u0026amp;app_name=Collabora\u0026amp;view_mode=write\u0026#39; Response examples:\nAll apps are expected to be opened in an iframe and the response will give some parameters for that action.\nThere are apps, which need to be opened in the iframe with a form post. The form post must include all form parameters included in the response. For these apps the response will look like this:\nHTTP status code: 200\n{ \u0026#34;app_url\u0026#34;: \u0026#34;https://.....\u0026#34;, \u0026#34;method\u0026#34;: \u0026#34;POST\u0026#34;, \u0026#34;form_parameters\u0026#34;: { \u0026#34;access_token\u0026#34;: \u0026#34;eyJ0...\u0026#34;, \u0026#34;access_token_ttl\u0026#34;: \u0026#34;1634300912000\u0026#34;, \u0026#34;arbitrary_param\u0026#34;: \u0026#34;lorem-ipsum\u0026#34; } } There are apps, which need to be opened in the iframe with a GET request. The GET request must have set all headers included in the response. For these apps the response will look like this:\nHTTP status code: 200\n{ \u0026#34;app_url\u0026#34;: \u0026#34;https://...\u0026#34;, \u0026#34;method\u0026#34;: \u0026#34;GET\u0026#34;, \u0026#34;headers\u0026#34;: { \u0026#34;access_token\u0026#34;: \u0026#34;eyJ0e...\u0026#34;, \u0026#34;access_token_ttl\u0026#34;: \u0026#34;1634300912000\u0026#34;, \u0026#34;arbitrary_header\u0026#34;: \u0026#34;lorem-ipsum\u0026#34; } } Example responses (error case):\nmissing file_id\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;missing file ID\u0026#34; } wrong view_mode\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;invalid view mode\u0026#34; } unknown app_name\nHTTP status code: 404\n{ \u0026#34;code\u0026#34;: \u0026#34;RESOURCE_NOT_FOUND\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;error: not found: app \u0026#39;Collabora\u0026#39; not found\u0026#34; } wrong / invalid file id\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;invalid file ID\u0026#34; } file id does not point to a file\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;the given file id does not point to a file\u0026#34; } file does not exist / unauthorized to open the file\nHTTP status code: 404\n{ \u0026#34;code\u0026#34;: \u0026#34;RESOURCE_NOT_FOUND\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;file does not exist\u0026#34; } invalid language code\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;lang parameter does not contain a valid ISO 639-1 language code\u0026#34; } Creating a File With the App Provider Endpoint: specified in the capabilities in new_file_url, currently /app/new\nMethod: HTTP POST\nAuthentication (one of them):\nAuthorization header with OIDC Bearer token for authenticated users or basic auth credentials (if enabled in oCIS) Public-Token header with public link token for public links X-Access-Token header with a REVA token for authenticated users Query parameters:\nparent_container_id (mandatory): ID of the folder in which the file will be created filename (mandatory): name of the new file template (optional): not yet implemented Request examples:\ncurl -X POST \u0026#39;https://ocis.test/app/new?parent_container_id=c2lkOmNpZAo=\u0026amp;filename=test.odt\u0026#39; Response example:\nYou will receive a file id of the freshly created file, which you can use to open the file in an editor.\n{ \u0026#34;file_id\u0026#34;: \u0026#34;ZmlsZTppZAo=\u0026#34; } Example responses (error case):\nmissing parent_container_id\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;missing parent container ID\u0026#34; } missing filename\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;missing filename\u0026#34; } parent container not found\nHTTP status code: 404\n{ \u0026#34;code\u0026#34;: \u0026#34;RESOURCE_NOT_FOUND\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;the parent container is not accessible or does not exist\u0026#34; } parent_container_id does not point to a container\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;the parent container id does not point to a container\u0026#34; } filename is invalid (e.g. includes a path segment)\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;the filename must not contain a path segment\u0026#34; } file already exists\nHTTP status code: 403\n{ \u0026#34;code\u0026#34;: \u0026#34;RESOURCE_ALREADY_EXISTS\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;the file already exists\u0026#34; } Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 # Autogenerated # Filename: app-registry-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9243 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9242 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; app_registry: mimetypes: - mime_type: application/pdf extension: pdf name: PDF description: PDF document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: false - mime_type: application/vnd.oasis.opendocument.text extension: odt name: OpenDocument description: OpenDocument text document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.oasis.opendocument.spreadsheet extension: ods name: OpenSpreadsheet description: OpenDocument spreadsheet document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.oasis.opendocument.presentation extension: odp name: OpenPresentation description: OpenDocument presentation document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.openxmlformats-officedocument.wordprocessingml.document extension: docx name: Microsoft Word description: Microsoft Word document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.openxmlformats-officedocument.wordprocessingml.form extension: docxf name: Form Document description: Form Document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet extension: xlsx name: Microsoft Excel description: Microsoft Excel document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.openxmlformats-officedocument.presentationml.presentation extension: pptx name: Microsoft PowerPoint description: Microsoft PowerPoint document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.jupyter extension: ipynb name: Jupyter Notebook description: Jupyter Notebook icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: false - mime_type: text/markdown extension: md name: Markdown file description: Markdown file icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/compressed-markdown extension: zmd name: Compressed markdown file description: Compressed markdown file icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: false - mime_type: application/vnd.geogebra.slides extension: ggs name: GeoGebra Slides description: GeoGebra Slides icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAPP_REGISTRY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAPP_REGISTRY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAPP_REGISTRY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAPP_REGISTRY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAPP_REGISTRY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAPP_REGISTRY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAPP_REGISTRY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAPP_REGISTRY_LOG_FILE string The path to the log file. Activates logging to this file if set. APP_REGISTRY_DEBUG_ADDR string 127.0.0.1:9243 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. APP_REGISTRY_DEBUG_TOKEN string Token to secure the metrics endpoint. APP_REGISTRY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. APP_REGISTRY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. APP_REGISTRY_GRPC_ADDR string 127.0.0.1:9242 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAPP_REGISTRY_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAPP_REGISTRY_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. ","description":"Abstract The app-registry service is the single point where all apps register themselves and their respective supported mime types.\nAdministrators can set default applications on a per MIME type basis and also allow the creation of new files for certain MIME types. This per MIME type configuration also features a description, file extension option and an icon.\nTable of Contents MIME Type Configuration / Creation Allow List MIME Type Configuration App Drivers CS3org WOPI Server App Driver App Provider Configuration Endpoint Access Listing available apps and mime types Open a File With ownCloud Web Open a File With the App Provider Creating a File With the App Provider Example Yaml Config MIME Type Configuration / Creation Allow List The apps will register their supported MIME types automatically, so that users can open supported files with them."},{"id":83,"href":"/services/audit/","title":"Audit","parent":"Services","content":" Abstract The audit service logs all events of the system as an audit log. Per default, it will be logged to standard out, but can also be configured to a file output. Supported log formats are json or a minimal human-readable format.\nWith audit logs, you are able to prove compliance with corporate guidelines as well as to enable reporting and auditing of operations. The audit service takes note of actions conducted by users and administrators.\nExample minimal format:\nfile_delete) user \u0026#39;user_id\u0026#39; trashed file \u0026#39;item_id\u0026#39; file_trash_delete) user \u0026#39;user_id\u0026#39; removed file \u0026#39;item_id\u0026#39; from trashbin Example json:\n{\u0026#34;RemoteAddr\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;User\u0026#34;:\u0026#34;user_id\u0026#34;,\u0026#34;URL\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;Method\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UserAgent\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;Time\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;App\u0026#34;:\u0026#34;admin_audit\u0026#34;,\u0026#34;Message\u0026#34;:\u0026#34;user \u0026#39;user_id\u0026#39; trashed file \u0026#39;item_id\u0026#39;\u0026#34;,\u0026#34;Action\u0026#34;:\u0026#34;file_delete\u0026#34;,\u0026#34;CLI\u0026#34;:false,\u0026#34;Level\u0026#34;:1,\u0026#34;Path\u0026#34;:\u0026#34;path\u0026#34;,\u0026#34;Owner\u0026#34;:\u0026#34;user_id\u0026#34;,\u0026#34;FileID\u0026#34;:\u0026#34;item_id\u0026#34;} {\u0026#34;RemoteAddr\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;User\u0026#34;:\u0026#34;user_id\u0026#34;,\u0026#34;URL\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;Method\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UserAgent\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;Time\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;App\u0026#34;:\u0026#34;admin_audit\u0026#34;,\u0026#34;Message\u0026#34;:\u0026#34;user \u0026#39;user_id\u0026#39; removed file \u0026#39;item_id\u0026#39; from trashbin\u0026#34;,\u0026#34;Action\u0026#34;:\u0026#34;file_trash_delete\u0026#34;,\u0026#34;CLI\u0026#34;:false,\u0026#34;Level\u0026#34;:1,\u0026#34;Path\u0026#34;:\u0026#34;path\u0026#34;,\u0026#34;Owner\u0026#34;:\u0026#34;user_id\u0026#34;,\u0026#34;FileID\u0026#34;:\u0026#34;item_id\u0026#34;} The audit service is not started automatically when running as single binary started via ocis server or when running as docker container and must be started and stopped manually on demand.\nThe audit service logs:\nFile system operations\n(create/delete/move; including actions on the trash bin and versioning) User management operations\n(creation/deletion of users) Sharing operations\n(user/group sharing, sharing via link, changing permissions, calls to sharing API from clients) Table of Contents Example Yaml Config Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Autogenerated # Filename: audit-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9229 token: \u0026#34;\u0026#34; pprof: false zpages: false events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; auditlog: log_to_console: true log_to_file: false filepath: \u0026#34;\u0026#34; format: json Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUDIT_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUDIT_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUDIT_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUDIT_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUDIT_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUDIT_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUDIT_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUDIT_LOG_FILE string The path to the log file. Activates logging to this file if set. AUDIT_DEBUG_ADDR string 127.0.0.1:9229 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUDIT_DEBUG_TOKEN string Token to secure the metrics endpoint. AUDIT_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUDIT_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_EVENTS_ENDPOINTAUDIT_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERAUDIT_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREAUDIT_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEAUDIT_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided AUDIT_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSAUDIT_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEAUDIT_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDAUDIT_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. AUDIT_LOG_TO_CONSOLE bool true Logs to stdout if set to \u0026rsquo;true\u0026rsquo;. Independent of the LOG_TO_FILE option. AUDIT_LOG_TO_FILE bool false Logs to file if set to \u0026rsquo;true\u0026rsquo;. Independent of the LOG_TO_CONSOLE option. AUDIT_FILEPATH string Filepath of the logfile. Mandatory if LOG_TO_FILE is set to \u0026rsquo;true\u0026rsquo;. AUDIT_FORMAT string json Log format. Supported values are \u0026rsquo;\u0026rsquo; (empty) and \u0026lsquo;json\u0026rsquo;. Using \u0026lsquo;json\u0026rsquo; is advised, \u0026rsquo;\u0026rsquo; (empty) renders the \u0026lsquo;minimal\u0026rsquo; format. See the text description for more details. ","description":"Abstract The audit service logs all events of the system as an audit log. Per default, it will be logged to standard out, but can also be configured to a file output. Supported log formats are json or a minimal human-readable format.\nWith audit logs, you are able to prove compliance with corporate guidelines as well as to enable reporting and auditing of operations. The audit service takes note of actions conducted by users and administrators."},{"id":84,"href":"/services/auth-app/","title":"Auth-App","parent":"Services","content":" Abstract The auth-app service provides authentication for 3rd party apps.\nTable of Contents The auth Service Family Service Startup App Tokens Via CLI (dev only) Via API Via Impersonation API Example Yaml Config The auth Service Family ocis uses serveral authentication services for different use cases. All services that start with auth- are part of the authentication service family. Each member authenticates requests with different scopes. As of now, these services exist:\nauth-app handles authentication of external 3rd party apps auth-basic handles basic authentication auth-bearer handles oidc authentication auth-machine handles interservice authentication when a user is impersonated auth-service handles interservice authentication when using service accounts Service Startup Because this service is not started automatically, a manual start needs to be initiated which can be done in several ways. To configure the service usage, an environment variable for the proxy service needs to be set to allow app authentication.\nOCIS_ADD_RUN_SERVICES=auth-app # deployment specific. Add the service to the manual startup list, use with binary deployments. Alternatively you can start the service explicitly via the command line. PROXY_ENABLE_APP_AUTH=true # mandatory, allow app authentication. In case of a distributed environment, this envvar needs to be set in the proxy service. App Tokens App Tokens are used to authenticate 3rd party access via https like when using curl (apps) to access an API endpoint. These apps need to authenticate themselves as no logged in user authenticates the request. To be able to use an app token, one must first create a token. There are different options of creating a token.\nVia CLI (dev only) Replace the user-name with an existing user. For the token-expiration, you can use any time abbreviation from the following list: h, m, s. Examples: 72h or 1h or 1m or 1s. Default is 72h.\nocis auth-app create --user-name={user-name} --expiration={token-expiration} Once generated, these tokens can be used to authenticate requests to ocis. They are passed as part of the request as Basic Auth header.\nVia API The auth-app service provides an API to create (POST), list (GET) and delete (DELETE) tokens at the /auth-app/tokens endpoint.\nWhen using curl for the respective command, you need to authenticate with a header. To do so, get from the browsers developer console the currently active bearer token. Consider that this token has a short lifetime. In any example, replace \u0026lt;your host[:port]\u0026gt; with the URL:port of your Infinite Scale instance, and {token} {value} accordingly. Note that the active bearer token authenticates the user the token was issued for.\nCreate a token\nThe POST request requires:\nA expiry key/value pair in the form of expiry=\u0026lt;number\u0026gt;\u0026lt;h|m|s\u0026gt;\nExample: expiry=72h An active bearer token curl --request POST \u0026#39;https://\u0026lt;your host:9200\u0026gt;/auth-app/tokens?expiry={value}\u0026#39; \\ --header \u0026#39;accept: application/json\u0026#39; \\ --header \u0026#39;authorization: Bearer {token}\u0026#39; Example output:\n{ \u0026#34;token\u0026#34;: \u0026#34;3s2K7816M4vuSpd5\u0026#34;, \u0026#34;expiration_date\u0026#34;: \u0026#34;2024-08-08T13:42:42.796888022+02:00\u0026#34;, \u0026#34;created_date\u0026#34;: \u0026#34;2024-08-07T13:42:42+02:00\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;Generated via API\u0026#34; } List tokens\nThe GET request only requires an active bearer token for authentication:\nNote that --request GET is technically not required because it is curl default.\ncurl --request GET \u0026#39;https://\u0026lt;your host:9200\u0026gt;/auth-app/tokens\u0026#39; \\ --header \u0026#39;accept: application/json\u0026#39; \\ --header \u0026#39;authorization: Bearer {token}\u0026#39; Example output:\n[ { \u0026#34;token\u0026#34;: \u0026#34;$2a$11$EyudDGAJ18bBf5NG6PL9Ru9gygZAu0oPyLawdieNjGozcbXyyuUhG\u0026#34;, \u0026#34;expiration_date\u0026#34;: \u0026#34;2024-08-08T13:44:31.025199075+02:00\u0026#34;, \u0026#34;created_date\u0026#34;: \u0026#34;2024-08-07T13:44:31+02:00\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;Generated via Impersonation API\u0026#34; }, { \u0026#34;token\u0026#34;: \u0026#34;$2a$11$dfRBQrxRMPg8fvyvkFwaX.IPoIUiokvhzK.YNI/pCafk0us3MyPzy\u0026#34;, \u0026#34;expiration_date\u0026#34;: \u0026#34;2024-08-08T13:46:41.936052281+02:00\u0026#34;, \u0026#34;created_date\u0026#34;: \u0026#34;2024-08-07T13:46:42+02:00\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;Generated via Impersonation API\u0026#34; } ] Delete a token\nThe DELETE request requires:\nA token key/value pair in the form of token=\u0026lt;token_issued\u0026gt;\nExample: token=Z3s2K7816M4vuSpd5 An active bearer token curl --request DELETE \u0026#39;https://\u0026lt;your host:9200\u0026gt;/auth-app/tokens?token={value}\u0026#39; \\ --header \u0026#39;accept: application/json\u0026#39; \\ --header \u0026#39;authorization: Bearer {token}\u0026#39; Via Impersonation API When setting the environment variable AUTH_APP_ENABLE_IMPERSONATION to true, admins will be able to use the /auth-app/tokens endpoint to create tokens for other users but using their own bearer token for authentication. This can be important for migration scenarios, but should not be considered for regular tasks on a production system for security reasons.\nTo impersonate, the respective requests from the CLI commands above extend with the following parameters, where you can use one or the other:\nThe userID in the form of: userID={value}\nExample:\nuserID=4c510ada- ... -42cdf82c3d51\nThe userName in the form of: userName={value}\nExample:\nuserName=einstein\nExample:\nA final create request would then look like:\ncurl --request POST \u0026#39;https://\u0026lt;your host:9200\u0026gt;/auth-app/tokens?expiry={value}\u0026amp;userName={value}\u0026#39; \\ --header \u0026#39;accept: application/json\u0026#39; \\ --header \u0026#39;authorization: Bearer {token}\u0026#39; Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 # Autogenerated # Filename: auth-app-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9245 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9246 tls: null protocol: tcp http: addr: 127.0.0.1:9247 root: / cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - DELETE allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Ocs-Apirequest allow_credentials: true tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; grpc_client_tls: null token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false machine_auth_api_key: \u0026#34;\u0026#34; allow_impersonation: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_APP_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_APP_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_APP_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_APP_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_APP_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_APP_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_APP_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_APP_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_APP_DEBUG_ADDR string 127.0.0.1:9245 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_APP_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_APP_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_APP_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory. AUTH_APP_GRPC_ADDR string 127.0.0.1:9246 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_APP_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. AUTH_APP_HTTP_ADDR string 127.0.0.1:9247 The bind address of the HTTP service. AUTH_APP_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSAUTH_APP_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSAUTH_APP_CORS_ALLOW_METHODS []string [GET POST DELETE] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSAUTH_APP_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Ocs-Apirequest] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSAUTH_APP_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_JWT_SECRETAUTH_APP_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_APP_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the access token. This reduces the token size, especially when users are members of a large number of groups. OCIS_MACHINE_AUTH_API_KEYAUTH_APP_MACHINE_AUTH_API_KEY string The machine auth API key used to validate internal requests necessary to access resources from other services. AUTH_APP_ENABLE_IMPERSONATION bool false Allows admins to create app tokens for other users. Used for migration. Do NOT use in productive deployments. ","description":"Abstract The auth-app service provides authentication for 3rd party apps.\nTable of Contents The auth Service Family Service Startup App Tokens Via CLI (dev only) Via API Via Impersonation API Example Yaml Config The auth Service Family ocis uses serveral authentication services for different use cases. All services that start with auth- are part of the authentication service family. Each member authenticates requests with different scopes. As of now, these services exist:"},{"id":85,"href":"/services/auth-basic/","title":"Auth-Basic","parent":"Services","content":" Abstract The oCIS Auth Basic service provides basic authentication for those clients who cannot handle OpenID Connect. This should only be enabled for tests and development.\nThe auth-basic service is responsible for validating authentication of incoming requests. To do so, it will use the configured auth manager, see the Auth Managers section. Only HTTP basic auth requests to ocis will involve the auth-basic service.\nTo enable auth-basic, you first must set PROXY_ENABLE_BASIC_AUTH to true.\nTable of Contents The auth Service Family Auth Managers LDAP Auth Manager Other Auth Managers Scalability Example Yaml Config The auth Service Family ocis uses serveral authentication services for different use cases. All services that start with auth- are part of the authentication service family. Each member authenticates requests with different scopes. As of now, these services exist:\nauth-app handles authentication of external 3rd party apps auth-basic handles basic authentication auth-bearer handles oidc authentication auth-machine handles interservice authentication when a user is impersonated auth-service handles interservice authentication when using service accounts Auth Managers Since the auth-basic service does not do any validation itself, it needs to be configured with an authentication manager. One can use the AUTH_BASIC_AUTH_MANAGER environment variable to configure this. Currently only one auth manager is supported: \u0026quot;ldap\u0026quot;\nLDAP Auth Manager Setting AUTH_BASIC_AUTH_MANAGER to \u0026quot;ldap\u0026quot; will configure the auth-basic service to use LDAP as auth manager. This is the recommended option for running in a production and testing environment. More details on how to configure LDAP with ocis can be found in the admin docs.\nOther Auth Managers oCIS currently supports no other auth manager\nScalability When using \u0026quot;ldap\u0026quot; as auth manager, there is no persistance as requests will just be forwarded to the LDAP server. Therefore, multiple instances of the auth-basic service can be started without further configuration. Be aware, that other auth managers might not allow that.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 # Autogenerated # Filename: auth-basic-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9147 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9146 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false auth_provider: ldap auth_providers: ldap: uri: ldaps://localhost:9235 ca_cert: /var/lib/ocis/idm/ldap.crt insecure: false bind_dn: uid=reva,ou=sysusers,o=libregraph-idm bind_password: \u0026#34;\u0026#34; user_base_dn: ou=users,o=libregraph-idm group_base_dn: ou=groups,o=libregraph-idm user_scope: sub group_scope: sub user_filter: \u0026#34;\u0026#34; group_filter: \u0026#34;\u0026#34; user_object_class: inetOrgPerson group_object_class: groupOfNames login_attributes: - uid idp: https://localhost:9200 disable_user_mechanism: attribute ldap_disabled_users_group_dn: cn=DisabledUsersGroup,ou=groups,o=libregraph-idm user_schema: id: ownclouduuid id_is_octet_string: false mail: mail display_name: displayname user_name: uid user_enabled: ownCloudUserEnabled group_schema: id: ownclouduuid id_is_octet_string: false mail: mail display_name: cn group_name: cn member: member owncloudsql: db_username: owncloud db_password: \u0026#34;\u0026#34; db_host: mysql db_port: 3306 db_name: owncloud idp: https://localhost:9200 nobody: 90 join_username: false join_owncloud_uuid: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_BASIC_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_BASIC_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_BASIC_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_BASIC_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_BASIC_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_BASIC_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_BASIC_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_BASIC_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_BASIC_DEBUG_ADDR string 127.0.0.1:9147 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_BASIC_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_BASIC_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_BASIC_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory. AUTH_BASIC_GRPC_ADDR string 127.0.0.1:9146 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_BASIC_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_BASIC_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_BASIC_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups. AUTH_BASIC_AUTH_MANAGER string ldap The authentication manager to check if credentials are valid. Supported value is \u0026rsquo;ldap\u0026rsquo;. OCIS_LDAP_URIAUTH_BASIC_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo; OCIS_LDAP_CACERTAUTH_BASIC_LDAP_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. OCIS_LDAP_INSECUREAUTH_BASIC_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. OCIS_LDAP_BIND_DNAUTH_BASIC_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDAUTH_BASIC_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. OCIS_LDAP_USER_BASE_DNAUTH_BASIC_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_GROUP_BASE_DNAUTH_BASIC_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups. OCIS_LDAP_USER_SCOPEAUTH_BASIC_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_GROUP_SCOPEAUTH_BASIC_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_USER_FILTERAUTH_BASIC_LDAP_USER_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_GROUP_FILTERAUTH_BASIC_LDAP_GROUP_FILTER string LDAP filter to add to the default filters for group searches. OCIS_LDAP_USER_OBJECTCLASSAUTH_BASIC_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;). OCIS_LDAP_GROUP_OBJECTCLASSAUTH_BASIC_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;). LDAP_LOGIN_ATTRIBUTESAUTH_BASIC_LDAP_LOGIN_ATTRIBUTES []string [uid] A list of user object attributes that can be used for login. See the Environment Variable Types description for more details. OCIS_URLOCIS_OIDC_ISSUERAUTH_BASIC_IDP_URL string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. OCIS_LDAP_DISABLE_USER_MECHANISMAUTH_BASIC_DISABLE_USER_MECHANISM string attribute An option to control the behavior for disabling users. Valid options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed. OCIS_LDAP_DISABLED_USERS_GROUP_DNAUTH_BASIC_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_IDAUTH_BASIC_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique ID for users. This should be a stable globally unique ID like a UUID. OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGAUTH_BASIC_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user IDs. OCIS_LDAP_USER_SCHEMA_MAILAUTH_BASIC_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users. OCIS_LDAP_USER_SCHEMA_DISPLAYNAMEAUTH_BASIC_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users. OCIS_LDAP_USER_SCHEMA_USERNAMEAUTH_BASIC_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users. OCIS_LDAP_USER_ENABLED_ATTRIBUTEAUTH_BASIC_LDAP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_GROUP_SCHEMA_IDAUTH_BASIC_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for groups. This should be a stable globally unique id (e.g. a UUID). OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGAUTH_BASIC_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group IDs. OCIS_LDAP_GROUP_SCHEMA_MAILAUTH_BASIC_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty). OCIS_LDAP_GROUP_SCHEMA_DISPLAYNAMEAUTH_BASIC_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute). OCIS_LDAP_GROUP_SCHEMA_GROUPNAMEAUTH_BASIC_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups. OCIS_LDAP_GROUP_SCHEMA_MEMBERAUTH_BASIC_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members. AUTH_BASIC_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database. AUTH_BASIC_OWNCLOUDSQL_DB_PASSWORD string Password for the database user. AUTH_BASIC_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server. AUTH_BASIC_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection. AUTH_BASIC_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database. AUTH_BASIC_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. AUTH_BASIC_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided. AUTH_BASIC_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames AUTH_BASIC_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user ID\u0026rsquo;s. ","description":"Abstract The oCIS Auth Basic service provides basic authentication for those clients who cannot handle OpenID Connect. This should only be enabled for tests and development.\nThe auth-basic service is responsible for validating authentication of incoming requests. To do so, it will use the configured auth manager, see the Auth Managers section. Only HTTP basic auth requests to ocis will involve the auth-basic service.\nTo enable auth-basic, you first must set PROXY_ENABLE_BASIC_AUTH to true."},{"id":86,"href":"/services/auth-bearer/","title":"Auth-Bearer","parent":"Services","content":" Abstract The oCIS Auth Bearer service communicates with the configured OpenID Connect identity provider to authenticate requests. OpenID Connect is the default authentication mechanism for all clients: web, desktop and mobile. Basic auth is only used for testing and has to be explicity enabled.\nTable of Contents The auth Service Family Built in OpenID Connect Identity Provider Scalability Example Yaml Config The auth Service Family ocis uses serveral authentication services for different use cases. All services that start with auth- are part of the authentication service family. Each member authenticates requests with different scopes. As of now, these services exist:\nauth-app handles authentication of external 3rd party apps auth-basic handles basic authentication auth-bearer handles oidc authentication auth-machine handles interservice authentication when a user is impersonated auth-service handles interservice authentication when using service accounts Built in OpenID Connect Identity Provider A default oCIS deployment will start a built in OpenID Connect identity provider but can be configured to use an external one as well.\nScalability There is no persistance or caching. The proxy caches verified auth bearer tokens. Requests will be forwarded to the identity provider. Therefore, multiple instances of the auth-bearer service can be started without further configuration. Currently, the auth registry used by the gateway can only use a single instance of the service. To use more than one auth provider per deployment you need to scale the gateway.\nThis will change when we use the service registry in more places and use micro clients to select an instance of a service.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # Autogenerated # Filename: auth-bearer-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9149 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9148 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false oidc: issuer: https://localhost:9200 insecure: false id_claim: preferred_username uid_claim: \u0026#34;\u0026#34; gid_claim: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_BEARER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_BEARER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_BEARER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_BEARER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_BEARER_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_BEARER_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_BEARER_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_BEARER_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_BEARER_DEBUG_ADDR string 127.0.0.1:9149 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_BEARER_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_BEARER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_BEARER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. AUTH_BEARER_GRPC_ADDR string 127.0.0.1:9148 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_BEARER_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_BEARER_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_BEARER_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups. OCIS_URLOCIS_OIDC_ISSUERAUTH_BEARER_OIDC_ISSUER string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP. OCIS_INSECUREAUTH_BEARER_OIDC_INSECURE bool false Allow insecure connections to the OIDC issuer. AUTH_BEARER_OIDC_ID_CLAIM string preferred_username Name of the claim, which holds the user identifier. AUTH_BEARER_OIDC_UID_CLAIM string Name of the claim, which holds the UID. AUTH_BEARER_OIDC_GID_CLAIM string Name of the claim, which holds the GID. ","description":"Abstract The oCIS Auth Bearer service communicates with the configured OpenID Connect identity provider to authenticate requests. OpenID Connect is the default authentication mechanism for all clients: web, desktop and mobile. Basic auth is only used for testing and has to be explicity enabled.\nTable of Contents The auth Service Family Built in OpenID Connect Identity Provider Scalability Example Yaml Config The auth Service Family ocis uses serveral authentication services for different use cases."},{"id":87,"href":"/services/auth-machine/","title":"Auth-Machine","parent":"Services","content":" Abstract The oCIS Auth Machine is used for interservice communication when using user impersonation.\nocis uses serveral authentication services for different use cases. All services that start with auth- are part of the authentication service family. Each member authenticates requests with different scopes. As of now, these services exist:\nauth-app handles authentication of external 3rd party apps auth-basic handles basic authentication auth-bearer handles oidc authentication auth-machine handles interservice authentication when a user is impersonated auth-service handles interservice authentication when using service accounts Table of Contents User Impersonation Deprecation Example Yaml Config User Impersonation When one ocis service is trying to talk to other ocis services, it needs to authenticate itself. To do so, it will impersonate a user using the auth-machine service. It will then act on behalf of this user. Any action will show up as action of this specific user, which gets visible when e.g. logged in the audit log.\nDeprecation With the upcoming auth-service service, the auth-machine service will be used less frequently and is probably a candidate for deprecation.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Autogenerated # Filename: auth-machine-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9167 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9166 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false machine_auth_api_key: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_MACHINE_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_MACHINE_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_MACHINE_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_MACHINE_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_MACHINE_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_MACHINE_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_MACHINE_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_MACHINE_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_MACHINE_DEBUG_ADDR string 127.0.0.1:9167 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_MACHINE_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_MACHINE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_MACHINE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. AUTH_MACHINE_GRPC_ADDR string 127.0.0.1:9166 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_MACHINE_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_MACHINE_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_MACHINE_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups. OCIS_MACHINE_AUTH_API_KEYAUTH_MACHINE_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. ","description":"Abstract The oCIS Auth Machine is used for interservice communication when using user impersonation.\nocis uses serveral authentication services for different use cases. All services that start with auth- are part of the authentication service family. Each member authenticates requests with different scopes. As of now, these services exist:\nauth-app handles authentication of external 3rd party apps auth-basic handles basic authentication auth-bearer handles oidc authentication auth-machine handles interservice authentication when a user is impersonated auth-service handles interservice authentication when using service accounts Table of Contents User Impersonation Deprecation Example Yaml Config User Impersonation When one ocis service is trying to talk to other ocis services, it needs to authenticate itself."},{"id":88,"href":"/services/auth-service/","title":"Auth-Service","parent":"Services","content":" Abstract The ocis Auth Service is used to authenticate service accounts. Compared to normal accounts, service accounts are ocis internal only and not available as ordinary users like via LDAP.\nTable of Contents The auth Service Family Service Accounts Configuring Service Accounts Example Yaml Config The auth Service Family ocis uses serveral authentication services for different use cases. All services that start with auth- are part of the authentication service family. Each member authenticates requests with different scopes. As of now, these services exist:\nauth-app handles authentication of external 3rd party apps auth-basic handles basic authentication auth-bearer handles oidc authentication auth-machine handles interservice authentication when a user is impersonated auth-service handles interservice authentication when using service accounts Service Accounts Service accounts are user accounts that are only used for inter service communication. The users have no personal space, do not show up in user lists and cannot login via the UI. Service accounts can be configured in the settings service. Only the admin service user is available for now. Additionally to the actions it can do via its role, all service users can stat all files on all spaces.\nConfiguring Service Accounts By using the envvars OCIS_SERVICE_ACCOUNT_ID and OCIS_SERVICE_ACCOUNT_SECRET, one can configure the ID and the secret of the service user. The secret can be rotated regulary to increase security. For activating a new secret, all services where the envvars are used need to be restarted. The secret is always and only stored in memory and never written into any persistant store. Though you can use any string for the service account, it is recommmended to use a UUIDv4 string.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 # Autogenerated # Filename: auth-service-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9198 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9199 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_SERVICE_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_SERVICE_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_SERVICE_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_SERVICE_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_SERVICE_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_SERVICE_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_SERVICE_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_SERVICE_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_SERVICE_DEBUG_ADDR string 127.0.0.1:9198 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_SERVICE_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_SERVICE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_SERVICE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. AUTH_SERVICE_GRPC_ADDR string 127.0.0.1:9199 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_SERVICE_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_SERVICE_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_SERVICE_ACCOUNT_IDAUTH_SERVICE_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETAUTH_SERVICE_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Abstract The ocis Auth Service is used to authenticate service accounts. Compared to normal accounts, service accounts are ocis internal only and not available as ordinary users like via LDAP.\nTable of Contents The auth Service Family Service Accounts Configuring Service Accounts Example Yaml Config The auth Service Family ocis uses serveral authentication services for different use cases. All services that start with auth- are part of the authentication service family."},{"id":89,"href":"/services/clientlog/","title":"Clientlog Service","parent":"Services","content":" Abstract The clientlog service is responsible for composing machine readable notifications for clients. Clients are apps and web interfaces.\nTable of Contents The Log Service Ecosystem Clientlog Events Example Yaml Config The Log Service Ecosystem Log services like the userlog, clientlog and sse are responsible for composing notifications for a certain audience.\nThe userlog service translates and adjusts messages to be human readable. The clientlog service composes machine readable messages, so clients can act without the need to query the server. The sse service is only responsible for sending these messages. It does not care about their form or language. Clientlog Events The messages the clientlog service sends are intended for the use by clients, not by users. The client might for example be informed that a file has finished post-processing. With that, the client can make the file available to the user without additional server queries.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 # Autogenerated # Filename: clientlog-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9260 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc_client_tls: null token_manager: jwt_secret: \u0026#34;\u0026#34; reva_gateway: com.owncloud.api.gateway events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDCLIENTLOG_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPECLIENTLOG_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTCLIENTLOG_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORCLIENTLOG_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELCLIENTLOG_USERLOG_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYCLIENTLOG_USERLOG_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORCLIENTLOG_USERLOG_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILECLIENTLOG_USERLOG_LOG_FILE string The path to the log file. Activates logging to this file if set. CLIENTLOG_DEBUG_ADDR string 127.0.0.1:9260 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. CLIENTLOG_DEBUG_TOKEN string Token to secure the metrics endpoint. CLIENTLOG_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. CLIENTLOG_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_JWT_SECRETCLIENTLOG_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAYCLIENTLOG_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_EVENTS_ENDPOINTCLIENTLOG_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERCLIENTLOG_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURECLIENTLOG_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATECLIENTLOG_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSCLIENTLOG_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMECLIENTLOG_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDCLIENTLOG_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_SERVICE_ACCOUNT_IDCLIENTLOG_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETCLIENTLOG_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Abstract The clientlog service is responsible for composing machine readable notifications for clients. Clients are apps and web interfaces.\nTable of Contents The Log Service Ecosystem Clientlog Events Example Yaml Config The Log Service Ecosystem Log services like the userlog, clientlog and sse are responsible for composing notifications for a certain audience.\nThe userlog service translates and adjusts messages to be human readable. The clientlog service composes machine readable messages, so clients can act without the need to query the server."},{"id":90,"href":"/services/collaboration/","title":"Collaboration","parent":"Services","content":" Abstract The collaboration service connects ocis with document servers such as Collabora, ONLYOFFICE or Microsoft using the WOPI protocol.\nSince this service requires an external document server, it won\u0026rsquo;t start by default when using ocis server. You must start it manually with the ocis collaboration server command.\nBecause the collaboration service needs to be started manually, the following prerequisite applies: On collaboration service startup, particular environment variables are required to be populated. If environment variables have a default like the MICRO_REGISTRY_ADDRESS, the default will be used, if not set otherwise. Use for all others the instance values as defined. If these environment variables are not provided or misconfigured, the collaboration service will not start up.\nRequired environment variables:\nOCIS_URL OCIS_JWT_SECRET OCIS_REVA_GATEWAY MICRO_REGISTRY_ADDRESS Table of Contents Requirements WOPI Configuration Storing Example Yaml Config Requirements The collaboration service requires the target document server (ONLYOFFICE, Collabora, etc.) to be up and running. Additionally, some Infinite Scale services are also required to be running in order to register the GRPC service for the open in app action in the webUI. The following internal and external services need to be available:\nExternal document server. The gateway service. The app-registry service. If any of the named services above have not been started or are not reachable, the collaboration service won\u0026rsquo;t start. For the binary or the docker release of Infinite Scale, check with the ocis list command if they have been started. If not, you must start them manually upfront before starting the collaboration service.\nWOPI Configuration There are a few variables that you need to set:\nCOLLABORATION_APP_NAME:\nThe name of the app which is shown to the user. You can chose freely but you are limited to a single word without special characters or whitespaces. We recommend to use pascalCase like \u0026lsquo;CollaboraOnline\u0026rsquo;.\nCOLLABORATION_APP_PRODUCT:\nThe product name of the connected WebOffice app, which can be one of the following:\nCollabora, OnlyOffice, Microsoft365 or MicrosoftOfficeOnline. This is used to internally control the behavior according to the different features of the used products.\nCOLLABORATION_APP_ADDR:\nThe URL of the collaborative editing app (onlyoffice, collabora, etc).\nFor example: https://office.example.com.\nCOLLABORATION_APP_INSECURE:\nIn case you are using a self signed certificate for the WOPI app you can tell the collaboration service to allow an insecure connection.\nCOLLABORATION_WOPI_SRC:\nThe external address of the collaboration service. The target app (onlyoffice, collabora, etc) will use this address to read and write files from Infinite Scale.\nFor example: https://wopi.example.com.\nCOLLABORATION_WOPI_SHORTTOKENS:\nNeeds to be set if the office application like Microsoft Office Online complains about the URL is too long (which contains the access token) and refuses to work. If enabled, a store must be configured.\nThe application can be customized further by changing the COLLABORATION_APP_* options to better describe the application.\nStoring The collaboration service persists information via the configured store in COLLABORATION_STORE. Possible stores are:\nmemory: Basic in-memory store. Will not survive a restart. This is not recommended for this service. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream. This is the default value. noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Example Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 # Autogenerated # Filename: collaboration-config-example.yaml app: name: Collabora product: Collabora description: Open office documents with Collabora icon: image-edit addr: https://127.0.0.1:9980 insecure: false proofkeys: disable: false duration: 12h licensecheckenable: false store: store: nats-js-kv nodes: - 127.0.0.1:9233 database: collaboration table: \u0026#34;\u0026#34; ttl: 30m0s username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; grpc: addr: 127.0.0.1:9301 protocol: tcp http: addr: 127.0.0.1:9300 tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; wopi: wopisrc: https://localhost:9300 secret: \u0026#34;\u0026#34; disable_chat: false proxy_url: \u0026#34;\u0026#34; proxy_secret: \u0026#34;\u0026#34; short_tokens: false cs3api: gateway: name: com.owncloud.api.gateway datagateway: insecure: false grpc_client_tls: null tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9304 token: \u0026#34;\u0026#34; pprof: false zpages: false Environment Variables Name Type Default Value Description COLLABORATION_APP_NAME string Collabora The name of the app which is shown to the user. You can chose freely but you are limited to a single word without special characters or whitespaces. We recommend to use pascalCase like \u0026lsquo;CollaboraOnline\u0026rsquo;. COLLABORATION_APP_PRODUCT string Collabora The WebOffice app, either Collabora, OnlyOffice, Microsoft365 or MicrosoftOfficeOnline. COLLABORATION_APP_DESCRIPTION string Open office documents with Collabora App description COLLABORATION_APP_ICON string image-edit Icon for the app COLLABORATION_APP_ADDR string https://127.0.0.1:9980 The URL where the WOPI app is located, such as https://127.0.0.1:8080. COLLABORATION_APP_INSECURE bool false Skip TLS certificate verification when connecting to the WOPI app COLLABORATION_APP_PROOF_DISABLE bool false Disable the proof keys verification COLLABORATION_APP_PROOF_DURATION string 12h Duration for the proof keys to be cached in memory, using time.ParseDuration format. If the duration can\u0026rsquo;t be parsed, we\u0026rsquo;ll use the default 12h as duration COLLABORATION_APP_LICENSE_CHECK_ENABLE bool false Enable license checking to edit files. Needs to be enabled when using Microsoft365 with the business flow. OCIS_PERSISTENT_STORECOLLABORATION_STORE string nats-js-kv The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESCOLLABORATION_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. COLLABORATION_STORE_DATABASE string collaboration The database name the configured store should use. COLLABORATION_STORE_TABLE string The database table the store should use. OCIS_PERSISTENT_STORE_TTLCOLLABORATION_STORE_TTL Duration 30m0s Time to live for events in the store. Defaults to \u0026lsquo;30m\u0026rsquo; (30 minutes). See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMECOLLABORATION_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDCOLLABORATION_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_JWT_SECRETCOLLABORATION_JWT_SECRET string The secret to mint and validate jwt tokens. COLLABORATION_GRPC_ADDR string 127.0.0.1:9301 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLCOLLABORATION_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. COLLABORATION_HTTP_ADDR string 127.0.0.1:9300 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. COLLABORATION_WOPI_SRC string https://localhost:9300 The WOPI source base URL containing schema, host and port. Set this to the schema and domain where the collaboration service is reachable for the wopi app, such as https://office.owncloud.test. COLLABORATION_WOPI_SECRET string Used to mint and verify WOPI JWT tokens and encrypt and decrypt the REVA JWT token embedded in the WOPI JWT token. COLLABORATION_WOPI_DISABLE_CHATOCIS_WOPI_DISABLE_CHAT bool false Disable chat in the office web frontend. This feature applies to OnlyOffice and Microsoft. COLLABORATION_WOPI_PROXY_URL string The URL to the ownCloud Office365 WOPI proxy. Optional. To use this feature, you need an office365 proxy subscription. If you become part of the Microsoft CSP program (https://learn.microsoft.com/en-us/partner-center/enroll/csp-overview), you can use WebOffice without a proxy. COLLABORATION_WOPI_PROXY_SECRET string Optional, the secret to authenticate against the ownCloud Office365 WOPI proxy. This secret can be obtained from ownCloud via the office365 proxy subscription. COLLABORATION_WOPI_SHORTTOKENS bool false Use short access tokens for WOPI access. This is useful for office packages, like Microsoft Office Online, which have URL length restrictions. If enabled, a persistent store must be configured. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata. COLLABORATION_CS3API_DATAGATEWAY_INSECURE bool false Connect to the CS3API data gateway insecurely. OCIS_TRACING_ENABLEDCOLLABORATION_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPECOLLABORATION_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTCOLLABORATION_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORCOLLABORATION_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELCOLLABORATION_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYCOLLABORATION_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORCOLLABORATION_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILECOLLABORATION_LOG_FILE string The path to the log file. Activates logging to this file if set. COLLABORATION_DEBUG_ADDR string 127.0.0.1:9304 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. COLLABORATION_DEBUG_TOKEN string Token to secure the metrics endpoint. COLLABORATION_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. COLLABORATION_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. ","description":"Abstract The collaboration service connects ocis with document servers such as Collabora, ONLYOFFICE or Microsoft using the WOPI protocol.\nSince this service requires an external document server, it won\u0026rsquo;t start by default when using ocis server. You must start it manually with the ocis collaboration server command.\nBecause the collaboration service needs to be started manually, the following prerequisite applies: On collaboration service startup, particular environment variables are required to be populated."},{"id":91,"href":"/services/eventhistory/","title":"Eventhistory","parent":"Services","content":" Abstract The eventhistory consumes all events from the configured event system like NATS, stores them and allows other services to retrieve them via an event ID.\nTable of Contents Prerequisites Consuming Storing Retrieving Example Yaml Config Prerequisites Running the eventhistory service without an event system like NATS is not possible.\nConsuming The eventhistory services consumes all events from the configured event system.\nStoring The eventhistory service stores each consumed event via the configured store in EVENTHISTORY_STORE. Possible stores are:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Retrieving Other services can call the eventhistory service via a gRPC call to retrieve events. The request must contain the event ID that should be retrieved.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # Autogenerated # Filename: eventhistory-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9270 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9274 tls: null grpc_client_tls: null events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; store: store: nats-js-kv nodes: - 127.0.0.1:9233 database: eventhistory table: \u0026#34;\u0026#34; ttl: 336h0m0s username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDEVENTHISTORY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEEVENTHISTORY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTEVENTHISTORY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOREVENTHISTORY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELEVENTHISTORY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYEVENTHISTORY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOREVENTHISTORY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEEVENTHISTORY_LOG_FILE string The path to the log file. Activates logging to this file if set. EVENTHISTORY_DEBUG_ADDR string 127.0.0.1:9270 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. EVENTHISTORY_DEBUG_TOKEN string Token to secure the metrics endpoint. EVENTHISTORY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. EVENTHISTORY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. EVENTHISTORY_GRPC_ADDR string 127.0.0.1:9274 The bind address of the GRPC service. OCIS_EVENTS_ENDPOINTEVENTHISTORY_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTEREVENTHISTORY_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREEVENTHISTORY_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEEVENTHISTORY_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. Will be seen as empty if NOTIFICATIONS_EVENTS_TLS_INSECURE is provided. OCIS_EVENTS_ENABLE_TLSEVENTHISTORY_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEEVENTHISTORY_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDEVENTHISTORY_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_PERSISTENT_STOREEVENTHISTORY_STORE string nats-js-kv The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESEVENTHISTORY_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. EVENTHISTORY_STORE_DATABASE string eventhistory The database name the configured store should use. EVENTHISTORY_STORE_TABLE string The database table the store should use. OCIS_PERSISTENT_STORE_TTLEVENTHISTORY_STORE_TTL Duration 336h0m0s Time to live for events in the store. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks). See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEEVENTHISTORY_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDEVENTHISTORY_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. ","description":"Abstract The eventhistory consumes all events from the configured event system like NATS, stores them and allows other services to retrieve them via an event ID.\nTable of Contents Prerequisites Consuming Storing Retrieving Example Yaml Config Prerequisites Running the eventhistory service without an event system like NATS is not possible.\nConsuming The eventhistory services consumes all events from the configured event system.\nStoring The eventhistory service stores each consumed event via the configured store in EVENTHISTORY_STORE."},{"id":92,"href":"/services/frontend/","title":"Frontend","parent":"Services","content":" Abstract The frontend service translates various owncloud related HTTP APIs to CS3 requests.\nTable of Contents Endpoints Overview appprovider archiver datagateway ocs Event Handler Sharing Scalability Define Read-Only Attributes Caching Auto-Accept Shares Passwords The Password Policy The Password Policy Capability Password Enforcement for all Public Links Password Enforcement for Writeable Public Links Example Yaml Config Endpoints Overview Currently, the frontend service handles requests for three functionalities, which are appprovider, archiver, datagateway and ocs.\nappprovider The appprovider endpoint, by default /app, forwards HTTP requests to the CS3 App Registry API\narchiver The archiver endpoint, by default /archiver, implements zip and tar download for collections of files. It will internally use the CS3 API to initiate downloads and then stream the individual files as part of a compressed file.\ndatagateway The datagateway endpoint, by default /data, forwards file up- and download requests to the correct CS3 data provider. OCIS starts a dataprovider as part of the storage-* services. The routing happens based on the JWT that was created by a storage provider in response to an InitiateFileDownload or InitiateFileUpload request.\nocs The ocs endpoint, by default /ocs, implements the ownCloud 10 Open Collaboration Services API by translating it into CS3 API requests. It can handle users, groups, capabilities and also implements the files sharing functionality on top of CS3. The /ocs/v[12].php/cloud/user/signing-key is currently handled by the dedicated ocs service.\nEvent Handler The frontend service contains an eventhandler for handling ocs related events. As of now, it only listens to the ShareCreated event.\nSharing Aggregating share information is one of the most time consuming operations in OCIS. The service fetches a list of either received or created shares and has to stat every resource individually. While stats are fast, the default behavior scales linearly with the number of shares.\nTo save network trips the sharing implementation can cache the stat requests with an in memory cache or in Redis. It will shorten the response time by the network round-trip overhead at the cost of the API only eventually being updated.\nSetting FRONTEND_OCS_RESOURCE_INFO_CACHE_TTL=60 (deprecated) would cache the stat info for 60 seconds. Increasing this value makes sense for large deployments with thousands of active users that keep the cache up to date. Low frequency usage scenarios should not expect a noticeable improvement.\nScalability While the frontend service does not persist any data, it does cache information about files and filesystem (Stat()) responses and user information. Therefore, multiple instances of this service can be spawned in a bigger deployment like when using container orchestration with Kubernetes, when configuring FRONTEND_OCS_RESOURCE_INFO_CACHE_STORE (deprecated) and the related config options.\nDefine Read-Only Attributes A lot of user management is made via the standardized libregraph API. Depending on how the system is configured, there might be some user attributes that an ocis instance admin can\u0026rsquo;t change because of properties coming from an external LDAP server, or similar. This can be the case when the ocis admin is not the LDAP admin. To ease life for admins, there are hints as capabilites telling the frontend which attributes are read-only to enable a different optical representation like being grayed out. To configure these hints, use the environment variable FRONTEND_READONLY_USER_ATTRIBUTES, which takes a comma separated list of attributes, see the envvar for supported values.\nYou can find more details regarding available attributes at the libre-graph-api openapi-spec and on owncloud.dev.\nCaching The frontend service can use a configured store via FRONTEND_OCS_STAT_CACHE_STORE (deprecated). Possible stores are:\nmemory: Basic in-memory store and the default. redis-sentinel: Stores data in a configured Redis Sentinel cluster. nats-js-kv: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in production environments. Other store types may work but are not supported currently.\nNote: The service can only be scaled if not using memory store and the stores are configured identically over all instances!\nNote that if you have used one of the deprecated stores, you should reconfigure to one of the supported ones as the deprecated stores will be removed in a later version.\nStore specific notes:\nWhen using redis-sentinel, the Redis master to use is configured via e.g. OCIS_CACHE_STORE_NODES in the form of \u0026lt;sentinel-host\u0026gt;:\u0026lt;sentinel-port\u0026gt;/\u0026lt;redis-master\u0026gt; like 10.10.0.200:26379/mymaster. When using nats-js-kv it is recommended to set OCIS_CACHE_STORE_NODES to the same value as OCIS_EVENTS_ENDPOINT. That way the cache uses the same nats instance as the event bus. When using the nats-js-kv store, it is possible to set OCIS_CACHE_DISABLE_PERSISTENCE to instruct nats to not persist cache data on disc. Auto-Accept Shares When setting the FRONTEND_AUTO_ACCEPT_SHARES to true, all incoming shares will be accepted automatically. Users can overwrite this setting individually in their profile.\nPasswords The Password Policy Note that the password policy currently impacts only public link password validation.\nIn Infinite Scale, the password policy is always enabled because the max-length restriction is always applying and should be taken into account by the clients.\nWith the password policy, mandatory criteria for the password can be defined via the environment variables listed below.\nGenerally, a password can contain any UTF-8 characters, however some characters are regarded as special since they are not used in ordinary texts. Which characters should be treated as special is defined by \u0026ldquo;The OWASP® Foundation\u0026rdquo; password-special-characters (between double quotes): \u0026quot; !\u0026quot;#$%\u0026amp;\u0026rsquo;()*+,-./:;\u0026lt;=\u0026gt;?@[]^_`{|}~\u0026quot;\nThe validation against the banned passwords list can be configured via a text file with words separated by new lines. If a user tries to set a password listed in the banned passwords list, the password can not be used (is invalid) even if the other mandatory criteria are passed. The admin can define the path of the banned passwords list file. If the file doesn\u0026rsquo;t exist in a location, Infinite Scale tries to load a file from the OCIS_CONFIG_DIR/OCIS_PASSWORD_POLICY_BANNED_PASSWORDS_LIST. An option will be enabled when the file has been loaded successfully.\nFollowing environment variables can be set to define the password policy behaviour:\nOCIS_PASSWORD_POLICY_DISABLED Disable the password policy OCIS_PASSWORD_POLICY_MIN_CHARACTERS Define the minimum password length. OCIS_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS Define the minimum number of uppercase letters. OCIS_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS Define the minimum number of lowercase letters. OCIS_PASSWORD_POLICY_MIN_DIGITS Define the minimum number of digits. OCIS_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS Define the minimum number of special characters. OCIS_PASSWORD_POLICY_BANNED_PASSWORDS_LIST Path to the \u0026lsquo;banned passwords list\u0026rsquo; file. These variables are global ocis variables because they are used not only in the frontend service, but also in the sharing service.\nNote that a password can have a maximum length of 72 bytes. Depending on the alphabet used, a character is encoded by 1 to 4 bytes, defining the maximum length of a password indirectly. While US-ASCII will only need one byte, Latin alphabets and also Greek or Cyrillic ones need two bytes. Three bytes are needed for characters in Chinese, Japanese and Korean etc.\nThe Password Policy Capability The capabilities endpoint (e.g. https://ocis.test/ocs/v1.php/cloud/capabilities?format=json) gives you following capabilities which are relevant for the password policy:\n{ \u0026#34;ocs\u0026#34;: { \u0026#34;data\u0026#34;: { \u0026#34;capabilities\u0026#34;: { \u0026#34;password_policy\u0026#34;: { \u0026#34;min_characters\u0026#34;: 10, \u0026#34;max_characters\u0026#34;: 72, \u0026#34;min_lowercase_characters\u0026#34;: 1, \u0026#34;min_uppercase_characters\u0026#34;: 2, \u0026#34;min_digits\u0026#34;: 1, \u0026#34;min_special_characters\u0026#34;: 1 } } } } } Password Enforcement for all Public Links For public accessible shares, independent if read only or writable, a password is enforced. To change this requirement, set the following environment variable to false:\nOCIS_SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORD\nPassword Enforcement for Writeable Public Links For public accessible writable shares, a password can be enforced. To change the current setting, set the following environment variable to true:\nOCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD\nNote that changing this environment variable only makes sense if\nOCIS_SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORD\nis set to false.\nExample Yaml Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 # Autogenerated # Filename: frontend-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9141 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9140 protocol: tcp prefix: \u0026#34;\u0026#34; cors: allow_origins: - https://localhost:9200 allow_methods: - OPTIONS - HEAD - GET - PUT - POST - PATCH - DELETE - MKCOL - PROPFIND - PROPPATCH - MOVE - COPY - REPORT - SEARCH allow_headers: - Origin - Accept - Content-Type - Depth - Authorization - Ocs-Apirequest - If-None-Match - If-Match - Destination - Overwrite - X-Request-Id - X-Requested-With - Tus-Resumable - Tus-Checksum-Algorithm - Upload-Concat - Upload-Length - Upload-Metadata - Upload-Defer-Length - Upload-Expires - Upload-Checksum - Upload-Offset - X-HTTP-Method-Override - Cache-Control allow_credentials: false transfer_secret: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; machine_auth_api_key: \u0026#34;\u0026#34; skip_user_groups_in_token: false enable_favorites: false max_quota: 0 upload_max_chunk_size: 10000000 upload_http_method_override: \u0026#34;\u0026#34; default_upload_protocol: tus enable_federated_sharing_incoming: false enable_federated_sharing_outgoing: false search_min_length: 3 edition: Community disable_sse: false default_link_permissions: 1 public_url: https://localhost:9200 max_concurrency: 1 app_handler: insecure: false secure_view_app_addr: com.owncloud.api.collaboration archiver: max_num_files: 10000 max_size: 1073741824 insecure: false data_gateway: prefix: data ocs: prefix: ocs share_prefix: /Shares home_namespace: /users/{{.Id.OpaqueId}} additional_info_attribute: \u0026#39;{{.Mail}}\u0026#39; stat_cache_type: memory stat_cache_nodes: - 127.0.0.1:9233 stat_cache_database: cache-stat stat_cache_table: \u0026#34;\u0026#34; stat_cache_ttl: 5m0s stat_cache_disable_persistence: false stat_cache_auth_username: \u0026#34;\u0026#34; stat_cache_auth_password: \u0026#34;\u0026#34; enable_denials: false list_ocm_shares: true include_ocm_sharees: false public_sharing_share_must_have_password: true public_sharing_writeableshare_must_have_password: false show_email_in_results: false checksums: supported_types: - sha1 - md5 - adler32 preferred_upload_type: sha1 read_only_user_attributes: [] ldap_server_write_enabled: true full_text_search: false middleware: auth: credentials_by_user_agent: {} events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; grpc_client_tls: null auto_accept_shares: true service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; password_policy: min_characters: 8 min_lowercase_characters: 1 min_uppercase_characters: 1 min_digits: 1 min_special_characters: 1 banned_passwords_list: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDFRONTEND_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEFRONTEND_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTFRONTEND_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORFRONTEND_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELFRONTEND_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYFRONTEND_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORFRONTEND_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEFRONTEND_LOG_FILE string The path to the log file. Activates logging to this file if set. FRONTEND_DEBUG_ADDR string 127.0.0.1:9141 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. FRONTEND_DEBUG_TOKEN string Token to secure the metrics endpoint. FRONTEND_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. FRONTEND_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. FRONTEND_HTTP_ADDR string 127.0.0.1:9140 The bind address of the HTTP service. FRONTEND_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. FRONTEND_HTTP_PREFIX string The Path prefix where the frontend can be accessed (defaults to /). OCIS_CORS_ALLOW_ORIGINSFRONTEND_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSFRONTEND_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT POST PATCH DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSFRONTEND_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSFRONTEND_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_TRANSFER_SECRET string Transfer secret for signing file up- and download requests. OCIS_JWT_SECRETFRONTEND_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_MACHINE_AUTH_API_KEYFRONTEND_MACHINE_AUTH_API_KEY string The machine auth API key used to validate internal requests necessary to access resources from other services. FRONTEND_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. FRONTEND_ENABLE_FAVORITES bool false Enables the support for favorites in the clients. OCIS_SPACES_MAX_QUOTAFRONTEND_MAX_QUOTA uint64 0 Set the global max quota value in bytes. A value of 0 equals unlimited. The value is provided via capabilities. FRONTEND_UPLOAD_MAX_CHUNK_SIZE int 10000000 Sets the max chunk sizes in bytes for uploads via the clients. FRONTEND_UPLOAD_HTTP_METHOD_OVERRIDE string Advise TUS to replace PATCH requests by POST requests. FRONTEND_DEFAULT_UPLOAD_PROTOCOL string tus The default upload protocol to use in clients. Currently only \u0026rsquo;tus\u0026rsquo; is available. See the developer API documentation for more details about TUS. OCIS_ENABLE_OCMFRONTEND_ENABLE_FEDERATED_SHARING_INCOMING bool false Changing this value is NOT supported. Enables support for incoming federated sharing for clients. The backend behaviour is not changed. OCIS_ENABLE_OCMFRONTEND_ENABLE_FEDERATED_SHARING_OUTGOING bool false Changing this value is NOT supported. Enables support for outgoing federated sharing for clients. The backend behaviour is not changed. FRONTEND_SEARCH_MIN_LENGTH int 3 Minimum number of characters to enter before a client should start a search for Share receivers. This setting can be used to customize the user experience if e.g too many results are displayed. OCIS_EDITIONFRONTEND_EDITION string Community Edition of oCIS. Used for branding purposes. OCIS_DISABLE_SSEFRONTEND_DISABLE_SSE bool false When set to true, clients are informed that the Server-Sent Events endpoint is not accessible. FRONTEND_DEFAULT_LINK_PERMISSIONS int 1 Defines the default permissions a link is being created with. Possible values are 0 (= internal link, for instance members only) and 1 (= public link with viewer permissions). Defaults to 1. OCIS_URLFRONTEND_PUBLIC_URL string https://localhost:9200 The public facing URL of the oCIS frontend. OCIS_MAX_CONCURRENCYFRONTEND_MAX_CONCURRENCY int 1 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. OCIS_INSECUREFRONTEND_APP_HANDLER_INSECURE bool false Allow insecure connections to the frontend. FRONTEND_APP_HANDLER_SECURE_VIEW_APP_ADDR string com.owncloud.api.collaboration Service name or address of the app provider to use for secure view. Should match the service name or address of the registered CS3 app provider. FRONTEND_ARCHIVER_MAX_NUM_FILES int64 10000 Max number of files that can be packed into an archive. FRONTEND_ARCHIVER_MAX_SIZE int64 1073741824 Max size in bytes of the zip archive the archiver can create. OCIS_INSECUREFRONTEND_ARCHIVER_INSECURE bool false Allow insecure connections to the archiver. FRONTEND_DATA_GATEWAY_PREFIX string data Path prefix for the data gateway. FRONTEND_OCS_PREFIX string ocs URL path prefix for the OCS service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;. FRONTEND_OCS_SHARE_PREFIX string /Shares Path prefix for shares as part of an ocis resource. Note that the path must start with \u0026lsquo;/\u0026rsquo;. FRONTEND_OCS_PERSONAL_NAMESPACE string /users/{{.Id.OpaqueId}} Home namespace identifier. FRONTEND_OCS_ADDITIONAL_INFO_ATTRIBUTE string {{.Mail}} Additional information attribute for the user like {{.Mail}}. OCIS_CACHE_STOREFRONTEND_OCS_STAT_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESFRONTEND_OCS_STAT_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-stat The database name the configured store should use. FRONTEND_OCS_STAT_CACHE_TABLE string The database table the store should use. OCIS_CACHE_TTLFRONTEND_OCS_STAT_CACHE_TTL Duration 5m0s Default time to live for user info in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEFRONTEND_OCS_STAT_CACHE_DISABLE_PERSISTENCE bool false Disable persistence of the cache. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. Defaults to false. OCIS_CACHE_AUTH_USERNAMEFRONTEND_OCS_STAT_CACHE_AUTH_USERNAME string The username to use for authentication. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. OCIS_CACHE_AUTH_PASSWORDFRONTEND_OCS_STAT_CACHE_AUTH_PASSWORD string The password to use for authentication. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. FRONTEND_OCS_ENABLE_DENIALS bool false EXPERIMENTAL: enable the feature to deny access on folders. OCIS_ENABLE_OCMFRONTEND_OCS_LIST_OCM_SHARES bool true Include OCM shares when listing shares. See the OCM service documentation for more details. OCIS_ENABLE_OCMFRONTEND_OCS_INCLUDE_OCM_SHAREES bool false Include OCM sharees when listing sharees. OCIS_SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORDFRONTEND_OCS_PUBLIC_SHARE_MUST_HAVE_PASSWORD bool true Set this to true if you want to enforce passwords on all public shares. OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORDFRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD bool false Set this to true if you want to enforce passwords for writable shares. Only effective if the setting for \u0026lsquo;passwords on all public shares\u0026rsquo; is set to false. OCIS_SHOW_USER_EMAIL_IN_RESULTS bool false Include user email addresses in responses. If absent or set to false emails will be omitted from results. Please note that admin users can always see all email addresses. FRONTEND_CHECKSUMS_SUPPORTED_TYPES []string [sha1 md5 adler32] A list of checksum types that indicate to clients which hashes the server can use to verify upload integrity. Supported types are \u0026lsquo;sha1\u0026rsquo;, \u0026lsquo;md5\u0026rsquo; and \u0026lsquo;adler32\u0026rsquo;. See the Environment Variable Types description for more details. FRONTEND_CHECKSUMS_PREFERRED_UPLOAD_TYPE string sha1 The supported checksum type for uploads that indicates to clients supporting multiple hash algorithms which one is preferred by the server. Must be one out of the defined list of SUPPORTED_TYPES. FRONTEND_READONLY_USER_ATTRIBUTES []string [] A list of user attributes to indicate as read-only. Supported values: \u0026lsquo;user.onPremisesSamAccountName\u0026rsquo; (username), \u0026lsquo;user.displayName\u0026rsquo;, \u0026lsquo;user.mail\u0026rsquo;, \u0026lsquo;user.passwordProfile\u0026rsquo; (password), \u0026lsquo;user.appRoleAssignments\u0026rsquo; (role), \u0026lsquo;user.memberOf\u0026rsquo; (groups), \u0026lsquo;user.accountEnabled\u0026rsquo; (login allowed), \u0026lsquo;drive.quota\u0026rsquo; (quota). See the Environment Variable Types description for more details. OCIS_LDAP_SERVER_WRITE_ENABLEDFRONTEND_LDAP_SERVER_WRITE_ENABLED bool true Allow creating, modifying and deleting LDAP users via the GRAPH API. This can only be set to \u0026rsquo;true\u0026rsquo; when keeping default settings for the LDAP user and group attribute types (the \u0026lsquo;OCIS_LDAP_USER_SCHEMA_* and \u0026lsquo;OCIS_LDAP_GROUP_SCHEMA_* variables). FRONTEND_FULL_TEXT_SEARCH_ENABLED bool false Set to true to signal the web client that full-text search is enabled. OCIS_EVENTS_ENDPOINTFRONTEND_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERFRONTEND_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREFRONTEND_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. FRONTEND_EVENTS_TLS_ROOT_CA_CERTIFICATEOCS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSFRONTEND_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEFRONTEND_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDFRONTEND_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. FRONTEND_AUTO_ACCEPT_SHARES bool true Defines if shares should be auto accepted by default. Users can change this setting individually in their profile. OCIS_SERVICE_ACCOUNT_IDFRONTEND_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETFRONTEND_SERVICE_ACCOUNT_SECRET string The service account secret. OCIS_PASSWORD_POLICY_DISABLEDFRONTEND_PASSWORD_POLICY_DISABLED bool false Disable the password policy. Defaults to false if not set. OCIS_PASSWORD_POLICY_MIN_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_CHARACTERS int 8 Define the minimum password length. Defaults to 8 if not set. OCIS_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS int 1 Define the minimum number of uppercase letters. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS int 1 Define the minimum number of lowercase letters. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_DIGITSFRONTEND_PASSWORD_POLICY_MIN_DIGITS int 1 Define the minimum number of digits. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS int 1 Define the minimum number of characters from the special characters list to be present. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_BANNED_PASSWORDS_LISTFRONTEND_PASSWORD_POLICY_BANNED_PASSWORDS_LIST string Path to the \u0026lsquo;banned passwords list\u0026rsquo; file. This only impacts public link password validation. See the documentation for more details. ","description":"Abstract The frontend service translates various owncloud related HTTP APIs to CS3 requests.\nTable of Contents Endpoints Overview appprovider archiver datagateway ocs Event Handler Sharing Scalability Define Read-Only Attributes Caching Auto-Accept Shares Passwords The Password Policy The Password Policy Capability Password Enforcement for all Public Links Password Enforcement for Writeable Public Links Example Yaml Config Endpoints Overview Currently, the frontend service handles requests for three functionalities, which are appprovider, archiver, datagateway and ocs."},{"id":93,"href":"/ocis/development/envvars/","title":"Environment Variables","parent":"Development","content":"Environment variables are an essential part of configuring services.\nIf you are going to create new ones or deprecate existing ones, you must read the Envvar Naming Scope and the Deprecating Variables documentation for more details first before doing so.\n","description":"Environment variables are an essential part of configuring services.\nIf you are going to create new ones or deprecate existing ones, you must read the Envvar Naming Scope and the Deprecating Variables documentation for more details first before doing so."},{"id":94,"href":"/services/general-info/deprecating-variables/","title":"Envvar Deprecation","parent":"General Information","content":" Deprecating Environment Variables Example What Happens Next? Deprecating Environment Variables Sometimes it is necessary to deprecate an environment variable to align the naming with conventions or remove it completely. We therefore added annotations to automate the documentation process.\nThe relevant annotations in the envvar struct tag are:\ndeprecationVersion\nThe release an envvar is announced for deprecation. removalVersion\nThe version it is finally going to be removed is defined via the mandatory placeholder %%NEXT_PRODUCTION_VERSION%%, not an actual version number. deprecationInfo\nThe reason why it was deprecated. deprecationReplacement\nOnly if it is going to be replaced, not necessary if removed. During the development cycle, the value for the removalVersion must be set to %%NEXT_PRODUCTION_VERSION%%. This placeholder will be replaced by the real version number during the production releasing process. For the documentation to show the correct value for the removalVersion, our docs helper scripts will automatically generate the correct version to be printed in the documentation. If %%NEXT_PRODUCTION_VERSION%% is found in the query, it will be replaced with next-prod, else the value found is used.\nExample // Notifications defines the config options for the notifications service. type Notifications struct { RevaGateway string `yaml:\u0026#34;reva_gateway\u0026#34; env:\u0026#34;OCIS_REVA_GATEWAY;REVA_GATEWAY\u0026#34; desc:\u0026#34;CS3 gateway used to look up user metadata\u0026#34; deprecationVersion:\u0026#34;3.0\u0026#34; removalVersion:\u0026#34;%%NEXT_PRODUCTION_VERSION%%\u0026#34; deprecationInfo:\u0026#34;REVA_GATEWAY changing name for consistency\u0026#34; deprecationReplacement:\u0026#34;OCIS_REVA_GATEWAY\u0026#34;` ... } There are four different annotation variables that need to be filled:\nAnnotation Description Format deprecationVersion The version the variable will be deprecated semver (e.g. 3.0) removalVersion The version the variable will be removed from the codebase. Note that according to semver, a removal MUST NOT be made in a minor or patch version change, but only in a major release %%NEXT_PRODUCTION_VERSION%% deprecationInfo Information why the variable is deprecated, must start with the name of the variable in order to avoid confusion, when there are multiple options in the env:-field string (e.g. NATS_NATS_HOST is confusing) deprecationReplacement The name of the variable that is going to replace the deprecated one. string (e.g. NATS_HOST_ADDRESS) What Happens Next? Once a variable has been finally been removed, the annotations must be removed again from the code, since they don\u0026rsquo;t serve any purpose.\n","description":"Deprecating Environment Variables Example What Happens Next? Deprecating Environment Variables Sometimes it is necessary to deprecate an environment variable to align the naming with conventions or remove it completely. We therefore added annotations to automate the documentation process.\nThe relevant annotations in the envvar struct tag are:\ndeprecationVersion\nThe release an envvar is announced for deprecation. removalVersion\nThe version it is finally going to be removed is defined via the mandatory placeholder %%NEXT_PRODUCTION_VERSION%%, not an actual version number."},{"id":95,"href":"/services/general-info/added-services/","title":"Added Services per Release","parent":"General Information","content":"Over time, services get added with new releases published. This page gives an overview of which services exist and which have been added per release.\nAdded Services The following table gives an overview about releases and their services. Note that v6.x were rolling releases only and not mentioned therefore. Any changes from v6.x were incorporated in v7.\n3.0 4.0 5.0 7.0 Rolling activitylog activitylog antivirus antivirus antivirus antivirus antivirus app-provider app-provider app-provider app-provider app-provider app-registry app-registry app-registry app-registry app-registry audit audit audit audit audit auth-app auth-basic auth-basic auth-basic auth-basic auth-basic auth-bearer auth-bearer auth-bearer auth-bearer auth-bearer auth-machine auth-machine auth-machine auth-machine auth-machine eventhistory eventhistory auth-service auth-service auth-service clientlog clientlog clientlog collaboration collaboration eventhistory eventhistory eventhistory frontend frontend frontend frontend frontend gateway gateway gateway gateway gateway graph graph graph graph graph groups groups groups groups groups idm idm idm idm idm idp idp idp idp idp invitations invitations invitations invitations invitations nats nats nats nats nats notifications notifications notifications notifications notifications ocdav ocdav ocdav ocdav ocdav ocm ocm ocm ocs ocs ocs ocs ocs policies policies policies policies policies postprocessing postprocessing postprocessing postprocessing postprocessing proxy proxy proxy proxy proxy search search search search search settings settings settings settings settings sharing sharing sharing sharing sharing sse sse sse store store store store store storage-publiclink storage-publiclink storage-publiclink storage-publiclink storage-publiclink storage-shares storage-shares storage-shares storage-shares storage-shares storage-system storage-system storage-system storage-system storage-system storage-users storage-users storage-users storage-users storage-users thumbnails thumbnails thumbnails thumbnails thumbnails userlog userlog userlog userlog userlog users users users users users web web web web web webdav webdav webdav webdav webdav webfinger webfinger webfinger webfinger webfinger ","description":"Over time, services get added with new releases published. This page gives an overview of which services exist and which have been added per release.\nAdded Services The following table gives an overview about releases and their services. Note that v6.x were rolling releases only and not mentioned therefore. Any changes from v6.x were incorporated in v7.\n3.0 4.0 5.0 7.0 Rolling activitylog activitylog antivirus antivirus antivirus antivirus antivirus app-provider app-provider app-provider app-provider app-provider app-registry app-registry app-registry app-registry app-registry audit audit audit audit audit auth-app auth-basic auth-basic auth-basic auth-basic auth-basic auth-bearer auth-bearer auth-bearer auth-bearer auth-bearer auth-machine auth-machine auth-machine auth-machine auth-machine eventhistory eventhistory auth-service auth-service auth-service clientlog clientlog clientlog collaboration collaboration eventhistory eventhistory eventhistory frontend frontend frontend frontend frontend gateway gateway gateway gateway gateway graph graph graph graph graph groups groups groups groups groups idm idm idm idm idm idp idp idp idp idp invitations invitations invitations invitations invitations nats nats nats nats nats notifications notifications notifications notifications notifications ocdav ocdav ocdav ocdav ocdav ocm ocm ocm ocs ocs ocs ocs ocs policies policies policies policies policies postprocessing postprocessing postprocessing postprocessing postprocessing proxy proxy proxy proxy proxy search search search search search settings settings settings settings settings sharing sharing sharing sharing sharing sse sse sse store store store store store storage-publiclink storage-publiclink storage-publiclink storage-publiclink storage-publiclink storage-shares storage-shares storage-shares storage-shares storage-shares storage-system storage-system storage-system storage-system storage-system storage-users storage-users storage-users storage-users storage-users thumbnails thumbnails thumbnails thumbnails thumbnails userlog userlog userlog userlog userlog users users users users users web web web web web webdav webdav webdav webdav webdav webfinger webfinger webfinger webfinger webfinger "},{"id":96,"href":"/ocis/development/unit-testing/","title":"Unit Testing","parent":"Development","content":" 1 Ginkgo Pros Cons Example How to use it in oCIS 2 Testing Package Pros Cons How to use it in ocis Go is a statically typed language, which makes it easy to write unit tests. The Go standard library provides a testing package that allows you to write tests for your code. The testing package provides a framework for writing tests, and the go test command runs the tests. Other than that there are a lot of libraries and tools available to make testing easier.\nTestify - A toolkit with common assertions and mocks that plays nicely with the standard library. Ginkgo - A BDD-style testing framework for Go. Gomega - A matcher/assertion library for Ginkgo. GoDog - A Behavior-Driven Development framework for Go which uses Gherkin. In oCIS we generally use Ginkgo framework for testing. To keep things consistent, we would encourage you to use the same. In some cases, where you feel the need for a more verbose or more \u0026ldquo;code oriented\u0026rdquo; approach, you can also use the testing package from the standard library without ginkgo.\n1 Ginkgo Using a framework like Ginkgo brings many advantages.\nPros Provides a BDD-style syntax which makes it easier to write reusable and understandable tests Together with Gomega it provides a powerful and expressive framework with assertions in a natural language Natural Language Format empowers testing in a way that resembles user interactions with the system In the context of microservices it is particularly well suited to test individual services and the interactions between them Offers support for asynchronous testing which makes it easier to test code that involves concurrency Nested and structured containers and setup capabilities make it easy to organize tests and adhere to the DRY principle Provides helpful error messages to identify and fix issues Very usable for Test Driven Development following the \u0026ldquo;Red, Green, Cleanup, Repeat\u0026rdquo; workflow. Cons Sometimes it can be difficult to get started with Asynchronous behaviour brings more complexity to tests. Not compatible with broadly known testify package Example As you can see, Ginkgo and Gomega together provide the foundation to write understandable and maintainable tests which can mimic user interaction and the interactions between microservices.\nDescribe(\u0026#34;Public Share Provider\u0026#34;, func() { Context(\u0026#34;When the user has no share permission\u0026#34;, func() { BeforeEach(func() { // downgrade user permissions to have no share permission resourcePermissions.AddGrant = false }) It(\u0026#34;should return grpc invalid argument\u0026#34;, func() { req := \u0026amp;link.CreatePublicShareRequest{} res, err := provider.CreatePublicShare(ctx, req) Expect(err).ToNot(HaveOccurred()) Expect(res.GetStatus().GetCode()).To(Equal(rpc.Code_CODE_INVALID_ARGUMENT)) Expect(res.GetStatus().GetMessage()).To(Equal(\u0026#34;no share permission\u0026#34;)) }) }) How to use it in oCIS Read more 2 Testing Package For smaller straight-forward tests of some packages it might feel more natural to use the testing package that comes with the go standard library.\nPros Straightforward approach Naming conventions Built-in tooling Cons Difficult to reuse code in larger and more complex packages Difficult to create clean and isolated setups for the test steps No natural language resemblance How to use it in ocis Read more ","description":"1 Ginkgo Pros Cons Example How to use it in oCIS 2 Testing Package Pros Cons How to use it in ocis Go is a statically typed language, which makes it easy to write unit tests. The Go standard library provides a testing package that allows you to write tests for your code. The testing package provides a framework for writing tests, and the go test command runs the tests."},{"id":97,"href":"/services/general-info/add-translations/","title":"Add Translations","parent":"General Information","content":"Services can have texts that need to be translated. These translations will be shown in the ownCloud Web UI. Compared to web, these translations are:\nIndependent of ownCloud Web on Transifex. Are located in the ownCloud Transifex Project. Have a name starting with ocis- for ease of identification. The process for synchronisation with Transifex is already setup and nothing needs to be done here. For any translation, it is necessary to set it up in the respective service and tell to sync it.\nTranslations are automatically synced on a daily basis in the night.\nImplementing ocis Translations The implementation example is a guide and shall show how to do it. You can derive at any time according to your needs.\nNote that paths are examples and can be adapted based on requirements.\nReplace \u0026lt;service-name\u0026gt; with the name of the respective service.\nTranslations have a context and a translatable string. The context is shown on Transifex but not translated and helps translators to get a context for the string to be translated.\nAdd the OCIS_DEFAULT_LANGUAGE envvar in services/\u0026lt;service-name\u0026gt;/pkg/config/config.go.\nFor details see the userlog or notifications service code.\nUse \u0026quot;github.com/owncloud/ocis/v2/ocis-pkg/l10n\u0026quot; for the translation.\nCreate a config in services/\u0026lt;service-name\u0026gt;/pkg/service/l10n/.tx/config with the following content. Note that it is important to stick with ocis-\u0026lt;service-name\u0026gt; to easily identify all ocis translations on Transifex:\n[main] host = https://www.transifex.com [o:owncloud-org:p:owncloud:r:ocis-\u0026lt;service-name\u0026gt;] file_filter = locale/\u0026lt;lang\u0026gt;/LC_MESSAGES/\u0026lt;service-name\u0026gt;.po minimum_perc = 75 resource_name = ocis-\u0026lt;service-name\u0026gt; source_file = \u0026lt;service-name\u0026gt;.pot source_lang = en type = PO Note: o: organization, p: project, r: resource\nCreate a go file like templates.go in ocis/services/\u0026lt;service-name\u0026gt;/pkg/service that will define your translation sources like the following:\n// context string var yourString = l10n.Template(\u0026#34;Translation String\u0026#34;) In the Makefile in the ocis root, add in the following section the service you want to synchronize translations with Transifex:\n# add a service here when it uses transifex L10N_MODULES := \\ services/notifications \\ services/userlog \\ services/graph \\ services/activitylog \\ services/\u0026lt;service-name\u0026gt; In the Makefile of the \u0026lt;service-name\u0026gt; add:\nAt the beginning:\n# Where to write the files generated by this makefile. OUTPUT_DIR = ./pkg/service/\u0026lt;...\u0026gt;/l10n TEMPLATE_FILE = ./pkg/service/\u0026lt;...\u0026gt;/l10n/\u0026lt;service-name\u0026gt;.pot In the .PHONY list:\n############ translations ######## .PHONY: l10n-pull l10n-pull: cd $(OUTPUT_DIR) \u0026amp;\u0026amp; tx pull --all --force --skip --minimum-perc=75 .PHONY: l10n-push l10n-push: cd $(OUTPUT_DIR) \u0026amp;\u0026amp; tx push -s --skip .PHONY: l10n-read l10n-read: $(GO_XGETTEXT) go-xgettext -o $(OUTPUT_DIR)/\u0026lt;service-name\u0026gt;.pot \\ --keyword=l10n.Template --add-comments -s \\ ocis/services/\u0026lt;service-name\u0026gt;/pkg/service/templates.go .PHONY: l10n-write l10n-write: .PHONY: l10n-clean l10n-clean: rm -f $(TEMPLATE_FILE); Add Description Text to README\nAdd the full Translations and Default Language text blocks including their sub sections to the service readme. You can derive from the activitylog or userlog service for easy copy/paste.\n","description":"Services can have texts that need to be translated. These translations will be shown in the ownCloud Web UI. Compared to web, these translations are:\nIndependent of ownCloud Web on Transifex. Are located in the ownCloud Transifex Project. Have a name starting with ocis- for ease of identification. The process for synchronisation with Transifex is already setup and nothing needs to be done here. For any translation, it is necessary to set it up in the respective service and tell to sync it."},{"id":98,"href":"/services/general-info/registry/","title":"Registry","parent":"General Information","content":"To be able to communicate with each other, services need to register in a common registry.\nConfiguration nats-js-kv (Default) kubernetes memory Deprecated Registries Configuration The type of registry to use can be configured with the MICRO_REGISTRY environment variable. Supported values are:\nnats-js-kv (Default) Set the environment variable to nats-js-kv or leave it empty to use a nats-js key value store as registry.\nNote: If not running build-in nats, MICRO_REGISTRY_ADDRESS needs to be set to the address of the nats-js cluster, which is the same value as OCIS_EVENTS_ENDPOINT. Optional: Use MICRO_REGISTRY_AUTH_USERNAME and MICRO_REGISTRY_AUTH_PASSWORD to authenticate with the nats cluster. kubernetes When deploying in a kubernetes cluster, the Kubernetes registry can be used. Additionally, the MICRO_REGISTRY_ADDRESS environment variable needs to be set to the url of the Kubernetes registry.\nmemory Setting the environment variable to memory starts an in-memory registry. This only works with the single binary deployment.\nDeprecated Registries These registries are currently working but will be removed in a later version. It is recommended to switch to a supported one.\nnats\nUses a registry based on nats streams. Requires MICRO_REGISTRY_ADDRESS to be set. etcd\nUses an etcd cluster as the registry. Requires MICRO_REGISTRY_ADDRESS to be set. consul\nUses HashiCorp Consul as registry. Requires MICRO_REGISTRY_ADDRESS to be set. mdns\nUses multicast dns for registration. This type can have unwanted side effects when other devices in the local network use mdns too. ","description":"To be able to communicate with each other, services need to register in a common registry.\nConfiguration nats-js-kv (Default) kubernetes memory Deprecated Registries Configuration The type of registry to use can be configured with the MICRO_REGISTRY environment variable. Supported values are:\nnats-js-kv (Default) Set the environment variable to nats-js-kv or leave it empty to use a nats-js key value store as registry.\nNote: If not running build-in nats, MICRO_REGISTRY_ADDRESS needs to be set to the address of the nats-js cluster, which is the same value as OCIS_EVENTS_ENDPOINT."},{"id":99,"href":"/apis/http/webdav/","title":"WebDAV","parent":"Http","content":" Calling the WebDAV API Request URI HTTP methods Authentication Listing Properties Response Request Body Namespaces Request Example with declared namespaces Supported WebDAV Properties Request Headers Create a Directory Response Upload File Request Headers Response Web Distributed Authoring and Versioning (WebDAV) consists of a set of methods, headers, and content-types extending HTTP/1.1 for the management of resources and -properties, creation and management of resource collections, URL namespace manipulation, and resource locking (collision avoidance). WebDAV is one of the central APIs that ownCloud uses for handling file resources, metadata and locks.\nWebDAV RFCs\nRFC 2518 was published in February 1999. RFC 4918, published in June 2008 obsoletes RFC 2518 with minor revisions mostly due to interoperability experience.\nCalling the WebDAV API Request URI {HTTP method} https://ocis.url/{webdav-base}/{resourceID}/{path} The request URI consists of:\nComponent Description {HTTP method} The HTTP method which is used in the request. {webdav-base} The WebDAV base path component. Possible options are dav/spaces/ This is the default and optimized endpoint for all WebDAV requests. remote.php/dav/spaces/* remote.php/webdav/* webdav/* dav/* {resourceID} This resourceID is used as the WebDAV root element. All children are accessed by their relative paths. {path} The relative path to the WebDAV root. In most of the casese, this is the space root. * these dav endpoints are implemented for legacy reasons and should not be used. Note: The legacy endpoints do not take the resourceID as an argument.\nHTTP methods Method Description PROPFIND Retrieve properties as XML from a web resource. It is also overloaded to retrieve the collection structure (a.k.a. directory hierarchy) of a remote system. PROPPATCH Process instructions specified in the request body to set and/or remove properties defined on the resource identified by the request uri. MKCOL Create a WebDAV collection (folder) at the location specified by the request uri. GET Retrieve a WebDAV resource. HEAD Retrieve a WebDAV resource without reading the body. PUT A PUT performed on an existing resource replaces the GET response entity of the resource. POST Not part of the WebDAV rfc and has no effect on a WebDAV resource. However, this method is used in the TUS protocol for uploading resources. PATCH Not part of the WebDAV rfc and has no effect on a WebDAV resource. However, this method is used in the TUS protocol for uploading resources. COPY Creates a duplicate of the source resource identified by the Request-URI, in the destination resource identified by the URI in the Destination header. MOVE The MOVE operation on a non-collection resource is the logical equivalent of a copy (COPY), followed by consistency maintenance processing, followed by a delete of the source, where all three actions are performed in a single operation. DELETE Delete the resource identified by the Request-URI. LOCK A LOCK request to an existing resource will create a lock on the resource identified by the Request-URI, provided the resource is not already locked with a conflicting lock. UNLOCK The UNLOCK method removes the lock identified by the lock token in the Lock-Token request header. The Request-URI must identify a resource within the scope of the lock. The methods MKCOL, GET, HEAD, LOCK, COPY, MOVE, UNLOCK and DELETE need no request body.\nThe methods PROPFIND, PROPPATCH, PUT require a request body, normally in XML format to provide the needed values.\nWebDAV is not REST\nThe WebDAV protocol was created before the REST paradigm has become the de-facto standard for API design. WebDAV uses http methods which are not part of REST. Therefore all the tooling around API design and documentation is not usable (like OpenApi 3.0 / Swagger or others).\nAuthentication For development purposes the examples in the developer documentation use Basic Auth. It is disabled by default and should only be enabled by setting PROXY_ENABLE_BASIC_AUTH in the proxy for development or test instances.\nTo authenticate with a Bearer token or OpenID Connect access token replace the -u user:password Basic Auth option of curl with a -H 'Authorization: Bearer \u0026lt;token\u0026gt;' header. A \u0026lt;token\u0026gt; can be obtained by copying it from a request in the browser, although it will time out within minutes. To automatically refresh the OpenID Connect access token an ssh-agent like solution like oidc-agent should be used.\nListing Properties This method is used to list the properties of a resource in xml. This method can also be used to retrieve the listing of a WebDAV collection which means the content of a remote directory.\nCurl curl -L -X PROPFIND \u0026#39;https://localhost:9200/dav/spaces/storage-users-1%24some-admin-user-id-0000-000000000000/\u0026#39; \\ -H \u0026#39;Depth: 1\u0026#39; \\ -d \u0026#39;\u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;d:propfind xmlns:d=\u0026#34;DAV:\u0026#34; xmlns:oc=\u0026#34;http://owncloud.org/ns\u0026#34;\u0026gt; \u0026lt;d:prop\u0026gt; \u0026lt;oc:permissions /\u0026gt; \u0026lt;oc:favorite /\u0026gt; \u0026lt;oc:fileid /\u0026gt; \u0026lt;oc:owner-id /\u0026gt; \u0026lt;oc:owner-display-name /\u0026gt; \u0026lt;oc:share-types /\u0026gt; \u0026lt;oc:privatelink /\u0026gt; \u0026lt;d:getcontentlength /\u0026gt; \u0026lt;oc:size /\u0026gt; \u0026lt;d:getlastmodified /\u0026gt; \u0026lt;d:getetag /\u0026gt; \u0026lt;d:getcontenttype /\u0026gt; \u0026lt;d:resourcetype /\u0026gt; \u0026lt;oc:downloadURL /\u0026gt; \u0026lt;/d:prop\u0026gt; \u0026lt;/d:propfind\u0026gt;\u0026#39; HTTP PROPFIND /dav/spaces/storage-users-1%24some-admin-user-id-0000-000000000000/ HTTP/1.1 Host: localhost:9200 Origin: https://localhost Access-Control-Request-Method: PROPFIND Depth: 1 Content-Type: application/xml Authorization: Basic YWRtaW46YWRtaW4= Content-Length: 436 \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;d:propfind xmlns:d=\u0026#34;DAV:\u0026#34; xmlns:oc=\u0026#34;http://owncloud.org/ns\u0026#34;\u0026gt; \u0026lt;d:prop\u0026gt; \u0026lt;oc:permissions /\u0026gt; \u0026lt;oc:favorite /\u0026gt; \u0026lt;oc:fileid /\u0026gt; \u0026lt;oc:owner-id /\u0026gt; \u0026lt;oc:owner-display-name /\u0026gt; \u0026lt;oc:share-types /\u0026gt; \u0026lt;oc:privatelink /\u0026gt; \u0026lt;d:getcontentlength /\u0026gt; \u0026lt;oc:size /\u0026gt; \u0026lt;d:getlastmodified /\u0026gt; \u0026lt;d:getetag /\u0026gt; \u0026lt;d:getcontenttype /\u0026gt; \u0026lt;d:resourcetype /\u0026gt; \u0026lt;oc:downloadURL /\u0026gt; \u0026lt;/d:prop\u0026gt; \u0026lt;/d:propfind\u0026gt; The request consists of a request body and an optional Depth Header.\nMetadata and Directory listings\nClients can use the PROPFIND method to retrieve properties of resources (metadata) and to list the content of a directories.\nResponse 207 - Multistatus Multi Status Response A Multi-Status response conveys information about multiple resources in situations where multiple status codes might be appropriate. The default Multi-Status response body is an application/xml HTTP entity with a multistatus root element. Further elements contain 200, 300, 400, and 500 series status codes generated during the method invocation.\nAlthough 207 is used as the overall response status code, the recipient needs to consult the contents of the multistatus response body for further information about the success or failure of the method execution. The response MAY be used in success, partial success and also in failure situations.\nThe multistatus root element holds zero or more response elements in any order, each with information about an individual resource.\nBody \u0026lt;d:multistatus xmlns:s=\u0026#34;http://sabredav.org/ns\u0026#34; xmlns:d=\u0026#34;DAV:\u0026#34; xmlns:oc=\u0026#34;http://owncloud.org/ns\u0026#34;\u0026gt; \u0026lt;d:response\u0026gt; \u0026lt;d:href\u0026gt;/dav/spaces/storage-users-1$some-admin-user-id-0000-000000000000/\u0026lt;/d:href\u0026gt; \u0026lt;d:propstat\u0026gt; \u0026lt;d:prop\u0026gt; \u0026lt;oc:permissions\u0026gt;RDNVCKZP\u0026lt;/oc:permissions\u0026gt; \u0026lt;oc:favorite\u0026gt;0\u0026lt;/oc:favorite\u0026gt; \u0026lt;oc:fileid\u0026gt;storage-users-1$some-admin-user-id-0000-000000000000!some-admin-user-id-0000-000000000000\u0026lt;/oc:fileid\u0026gt; \u0026lt;oc:id\u0026gt;storage-users-1$some-admin-user-id-0000-000000000000!some-admin-user-id-0000-000000000000\u0026lt;/oc:id\u0026gt; \u0026lt;oc:owner-id\u0026gt;admin\u0026lt;/oc:owner-id\u0026gt; \u0026lt;oc:owner-display-name\u0026gt;Admin\u0026lt;/oc:owner-display-name\u0026gt; \u0026lt;oc:privatelink\u0026gt;https://localhost:9200/f/storage-users-1$some-admin-user-id-0000-000000000000%21some-admin-user-id-0000-000000000000\u0026lt;/oc:privatelink\u0026gt; \u0026lt;oc:size\u0026gt;10364682\u0026lt;/oc:size\u0026gt; \u0026lt;d:getlastmodified\u0026gt;Mon, 04 Sep 2023 20:10:09 GMT\u0026lt;/d:getlastmodified\u0026gt; \u0026lt;d:getetag\u0026gt;\u0026#34;c4d3610dfe4fac9b44e1175cfc44b12b\u0026#34;\u0026lt;/d:getetag\u0026gt; \u0026lt;d:resourcetype\u0026gt; \u0026lt;d:collection/\u0026gt; \u0026lt;/d:resourcetype\u0026gt; \u0026lt;/d:prop\u0026gt; \u0026lt;d:status\u0026gt;HTTP/1.1 200 OK\u0026lt;/d:status\u0026gt; \u0026lt;/d:propstat\u0026gt; \u0026lt;d:propstat\u0026gt; \u0026lt;d:prop\u0026gt; \u0026lt;oc:checksums\u0026gt;\u0026lt;/oc:checksums\u0026gt; \u0026lt;oc:share-types\u0026gt;\u0026lt;/oc:share-types\u0026gt; \u0026lt;d:getcontentlength\u0026gt;\u0026lt;/d:getcontentlength\u0026gt; \u0026lt;d:getcontenttype\u0026gt;\u0026lt;/d:getcontenttype\u0026gt; \u0026lt;/d:prop\u0026gt; \u0026lt;d:status\u0026gt;HTTP/1.1 404 Not Found\u0026lt;/d:status\u0026gt; \u0026lt;/d:propstat\u0026gt; \u0026lt;/d:response\u0026gt; \u0026lt;d:response\u0026gt; \u0026lt;d:href\u0026gt;/dav/spaces/storage-users-1$some-admin-user-id-0000-000000000000/New%20file.txt\u0026lt;/d:href\u0026gt; \u0026lt;d:propstat\u0026gt; \u0026lt;d:prop\u0026gt; \u0026lt;oc:permissions\u0026gt;RDNVWZP\u0026lt;/oc:permissions\u0026gt; \u0026lt;oc:checksums\u0026gt; \u0026lt;oc:checksum\u0026gt;SHA1:1c68ea370b40c06fcaf7f26c8b1dba9d9caf5dea MD5:2205e48de5f93c784733ffcca841d2b5 ADLER32:058801ab\u0026lt;/oc:checksum\u0026gt; \u0026lt;/oc:checksums\u0026gt; \u0026lt;oc:favorite\u0026gt;0\u0026lt;/oc:favorite\u0026gt; \u0026lt;oc:fileid\u0026gt;storage-users-1$some-admin-user-id-0000-000000000000!90cc3e73-0c6c-4346-9c4d-f529976d4990\u0026lt;/oc:fileid\u0026gt; \u0026lt;oc:id\u0026gt;storage-users-1$some-admin-user-id-0000-000000000000!90cc3e73-0c6c-4346-9c4d-f529976d4990\u0026lt;/oc:id\u0026gt; \u0026lt;oc:owner-id\u0026gt;admin\u0026lt;/oc:owner-id\u0026gt; \u0026lt;oc:owner-display-name\u0026gt;Admin\u0026lt;/oc:owner-display-name\u0026gt; \u0026lt;oc:share-types\u0026gt; \u0026lt;oc:share-type\u0026gt;0\u0026lt;/oc:share-type\u0026gt; \u0026lt;oc:share-type\u0026gt;1\u0026lt;/oc:share-type\u0026gt; \u0026lt;oc:share-type\u0026gt;3\u0026lt;/oc:share-type\u0026gt; \u0026lt;/oc:share-types\u0026gt; \u0026lt;oc:privatelink\u0026gt;https://localhost:9200/f/storage-users-1$some-admin-user-id-0000-000000000000%2190cc3e73-0c6c-4346-9c4d-f529976d4990\u0026lt;/oc:privatelink\u0026gt; \u0026lt;d:getcontentlength\u0026gt;5\u0026lt;/d:getcontentlength\u0026gt; \u0026lt;oc:size\u0026gt;5\u0026lt;/oc:size\u0026gt; \u0026lt;d:getlastmodified\u0026gt;Mon, 28 Aug 2023 20:45:03 GMT\u0026lt;/d:getlastmodified\u0026gt; \u0026lt;d:getetag\u0026gt;\u0026#34;75115347c74701a3be9c635ddebbf5c4\u0026#34;\u0026lt;/d:getetag\u0026gt; \u0026lt;d:getcontenttype\u0026gt;text/plain\u0026lt;/d:getcontenttype\u0026gt; \u0026lt;d:resourcetype\u0026gt;\u0026lt;/d:resourcetype\u0026gt; \u0026lt;/d:prop\u0026gt; \u0026lt;d:status\u0026gt;HTTP/1.1 200 OK\u0026lt;/d:status\u0026gt; \u0026lt;/d:propstat\u0026gt; \u0026lt;/d:response\u0026gt; \u0026lt;d:response\u0026gt; \u0026lt;d:href\u0026gt;/dav/spaces/storage-users-1$some-admin-user-id-0000-000000000000/NewFolder/\u0026lt;/d:href\u0026gt; \u0026lt;d:propstat\u0026gt; \u0026lt;d:prop\u0026gt; \u0026lt;oc:permissions\u0026gt;RDNVCKZP\u0026lt;/oc:permissions\u0026gt; \u0026lt;oc:favorite\u0026gt;0\u0026lt;/oc:favorite\u0026gt; \u0026lt;oc:fileid\u0026gt;storage-users-1$some-admin-user-id-0000-000000000000!5c73ecd9-d9f4-44f4-b685-ca4cb40aa6b7\u0026lt;/oc:fileid\u0026gt; \u0026lt;oc:id\u0026gt;storage-users-1$some-admin-user-id-0000-000000000000!5c73ecd9-d9f4-44f4-b685-ca4cb40aa6b7\u0026lt;/oc:id\u0026gt; \u0026lt;oc:owner-id\u0026gt;admin\u0026lt;/oc:owner-id\u0026gt; \u0026lt;oc:owner-display-name\u0026gt;Admin\u0026lt;/oc:owner-display-name\u0026gt; \u0026lt;oc:privatelink\u0026gt;https://localhost:9200/f/storage-users-1$some-admin-user-id-0000-000000000000%215c73ecd9-d9f4-44f4-b685-ca4cb40aa6b7\u0026lt;/oc:privatelink\u0026gt; \u0026lt;oc:size\u0026gt;0\u0026lt;/oc:size\u0026gt; \u0026lt;d:getlastmodified\u0026gt;Mon, 28 Aug 2023 20:45:10 GMT\u0026lt;/d:getlastmodified\u0026gt; \u0026lt;d:getetag\u0026gt;\u0026#34;e83367534cc595a45d706857fa5f03d8\u0026#34;\u0026lt;/d:getetag\u0026gt; \u0026lt;d:resourcetype\u0026gt; \u0026lt;d:collection/\u0026gt; \u0026lt;/d:resourcetype\u0026gt; \u0026lt;/d:prop\u0026gt; \u0026lt;d:status\u0026gt;HTTP/1.1 200 OK\u0026lt;/d:status\u0026gt; \u0026lt;/d:propstat\u0026gt; \u0026lt;d:propstat\u0026gt; \u0026lt;d:prop\u0026gt; \u0026lt;oc:checksums\u0026gt;\u0026lt;/oc:checksums\u0026gt; \u0026lt;oc:share-types\u0026gt;\u0026lt;/oc:share-types\u0026gt; \u0026lt;d:getcontentlength\u0026gt;\u0026lt;/d:getcontentlength\u0026gt; \u0026lt;d:getcontenttype\u0026gt;\u0026lt;/d:getcontenttype\u0026gt; \u0026lt;/d:prop\u0026gt; \u0026lt;d:status\u0026gt;HTTP/1.1 404 Not Found\u0026lt;/d:status\u0026gt; \u0026lt;/d:propstat\u0026gt; \u0026lt;/d:response\u0026gt; \u0026lt;/d:multistatus\u0026gt; 400 - Bad Request Body \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;d:error xmlns:d=\u0026#34;DAV\u0026#34; xmlns:s=\u0026#34;http://sabredav.org/ns\u0026#34;\u0026gt; \u0026lt;s:exception\u0026gt;Sabre\\DAV\\Exception\\BadRequest\u0026lt;/s:exception\u0026gt; \u0026lt;s:message\u0026gt;Invalid Depth header value: 3\u0026lt;/s:message\u0026gt; \u0026lt;/d:error\u0026gt; This can occur if the request is malformed e.g. due to an invalid xml request body or an invalid depth header value.\n404 - Not Found Body \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;d:error xmlns:d=\u0026#34;DAV\u0026#34; xmlns:s=\u0026#34;http://sabredav.org/ns\u0026#34;\u0026gt; \u0026lt;s:exception\u0026gt;Sabre\\DAV\\Exception\\NotFound\u0026lt;/s:exception\u0026gt; \u0026lt;s:message\u0026gt;Resource not found\u0026lt;/s:message\u0026gt; \u0026lt;/d:error\u0026gt; Request Body The PROPFIND Request can include an XML request body containing a list of namespaced property names.\nNamespaces When building the body of your DAV request, you will request properties that are available under a specific namespace URI. It is usual to declare prefixes for those namespace in the d:propfind element of the body.\nAvailable namespaces:\nURI Prefix DAV: d http://sabredav.org/ns s http://owncloud.org/ns oc http://open-collaboration-services.org/ns ocs http://open-cloud-mesh.org/ns ocm Request Example with declared namespaces \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;d:propfind xmlns:d=\u0026#34;DAV:\u0026#34; xmlns:oc=\u0026#34;http://owncloud.org/ns\u0026#34;\u0026gt; \u0026lt;/d:propfind\u0026gt; Supported WebDAV Properties Property Desription Example \u0026lt;d:getlastmodified /\u0026gt; The latest modification time. Fri, 30 Dec 2022 14:22:43 GMT \u0026lt;d:getetag /\u0026gt; The file\u0026rsquo;s etag. \u0026quot;c3a1ee4a0c28edc15b9635c3bf798013\u0026quot; \u0026lt;d:getcontenttype /\u0026gt; The mime type of the file. image/jpeg \u0026lt;d:resourcetype /\u0026gt; Specifies the nature of the resource. \u0026lt;d:collection /\u0026gt; for a folder \u0026lt;d:getcontentlength /\u0026gt; The size if it is a file in bytes. 5 bytes \u0026lt;d:lockdiscovery /\u0026gt; Describes the active locks on a resource. Detailed Example in Locking \u0026lt;oc:id /\u0026gt; The globally unique ID of the resource. storage-1$27475553-7fb7-4689-b4cf-bbb635daff79!27475553-7fb7-4689-b4cf-bbb635daff79 \u0026lt;oc:fileid /\u0026gt; The globally unique ID of the resource. storage-1$27475553-7fb7-4689-b4cf-bbb635daff79!27475553-7fb7-4689-b4cf-bbb635daff79 \u0026lt;oc:downloadURL /\u0026gt; Direct URL to download a file from. Not implemented. \u0026lt;oc:permissions /\u0026gt; Determines the actions a user can take on the resource. The value is a string containing letters that clients can use to determine available actions. S: Shared M: Mounted D: Deletable NV: Updateable, Renameable, Moveable W: Updateable (file) CK: Creatable (folders only) Z: Deniable P: Trashbin Purgable X: Securely Viewable In the early stages this was indeed a list of permissions. Over time, more flags were added and the term permissions no longer really fits well. \u0026lt;oc:tags /\u0026gt; List of user specified tags. \u0026lt;oc:tag\u0026gt;test\u0026lt;/oc:tag\u0026gt; \u0026lt;oc:favorite /\u0026gt;\tThe favorite state. 0 for not favourited, 1 for favourited \u0026lt;oc:owner-id /\u0026gt; The user id of the owner of a resource. Project spaces have no owner. einstein \u0026lt;oc:owner-display-name /\u0026gt; The display name of the owner of a resource. Project spaces have no owner. Albert Einstein \u0026lt;oc:share-types /\u0026gt; List of share types. 0 = User Share 1 = Group Share 2 = Public Link \u0026lt;oc:checksums /\u0026gt; \u0026lt;oc:checksum\u0026gt;SHA1:1c68ea370b40c06fcaf7f26c8b1dba9d9caf5dea MD5:2205e48de5f93c784733ffcca841d2b5 ADLER32:058801ab\n\u0026lt;/oc:checksum\u0026gt; Due to a bug in the very early development of ownCloud, this value is not an array, but a string separated by whitespaces. \u0026lt;oc:size /\u0026gt; Similar to getcontentlength but it also works for folders. 10 bytes \u0026lt;oc:shareid /\u0026gt; The ID of the share if the resource is part of such. storage-1$27475553-7fb7-4689-b4cf-bbb635daff79!27475553-7fb7-4689-b4cf-bbb635daff79 \u0026lt;oc:shareroot /\u0026gt; The root path of the shared resource if the resource is part of such. /shared-folder \u0026lt;oc:remoteItemId /\u0026gt; The ID of the shared resource if the resource is part of such. storage-1$27475553-7fb7-4689-b4cf-bbb635daff79!27475553-7fb7-4689-b4cf-bbb635daff79 \u0026lt;oc:public-link-item-type /\u0026gt; The type of the resource if it\u0026rsquo;s a public link. folder \u0026lt;oc:public-link-permission /\u0026gt; The share permissions of the resource if it\u0026rsquo;s a public link. 1 \u0026lt;oc:public-link-expiration /\u0026gt; The expiration date of the public link. Tue, 14 May 2024 12:44:29 GMT \u0026lt;oc:public-link-share-datetime /\u0026gt; The date the public link was created. Tue, 14 May 2024 12:44:29 GMT \u0026lt;oc:public-link-share-owner /\u0026gt; The username of the user who created the public link. admin \u0026lt;oc:trashbin-original-filename /\u0026gt; The original name of the resource before it was deleted. some-file.txt \u0026lt;oc:trashbin-original-location /\u0026gt; The original location of the resource before it was deleted. some-file.txt \u0026lt;oc:trashbin-delete-datetime /\u0026gt; The date the resource was deleted. Tue, 14 May 2024 12:44:29 GMT \u0026lt;oc:audio /\u0026gt; Audio meta data if the resource contains such. \u0026lt;oc:artist\u0026gt;Metallica\u0026lt;/oc:artist\u0026gt;\u0026lt;oc:album\u0026gt;Metallica\u0026lt;/oc:album\u0026gt;\u0026lt;oc:title\u0026gt;Enter Sandman\u0026lt;/oc:title\u0026gt; \u0026lt;oc:location /\u0026gt; Location meta data if the resource contains such. \u0026lt;oc:latitude\u0026gt;51.504106\u0026lt;/oc:latitude\u0026gt;\u0026lt;oc:longitude\u0026gt;-0.074575\u0026lt;/oc:latitude\u0026gt; Request Headers A client executing a PROPFIND request MUST submit a Depth Header value. In practice, support for infinite-depth requests MAY be disabled, due to the performance and security concerns associated with this behavior. Servers SHOULD treat a request without a Depth header as if a Depth: infinity header was included. Infinite depth requests are disabled by default in ocis.\nName Value Depth 0 = Only return the desired resource. 1 = Return the desired resource and all resources one level below in the hierarchy. infinity = Return all resources below the root. Depth: infinity\nUsing the Depth: infinity header value can cause heavy load on the server, depending on the size of the file tree.\nThe request can run into a timeout and the server performance could be affected for other users.\nCreate a Directory Clients create directories (WebDAV collections) by executing a MKCOL request at the location specified by the request url.\nCurl curl -L -X MKCOL \u0026#39;https://localhost:9200/dav/spaces/storage-users-1%24some-admin-user-id-0000-000000000000/NewFolder/\u0026#39; \\ -H \u0026#39;Authorization: Basic YWRtaW46YWRtaW4=\u0026#39; HTTP MKCOL /dav/spaces/storage-users-1%24some-admin-user-id-0000-000000000000/NewFolder/ HTTP/1.1 Host: localhost:9200 Authorization: Basic YWRtaW46YWRtaW4= Response 201 - Created This indicates that the Resource has been created successfully.\nBody The response has no body.\n403 - Forbidden Body \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;d:error xmlns:d=\u0026#34;DAV\u0026#34; xmlns:s=\u0026#34;http://sabredav.org/ns\u0026#34;\u0026gt; \u0026lt;s:exception\u0026gt;Sabre\\DAV\\Exception\\Forbidden\u0026lt;/s:exception\u0026gt; \u0026lt;s:message\u0026gt;\u0026lt;/s:message\u0026gt; \u0026lt;/d:error\u0026gt; 405 - Method not allowed Body \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;d:error xmlns:d=\u0026#34;DAV\u0026#34; xmlns:s=\u0026#34;http://sabredav.org/ns\u0026#34;\u0026gt; \u0026lt;s:exception\u0026gt;Sabre\\DAV\\Exception\\MethodNotAllowed\u0026lt;/s:exception\u0026gt; \u0026lt;s:message\u0026gt;The resource you tried to create already exists\u0026lt;/s:message\u0026gt; \u0026lt;/d:error\u0026gt; Upload File To upload files to the remote server, clients can use the PUT method to create or fully replace the content of the remote file.\nRequest Headers Name Usage X-OC-Mtime Send the last modified time of the file to the server in unixtime format. The server applies this mtime to the resource rather than the actual time. OC-Checksum Provide the checksum of the file content to the server. This is used to prevent corrupted data transfers. If-Match The If-Match request-header field is used with a method to make it conditional. A client that has one or more entities previously obtained from the resource can verify that one of those entities is current by including a list of their associated entity tags in the If-Match header field. Curl curl -L -X PUT \u0026#39;https://localhost:9200/dav/spaces/storage-users-1%24some-admin-user-id-0000-000000000000/test.txt\u0026#39; \\ -H \u0026#39;X-OC-Mtime: 1692369418\u0026#39; \\ -H \u0026#39;OC-Checksum: SHA1:40bd001563085fc35165329ea1ff5c5ecbdbbeef\u0026#39; \\ -H \u0026#39;If-Match: \u0026#34;4436aef907f41f1ac7dfd1ac3d0d455f\u0026#34;\u0026#39; \\ -H \u0026#39;Content-Type: text/plain\u0026#39; \\ -H \u0026#39;Authorization: Basic YWRtaW46YWRtaW4=\u0026#39; \\ -d \u0026#39;123\u0026#39; HTTP PUT /dav/spaces/storage-users-1%24some-admin-user-id-0000-000000000000/test.txt HTTP/1.1 Host: localhost:9200 X-OC-Mtime: 1692369418 OC-Checksum: SHA1:40bd001563085fc35165329ea1ff5c5ecbdbbeef If-Match: \u0026#34;4436aef907f41f1ac7dfd1ac3d0d455f\u0026#34; Content-Type: text/plain Authorization: Basic YWRtaW46YWRtaW4= Content-Length: 3 123 Response 201 - Created This indicates that the Resource has been created successfully.\nBody The response has no body.\nHeaders Oc-Etag: \u0026#34;4436aef907f41f1ac7dfd1ac3d0d455f\u0026#34; Oc-Fileid: storage-users-1$some-admin-user-id-0000-000000000000!07452b22-0ba9-4539-96e1-3511aff7fd2f Last-Modified: Fri, 18 Aug 2023 14:36:58 +0000 X-Oc-Mtime: accepted 204 - No Content This indicates that the Resource has been updated successfully.\nBody The response has no body.\nHeaders Oc-Etag: \u0026#34;4436aef907f41f1ac7dfd1ac3d0d455f\u0026#34; Oc-Fileid: storage-users-1$some-admin-user-id-0000-000000000000!07452b22-0ba9-4539-96e1-3511aff7fd2f Last-Modified: Fri, 18 Aug 2023 14:36:58 +0000 X-Oc-Mtime: accepted 400 - Bad Request This indicates that the checksum, which was sent by the client, does not match the computed one after all bytes have been received by the server.\nBody \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;d:error xmlns:d=\u0026#34;DAV\u0026#34; xmlns:s=\u0026#34;http://sabredav.org/ns\u0026#34;\u0026gt; \u0026lt;s:exception\u0026gt;Sabre\\DAV\\Exception\\BadRequest\u0026lt;/s:exception\u0026gt; \u0026lt;s:message\u0026gt;The computed checksum does not match the one received from the client.\u0026lt;/s:message\u0026gt; \u0026lt;/d:error\u0026gt; 403 - Forbidden The user cannot create files in that remote location. 404 - Not Found The remote target space cannot be found. 409 - Conflict This error can occur when the request cannot be executed due to a missing precondition. One example is a PUT into a non-existing remote folder. It can also happen when the client sends the wrong etag in the If-Match header. ","description":"Calling the WebDAV API Request URI HTTP methods Authentication Listing Properties Response Request Body Namespaces Request Example with declared namespaces Supported WebDAV Properties Request Headers Create a Directory Response Upload File Request Headers Response Web Distributed Authoring and Versioning (WebDAV) consists of a set of methods, headers, and content-types extending HTTP/1.1 for the management of resources and -properties, creation and management of resource collections, URL namespace manipulation, and resource locking (collision avoidance)."},{"id":100,"href":"/ocis/identity-provider/","title":"Identity Provider","parent":"oCIS - ownCloud Infinite Scale","content":" Overview oCIS provides out of the box a minimal OpenID Connect provider via the IDP service and a minimal LDAP service via the IDM service. Both services are limited in the provided functionality, see the admin documentation for details, and can be used for small environments like up to a few hundred users. For enterprise environments, it is highly recommended using enterprise grade external software like KeyCloak plus openLDAP or MS ADFS with Active Directory, which can be configured in the respective service. Entrada ID (formerly Azure AD) is in preparation, but not yet released or documented and might need some small fixes, and for certain functions a LDAP/AD connection.\n","description":"Overview oCIS provides out of the box a minimal OpenID Connect provider via the IDP service and a minimal LDAP service via the IDM service. Both services are limited in the provided functionality, see the admin documentation for details, and can be used for small environments like up to a few hundred users. For enterprise environments, it is highly recommended using enterprise grade external software like KeyCloak plus openLDAP or MS ADFS with Active Directory, which can be configured in the respective service."},{"id":101,"href":"/ocis/identity-provider/ldap-active-directory/","title":"LDAP - Active Directory","parent":"Identity Provider","content":" Overview oCIS can be configured using Active Directory as identity provider.\nConfiguration Example This configuration is an example for using Samba4 AD as well as a Windows Server 2022 as the LDAP backend for oCIS. It is intended as guideline and first starting point.\nOCIS_LDAP_URI=ldaps://xxxxxxxxx OCIS_LDAP_INSECURE=\u0026#34;true\u0026#34; OCIS_LDAP_BIND_DN=\u0026#34;cn=administrator,cn=users,xxxxxxxxxx\u0026#34; OCIS_LDAP_BIND_PASSWORD=xxxxxxx OCIS_LDAP_DISABLE_USER_MECHANISM=\u0026#34;none\u0026#34; OCIS_LDAP_GROUP_BASE_DN=\u0026#34;dc=owncloud,dc=test\u0026#34; OCIS_LDAP_GROUP_OBJECTCLASS=\u0026#34;group\u0026#34; OCIS_LDAP_GROUP_SCHEMA_ID=\u0026#34;objectGUID\u0026#34; OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING=\u0026#34;true\u0026#34; OCIS_LDAP_GROUP_SCHEMA_GROUPNAME=\u0026#34;cn\u0026#34; OCIS_LDAP_USER_BASE_DN=\u0026#34;dc=owncloud,dc=test\u0026#34; OCIS_LDAP_USER_OBJECTCLASS=\u0026#34;user\u0026#34; OCIS_LDAP_USER_SCHEMA_ID=\u0026#34;objectGUID\u0026#34; OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING=\u0026#34;true\u0026#34; OCIS_LDAP_USER_SCHEMA_USERNAME=\u0026#34;sAMAccountName\u0026#34; OCIS_LDAP_LOGIN_ATTRIBUTES=\u0026#34;sAMAccountName\u0026#34; IDP_LDAP_LOGIN_ATTRIBUTE=\u0026#34;sAMAccountName\u0026#34; IDP_LDAP_UUID_ATTRIBUTE=\u0026#34;objectGUID\u0026#34; IDP_LDAP_UUID_ATTRIBUTE_TYPE=binary GRAPH_LDAP_SERVER_WRITE_ENABLED=\u0026#34;false\u0026#34; OCIS_EXCLUDE_RUN_SERVICES=idm OCIS_ADMIN_USER_ID=\u0026#34;\u0026lt;objectGUID-value-of-the-default-admin-user\u0026gt;\u0026#34; ","description":" Overview oCIS can be configured using Active Directory as identity provider.\nConfiguration Example This configuration is an example for using Samba4 AD as well as a Windows Server 2022 as the LDAP backend for oCIS. It is intended as guideline and first starting point.\nOCIS_LDAP_URI=ldaps://xxxxxxxxx OCIS_LDAP_INSECURE=\u0026#34;true\u0026#34; OCIS_LDAP_BIND_DN=\u0026#34;cn=administrator,cn=users,xxxxxxxxxx\u0026#34; OCIS_LDAP_BIND_PASSWORD=xxxxxxx OCIS_LDAP_DISABLE_USER_MECHANISM=\u0026#34;none\u0026#34; OCIS_LDAP_GROUP_BASE_DN=\u0026#34;dc=owncloud,dc=test\u0026#34; OCIS_LDAP_GROUP_OBJECTCLASS=\u0026#34;group\u0026#34; OCIS_LDAP_GROUP_SCHEMA_ID=\u0026#34;objectGUID\u0026#34; OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING=\u0026#34;true\u0026#34; OCIS_LDAP_GROUP_SCHEMA_GROUPNAME=\u0026#34;cn\u0026#34; OCIS_LDAP_USER_BASE_DN=\u0026#34;dc=owncloud,dc=test\u0026#34; OCIS_LDAP_USER_OBJECTCLASS=\u0026#34;user\u0026#34; OCIS_LDAP_USER_SCHEMA_ID=\u0026#34;objectGUID\u0026#34; OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING=\u0026#34;true\u0026#34; OCIS_LDAP_USER_SCHEMA_USERNAME=\u0026#34;sAMAccountName\u0026#34; OCIS_LDAP_LOGIN_ATTRIBUTES=\u0026#34;sAMAccountName\u0026#34; IDP_LDAP_LOGIN_ATTRIBUTE=\u0026#34;sAMAccountName\u0026#34; IDP_LDAP_UUID_ATTRIBUTE=\u0026#34;objectGUID\u0026#34; IDP_LDAP_UUID_ATTRIBUTE_TYPE=binary GRAPH_LDAP_SERVER_WRITE_ENABLED=\u0026#34;false\u0026#34; OCIS_EXCLUDE_RUN_SERVICES=idm OCIS_ADMIN_USER_ID=\u0026#34;\u0026lt;objectGUID-value-of-the-default-admin-user\u0026gt;\u0026#34; "},{"id":102,"href":"/services/general-info/envvar-scopes/","title":"Envvar Naming Scopes","parent":"General Information","content":" Envvar Definition Naming Scope Local Envvars Global Envvars Lifecycle of Envvars Introduce new Envvars Adding Envvars to Existing Ones Deprecate Existing Envvars Separating Multiple Envvars The scope of an environment variable can be derived from its name. Therefore, it is important to follow the correct naming scheme to enable easy and proper identification. This is important when either:\na new local envvar is introduced. a new global envvar is added to an existing local envvar. Envvar Definition A variable that is only used in a particular service is a local envvar. A variable that is used in more than one service is a global envvar. Mandatory when used in a service, a global envvar must have a local counterpart. Variables that do not belong to any service are by definition global. Naming Scope Local Envvars A local envvar always starts with the service name like POSTPROCESSING_LOG_FILE.\nGlobal Envvars A global envvar always starts with OCIS_ like OCIS_LOG_FILE.\nNote that this envvar is the global representation of the local example from above.\nTo get a list of global envvars used in all services, see the Global Environment Variables table in the ocis admin documentation.\nLifecycle of Envvars The envvar struct tag contains at maximum the following key/value pairs to document the lifecycle of a config variable:\nintroductionVersion deprecationVersion removalVersion deprecationInfo deprecationReplacement Introduce new Envvars If a new envvar is introduced, only the introductionVersion is required.\nDuring the development cycle, the value for the introductionVersion must be set to %%NEXT%%. This placeholder will be removed by the real version number during the production releasing process. For the documentation to show the correct value for the IV (introduction version), our docs helper scripts will automatically generate the correct version to be printed in the documentation. If %%NEXT%% is found in the query, it will be replaced with next, else the value found is used.\nDuring the releasing process for a production release, the placeholder %%NEXT%% has to be replaced with the new production version number like %%NEXT%% → 7.0.0.\nAdding Envvars to Existing Ones If an envvar has been introduced with a particular version, the introductionVersion gets a value accordingly. If an additional envvar like a global one is added to this existing envvar later on, the introduction version will not be changed.\nDeprecate Existing Envvars See the deprecation rules documentation for more details.\nSeparating Multiple Envvars When multiple envvars are defined for one purpose like a global and local one, use ; (semicolon) to properly separate the envvars in go code. Though it is possible to separate with , (comma) according go rules, the current implementation of the docs generation process only recognizes semicolons as separator.\n","description":"Envvar Definition Naming Scope Local Envvars Global Envvars Lifecycle of Envvars Introduce new Envvars Adding Envvars to Existing Ones Deprecate Existing Envvars Separating Multiple Envvars The scope of an environment variable can be derived from its name. Therefore, it is important to follow the correct naming scheme to enable easy and proper identification. This is important when either:\na new local envvar is introduced. a new global envvar is added to an existing local envvar."},{"id":103,"href":"/services/general-info/new-service-checklist/","title":"New Service Checklist","parent":"General Information","content":"When a new service gets introduced, this checklist is a good starting point for things that need to be completed before the service gets published (merged). This list is without claim of completeness or correct sort order.\nNew Service Checklist Use this checklist with copy/paste in your PR - right from the beginning. It renders correctly in your PR.\n- [ ] Services MUST NOT be named `extended` or `global`. These are reserved names for the automated documentation process. - [ ] Provide a README.md for that service in the root folder of that service. - Use CamelCase for section headers. - [ ] For images and example files used in README.md: - Create a folder named `md-sources` on the same level where README.md is located. Put all the images and example files referenced by README.md into this folder. - Use absolute references like `https://raw.githubusercontent.com/owncloud/ocis/master/services/\u0026lt;service-name\u0026gt;/md-sources/file` to make the content accessible for both README.md and owncloud.dev bad `\u0026lt;img src=\u0026#34;https://github.com/owncloud/ocis/blob/master/services/graph/images/mermaid-graph.svg\u0026#34; width=\u0026#34;500\u0026#34; /\u0026gt;` good `\u0026lt;img src=\u0026#34;https://raw.githubusercontent.com/owncloud/ocis/master/services/graph/images/mermaid-graph.svg\u0026#34; width=\u0026#34;500\u0026#34; /\u0026gt;` - [ ] If new CLI commands are introduced, those commands must be described in the README.md. - Commands are added to `ocis/pkg/command` - [ ] If new global envvars are introduced, the name must start with `OCIS_`. - [ ] Add the service to the makefile in the ocis repo root. - [ ] Service startup: - add it to `ocis/pkg/command/services.go` - Include for automatic startup: - add it to `ocis/pkg/runtime/service/service.go` - Exclude from automatic startup: - add it to the `populate optional services` block in `ocis/pkg/runtime/service/service.go` - Add the service config to `ocis-pkg/config/defaultconfig.go` - [ ] If the service is using service accounts, add it to `ocis/pkg/init/init.go` - [ ] Check that the service properly responds to `ocis \u0026lt;service-name\u0026gt; health` and has `/healthz` and `/readyz` endpoints - [ ] Add the service to `.drone.star` to enable CI. - [ ] Inform doc team in an *early stage* to review the readme AND the environment variables created. - The description must reflect the behaviour AND usually has a positive code quality impact. - [ ] Create proper description strings for envvars - see other services for examples, especially when it comes to multiple values. This must include: - base description, set of available values, description of each value. - [ ] When suggested commits are created for text changes, and you agree, collect them to a batch and commit them. Do not forget to rebase locally to avoid overwriting the changes made. - [ ] If new envvars are introduced which serve the same purpose but in multiple services, an additional envvar must be added at the beginning of the list starting with `OCIS_` (global envvar). - [ ] Ensure that a service has a debug port - [ ] If the new service introduces a new port: - The port must be added to [port-ranges.md](https://github.com/owncloud/ocis/blob/master/docs/services/general-info/port-ranges.md) and to the README.md file. - [ ] Make sure to have a function `FullDefaultConfig()` in `pkg/config/defaults/defaultconfig.go` of your service. It is needed to create the documentation. - [ ] Add metrics to the code to enable monitoring. See the proxy service for implementation details. - Plus add documentation about monitoring in the README.md file - [ ] When the service requires translations that have to be covered by the service and are not sourced by web, see the [add translation](https://owncloud.dev/services/general-info/add-translations/) documentation for more details. - [ ] If the service requires a `cache` or `store`, check existing services for implementation and add a documentation in the README.md ","description":"When a new service gets introduced, this checklist is a good starting point for things that need to be completed before the service gets published (merged). This list is without claim of completeness or correct sort order.\nNew Service Checklist Use this checklist with copy/paste in your PR - right from the beginning. It renders correctly in your PR.\n- [ ] Services MUST NOT be named `extended` or `global`. These are reserved names for the automated documentation process."},{"id":104,"href":"/services/antivirus/configuration/","title":"Service Configuration","parent":"Antivirus","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 # Autogenerated # Filename: antivirus-config-example.yaml file: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9277 token: \u0026#34;\u0026#34; pprof: false zpages: false tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; infected-file-handling: delete events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; workers: 10 scanner: type: clamav clamav: socket: /run/clamav/clamd.ctl icap: scan_timeout: 5m0s url: icap://127.0.0.1:1344 service: avscan max-scan-size: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_LOG_LEVELANTIVIRUS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYANTIVIRUS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORANTIVIRUS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEANTIVIRUS_LOG_FILE string The path to the log file. Activates logging to this file if set. ANTIVIRUS_DEBUG_ADDR string 127.0.0.1:9277 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. ANTIVIRUS_DEBUG_TOKEN string Token to secure the metrics endpoint. ANTIVIRUS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. ANTIVIRUS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_TRACING_ENABLEDANTIVIRUS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEANTIVIRUS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTANTIVIRUS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORANTIVIRUS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. ANTIVIRUS_INFECTED_FILE_HANDLING string delete Defines the behaviour when a virus has been found. Supported options are: \u0026lsquo;delete\u0026rsquo;, \u0026lsquo;continue\u0026rsquo; and \u0026lsquo;abort \u0026lsquo;. Delete will delete the file. Continue will mark the file as infected but continues further processing. Abort will keep the file in the uploads folder for further admin inspection and will not move it to its final destination. OCIS_EVENTS_ENDPOINTANTIVIRUS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERANTIVIRUS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREANTIVIRUS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEANTIVIRUS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided ANTIVIRUS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSANTIVIRUS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEANTIVIRUS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDANTIVIRUS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. ANTIVIRUS_WORKERS int 10 The number of concurrent go routines that fetch events from the event queue. ANTIVIRUS_SCANNER_TYPE string clamav The antivirus scanner to use. Supported values are \u0026lsquo;clamav\u0026rsquo; and \u0026lsquo;icap\u0026rsquo;. ANTIVIRUS_CLAMAV_SOCKET string /run/clamav/clamd.ctl The socket clamav is running on. Note the default value is an example which needs adaption according your OS. ANTIVIRUS_ICAP_SCAN_TIMEOUT Duration 5m0s Scan timeout for the ICAP client. Defaults to \u0026lsquo;5m\u0026rsquo; (5 minutes). See the Environment Variable Types description for more details. ANTIVIRUS_ICAP_URL string icap://127.0.0.1:1344 URL of the ICAP server. ANTIVIRUS_ICAP_SERVICE string avscan The name of the ICAP service. ANTIVIRUS_MAX_SCAN_SIZE string The maximum scan size the virus scanner can handle. Only this many bytes of a file will be scanned. 0 means unlimited and is the default. Usable common abbreviations: [KB, KiB, MB, MiB, GB, GiB, TB, TiB, PB, PiB, EB, EiB], example: 2GB. ANTIVIRUS_DEBUG_SCAN_OUTCOME string A predefined outcome for virus scanning, FOR DEBUG PURPOSES ONLY! (example values: \u0026lsquo;found,infected\u0026rsquo;) ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 # Autogenerated # Filename: antivirus-config-example.yaml file: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9277 token: \u0026#34;\u0026#34; pprof: false zpages: false tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; infected-file-handling: delete events: endpoint: 127."},{"id":105,"href":"/services/invitations/configuration/","title":"Service Configuration","parent":"Invitations","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 # Autogenerated # Filename: invitations-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9269 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9265 root: /graph/v1.0 cors: allow_origins: - https://localhost:9200 allow_methods: [] allow_headers: [] allow_credentials: false tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; keycloak: base_path: \u0026#34;\u0026#34; client_id: \u0026#34;\u0026#34; client_secret: \u0026#34;\u0026#34; client_realm: \u0026#34;\u0026#34; user_realm: \u0026#34;\u0026#34; insecure_skip_verify: false token_manager: jwt_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDINVITATIONS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEINVITATIONS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTINVITATIONS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORINVITATIONS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELINVITATIONS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYINVITATIONS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORINVITATIONS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEINVITATIONS_LOG_FILE string The path to the log file. Activates logging to this file if set. INVITATIONS_DEBUG_ADDR string 127.0.0.1:9269 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. INVITATIONS_DEBUG_TOKEN string Token to secure the metrics endpoint. INVITATIONS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. INVITATIONS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. INVITATIONS_HTTP_ADDR string 127.0.0.1:9265 The bind address of the HTTP service. INVITATIONS_HTTP_ROOT string /graph/v1.0 Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSINVITATIONS_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSINVITATIONS_CORS_ALLOW_METHODS []string [] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSINVITATIONS_CORS_ALLOW_HEADERS []string [] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSINVITATIONS_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_KEYCLOAK_BASE_PATHINVITATIONS_KEYCLOAK_BASE_PATH string The URL to access keycloak. OCIS_KEYCLOAK_CLIENT_IDINVITATIONS_KEYCLOAK_CLIENT_ID string The client ID to authenticate with keycloak. OCIS_KEYCLOAK_CLIENT_SECRETINVITATIONS_KEYCLOAK_CLIENT_SECRET string The client secret to use in authentication. OCIS_KEYCLOAK_CLIENT_REALMINVITATIONS_KEYCLOAK_CLIENT_REALM string The realm the client is defined in. OCIS_KEYCLOAK_USER_REALMINVITATIONS_KEYCLOAK_USER_REALM string The realm users are defined. OCIS_KEYCLOAK_INSECURE_SKIP_VERIFYINVITATIONS_KEYCLOAK_INSECURE_SKIP_VERIFY bool false Disable TLS certificate validation for Keycloak connections. Do not set this in production environments. OCIS_JWT_SECRETINVITATIONS_JWT_SECRET string The secret to mint and validate jwt tokens. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 # Autogenerated # Filename: invitations-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9269 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127."},{"id":106,"href":"/ocis/adr/0020-file-search-query-language/","title":"20. File Search Query Language","parent":"Architecture Decisions","content":" Status: accepted Deciders: @butonic, @micbar, @dragotin, @c0rby, @kulmann, @felix-schwarz, @JammingBen Date: 2023-06-23 Context and Problem Statement From the users perspective, the interface to search is just a single form field where the user enters one or more search terms. The minimum expectation is that the search returns file names and links to files that:\nhave a file name that contains at least one of the search terms contain at least one of the search terms in the file contents have metadata that is equal or contains one of the search terms Decision Drivers The standard user should not be bothered by a query syntax The power user should also be able to narrow his search with an efficient and flexible syntax We need to consider different backend technologies which we need to access through an abstraction layer Using different indexing systems should lead to a slightly different feature set without changing the syntax completely Considered Options KQL - Keyword Query Language Simple Query Lucene Query Language Solr Query Language Elasticsearch Query Language Decision Outcome Chosen option: KQL - Keyword Query Language, because it enables advanced search across all platforms.\nPositive Consequences We can use the same query language in all clients Negative consequences We need to build and maintain a backend connector Pros and Cons of the Options Keyword Query Language The Keyword Query Language (KQL) is used by Microsoft Share Point and other Microsoft Services. It uses very simple query elements, property restrictions and operators.\nGood, because we can fulfill all our current needs Good, because it is very similar to the used query language in iOS Good, because it supports date time keywords like \u0026ldquo;today\u0026rdquo;, \u0026ldquo;this week\u0026rdquo; and more Good, because it can be easily extended to use \u0026ldquo;shortcuts\u0026rdquo; for eg. document types like :presentation which combine multiple mime types. Good, because it is successfully implemented and used in similar use cases Good, because it gives our clients the freedom to always use the same query language across all platforms Good, because Microsoft Graph API is using it, we will have an easy transition in the future Bad, because we need to build and maintain a connector to different search backends (bleve, elasticsearch or others) Simplified Query Implement a very simple search approach: Return all files which contain at least one of the keywords in their name, path, alias or selected metadata.\nGood, because that covers 80% of the users needs Good, because it is very straightforward Good, because it is a suitable solution for GA Bad, because it is below the industry standard Bad, because it only provides one search query Lucene Query Language The Lucene Query Parser syntax supports advanced queries like term, phrase, wildcard, fuzzy search, proximity search, regular expressions, boosting, boolean operators and grouping. It is a well known query syntax used by the Apache Lucene Project. Popular Platforms like Wikipedia are using Lucene or Solr, which is the successor of Lucene\nGood, because it is a well documented and powerful syntax Good, because it is very close to the Elasticsearch and the Solr syntax which enhances compatibility Bad, because there is no powerful and well tested query parser for golang available Bad, because it adds complexity and fulfilling all the different query use-cases can be an \u0026ldquo;uphill battle\u0026rdquo; Solr Query Language Solr is highly reliable, scalable and fault-tolerant, providing distributed indexing, replication and load-balanced querying, automated failover and recovery, centralized configuration and more. Solr powers the search and navigation features of many of the world\u0026rsquo;s largest internet sites.\nGood, because it is a well documented and powerful syntax Good, because it is very close to the Elasticsearch and the Lucene syntax which enhances compatibility Good, because it has a strong community with large resources and knowledge Bad, because it adds complexity and fulfilling all the different query use-cases can be an \u0026ldquo;uphill battle\u0026rdquo; Elasticsearch Query Language Elasticsearch provides a full Query DSL (Domain Specific Language) based on JSON to define queries. Think of the Query DSL as an AST (Abstract Syntax Tree) of queries, consisting of two types of clauses. It is able to combine multiple query types into compound queries. It is also a successor of Solr.\nGood, because it is a well documented and powerful syntax Good, because it is very close to the Elasticsearch and the Solr syntax which enhances compatibility Good, because there is a stable and well tested go client which brings a query builder Good, because it could be used as the query language which supports different search backends by just implementing what is needed for our use-case Bad, because it adds complexity and fulfilling all the different query use-cases can be an \u0026ldquo;uphill battle\u0026rdquo; Links Search API Search Indexing KQL Apache Lucene Apache Solr Elastic Search Elastic Search for go ","description":"Status: accepted Deciders: @butonic, @micbar, @dragotin, @c0rby, @kulmann, @felix-schwarz, @JammingBen Date: 2023-06-23 Context and Problem Statement From the users perspective, the interface to search is just a single form field where the user enters one or more search terms. The minimum expectation is that the search returns file names and links to files that:\nhave a file name that contains at least one of the search terms contain at least one of the search terms in the file contents have metadata that is equal or contains one of the search terms Decision Drivers The standard user should not be bothered by a query syntax The power user should also be able to narrow his search with an efficient and flexible syntax We need to consider different backend technologies which we need to access through an abstraction layer Using different indexing systems should lead to a slightly different feature set without changing the syntax completely Considered Options KQL - Keyword Query Language Simple Query Lucene Query Language Solr Query Language Elasticsearch Query Language Decision Outcome Chosen option: KQL - Keyword Query Language, because it enables advanced search across all platforms."},{"id":107,"href":"/ocis/development/beta-testplan/","title":"Beta testplan","parent":"Development","content":" Beta Testing This document is supposed to give you some ideas how and what to test on ocis. It\u0026rsquo;s not meant to be an extensive list of all tests to be done, rather it should help you, as beta-tester, to get started and enable you to get creative and create your own test-cases. Derive from these examples, be creative, do unusual and unconventional things, to try to break things.\nOne option to create new test-cases and to stress the system is to examine what the API acceptance-tests or the web-UI does, examine the requests and do something a bit different with curl. This is also a good way to find out how APIs work that are not already fully documented.\nSome cases have suggested setup steps, but feel free to use other setups. This can include:\ndifferent deployment methods (e.g. running single binary, docker-container, docker-compose setup, individual services in own docker containers) different identity managers (e.g. different external LDAP, internal IDM) different reverse proxies (e.g. traefik) different OpenIDConnect IDPs (e.g builtin IDP, keycloak, AzureAD) for some functionalities you will need an LDAP server where the IDP and oCIS both get the users from keycloak example service configuration different storage systems (decomposedFS on local POSIX (default), decomposedFS on NFS, S3 ) It\u0026rsquo;s a good idea to test ocis in the same environment where you are planning to use it later (with the LDAP server, storage system, etc. of your organisation).\nrun oCIS For a quick start, please have a look into the getting started documentation of oCIS If you would like to access oCIS remotely please refer to the Basic Remote Setup section.\nadditional tips to allow basic auth (e.g. to easily access oCIS using curl commands) you have to set PROXY_ENABLE_BASIC_AUTH=true environment variable if you cannot use real SSL Certificates set OCIS_INSECURE=true as environment variable Testplan user / groups from LDAP Prerequisite:\nconnect ocis to your preferred LDAP server create users and groups in LDAP start ocis with basic auth documentation resources:\nconfigure ocis with LDAP sharing API is compatible to ownCloud 10 webDav operations Test Case Expected Result Comment share file / folder to a group member of the group can access shared item share file / folder to a group, remove member from group in LDAP removed member should not have access to the shared item share file / folder to a group with different permissions, as receiver try to violate the permissions receiver should not be able to violate the permissions try to login with wrong credentials login should not be possible set a quota in LDAP, upload files till the quota is exceeded upload should work till quota is full, uploads should not work when quota is full try to access files / folders of other users access should not be possible try to share with non-existing users and groups sharing should not be possible try to share with user/groups-names that contain special characters sharing should be possible, access shares with that user does not create any problems other sharing should be tried in various ways and in different environments\ndocumentation resources:\nsharing API is compatible to ownCloud 10 webDav operations Test Case Expected Result Comment share a file/folder with the same name from different users receiver can accept and access both file/folders and distinguish them share a file/folder with the same name but different permissions from different users receiver can access both file/folders according to the permissions share a file/folder with the same name but different locations from one user receiver can accept and access both file/folders and distinguish them share a file/folder back to the sharer sharing back should not be possible re-share a file/folder with different permissions sharing with lower permissions is possible, but not with higher decline received share shared resource should not be shown to the receiver parallel deployment configure ocis with LDAP setup oC10 and ocis in parallel create users and groups in LDAP documentation resources:\nsharing API is compatible to ownCloud 10 Test Case Expected Result Comment share file / folder to a group in one implementation (use different permissions), access the items with the other implementation, try to violate the permissions receiver should not be able to violate the permissions share file / folder to a group, remove member from group in LDAP, try to access items with the removed member from both implementations removed member should not have access to the shared item Spaces Prerequisite:\nstart ocis with basic auth variable declaration, for curl examples: SERVER_URI=https://localhost:9200 GRAPH_API_PATH=graph/v1.0 SHARE_API_PATH=ocs/v2.php/apps/files_sharing/api/v1/shares USER=admin PASSWORD=admin create a new user curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$GRAPH_API_PATH/users\u0026quot; -X POST -d'{\u0026quot;displayName\u0026quot;:\u0026quot;Example User\u0026quot;,\u0026quot;mail\u0026quot;:\u0026quot;example@example.org\u0026quot;,\u0026quot;onPremisesSamAccountName\u0026quot;:\u0026quot;example\u0026quot;,\u0026quot;passwordProfile\u0026quot;:{\u0026quot;password\u0026quot;:\u0026quot;ThePassword\u0026quot;}}' give the user the \u0026ldquo;Space Admin\u0026rdquo; role get the id of the user: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/users/\u0026lt;user-name\u0026gt; | jq '.id' assign role user to role: curl -k -u $USER:$PASSWORD $SERVER_URI/api/v0/settings/assignments-add -d'{\u0026quot;account_uuid\u0026quot;:\u0026quot;\u0026lt;user-id\u0026gt;\u0026quot;,\u0026quot;role_id\u0026quot;:\u0026quot;2aadd357-682c-406b-8874-293091995fdd\u0026quot;} create a space: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$GRAPH_API_PATH/drives\u0026quot; -X POST -d'{\u0026quot;Name\u0026quot;:\u0026quot;Space for finance\u0026quot;,\u0026quot;driveType\u0026quot;:\u0026quot;project\u0026quot;, \u0026quot;description\u0026quot;:\u0026quot;we need some space\u0026quot;}' list spaces: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/me/drives disable a space: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X DELETE delete a space: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X DELETE -H'Purge: T' restore a space: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X PATCH -d\u0026quot;{}\u0026quot; -H\u0026quot;Restore: true\u0026quot; rename the space: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X PATCH -d'{\u0026quot;name\u0026quot;:\u0026quot;नेपालि नाम\u0026quot;}' change description of the space: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X PATCH -d'{\u0026quot;description\u0026quot;:\u0026quot;this contains important data\u0026quot;}' change quota of the space curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X PATCH -d'{\u0026quot;quota\u0026quot;:{\u0026quot;total\u0026quot;:\u0026lt;bytes\u0026gt;}}' change image of space: upload an image file to the .spaces folder: curl -k -u $USER:$PASSWORD https://localhost:9200/dav/spaces/\u0026lt;space-id\u0026gt;/.space/\u0026lt;file-name\u0026gt; -T \u0026lt;path-of-local-image\u0026gt; -v note the id provided in the Oc-Fileid header set the image as \u0026ldquo;special-folder\u0026rdquo;: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X PATCH -d'{\u0026quot;special\u0026quot;:[{\u0026quot;specialFolder\u0026quot;:{\u0026quot;name\u0026quot;:\u0026quot;image\u0026quot;},\u0026quot;id\u0026quot;:\u0026quot;\u0026lt;oc-fileid\u0026gt;\u0026quot;}]}' share a space: curl -k -u $USER:$PASSWORD $SERVER_URI/$SHARE_API_PATH -d'space_ref=\u0026lt;space-id\u0026gt;\u0026amp;shareType=7\u0026amp;shareWith=\u0026lt;receiver-username\u0026gt;\u0026amp;role=\u0026lt;role\u0026gt;' Roles: viewer editor manager share a resource within a space curl -k -u $USER:$PASSWORD $SERVER_URI/$SHARE_API_PATH -d'shareType=0\u0026amp;shareWith=\u0026lt;receiver-username\u0026gt;\u0026amp;space_ref=\u0026lt;space-id\u0026gt;%2F\u0026lt;resource\u0026gt;\u0026amp;permissions=\u0026lt;permissions\u0026gt; possible permissions 1 = read 2 = update 4 = create 8 = delete 15 = read/write 16 = share 31 = All permissions WebDAV root: https://\u0026lt;server-uri\u0026gt;/dav/spaces/\u0026lt;space-id\u0026gt; example commands for operations Test Case Expected Result Comment create a space space should exist create a space with special characters as a name \u0026amp; description space should exist create a space, delete the space space should not exist create a space, share the space with a user space should be accessible create a space, share the space with a group space should be accessible, space content is shared among all users create a space, share the space with a group, disable the space space should not be accessible create a space, share the space with a user, disable the space, restore the space space should be accessible create a space, disable the space, delete the space, restore the space it should not be possible to restore the space create a space, disable the space, try to share the space sharing the space should not be possible create a space, try to delete the space it should not be possible to delete an enabled space create \u0026amp; share a space with a group with viewer role, do CRUD file/folder operations with WebDAV space content is readable but neither space not content should not be writable create \u0026amp; share a space with a group with editor role, do CRUD file/folder operations with WebDAV space and content should be writable create a space, try CRUD file/folder operations with WebDAV on the space with a user that its not shared with space and content should not be accessible create a space with a quota, share the space, upload files till the quota is exceeded upload should work till quota is full, uploads should not work when quota is full share file/folders from inside a space (see other sharing section) sharing works and obeys the permissions create a space, rename the space new name should be displayed in API calls and web create a space, change description of the space new description should be displayed in API calls and web create a space, set quota, change quota of the space new quota is obeyed create a space, set quota, change quota of the space to a value that is lower than the sum of data already stored new quota is obeyed, new files cannot be uploaded try the various space operations with invalid data good error output, server does not crash try the various space operations without the correct permissions operations are not possible without sufficient permissions try the various space operations on personal and virtual spaces server should not crash, good error responses try the various space operations sending invalid data (invalid numbers, wrong types, invalid JSON, etc.) server should not crash, good error responses Web Prerequisite:\nconnect ocis to your preferred LDAP server create users and groups in LDAP Use your preferred browser (Firefox 94-96, Chrome 92-97, Opera 81-82, Edge 96-97, Safari 14-15) to access the built-in webUI (by default: https://localhost:9200) Test Case Expected Result Comment Login with the created user User logs in. Create a text file. Text editor can open, file is saved. Create a text file with special characters as name file is created if the name is legal otherwise an error is displayed Modify a text file. File can be modified, no problems found. Rename a file. File is renamed. Upload a file. File is uploaded, no problems found. Upload multiple files at once. Files are uploaded, no problems found. delete all content of a folder at once. Folder is cleaned, items are visible in the trashbin Overwrite a file by uploading a new version. File is uploaded and overwritten, file versions are displayed Overwrite a file by uploading a new version, restore the original version. File is restored correctly upload a huge file File is uploaded, no problems found. upload a huge file, cancel the upload, restart the upload Upload continues at the position where it was cancelled, file is uploaded completely. Remove a file. File is removed correctly, it appears in the trashbin. Restore the deleted file from trashbin File is restored correctly Remove multiple files that have the same name but are located in different folders Files are removed correctly, they appear in the trashbin. Restore some of the deleted files from trashbin Files are restored correctly in the correct folders. Restore some of the deleted files from trashbin, but delete the original containing folder before Files are restored correctly Clean files from the trashbin files are permanently deleted Create a lot of files, delete a lot of files, empty the trashbin trashbin is cleaned Move a file inside a folder. There are not problems on the process. Move a file inside a folder that already contains a file with the same name File is not moved, content in the destination is not overwritten Create a folder. Folder is created, no MKCOL problems appear. Create a folder with special characters as name Folder is created if the name is legal otherwise an error is displayed Create a folder with a name of an already existing file/folder Folder is not created, an error is displayed Create a folder with a lot of subfolders, use special characters in the name Folder is created, no MKCOL problems appear. Delete a folder. Folder is removed. Move a folder inside another. No problems while moving the folder. open images in mediaviewer files are displayed correctly. open videos in mediaviewer files are displayed correctly. switch through videos and images in mediaviewer files are displayed correctly. Share a file by public link. Link is created and can be accessed. Share a folder by public link. Link is created and can be accessed. Share a file with another user. It is shared correctly. Share a folder with another user. It is shared correctly. Share a file with a group. It is shared correctly. Share a folder with a group. It is shared correctly. Share a folder with userB giving edit permissions. As userB do CRUD operations on items inside the received folder userB doesn\u0026rsquo;t find any problem while interacting with files. Use your mobile device to access the UI All elements reachable do tests mentioned in the spaces section using the web-UI Desktop Client Prerequisite:\ninstall the desktop client on your preferred OS start ocis connect a new account in the desktop client to ocis e.g. https://localhost:9200 if you are running the server and the client on the same machine accept the self-signed certificate you will be redirected to the browser, accept the certificate there also login as any user allow the \u0026ldquo;ownCloud desktop app\u0026rdquo; to access ocis select a folder to sync Test Case Expected Result Comment Set up two clients with the same user. Change files, add some, delete some, move some, create folders. Changes sync properly in both clients without errors. Share a file using contextual menu with userB. Option to share appears in the contextual menu and file is correctly shared. Mobile Clients (iOS || Android) Prerequisite:\ninstall the ownCloud app on your mobile start oCIS as described in Basic Remote Setup connect a new account in the mobile client to ocis accept the self-signed certificate you will be redirected to the browser, accept the certificate there also login as any user allow the mobile app to access ocis Test Case Expected Result Comment Connect to server, see files, download one. No problems while downloading. Upload a file using mobile client. No problems while uploading. Share a file with userB using mobile client. File is correctly shared. other WebDAV clients Prerequisite:\nstart ocis with basic auth Test Case Expected Result Comment use ocis as webDAV external storage in ownCloud 10 resource access works access webDAV with your file-manager that will not give you a good UX, but ocis should not crash Urls: https://\u0026lt;ocis-server\u0026gt;/remote.php/webdav \u0026amp; https://\u0026lt;ocis-server\u0026gt;/remote.php/dav/files/\u0026lt;username\u0026gt; access webDAV with the \u0026ldquo;remote-files\u0026rdquo; function of LibreOffice files are accessible and can be written back Tips for testing WebDav WebDav is accessible under different path\nold: https://\u0026lt;ocis-server\u0026gt;/remote.php/webdav new: https://\u0026lt;ocis-server\u0026gt;/remote.php/dav/files/\u0026lt;username\u0026gt; spaces: https://\u0026lt;ocis-server\u0026gt;/dav/spaces/\u0026lt;space-id\u0026gt; WebDav specifications can be found on http://webdav.org/\nhere some general WebDav request examples:\nvariable declaration:\nSERVER_URI=https://localhost:9200 API_PATH=remote.php/webdav USER=admin PASSWORD=admin list content of root folder: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/\u0026quot; -X PROPFIND list content of sub-folder: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/f1\u0026quot; -X PROPFIND create a folder: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/folder\u0026quot; -X MKCOL delete a resource: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/folder\u0026quot; -X DELETE rename / move a resource: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/folder\u0026quot; -X MOVE -H \u0026quot;Destination: $SERVER_URI/$API_PATH/renamed\u0026quot; copy a resource: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/folder\u0026quot; -X COPY -H \u0026quot;Destination: $SERVER_URI/$API_PATH/folder-copy\u0026quot; decode HTTPS traffic with wireshark To decode the HTTPS traffic we need the keys that were used to encrypt the traffic. Those keys are kept secret by the clients, but we can request the clients to save them in a specific file, so that wireshark can use them to decrypt the traffic again.\ncreate key file: touch /tmp/sslkey.log start wireshark set log filename navigate to Edit=\u0026gt;Preferences=\u0026gt;Protocols=\u0026gt;TLS in the field (Pre)-Master-Secret log filename enter /tmp/sslkey.log decode as HTTP navigate to Analyze=\u0026gt;Decode As\u0026hellip; click the + button set Field: TLS Port; Value=9200; Type: Integer, base 10; Default (none); Current HTTP (adjust the port if you are using another one than 9200) start recording use port 9200 as capture filter to only record ocis packages use http as display filter to see only decoded traffic run test-software with SSLKEYLOGFILE=/tmp/sslkey.log as env. variable e.g. curl: SSLKEYLOGFILE=/tmp/sslkey.log curl -k -u admin:admin https://localhost:9200/ocs/v1.php/cloud/users Browser: SSLKEYLOGFILE=/tmp/sslkey.log firefox LibreOffice: SSLKEYLOGFILE=/tmp/sslkey.log libreoffice acceptance tests: SSLKEYLOGFILE=/tmp/sslkey.log make test-acceptance-api ... format output piping xml results to xmllint gives you nice formats. E.g. curl -k --user marie:radioactivity \u0026quot;https://localhost:9200/ocs/v1.php/apps/files_sharing/api/v1/shares\u0026quot; | xmllint --format - piping json results to jq gives you nice formats. E.g. curl -k --user marie:radioactivity \u0026quot;https://localhost:9200/ocs/v1.php/apps/files_sharing/api/v1/shares?format=json\u0026quot; | jq create edge cases Big List of Naughty Strings ","description":"Beta Testing This document is supposed to give you some ideas how and what to test on ocis. It\u0026rsquo;s not meant to be an extensive list of all tests to be done, rather it should help you, as beta-tester, to get started and enable you to get creative and create your own test-cases. Derive from these examples, be creative, do unusual and unconventional things, to try to break things."},{"id":108,"href":"/services/app-provider/","title":"App-Provider","parent":"Services","content":" Abstract Table of Contents Service Configuration ","description":" Abstract Table of Contents Service Configuration "},{"id":109,"href":"/services/groups/","title":"Groups","parent":"Services","content":" Abstract Table of Contents Service Configuration ","description":" Abstract Table of Contents Service Configuration "},{"id":110,"href":"/services/storage-publiclink/","title":"Storage-Publiclink","parent":"Services","content":" Abstract Table of Contents Service Configuration ","description":" Abstract Table of Contents Service Configuration "},{"id":111,"href":"/services/storage-shares/","title":"Storage-Shares","parent":"Services","content":" Abstract Table of Contents Service Configuration ","description":" Abstract Table of Contents Service Configuration "},{"id":112,"href":"/services/users/","title":"Users","parent":"Services","content":" Abstract Table of Contents Service Configuration ","description":" Abstract Table of Contents Service Configuration "},{"id":113,"href":"/clients/web/development/conventions/","title":"Conventions","parent":"Development","content":" Contributing to ownCloud Web Linting and Tests Changelog Items Code Conventions Early Returns Translations TypeScript Vue 3 and Composition API Dependencies This is a collection of tips and conventions to follow when working on the ownCloud web frontend. Since it is a living document, please open a PR if you find something missing.\nContributing to ownCloud Web Everyone is invited to contribute. Simply fork the codebase, check the issues for a suitable one and open a pull request!\nLinting and Tests To make sure your pull request can be efficiently reviewed and won\u0026rsquo;t need a lot of changes down the road, please run the linter and the unit tests via pnpm lint --fix and pnpm test:unit locally. Our CI will run on pull requests and report back any problems after that. For a further introduction on how we handle testing, please head to the testing docs.\nChangelog Items In our project, we follow SemVer and keep a changelog for every change that influences the user experience (where \u0026ldquo;users\u0026rdquo; can be admins, end-users and developers). Some changes, like refactoring, updating dependencies, writing documentation or adding tests don\u0026rsquo;t require a changelog item.\nPlease add a changelog item to the changelog/unreleased/ folder, referencing the issue and pull request numbers, following the changelog item template.\nCode Conventions Early Returns We\u0026rsquo;re trying to stick with early returns in our code to make it more performant and simpler to reason about it.\nTranslations Use the v-text directive in combination with $gettext (or a variation of it) inside HTML tags (instead of a \u0026lt;translate tag=\u0026quot;h1\u0026quot;\u0026gt; or similar) in order to make reasoning about the DOM tree easier.\nTypeScript We\u0026rsquo;re using TypeScript, which allows us to catch bugs at transpile time. Clean types make sure our IDEs can support us in reasoning about our (ever growing, complex) codebase.\nVue 3 and Composition API We\u0026rsquo;ve migrated from Vue 2 to Vue 3 late in 2022 and since then have been investing continuous efforts to move away from the Vue options API in favor of the Vue composition API. The web-pkg helper package provides quite some composables which will help you in app \u0026amp; extension development, so we encourage you to make use of the Vue composition API as well, even outside of the ownCloud Web repository.\nDependencies To keep the bundle size small and reduce the risk of introducing security problems for our users, we try to limit the amount of dependencies in our code base and keep them as up-to-date as possible.\n","description":"Contributing to ownCloud Web Linting and Tests Changelog Items Code Conventions Early Returns Translations TypeScript Vue 3 and Composition API Dependencies This is a collection of tips and conventions to follow when working on the ownCloud web frontend. Since it is a living document, please open a PR if you find something missing.\nContributing to ownCloud Web Everyone is invited to contribute. Simply fork the codebase, check the issues for a suitable one and open a pull request!"},{"id":114,"href":"/clients/rclone/","title":"Rclone","parent":"Clients","content":" About Rclone Rclone is a command line program to manage files on cloud storage. It is a feature rich alternative to cloud vendors\u0026rsquo; web storage interfaces. Over 40 cloud storage products support rclone including S3 object stores, business \u0026amp; consumer file storage services, as well as standard transfer protocols.\nRclone has powerful cloud equivalents to the unix commands rsync, cp, mv, mount, ls, ncdu, tree, rm, and cat. Rclone\u0026rsquo;s familiar syntax includes shell pipeline support, and \u0026ndash;dry-run protection. It is used at the command line, in scripts or via its API.\nUsers call rclone \u0026ldquo;The Swiss army knife of cloud storage\u0026rdquo;, and \u0026ldquo;Technology indistinguishable from magic\u0026rdquo;.\nSource: Rclone project website\nTable of Contents WebDAV with Basic Authentication WebDAV with OpenID Connect ","description":"About Rclone Rclone is a command line program to manage files on cloud storage. It is a feature rich alternative to cloud vendors\u0026rsquo; web storage interfaces. Over 40 cloud storage products support rclone including S3 object stores, business \u0026amp; consumer file storage services, as well as standard transfer protocols.\nRclone has powerful cloud equivalents to the unix commands rsync, cp, mv, mount, ls, ncdu, tree, rm, and cat. Rclone\u0026rsquo;s familiar syntax includes shell pipeline support, and \u0026ndash;dry-run protection."},{"id":115,"href":"/clients/rclone/webdav-sync-basic-auth/","title":"WebDAV with Basic Authentication","parent":"Rclone","content":" WebDAV with Basic Authentication Basic Authentication is disabled by default in oCIS because of security considerations. In order to make the following Rclone commands work the oCIS administrator needs to enable Basic Authentication e.g. by setting the environment variable PROXY_ENABLE_BASIC_AUTH to true.\nPlease consider to use Rclone with OpenID Connect instead.\nFor the usage of a WebDAV remote with Rclone see also the Rclone documentation\nConfigure the WebDAV remote First of all we need to set up our credentials and the WebDAV remote for Rclone. In this example we do this by setting environment variables. You might also set up a named remote or use command line options to achieve the same.\nexport RCLONE_WEBDAV_VENDOR=owncloud export RCLONE_WEBDAV_URL=https://ocis.owncloud.test/remote.php/webdav/ export RCLONE_WEBDAV_USER=einstein export RCLONE_WEBDAV_PASS=$(rclone obscure relativity) Please note that RCLONE_WEBDAV_PASS is not set to the actual password, but to the value returned by rclone obscure \u0026lt;password\u0026gt;. We now can use Rclone to sync the local folder /tmp/test to /test in your oCIS home folder.\nSync to the WebDAV remote rclone sync :local:/tmp :webdav:/test If your oCIS doesn\u0026rsquo;t use valid SSL certificates, you may need to use rclone --no-check-certificate sync ....\n","description":"WebDAV with Basic Authentication Basic Authentication is disabled by default in oCIS because of security considerations. In order to make the following Rclone commands work the oCIS administrator needs to enable Basic Authentication e.g. by setting the environment variable PROXY_ENABLE_BASIC_AUTH to true.\nPlease consider to use Rclone with OpenID Connect instead.\nFor the usage of a WebDAV remote with Rclone see also the Rclone documentation\nConfigure the WebDAV remote First of all we need to set up our credentials and the WebDAV remote for Rclone."},{"id":116,"href":"/clients/rclone/webdav-sync-oidc/","title":"WebDAV with OpenID Connect","parent":"Rclone","content":" WebDAV with OpenID Connect Rclone itself is not able to open and maintain an OpenID Connect session. But it is able to still use OpenID Connect for authentication by leveraging a so called OIDC-agent.\nSetting up the OIDC-agent You need to install the OIDC-agent from your OS\u0026rsquo; package repository (e.g. Debian or MacOS).\nConfiguring the OIDC-agent Run the following command to add a OpenID Connect profile to your OIDC-agent. It will open the login page of OpenID Connect identity provider where you need to log in if you don\u0026rsquo;t have an active session.\noidc-gen \\ --client-id=oidc-agent \\ --client-secret=\u0026#34;\u0026#34; \\ --pub \\ --issuer https://ocis.owncloud.test \\ --redirect-uri=http://localhost:12345 \\ --scope max \\ einstein-ocis-owncloud-test If you have dynamic client registration enabled on your OpenID Connect identity provider, you can skip the --client-id, --client-secret and --pub options.\nIf you\u0026rsquo;re using a dedicated OpenID Connect client for the OIDC-agent, we recommend a public one with the following two redirect URIs: http://127.0.0.1:* and http://localhost:*. Alternatively you also may use the already existing OIDC client of the ownCloud Desktop Client (--client-id=xdXOt13JKxym1B1QcEncf2XDkLAexMBFwiT9j6EfhhHFJhs2KM9jbjTmf8JBXE69 and --client-secret=UBntmLjC2yYCeHwsyj73Uwo9TAaecAetRwMw0xYcvNL9yRdLSUi0hUAHfvCHFeFh, no --pub set, request specific scope for offline access), e.g.:\noidc-gen \\ --client-id=xdXOt13JKxym1B1QcEncf2XDkLAexMBFwiT9j6EfhhHFJhs2KM9jbjTmf8JBXE69 \\ --client-secret=UBntmLjC2yYCeHwsyj73Uwo9TAaecAetRwMw0xYcvNL9yRdLSUi0hUAHfvCHFeFh \\ --issuer https://cloud.ocis.test \\ --redirect-uri=http://localhost:12345 \\ --scope=\u0026#34;openid offline_access profile email\u0026#34; \\ my-client When using a self signed certificate you have to provide the certificate chain using --cp /etc/ssl/certs/test.cert.pem. In case oidc-gen cannot determine the flow try with --flow=code.\nPlease also note that the OIDC-agent will listen on your localhost interface on port 12345 for the time of the initial authentication. If that port is already occupied on your machine, you can easily change that by setting the --redirect-uri parameter to a different value.\nAfter a successful login or an already existing session you will be redirected to success page of the OIDC-agent. You will now be asked for a password for your account configuration, so that your OIDC session is secured and cannot be used by other people with access to your computer.\nConfigure the WebDAV remote First of all we need to set up our credentials and the WebDAV remote for Rclone. In this example we do this by setting environment variables. You might also set up a named remote or use command line options to achieve the same.\nexport RCLONE_WEBDAV_VENDOR=owncloud export RCLONE_WEBDAV_URL=https://ocis.owncloud.test/remote.php/webdav/ export RCLONE_WEBDAV_BEARER_TOKEN_COMMAND=\u0026#34;oidc-token einstein-ocis-owncloud-test\u0026#34; Sync to the WebDAV remote We now can use Rclone to sync the local folder /tmp/test to /test in your oCIS home folder.\nrclone sync :local:/tmp :webdav:/test If your oCIS doesn\u0026rsquo;t use valid SSL certificates, you may need to use rclone --no-check-certificate sync ....\n","description":"WebDAV with OpenID Connect Rclone itself is not able to open and maintain an OpenID Connect session. But it is able to still use OpenID Connect for authentication by leveraging a so called OIDC-agent.\nSetting up the OIDC-agent You need to install the OIDC-agent from your OS\u0026rsquo; package repository (e.g. Debian or MacOS).\nConfiguring the OIDC-agent Run the following command to add a OpenID Connect profile to your OIDC-agent. It will open the login page of OpenID Connect identity provider where you need to log in if you don\u0026rsquo;t have an active session."},{"id":117,"href":"/ocis/development/profiling/","title":"Profiling","parent":"Development","content":" 0. Prerequisites 1. Clone Reva 2. Patch reva with the area that you want sampled. 3. Replace reva in oCIS go.mod with local version and build a new binary 4. Build a new ocis binary 5. Start oCIS server 6. Run pprof Install pprof Collecting samples Room for improvement References 0. Prerequisites Go development kit of a supported version. Follow these instructions to install the go tool and set up GOPATH. Graphviz: http://www.graphviz.org/. Used to generate graphic visualizations of profiles, which this example setup does. The only way to enable the profiler currently is to explicitly select which areas to collect samples for. In order to do this, the following steps have to be followed.\n1. Clone Reva Reva is the reference implementation of the CS3 APIs that we use for our daily business between oCIS and its storages. It is in charge of accessing the storage, as well as managing shares. Because of this fact, the examples will modify code in this dependency. You can think of Reva as the framework we use in order to interface with different storage providers.\ngit clone github.com/cs3org/reva\n2. Patch reva with the area that you want sampled. For the purposes of these docs let\u0026rsquo;s use the WebDAV PROPFIND path. This patch is needed in order to have the WebDAV process reporting profiling traces to the pprof.\ndiff --git a/internal/http/services/owncloud/ocdav/propfind.go b/internal/http/services/owncloud/ocdav/propfind.go index 0e9c99be..f271572f 100644 --- a/internal/http/services/owncloud/ocdav/propfind.go +++ b/internal/http/services/owncloud/ocdav/propfind.go @@ -32,6 +32,8 @@ import ( \u0026#34;strings\u0026#34; \u0026#34;time\u0026#34; + _ \u0026#34;net/http/pprof\u0026#34; + userv1beta1 \u0026#34;github.com/cs3org/go-cs3apis/cs3/identity/user/v1beta1\u0026#34; rpc \u0026#34;github.com/cs3org/go-cs3apis/cs3/rpc/v1beta1\u0026#34; link \u0026#34;github.com/cs3org/go-cs3apis/cs3/sharing/link/v1beta1\u0026#34; @@ -311,6 +313,12 @@ func requiresExplicitFetching(n *xml.Name) bool { return true } +func init() { + go func() { + http.ListenAndServe(\u0026#34;:1234\u0026#34;, nil) + }() +} + // from https://github.com/golang/net/blob/e514e69ffb8bc3c76a71ae40de0118d794855992/webdav/xml.go#L178-L205 func readPropfind(r io.Reader) (pf propfindXML, status int, err error) { c := countingReader{r: r} The previous patch will:\nimport net/http/pprof, which will register debug handlers in DefaultServeMux. define a init() function that starts an HTTP server with the previously registered handlers. With everything running one should have access to http://localhost:1234/debug/pprof/\n3. Replace reva in oCIS go.mod with local version and build a new binary In Go, the go.mod file controls the dependencies of your module. Because we patched an external library, Go provides with a mechanism to overwrite an existing dependency with one on your local machine, which we previously installed.\ndiff --git a/go.mod b/go.mod index 131d14d7b..9668c38e4 100644 --- a/go.mod +++ b/go.mod @@ -78,6 +78,7 @@ require ( replace ( github.com/crewjam/saml =\u0026gt; github.com/crewjam/saml v0.4.5 + github.com/cs3org/reva =\u0026gt; path/to/your/reva go.etcd.io/etcd/api/v3 =\u0026gt; go.etcd.io/etcd/api/v3 v3.0.0-20210204162551-dae29bb719dd go.etcd.io/etcd/pkg/v3 =\u0026gt; go.etcd.io/etcd/pkg/v3 v3.0.0-20210204162551-dae29bb719dd ) Make sure to replace github.com/cs3org/reva =\u0026gt; path/to/your/reva with the correct location of your reva.\n4. Build a new ocis binary Using the new dependency with the pprof patch.\nFrom owncloud/ocis root:\n$ cd ocis $ make clean build 5. Start oCIS server From owncloud/ocis root:\n$ ocis/bin/ocis server 6. Run pprof Pprof is a tool developed at Google. It is a tool for visualization and analysis of profiling data. It will take the reported profiled data from our server, and represent it in a meaningful manner.\nInstall pprof If pprof is not installed make sure to get it; one way of installing it is using the Go tools:\n$ go get -u github.com/google/pprof Collecting samples Collect 30 seconds of samples:\n$ pprof -web http://:1234/debug/pprof/profile\\?seconds\\=30 Once the collection is done a browser tab will open with the result svg, looking similar to this:\nFor references on how to interpret this graph, continue reading here.\nRoom for improvement Because these docs are intended to be read by developers they are quite technical in content. Requiring the user to alter the code. This is done so that we do not include, or assume, third party dependencies such as Graphviz in our binary, making it heavier. Having said this, the profiler is only meant to be used in development\nReferences https://medium.com/swlh/go-profile-your-code-like-a-master-1505be38fdba https://dave.cheney.net/2013/07/07/introducing-profile-super-simple-profiling-for-go-programs ","description":"0. Prerequisites 1. Clone Reva 2. Patch reva with the area that you want sampled. 3. Replace reva in oCIS go.mod with local version and build a new binary 4. Build a new ocis binary 5. Start oCIS server 6. Run pprof Install pprof Collecting samples Room for improvement References 0. Prerequisites Go development kit of a supported version. Follow these instructions to install the go tool and set up GOPATH."},{"id":118,"href":"/ocis/development/continuous-integration/","title":"Continuous Integration","parent":"Development","content":" Concepts Things done in CI Flags in commit message and PR title Knowledge base oCIS uses DRONE as CI system. You can find the pipeline logs here or in your PR.\nConcepts The pipeline is defined in Starlark and transformed to YAML upon pipeline run. This enables us to do a highly dynamic and non repeating pipeline configuration. We enforce Starlark format guidelines with Bazel Buildifier. You can format the .drone.star file by running make ci-format.\nUpon running the pipeline, your branch gets merged to the master branch. This ensures that we always test your changeset if as it was applied to the master of oCIS. Please note that this does not apply to the pipeline definition (.drone.star).\nThings done in CI static code analysis linting running UI tests running ownCloud 10 test suite against oCIS build and release docker images build and release binaries build and release documentation Flags in commit message and PR title You may add flags to your commit message or PR title in order to speed up pipeline runs and take load from the CI runners.\n[CI SKIP]: no CI is run on the commit or PR\n[full-ci]: deactivates the fail early mechanism and runs all available test (as default only smoke tests are run)\nKnowledge base My pipeline fails because some CI related files or commands are missing.\nPlease make sure to rebase your branch onto the latest master of oCIS. It could be that the pipeline definition (.drone.star) was changed on the master branch. This is the only file, that will not be auto merged to master upon pipeline run. So things could be out of sync.\nHow can I see the YAML drone pipeline definition?\nIn order to see the Yaml pipeline definition you can use the drone-cli to convert the Starlark file.\ndrone starlark If you experience a \u0026quot;build\u0026quot; struct has no .title attribute you need a newer version of drone-cli.\nYou currently need to build it yourself from this source code. If you are not using master as source, please ensure that this PR is included.\n","description":"Concepts Things done in CI Flags in commit message and PR title Knowledge base oCIS uses DRONE as CI system. You can find the pipeline logs here or in your PR.\nConcepts The pipeline is defined in Starlark and transformed to YAML upon pipeline run. This enables us to do a highly dynamic and non repeating pipeline configuration. We enforce Starlark format guidelines with Bazel Buildifier. You can format the ."},{"id":119,"href":"/ocis/deployment/","title":"Deployment","parent":"oCIS - ownCloud Infinite Scale","content":" Deployments scenarios and examples Setup oCIS on your server Secure an oCIS instance Deployments scenarios and examples This section handles deployments and operations for admins and people who are interested in how versatile oCIS is. If you want to just try oCIS you may also follow Getting started.\nSetup oCIS on your server oCIS deployments are super simple, yet there are many configurations possible for advanced setups.\nBasic oCIS setup - configure domain, certificates and port oCIS setup with Keycloak as identity provider Flexible oCIS setup with WebOffice and Search capabilities Parallel deployment of oC10 and oCIS oCIS with the Hello extension example Secure an oCIS instance oCIS no longer has any default secrets in versions later than oCIS 1.20.0. Therefore you\u0026rsquo;re no longer able to start oCIS without generating / setting all needed secrets.\nThe recommended way is to use ocis init for that. It will generate a secure config file for you.\n","description":"Deployments scenarios and examples Setup oCIS on your server Secure an oCIS instance Deployments scenarios and examples This section handles deployments and operations for admins and people who are interested in how versatile oCIS is. If you want to just try oCIS you may also follow Getting started.\nSetup oCIS on your server oCIS deployments are super simple, yet there are many configurations possible for advanced setups.\nBasic oCIS setup - configure domain, certificates and port oCIS setup with Keycloak as identity provider Flexible oCIS setup with WebOffice and Search capabilities Parallel deployment of oC10 and oCIS oCIS with the Hello extension example Secure an oCIS instance oCIS no longer has any default secrets in versions later than oCIS 1."},{"id":120,"href":"/ocis/development/build-docs/","title":"Documentation","parent":"Development","content":" Build the documentation Add changes to the documentation Build the documentation For building the documentation you need to have Make and Go 1.14 or higher installed. Just run make -C docs docs-serve from within the root level of the oCIS git repository. This will make documentation available on localhost:1313 and also do a hot reload if you change something in the (non autogenerated) documentation files.\nNote that you may get files changed reported like env_vars.yaml by just running the make command. You can discard any of these as they come from an internal helper process step necessary. To take care on those changed files, see the Docs Helpers readme.\nAdd changes to the documentation Please keep this documentation in sync with the oCIS source code.\nChanges on the documentation are automatically applied to this site when merged to the master branch.\n","description":"Build the documentation Add changes to the documentation Build the documentation For building the documentation you need to have Make and Go 1.14 or higher installed. Just run make -C docs docs-serve from within the root level of the oCIS git repository. This will make documentation available on localhost:1313 and also do a hot reload if you change something in the (non autogenerated) documentation files.\nNote that you may get files changed reported like env_vars."},{"id":121,"href":"/ocis/development/debugging/","title":"Debugging","parent":"Development","content":" Debugging Start ocis Use the debug binary and attach to the process as needed Start all services independently to replace one of them with a debug process Debugging the ocis in a docker container Gather error messages Managing dependencies and testing changes Debugging As a single binary for easy deployment running ocis server just forks itself to start all the services, which makes debugging those processes a little harder.\nUltimately, we want to be able to stop a single service using e.g. ocis kill web so that you can start the service you want to debug in debug mode. We need to change the way we fork processes though, otherwise the runtime will automatically restart a service if killed.\nStart ocis For debugging there are two workflows that work well, depending on your preferences.\nUse the debug binary and attach to the process as needed Run the debug binary with OCIS_LOG_LEVEL=debug bin/ocis-debug server and then find the service you want to debug using:\n# ps ax | grep ocis 12837 pts/1 Sl+ 0:00 bin/ocis-debug server 12845 pts/1 Sl 0:00 bin/ocis-debug graph 12847 pts/1 Sl 0:00 bin/ocis-debug reva-auth-bearer 12849 pts/1 Sl 0:00 bin/ocis-debug ocs 12850 pts/1 Sl 0:00 bin/ocis-debug reva-storage-oc-data 12863 pts/1 Sl 0:00 bin/ocis-debug webdav 12874 pts/1 Sl 0:00 bin/ocis-debug reva-frontend 12897 pts/1 Sl 0:00 bin/ocis-debug reva-sharing 12905 pts/1 Sl 0:00 bin/ocis-debug reva-gateway 12912 pts/1 Sl 0:00 bin/ocis-debug reva-storage-home 12920 pts/1 Sl 0:00 bin/ocis-debug reva-users 12929 pts/1 Sl 0:00 bin/ocis-debug glauth 12940 pts/1 Sl 0:00 bin/ocis-debug reva-storage-home-data 12948 pts/1 Sl 0:00 bin/ocis-debug idp 12952 pts/1 Sl 0:00 bin/ocis-debug proxy 12961 pts/1 Sl 0:00 bin/ocis-debug thumbnails 12971 pts/1 Sl 0:00 bin/ocis-debug reva-storage-oc 12981 pts/1 Sl 0:00 bin/ocis-debug web 12993 pts/1 Sl 0:00 bin/ocis-debug api 12998 pts/1 Sl 0:00 bin/ocis-debug registry 13004 pts/1 Sl 0:00 bin/ocis-debug web 13015 pts/1 Sl 0:00 bin/ocis-debug reva-auth-basic Then you can set a breakpoint in the service you need and attach to the process via processid. To debug the reva-sharing service the VS Code launch.json would look like this:\n{ \u0026#34;version\u0026#34;: \u0026#34;0.2.0\u0026#34;, \u0026#34;configurations\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;ocis attach\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;go\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;attach\u0026#34;, \u0026#34;mode\u0026#34;: \u0026#34;local\u0026#34;, \u0026#34;processId\u0026#34;: 12897 } ] } Start all services independently to replace one of them with a debug process You can use this ./ocis.sh script to start all services independently, so they don\u0026rsquo;t get restarted by the runtime when you kill them: #/bin/sh LOG_LEVEL=\u0026#34;debug\u0026#34; bin/ocis --log-level=$LOG_LEVEL micro \u0026amp; bin/ocis --log-level=$LOG_LEVEL glauth \u0026amp; bin/ocis --log-level=$LOG_LEVEL graph \u0026amp; #bin/ocis --log-level=$LOG_LEVEL hello \u0026amp; bin/ocis --log-level=$LOG_LEVEL idp \u0026amp; #bin/ocis --log-level=$LOG_LEVEL ocs \u0026amp; bin/ocis --log-level=$LOG_LEVEL web \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-auth-basic \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-auth-bearer \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-frontend \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-gateway \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-sharing \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-storage-home \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-storage-home-data \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-storage-oc \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-storage-oc-data \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-storage-root \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-users \u0026amp; #bin/ocis --log-level=$LOG_LEVEL webdav bin/ocis --log-level=$LOG_LEVEL proxy \u0026amp; Get the list of running processes: # ps ax | grep ocis 12837 pts/1 Sl+ 0:00 bin/ocis-debug server 12845 pts/1 Sl 0:00 bin/ocis-debug graph 12847 pts/1 Sl 0:00 bin/ocis-debug reva-auth-bearer 12849 pts/1 Sl 0:00 bin/ocis-debug ocs 12850 pts/1 Sl 0:00 bin/ocis-debug reva-storage-oc-data 12863 pts/1 Sl 0:00 bin/ocis-debug webdav 12874 pts/1 Sl 0:00 bin/ocis-debug reva-frontend 12897 pts/1 Sl 0:00 bin/ocis-debug reva-sharing 12905 pts/1 Sl 0:00 bin/ocis-debug reva-gateway 12912 pts/1 Sl 0:00 bin/ocis-debug reva-storage-home 12920 pts/1 Sl 0:00 bin/ocis-debug reva-users 12929 pts/1 Sl 0:00 bin/ocis-debug glauth 12940 pts/1 Sl 0:00 bin/ocis-debug reva-storage-home-data 12948 pts/1 Sl 0:00 bin/ocis-debug idp 12952 pts/1 Sl 0:00 bin/ocis-debug proxy 12961 pts/1 Sl 0:00 bin/ocis-debug thumbnails 12971 pts/1 Sl 0:00 bin/ocis-debug reva-storage-oc 12981 pts/1 Sl 0:00 bin/ocis-debug web 12993 pts/1 Sl 0:00 bin/ocis-debug api 12998 pts/1 Sl 0:00 bin/ocis-debug registry 13004 pts/1 Sl 0:00 bin/ocis-debug web 13015 pts/1 Sl 0:00 bin/ocis-debug reva-auth-basic Kill the service you want to start in debug mode: # kill 17628 Start the service you are interested in debug mode. When using make to build the binary there is already a bin/ocis-debug binary for you. When running an IDE tell it which service to start by providing the corresponding sub command, e.g. bin\\ocis-debug reva-frontend. Debugging the ocis in a docker container Remote debugging is the debug mode commonly used to work with a debugger and target running on a remote machine or a container for example a wopi stack deployments/examples/ocis_full/docker-compose.yml. Docker compose lets us define a compose application model through multiple compose files. When doing so, compose follows certain rules to merge compose files. See Merge and override in the Compose Specification. Based on this rules, we added the extra files deployments/examples/ocis_full/debug-ocis.yml, deployments/examples/ocis_full/debug-collaboration-collabora.yml, deployments/examples/ocis_full/debug-collaboration-onlyoffice.yml that overwrites the command attribute and extends the ports attribute. Below we describe the steps how to build the image, run the docker-compose and connect via remote debugger.\nBuild the image: cd github.com/owncloud/ocis/ocis make debug-docker Change the tag label: export OCIS_DOCKER_TAG=debug Run docker compose Building the docker compose command depends on what you want to debug, for example ocis and collaboration with the collabora supports. docker compose -f docker-compose.yml -f ocis.yml -f collabora.yml -f debug-ocis.yml -f debug-collaboration-collabora.yml up -d Connect to remote delve For the VS Code add the configuration to the .vscode/launch.json https://github.com/golang/vscode-go/wiki/debugging#remote-debugging { \u0026#34;name\u0026#34;: \u0026#34;Debug remote ocis :40000\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;go\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;attach\u0026#34;, \u0026#34;mode\u0026#34;: \u0026#34;remote\u0026#34;, \u0026#34;port\u0026#34;: 40000, \u0026#34;host\u0026#34;: \u0026#34;localhost\u0026#34;, // optional \u0026#34;trace\u0026#34;: \u0026#34;verbose\u0026#34;, // optional \u0026#34;showLog\u0026#34;: true // optional }, { \u0026#34;name\u0026#34;: \u0026#34;Debug remote collaboration collabora :40001\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;go\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;attach\u0026#34;, \u0026#34;mode\u0026#34;: \u0026#34;remote\u0026#34;, \u0026#34;port\u0026#34;: 40001, \u0026#34;host\u0026#34;: \u0026#34;localhost\u0026#34;, // optional \u0026#34;trace\u0026#34;: \u0026#34;verbose\u0026#34;, // optional \u0026#34;showLog\u0026#34;: true // optional }, { \u0026#34;name\u0026#34;: \u0026#34;Debug remote collaboration onlyoffice :40002\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;go\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;attach\u0026#34;, \u0026#34;mode\u0026#34;: \u0026#34;remote\u0026#34;, \u0026#34;port\u0026#34;: 40002, \u0026#34;host\u0026#34;: \u0026#34;localhost\u0026#34;, // optional \u0026#34;trace\u0026#34;: \u0026#34;verbose\u0026#34;, // optional \u0026#34;showLog\u0026#34;: true // optional }, For the Jetbrains Goland add the configuration following the docs https://www.jetbrains.com/help/go/go-remote.html Gather error messages We recommend you collect all related information in a single file or in a GitHub issue. Let us start with an error that pops up in the Web UI:\nError while sharing. error sending a grpc stat request\nThis popped up when I tried to add marie as a collaborator in ownCloud Web. That triggers a request to the server which I copied as curl. We can strip a lot of headers and the gist of it is:\n# curl \u0026#39;https://localhost:9200/ocs/v1.php/apps/files_sharing/api/v1/shares\u0026#39; -d \u0026#39;shareType=0\u0026amp;shareWith=marie\u0026amp;path=%2FNeuer+Ordner\u0026amp;permissions=1\u0026#39; -u einstein:relativity -k -v | xmllint -format - [... headers ...] \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;ocs\u0026gt; \u0026lt;meta\u0026gt; \u0026lt;status\u0026gt;error\u0026lt;/status\u0026gt; \u0026lt;statuscode\u0026gt;998\u0026lt;/statuscode\u0026gt; \u0026lt;message\u0026gt;error sending a grpc stat request\u0026lt;/message\u0026gt; \u0026lt;/meta\u0026gt; \u0026lt;/ocs\u0026gt; The username and password only work when basic auth is available. Otherwise you have to obtain a bearer token, e.g. by grabbing it from the browser. TODO add ocis cli tool to obtain a bearer token. We also have a few interesting log entries:\n0:43PM INF home/jfd/go/pkg/mod/github.com/cs3org/reva@v0.0.2-0.20200318111623-a2f97d4aa741/internal/grpc/interceptors/log/log.go:69 \u0026gt; unary code=OK end=\u0026#34;18/Mar/2020:22:43:40 +0100\u0026#34; from=tcp://[::1]:44078 pid=17836 pkg=rgrpc start=\u0026#34;18/Mar/2020:22:43:40 +0100\u0026#34; time_ns=95841 traceid=b4eb9a9f45921f7d3632523ca32a42b0 uri=/cs3.storage.registry.v1beta1.RegistryAPI/GetStorageProvider user-agent=grpc-go/1.26.0 10:43PM ERR home/jfd/go/pkg/mod/github.com/cs3org/reva@v0.0.2-0.20200318111623-a2f97d4aa741/internal/grpc/interceptors/log/log.go:69 \u0026gt; unary code=Unknown end=\u0026#34;18/Mar/2020:22:43:40 +0100\u0026#34; from=tcp://[::1]:43910 pid=17836 pkg=rgrpc start=\u0026#34;18/Mar/2020:22:43:40 +0100\u0026#34; time_ns=586115 traceid=b4eb9a9f45921f7d3632523ca32a42b0 uri=/cs3.gateway.v1beta1.GatewayAPI/Stat user-agent=grpc-go/1.26.0 10:43PM ERR home/jfd/go/pkg/mod/github.com/cs3org/reva@v0.0.2-0.20200318111623-a2f97d4aa741/internal/http/services/owncloud/ocs/reqres.go:94 \u0026gt; error sending a grpc stat request error=\u0026#34;rpc error: code = Unknown desc = gateway: error calling Stat: rpc error: code = Unavailable desc = connection error: desc = \\\u0026#34;transport: Error while dialing dial tcp [::1]:9152: connect: connection refused\\\u0026#34;\u0026#34; pid=17832 pkg=rhttp traceid=b4eb9a9f45921f7d3632523ca32a42b0 TODO return the trace id in the response so we can correlate easier. For reva tracked in https://github.com/cs3org/reva/issues/587 The last line gives us a hint where the log message originated: .../github.com/cs3org/reva@v0.0.2-0.20200318111623-a2f97d4aa741/internal/http/services/owncloud/ocs/reqres.go:94. Which looks like this:\n89: // WriteOCSResponse handles writing ocs responses in json and xml 90: func WriteOCSResponse(w http.ResponseWriter, r *http.Request, res *Response, err error) { 91: var encoded []byte 92: 93: if err != nil { 94: appctx.GetLogger(r.Context()).Error().Err(err).Msg(res.OCS.Meta.Message) 95: } Ok, so this seems to be a convenience method that is called from multiple places and also handles errors. Unfortunately, this hides the actual source of the error. We could set a breakpoint in line 94 and reproduce the problem, which can be a lot harder than just clicking the share button or sending a curl request again. So let us see what else the log tells us.\nThe previous line tells us that a Stat request failed: uri=/cs3.gateway.v1beta1.GatewayAPI/Stat. This time the line is written by the grpc log interceptor. What else is there?\nThe first line tells us that looking up the responsible storage provider seems to have succeeded: uri=/cs3.storage.registry.v1beta1.RegistryAPI/GetStorageProvider.\nAt this point it your familiarity with the codebase starts to become a factor. If you are new you should probably go back to setting a break point on the log line and check the stack trace.\nDebug wherever the call trace leads you to \u0026hellip; good luck!\nManaging dependencies and testing changes You can either run and manage the services independently, or you can update the go.mod file and replace dependencies with your local version.\nTo debug the reva frontend we need to add two replacements:\n// use the local ocis-reva repo replace github.com/owncloud/ocis-reva =\u0026gt; ../ocis-reva // also use the local reva repo replace github.com/cs3org/reva =\u0026gt; ../reva The username and password only work when basic auth is available. Otherwise you have to obtain a bearer token, e.g. by grabbing it from the browser. Rebuild ocis to make sure the dependency is used. It should be sufficient to just restart the service you want to debug.\n","description":"Debugging Start ocis Use the debug binary and attach to the process as needed Start all services independently to replace one of them with a debug process Debugging the ocis in a docker container Gather error messages Managing dependencies and testing changes Debugging As a single binary for easy deployment running ocis server just forks itself to start all the services, which makes debugging those processes a little harder."},{"id":122,"href":"/ocis/development/build/","title":"Build","parent":"Development","content":" Build requirements Get the sources Build the oCIS binary Build a local oCIS docker image Build requirements see Development - Getting Started\nGet the sources git clone https://github.com/owncloud/ocis.git cd ocis Build the oCIS binary You only need to run following command if you have changed protobuf definitions or the frontend part in one of the extensions. Run the command in the root directory of the repository. Otherwise you can skip this step and proceed to build the oCIS binary. This will usually modify multiple embed.go files because we embed the frontend build output in these embed.go files and a timestamp will be updated and also minor differences are expected between different Node.js versions.\nmake generate The next step is to build the actual oCIS binary. Therefore you need to navigate to the subdirectory ocis and start the build process.\ncd ocis make build After the build process finished, you can find the binary within the bin/ folder (in ocis/bin relative to the oCIS repository root folder).\nTry to run it: ./bin/ocis h\nBuild a local oCIS docker image If you are developing and want to run your local changes in a docker or docker-compose setup, you have to build an image locally.\nTherefore run following commands in the root of the oCIS repository:\ndocker build -t owncloud/ocis:dev . Then you can test as usual via\ndocker run --rm -ti owncloud/ocis:dev ","description":"Build requirements Get the sources Build the oCIS binary Build a local oCIS docker image Build requirements see Development - Getting Started\nGet the sources git clone https://github.com/owncloud/ocis.git cd ocis Build the oCIS binary You only need to run following command if you have changed protobuf definitions or the frontend part in one of the extensions. Run the command in the root directory of the repository. Otherwise you can skip this step and proceed to build the oCIS binary."},{"id":123,"href":"/services/sse/configuration/","title":"Service Configuration","parent":"SSE","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 # Autogenerated # Filename: app-provider-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9165 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9164 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; external_addr: com.owncloud.api.app-provider driver: \u0026#34;\u0026#34; drivers: wopi: app_api_key: \u0026#34;\u0026#34; app_desktop_only: false app_icon_uri: \u0026#34;\u0026#34; app_internal_url: \u0026#34;\u0026#34; app_name: \u0026#34;\u0026#34; app_url: \u0026#34;\u0026#34; app_disable_chat: false insecure: false wopi_server_iop_secret: \u0026#34;\u0026#34; wopi_server_external_url: \u0026#34;\u0026#34; wopi_folder_url_base_url: https://localhost:9200/ wopi_folder_url_path_template: /f/{{.ResourceID}} Environment Variables Name Type Default Value Description APP_PROVIDER_SERVICE_NAME string app-provider The name of the service. This needs to be changed when using more than one app provider. Each app provider configured needs to be identified by a unique service name. Possible examples are: \u0026lsquo;app-provider-collabora\u0026rsquo;, \u0026lsquo;app-provider-onlyoffice\u0026rsquo;, \u0026lsquo;app-provider-office365\u0026rsquo;. OCIS_TRACING_ENABLEDAPP_PROVIDER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAPP_PROVIDER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAPP_PROVIDER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAPP_PROVIDER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAPP_PROVIDER_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAPP_PROVIDER_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAPP_PROVIDER_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAPP_PROVIDER_LOG_FILE string The path to the log file. Activates logging to this file if set. APP_PROVIDER_DEBUG_ADDR string 127.0.0.1:9165 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. APP_PROVIDER_DEBUG_TOKEN string Token to secure the metrics endpoint APP_PROVIDER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling APP_PROVIDER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory. APP_PROVIDER_GRPC_ADDR string 127.0.0.1:9164 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAPP_PROVIDER_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. OCIS_JWT_SECRETAPP_PROVIDER_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. APP_PROVIDER_EXTERNAL_ADDR string com.owncloud.api.app-provider Address of the app provider, where the GATEWAY service can reach it. APP_PROVIDER_DRIVER string Driver, the APP PROVIDER services uses. Only \u0026lsquo;wopi\u0026rsquo; is supported as of now. APP_PROVIDER_WOPI_APP_API_KEY string API key for the wopi app. APP_PROVIDER_WOPI_APP_DESKTOP_ONLY bool false Offer this app only on desktop. APP_PROVIDER_WOPI_APP_ICON_URI string URI to an app icon to be used by clients. APP_PROVIDER_WOPI_APP_INTERNAL_URL string Internal URL to the app, like in your DMZ. APP_PROVIDER_WOPI_APP_NAME string Human readable app name. APP_PROVIDER_WOPI_APP_URL string URL for end users to access the app. APP_PROVIDER_WOPI_DISABLE_CHATOCIS_WOPI_DISABLE_CHAT bool false Disable the chat functionality of the office app. APP_PROVIDER_WOPI_INSECURE bool false Disable TLS certificate validation for requests to the WOPI server and the web office application. Do not set this in production environments. APP_PROVIDER_WOPI_WOPI_SERVER_IOP_SECRET string Shared secret of the CS3org WOPI server. APP_PROVIDER_WOPI_WOPI_SERVER_EXTERNAL_URL string External url of the CS3org WOPI server. OCIS_URLAPP_PROVIDER_WOPI_FOLDER_URL_BASE_URL string https://localhost:9200/ Base url to navigate back from the app to the containing folder in the file list. APP_PROVIDER_WOPI_FOLDER_URL_PATH_TEMPLATE string /f/{{.ResourceID}} Path template to navigate back from the app to the containing folder in the file list. Supported template variables are {{.ResourceInfo.ResourceID}}, {{.ResourceInfo.Mtime.Seconds}}, {{.ResourceInfo.Name}}, {{.ResourceInfo.Path}}, {{.ResourceInfo.Type}}, {{.ResourceInfo.Id.SpaceId}}, {{.ResourceInfo.Id.StorageId}}, {{.ResourceInfo.Id.OpaqueId}}, {{.ResourceInfo.MimeType}} ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 # Autogenerated # Filename: app-provider-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127."},{"id":124,"href":"/ocis/development/testing/","title":"Acceptance Testing","parent":"Development","content":" Running Test Suite in Docker Run Full Test Suite Local oCIS Tests (prefix api) Tests Transferred From ownCloud Core (prefix coreApi) Run Single Feature Test oCIS Image to Be Tested (Skip Local Image Build) Test Log Output Cleanup Running Test Suite in Local Environment Run oCIS Run Local oCIS Tests (prefix api) and Tests Transferred From ownCloud Core (prefix coreApi) Use Existing Tests for BDD Running Tests With And Without remote.php Running ENV Config Tests (@env-Config) Run oCIS With ociswrapper Run the Tests Writing New ENV Config Tests Running Test Suite With Email Service (@email) Setup Inbucket Run oCIS Run the Acceptance Test Running Test Suite With Tika Service (@tikaServiceNeeded) Setup Tika Service Run oCIS Run the Acceptance Test Running Test Suite With Antivirus Service (@antivirus) Setup clamAV 1. Setup Locally Linux OS user Mac OS user 2. Setup clamAV With Docker Linux OS user Mac OS user Run oCIS Run the Acceptance Test Running Test Suite With Federated Sharing (@ocm) Setup First oCIS Instance Setup Second oCIS Instance Using .vscode/launch.json Using env file Run the Acceptance Test Running Text Preview Tests Containing Unicode Characters To run tests in the test suite you have two options. You may go the easy way and just run the test suite in docker. But for some tasks you could also need to install the test suite natively, which requires a little more setup since PHP and some dependencies need to be installed.\nBoth ways to run tests with the test suites are described here.\nRunning Test Suite in Docker Let\u0026rsquo;s see what is available. Invoke the following command from within the root of the oCIS repository.\nmake -C tests/acceptance/docker help Basically we have two sources for feature tests and test suites:\noCIS feature test and test suites tests and test suites transferred from ownCloud core, they have prefix coreApi At the moment, both can be applied to oCIS since the api of oCIS is designed to be compatible with ownCloud.\nAs a storage backend, we offer oCIS native storage, also called ocis. This stores files directly on disk. Along with that we also provide S3 storage driver.\nYou can invoke two types of test suite runs:\nrun a full test suite, which consists of multiple feature tests run a single feature or single scenario in a feature Run Full Test Suite Local oCIS Tests (prefix api) The names of the full test suite make targets have the same naming as in the CI pipeline. See the available local oCIS specific test suites here. They can be run with ocis storage and S3 storage.\nFor example, command:\nmake -C tests/acceptance/docker localApiTests-apiGraph-ocis runs the same tests as the localApiTests-apiGraph-ocis CI pipeline, which runs the oCIS test suite \u0026ldquo;apiGraph\u0026rdquo; against the oCIS server with ocis storage.\nAnd command:\nmake -C tests/acceptance/docker localApiTests-apiGraph-s3ng runs the oCIS test suite apiGraph against the oCIS server with s3 storage.\nWhile running the tests, oCIS server is started with ociswrapper (i.e. WITH_WRAPPER=true) by default. In order to run the tests without ociswrapper, provide WITH_WRAPPER=false when running the tests. For example:\nWITH_WRAPPER=false \\ BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiGraphUserGroup/createUser.feature:26\u0026#39; \\ make -C tests/acceptance/docker test-ocis-feature-ocis-storage But some test suites that are tagged with @env-config require the oCIS server to be run with ociswrapper. So, running those tests require WITH_WRAPPER=true (default setting).\nTo run the tests that require an email server (tests tagged with @email), you need to provide START_EMAIL=true while running the tests.\nSTART_EMAIL=true \\ BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiNotification/emailNotification.feature\u0026#39; \\ make -C tests/acceptance/docker test-ocis-feature-ocis-storage To run the tests that require tika service (tests tagged with @tikaServiceNeeded), you need to provide START_TIKA=true while running the tests.\nSTART_TIKA=true \\ BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiSearchContent/contentSearch.feature\u0026#39; \\ make -C tests/acceptance/docker test-ocis-feature-ocis-storage To run the tests that require an antivirus service (tests tagged with @antivirus), you need to provide the following environment variables while running the tests.\nSTART_ANTIVIRUS=true \\ OCIS_ASYNC_UPLOADS=true \\ OCIS_ADD_RUN_SERVICES=antivirus \\ POSTPROCESSING_STEPS=virusscan \\ BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiAntivirus/antivirus.feature\u0026#39; \\ make -C tests/acceptance/docker test-ocis-feature-ocis-storage Tests Transferred From ownCloud Core (prefix coreApi) Command make -C tests/acceptance/docker Core-API-Tests-ocis-storage-3 runs the same tests as the Core-API-Tests-ocis-storage-3 CI pipeline, which runs the third (out of ten) test suite groups transferred from ownCloud core against the oCIS server with ocis storage.\nAnd make -C tests/acceptance/docker Core-API-Tests-s3ng-storage-3 runs the third (out of ten) test suite groups transferred from ownCloud core against the oCIS server with s3 storage.\nRun Single Feature Test The tests for a single feature (a feature file) can also be run against the different storage backends. To do that, multiple make targets with the schema test-\u0026lt;test-source\u0026gt;-feature-\u0026lt;storage-backend\u0026gt; are available. To select a single feature you have to add an additional BEHAT_FEATURE=\u0026lt;path-to-feature-file\u0026gt; parameter when invoking the make command.\nFor example;\nBEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiGraphUserGroup/createUser.feature\u0026#39; \\ make -C tests/acceptance/docker test-ocis-feature-ocis-storage BEHAT_FEATURE must be pointing to a valid feature file And to run a single scenario in a feature, you can do:\nA specific scenario from a feature can be run by adding :\u0026lt;line-number\u0026gt; at the end of the feature file path. For example, to run the scenario at line 26 of the feature file apiGraphUserGroup/createUser.feature, simply add the line number like this: apiGraphUserGroup/createUser.feature:26. Note that the line numbers mentioned in the examples might not always point to a scenario, so always check the line numbers before running the test. BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiGraphUserGroup/createUser.feature:26\u0026#39; \\ make -C tests/acceptance/docker test-ocis-feature-ocis-storage Similarly, with S3 storage;\n# run a whole feature BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiGraphUserGroup/createUser.feature\u0026#39; \\ make -C tests/acceptance/docker test-ocis-feature-s3ng-storage # run a single scenario BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiGraphUserGroup/createUser.feature:26\u0026#39; \\ make -C tests/acceptance/docker test-ocis-feature-s3ng-storage In the same way, tests transferred from ownCloud core can be run as:\n# run a whole feature BEHAT_FEATURE=\u0026#39;tests/acceptance/features/coreApiAuth/webDavAuth.feature\u0026#39; \\ make -C tests/acceptance/docker test-core-feature-ocis-storage # run a single scenario BEHAT_FEATURE=\u0026#39;tests/acceptance/features/coreApiAuth/webDavAuth.feature:15\u0026#39; \\ make -C tests/acceptance/docker test-core-feature-ocis-storage The test suites transferred from ownCloud core have coreApi prefixed oCIS Image to Be Tested (Skip Local Image Build) By default, the tests will be run against the docker image built from your current working state of the oCIS repository. For some purposes it might also be handy to use an oCIS image from Docker Hub. Therefore, you can provide the optional flag OCIS_IMAGE_TAG=... which must contain an available docker tag of the owncloud/ocis registry on Docker Hub (e.g. \u0026rsquo;latest\u0026rsquo;).\nOCIS_IMAGE_TAG=latest \\ make -C tests/acceptance/docker localApiTests-apiGraph-ocis Test Log Output While a test is running or when it is finished, you can attach to the logs generated by the tests.\nmake -C tests/acceptance/docker show-test-logs The log output is opened in less. You can navigate up and down with your cursors. By pressing \u0026ldquo;F\u0026rdquo; you can follow the latest line of the output. Cleanup During testing we start a redis and oCIS docker container. These will not be stopped automatically. You can stop them with:\nmake -C tests/acceptance/docker clean Running Test Suite in Local Environment Run oCIS Create an up-to-date oCIS binary by building oCIS\nTo start oCIS:\nIDM_ADMIN_PASSWORD=admin \\ ocis/bin/ocis init --insecure true OCIS_INSECURE=true PROXY_ENABLE_BASIC_AUTH=true \\ ocis/bin/ocis server PROXY_ENABLE_BASIC_AUTH will allow the acceptance tests to make requests against the provisioning api (and other endpoints) using basic auth.\nRun Local oCIS Tests (prefix api) and Tests Transferred From ownCloud Core (prefix coreApi) make test-acceptance-api \\ TEST_SERVER_URL=https://localhost:9200 \\ Useful environment variables:\nTEST_SERVER_URL: oCIS server url. Please, adjust the server url according to your setup.\nBEHAT_FEATURE: to run a single feature\nA specific scenario from a feature can be run by adding :\u0026lt;line-number\u0026gt; at the end of the feature file path. For example, to run the scenario at line 26 of the feature file apiGraphUserGroup/createUser.feature, simply add the line number like this: apiGraphUserGroup/createUser.feature:26. Note that the line numbers mentioned in the examples might not always point to a scenario, so always check the line numbers before running the test. Example:\nBEHAT_FEATURE=tests/acceptance/features/apiGraphUserGroup/createUser.feature\nOr\nBEHAT_FEATURE=tests/acceptance/features/apiGraphUserGroup/createUser.feature:13\nBEHAT_SUITE: to run a single suite\nExample:\nBEHAT_SUITE=apiGraph\nSTORAGE_DRIVER: to run tests with a different user storage driver. Available options are ocis (default), owncloudsql and s3ng\nExample:\nSTORAGE_DRIVER=owncloudsql\nSTOP_ON_FAILURE: to stop running tests after the first failure\nExample:\nSTOP_ON_FAILURE=true\nUse Existing Tests for BDD As a lot of scenarios are written for oC10, we can use those tests for Behaviour driven development in oCIS. Every scenario that does not work in oCIS with \u0026ldquo;ocis\u0026rdquo; storage, is listed in tests/acceptance/expected-failures-API-on-OCIS-storage.md with a link to the related issue.\nThose scenarios are run in the ordinary acceptance test pipeline in CI. The scenarios that fail are checked against the expected failures. If there are any differences then the CI pipeline fails.\nThe tests are not currently run in CI with the OWNCLOUD or EOS storage drivers, so there are no expected-failures files for those.\nIf you want to work on a specific issue\nlocally run each of the tests marked with that issue in the expected failures file.\nE.g.:\nmake test-acceptance-api \\ TEST_SERVER_URL=https://localhost:9200 \\ STORAGE_DRIVER=OCIS \\ BEHAT_FEATURE=\u0026#39;tests/acceptance/features/coreApiVersions/fileVersions.feature:141\u0026#39; the tests will fail, try to understand how and why they are failing\nfix the code\ngo back to 1. and repeat till the tests are passing.\nremove those tests from the expected failures file\nmake a PR that has the fixed code, and the relevant lines removed from the expected failures file.\nRunning Tests With And Without remote.php By default, the tests are run with remote.php enabled. If you want to run the tests without remote.php, you can disable it by setting the environment variable WITH_REMOTE_PHP=false while running the tests.\nWITH_REMOTE_PHP=false \\ TEST_SERVER_URL=\u0026#34;https://localhost:9200\u0026#34; \\ make test-acceptance-api Running ENV Config Tests (@env-Config) Test suites tagged with @env-config are used to test the environment variables that are used to configure oCIS. These tests are special tests that require the oCIS server to be run using ociswrapper.\nRun oCIS With ociswrapper # working dir: ocis repo root dir # init oCIS IDM_ADMIN_PASSWORD=admin \\ ocis/bin/ocis init --insecure true # build the wrapper cd tests/ociswrapper make build # run oCIS PROXY_ENABLE_BASIC_AUTH=true \\ ./bin/ociswrapper serve --bin=../../ocis/bin/ocis Run the Tests OCIS_WRAPPER_URL=http://localhost:5200 \\ TEST_SERVER_URL=\u0026#34;https://localhost:9200\u0026#34; \\ BEHAT_FEATURE=tests/acceptance/features/apiAsyncUpload/delayPostprocessing.feature \\ make test-acceptance-api Writing New ENV Config Tests While writing tests for a new oCIS ENV configuration, please make sure to follow these guidelines:\nTag the test suite (or test scenarios) with @env-config Use OcisConfigHelper.php for helper functions - provides functions to reconfigure the running oCIS instance. Recommended: add the new step implementations in OcisConfigContext.php Running Test Suite With Email Service (@email) Test suites that are tagged with @email require an email service. We use inbucket as the email service in our tests.\nSetup Inbucket Run the following command to setup inbucket\ndocker run -d -p9000:9000 -p2500:2500 --name inbucket inbucket/inbucket Run oCIS Documentation for environment variables is available here\n# init oCIS IDM_ADMIN_PASSWORD=admin \\ ocis/bin/ocis init --insecure true # run oCIS PROXY_ENABLE_BASIC_AUTH=true \\ OCIS_ADD_RUN_SERVICES=notifications \\ NOTIFICATIONS_SMTP_HOST=localhost \\ NOTIFICATIONS_SMTP_PORT=2500 \\ NOTIFICATIONS_SMTP_INSECURE=true \\ NOTIFICATIONS_SMTP_SENDER=\u0026#34;owncloud \u0026lt;noreply@example.com\u0026gt;\u0026#34; \\ ocis/bin/ocis server Run the Acceptance Test Run the acceptance test with the following command:\nTEST_SERVER_URL=\u0026#34;https://localhost:9200\u0026#34; \\ EMAIL_HOST=\u0026#34;localhost\u0026#34; \\ EMAIL_PORT=9000 \\ BEHAT_FEATURE=\u0026#34;tests/acceptance/features/apiNotification/emailNotification.feature\u0026#34; \\ make test-acceptance-api Running Test Suite With Tika Service (@tikaServiceNeeded) Test suites that are tagged with @tikaServiceNeeded require tika service.\nSetup Tika Service Run the following docker command to setup tika service\ndocker run -d -p 127.0.0.1:9998:9998 apache/tika Run oCIS Documentation related to the content based search and tika extractor can be found here\n# init oCIS IDM_ADMIN_PASSWORD=admin \\ ocis/bin/ocis init --insecure true # run oCIS PROXY_ENABLE_BASIC_AUTH=true \\ OCIS_INSECURE=true \\ SEARCH_EXTRACTOR_TYPE=tika \\ SEARCH_EXTRACTOR_TIKA_TIKA_URL=http://localhost:9998 \\ SEARCH_EXTRACTOR_CS3SOURCE_INSECURE=true \\ ocis/bin/ocis server Run the Acceptance Test Run the acceptance test with the following command:\nTEST_SERVER_URL=\u0026#34;https://localhost:9200\u0026#34; \\ BEHAT_FEATURE=\u0026#34;tests/acceptance/features/apiSearchContent/contentSearch.feature\u0026#34; \\ make test-acceptance-api Running Test Suite With Antivirus Service (@antivirus) Test suites that are tagged with @antivirus require antivirus service. The available antivirus and the configuration related to them can be found here. This documentation is only going to use clamAv as antivirus.\nSetup clamAV 1. Setup Locally Linux OS user Run the following command to set up calmAV and clamAV daemon\nsudo apt install clamav clamav-daemon -y Make sure that the clamAV daemon is up and running\nsudo service clamav-daemon status The commands are ubuntu specific and may differ according to your system. You can find information related to installation of clamAV in their official documentation here. Mac OS user Install ClamAV using here Start ClamAV daemon\n/your/location/to/brew/Cellar/clamav/1.1.0/sbin/clamd 2. Setup clamAV With Docker Linux OS user Run clamAV through docker\ndocker run -d -p 3310:3310 owncloudci/clamavd Mac OS user docker run -d -p 3310:3310 -v /your/local/filesystem/path/to/clamav/:/var/lib/clamav mkodockx/docker-clamav:alpine Run oCIS As antivirus service is not enabled by default we need to enable the service while running oCIS server. We also need to enable async upload and as virus scan is performed in post-processing step, we need to set it as well. Documentation for environment variables related to antivirus is available here\n# init oCIS IDM_ADMIN_PASSWORD=admin \\ ocis/bin/ocis init --insecure true # run oCIS PROXY_ENABLE_BASIC_AUTH=true \\ ANTIVIRUS_SCANNER_TYPE=\u0026#34;clamav\u0026#34; \\ ANTIVIRUS_CLAMAV_SOCKET=\u0026#34;tcp://host.docker.internal:3310\u0026#34; \\ POSTPROCESSING_STEPS=\u0026#34;virusscan\u0026#34; \\ OCIS_ASYNC_UPLOADS=true \\ OCIS_ADD_RUN_SERVICES=\u0026#34;antivirus\u0026#34; ocis/bin/ocis server The value for ANTIVIRUS_CLAMAV_SOCKET is an example which needs adaption according your OS.\nFor antivirus running localy on Linux OS, use ANTIVIRUS_CLAMAV_SOCKET= \u0026quot;/var/run/clamav/clamd.ctl\u0026quot;. For antivirus running localy on Mac OS, use ANTIVIRUS_CLAMAV_SOCKET= \u0026quot;/tmp/clamd.socket\u0026quot;. For antivirus running with docker, use ANTIVIRUS_CLAMAV_SOCKET= \u0026quot;tcp://host.docker.internal:3310\u0026quot;\nRun the Acceptance Test Run the acceptance test with the following command:\nTEST_SERVER_URL=\u0026#34;https://localhost:9200\u0026#34; \\ BEHAT_FEATURE=\u0026#34;tests/acceptance/features/apiAntivirus/antivirus.feature\u0026#34; \\ make test-acceptance-api Running Test Suite With Federated Sharing (@ocm) Test suites that are tagged with @ocm require running two different ocis instances. More detailed information and configuration related to it can be found here.\nSetup First oCIS Instance # init oCIS IDM_ADMIN_PASSWORD=admin \\ ocis/bin/ocis init --insecure true # run oCIS OCIS_URL=\u0026#34;https://localhost:9200\u0026#34; \\ PROXY_ENABLE_BASIC_AUTH=true \\ OCIS_ENABLE_OCM=true \\ OCM_OCM_PROVIDER_AUTHORIZER_PROVIDERS_FILE=\u0026#34;tests/config/local/providers.json\u0026#34; \\ OCIS_ADD_RUN_SERVICES=\u0026#34;ocm\u0026#34; \\ OCM_OCM_INVITE_MANAGER_INSECURE=true \\ OCM_OCM_SHARE_PROVIDER_INSECURE=true \\ OCM_OCM_STORAGE_PROVIDER_INSECURE=true \\ WEB_UI_CONFIG_FILE=\u0026#34;tests/config/local/ocis-web.json\u0026#34; \\ ocis/bin/ocis server The first oCIS instance should be available at: https://localhost:9200/\nSetup Second oCIS Instance You can run the second oCIS instance in two ways:\nUsing .vscode/launch.json From the Run and Debug panel of VSCode, select Fed oCIS Server and start the debugger.\nUsing env file # init oCIS source tests/config/local/.env-federation \u0026amp;\u0026amp; ocis/bin/ocis init # run oCIS ocis/bin/ocis server The second oCIS instance should be available at: https://localhost:10200/\nTo enable ocm in the web interface, you need to set the following envs: OCIS_ENABLE_OCM=\u0026quot;true\u0026quot; OCIS_ADD_RUN_SERVICES=\u0026quot;ocm\u0026quot; Run the Acceptance Test Run the acceptance test with the following command:\nTEST_SERVER_URL=\u0026#34;https://localhost:9200\u0026#34; \\ TEST_SERVER_FED_URL=\u0026#34;https://localhost:10200\u0026#34; \\ BEHAT_FEATURE=\u0026#34;tests/acceptance/features/apiOcm/ocm.feature\u0026#34; \\ make test-acceptance-api Running Text Preview Tests Containing Unicode Characters There are some tests that check the text preview of files containing Unicode characters. The oCIS server by default cannot generate the thumbnail of such files correctly but it provides an environment variable to allow the use of custom fonts that support Unicode characters. So to run such tests successfully, we have to run the oCIS server with this environment variable.\n... THUMBNAILS_TXT_FONTMAP_FILE=\u0026#34;/path/to/fontsMap.json\u0026#34; ocis/bin/ocis server The sample fontsMap.json file is located in tests/config/drone/fontsMap.json.\n{ \u0026#34;defaultFont\u0026#34;: \u0026#34;/path/to/ocis/tests/config/drone/NotoSans.ttf\u0026#34; } ","description":"Running Test Suite in Docker Run Full Test Suite Local oCIS Tests (prefix api) Tests Transferred From ownCloud Core (prefix coreApi) Run Single Feature Test oCIS Image to Be Tested (Skip Local Image Build) Test Log Output Cleanup Running Test Suite in Local Environment Run oCIS Run Local oCIS Tests (prefix api) and Tests Transferred From ownCloud Core (prefix coreApi) Use Existing Tests for BDD Running Tests With And Without remote."},{"id":125,"href":"/services/general-info/additional-information/","title":"Additional Information","parent":"General Information","content":"This section contains information on general topics\nGRPC Maximum Message Size ocis is using grpc for inter-service communication. When having a folder with a lot of files (25.000+, the size does not matter) and doing a PROPFIND on that folder, the server will run into errors. This is because the grpc message body becomes to big. With introduction of the envvar OCIS_GRPC_MAX_RECEIVED_MESSAGE_SIZE, the max size for the grpc body can be raised.\nNOTE: With a certain amount of files even raising the grpc message size will not suffice as the requests will run into network timeouts. Also generally the more files are in a folder, the longer it will take time to load.\nIt is recommended to use OCIS_GRPC_MAX_RECEIVED_MESSAGE_SIZE only temporary to copy files out of the folder (like via the web ui) and use the default value in general.\n","description":"This section contains information on general topics\nGRPC Maximum Message Size ocis is using grpc for inter-service communication. When having a folder with a lot of files (25.000+, the size does not matter) and doing a PROPFIND on that folder, the server will run into errors. This is because the grpc message body becomes to big. With introduction of the envvar OCIS_GRPC_MAX_RECEIVED_MESSAGE_SIZE, the max size for the grpc body can be raised."},{"id":126,"href":"/extensions/ocis_hello/building/","title":"Building","parent":"Hello (example extension)","content":" Frontend Backend Documentation As this project is built with Go and NodeJS, so you need to install that first. The installation of Go and NodeJS is out of the scope of this document, please follow the official documentation for Go, NodeJS and Yarn, to build this project you have to install Go \u0026gt;= v1.16. After the installation of the required tools you need to get the sources:\ngit clone https://github.com/owncloud/ocis-hello.git cd ocis-hello All required tool besides the ones mentioned above will be automatically installed. All commands to build this project are part of our Makefile and respectively our package.json.\nFrontend yarn install yarn build The above commands will install the required build dependencies and build the whole frontend bundle. This bundle will we embedded into the binary later on.\nBackend make generate make build The above commands will embed the frontend bundle into the binary. Finally you should have the binary within the bin/ folder now, give it a try with ./bin/hello -h to see all available options.\nDocumentation Just run make -C docs docs-serve from within the root level of the extensions git repository. This will make documentation available on localhost:1313 and also do a hot reload if you change something in the (non autogenerated) documentation files.\n","description":"Frontend Backend Documentation As this project is built with Go and NodeJS, so you need to install that first. The installation of Go and NodeJS is out of the scope of this document, please follow the official documentation for Go, NodeJS and Yarn, to build this project you have to install Go \u0026gt;= v1.16. After the installation of the required tools you need to get the sources:\ngit clone https://github."},{"id":127,"href":"/clients/web/building/","title":"Building from source","parent":"ownCloud Web","content":" Building ownCloud Web Updating dependencies Building the documentation Setting up Viewing the documentation Deploying the documentation Building ownCloud Web Run pnpm install to install dependencies Run pnpm build to build Web and all apps included in the packages folder Updating dependencies Run pnpm upgrade to update dependencies Building the documentation Setting up Install hugo Run make docs Viewing the documentation To view the rendered docs in the browser run:\ncd hugo hugo -D server Then open \u0026ldquo;http://localhost:1313/\u0026rdquo;\nWhen making changes to the docs, run make docs again and the server will pick up the changes and reload the page automatically\nDeploying the documentation The documentation is automatically deployed from the master branch to https://owncloud.dev/clients/web/\n","description":"Building ownCloud Web Updating dependencies Building the documentation Setting up Viewing the documentation Deploying the documentation Building ownCloud Web Run pnpm install to install dependencies Run pnpm build to build Web and all apps included in the packages folder Updating dependencies Run pnpm upgrade to update dependencies Building the documentation Setting up Install hugo Run make docs Viewing the documentation To view the rendered docs in the browser run:"},{"id":128,"href":"/apis/http/graph/","title":"LibreGraph","parent":"Http","content":"The LibreGraph API is a REST Api which is inspired by the Microsoft Graph API. It tries to stay compliant with the Microsoft Graph API and aims to be the Next Generation Api in Infinite Scale where we want to support most of the features of the platform. The API specification is available in the OpenApi 3 standard and there are generated client and server SDKs available. You can browse the API with the Swagger UI.\nCalling the LibreGraph API {HTTP method} https://ocis.url/graph/{version}/{resource}?{query-parameters} The request component consists of:\nComponent Description {HTTP method} The HTTP method which is used in the request. {version} The version of the LibreGraph API used by the client. {resource} The LibreGraph Resource which the client is referencing in the request. {query-parameters} Optional parameters for the request to customize the response. HTTP methods Method Description GET Read data from a resource. POST Create a new resource. PATCH Update an existing resource. PUT Replace an existing resource. DELETE Delete an existing resource. The methods GET and DELETE need no request body. The methods POST, PATCH and PUT require a request body, normally in JSON format to provide the needed values.\nVersion Infinite Scale currently provides the version v1.0.\nResource A resource could be an entity or a complex type and is usually defined by properties. Entities are always recognizable by an Id property. The URL contains the resource which you are interacting with e.g. /me/drives or /groups/{group-id}.\nEach resource could possibly require different permissions. Usually you need permissions on a higher level for creating or updating an existing resource than for reading.\nQuery parameters Query parameters can be OData system query options, or other strings that a method accepts to customize its response.\nYou can use optional OData system query options to include more or fewer properties than the default response, filter the response for items that match a custom query, or provide additional parameters for a method.\nFor example, adding the following filter parameter restricts the drives returned to only those with the driveType property of project.\nGET https://ocis.url/graph/v1.0/drives?$filter=driveType eq \u0026#39;project\u0026#39; For more information about OData query options please check the API specification and the provided examples.\nAuthorization For development purposes the examples in the developer documentation use Basic Auth. It is disabled by default and should only be enabled by setting PROXY_ENABLE_BASIC_AUTH in the proxy for development or test instances.\nTo authenticate with a Bearer token or OpenID Connect access token replace the -u user:password Basic Auth option of curl with a -H 'Authorization: Bearer \u0026lt;token\u0026gt;' header. A \u0026lt;token\u0026gt; can be obtained by copying it from a request in the browser, although it will time out within minutes. To automatically refresh the OpenID Connect access token an ssh-agent like solution like oidc-agent should be used. The graph endpoints that support a preconfigured token can be found in the API specification\nResources Spaces Users Groups Permissions Role ","description":"The LibreGraph API is a REST Api which is inspired by the Microsoft Graph API. It tries to stay compliant with the Microsoft Graph API and aims to be the Next Generation Api in Infinite Scale where we want to support most of the features of the platform. The API specification is available in the OpenApi 3 standard and there are generated client and server SDKs available. You can browse the API with the Swagger UI."},{"id":129,"href":"/services/general-info/port-ranges/","title":"Port Ranges","parent":"General Information","content":"oCIS services often need a port to expose their services to other services or the outside world. As users may have many different extensions running on the same machine, we should track port usage in the oCIS ecosystem. In the best case, we ensure that each extension uses a non-colliding port range, to make life easier for users.\nThis page tracks the knowingly used port ranges.\nFeel free to \u0026ldquo;reserve\u0026rdquo; a free port range when you\u0026rsquo;re developing an extension by adding your extension to the list (see the edit button in the top right corner).\nIf you\u0026rsquo;re developing a non-public extension, we recommend using ports outside of the ranges listed below.\nWe also suggest using the last port in your extensions\u0026rsquo; range as a debug/metrics port.\nAllocations Port range Service 9000-9010 reserved for Infinite Scale 9100-9104 web 9105-9109 hello 9110-9114 ocs 9115-9119 webdav 9120-9124 graph 9125-9129 policies 9130-9134 idp 9135-9139 sse 9140-9141 frontend 9142-9143 gateway 9144-9145 users 9146-9147 auth-basic 9148-9149 auth-bearer 9150-9153 sharing 9154-9156 storage-shares 9157-9159 storage-users 9160-9162 groups 9163 ocdav 9164 groups 9165 app-provider 9166-9169 auth-machine 9170-9174 notifications 9175-9179 storage-publiclink 9180-9184 FREE (formerly used by accounts) 9185-9189 thumbnails 9190-9194 settings 9195-9197 activitylog 9198-9199 auth-service 9200-9204 proxy 9205-9209 proxy 9210-9214 userlog 9215-9219 storage-system 9220-9224 search 9225-9229 audit 9230-9234 nats 9235-9239 idm 9240-9244 app-registry 9245-9249 auth-app 9250-9254 ocis server (runtime) 9255-9259 postprocessing 9260-9264 clientlog 9265-9269 clientlog 9270-9274 eventhistory 9275-9279 webfinger 9280-9284 ocm 9285-9289 FREE 9290-9294 FREE 9295-9299 FREE 9300-9304 collaboration 9305-9309 FREE 9310-9314 FREE 9315-9319 FREE 9320-9324 FREE 9325-9329 FREE 9330-9334 FREE 9335-9339 FREE 9340-9344 FREE 9345-9349 FREE 9350-9354 ocdav 9355-9359 FREE 9360-9364 FREE 9365-9369 FREE 9370-9374 FREE 9375-9379 FREE 9380-9384 FREE 9385-9389 FREE 9390-9394 FREE 9395-9399 FREE 9400-9404 FREE 9405-9409 FREE 9410-9414 FREE 9415-9419 FREE 9420-9424 FREE 9425-9429 FREE 9430-9434 FREE 9435-9439 FREE 9440-9444 FREE 9445-9449 FREE 9450-9454 FREE 9455-9459 FREE 9460-9464 FREE (formerly used by store-service) 9465-9469 FREE 9470-9474 FREE 9475-9479 FREE 9480-9484 FREE 9485-9489 FREE 9490-9494 FREE 9495-9499 FREE 9500-9504 FREE 9505-9509 FREE 9510-9514 FREE 9515-9519 FREE 9520-9524 FREE 9525-9529 FREE 9530-9534 FREE 9535-9539 FREE 9540-9544 FREE 9545-9549 FREE 9550-9554 FREE 9555-9559 FREE 9560-9564 FREE 9565-9569 FREE 9570-9574 FREE 9575-9579 FREE 9580-9584 FREE 9585-9589 FREE 9590-9594 FREE 9595-9599 FREE 9600-9604 FREE 9605-9609 FREE 9610-9614 FREE 9615-9619 FREE 9620-9624 FREE 9625-9629 FREE 9630-9634 FREE 9635-9639 FREE 9640-9644 FREE 9645-9649 FREE 9650-9654 FREE 9655-9659 FREE 9660-9664 FREE 9665-9669 FREE 9670-9674 FREE 9675-9679 FREE 9680-9684 FREE 9685-9689 FREE 9690-9694 FREE 9695-9699 FREE 9700-9704 FREE 9705-9709 FREE 9710-9714 FREE 9715-9719 FREE 9720-9724 FREE 9725-9729 FREE 9730-9734 FREE 9735-9739 FREE 9740-9744 FREE 9745-9749 FREE 9750-9754 FREE 9755-9759 FREE 9760-9764 FREE 9765-9769 FREE 9770-9774 FREE 9775-9779 FREE 9780-9784 FREE 9785-9789 FREE 9790-9794 FREE 9795-9799 FREE 9800-9804 FREE 9805-9809 FREE 9810-9814 FREE 9815-9819 FREE 9820-9824 FREE 9825-9829 FREE 9830-9834 FREE 9835-9839 FREE 9840-9844 FREE 9845-9849 FREE 9850-9854 FREE 9855-9859 FREE 9860-9864 FREE 9865-9869 FREE 9870-9874 FREE 9875-9879 FREE 9880-9884 FREE 9885-9889 FREE 9890-9894 FREE 9895-9899 FREE 9900-9904 FREE 9905-9909 FREE 9910-9914 FREE 9915-9919 FREE 9920-9924 FREE 9925-9929 FREE 9930-9934 FREE 9935-9939 FREE 9940-9944 FREE 9945-9949 FREE 9950-9954 FREE 9955-9959 FREE 9960-9964 FREE 9965-9969 FREE 9970-9974 FREE 9975-9979 FREE 9980-9984 FREE 9985-9989 FREE 9990-9994 FREE 9995-9999 FREE ","description":"oCIS services often need a port to expose their services to other services or the outside world. As users may have many different extensions running on the same machine, we should track port usage in the oCIS ecosystem. In the best case, we ensure that each extension uses a non-colliding port range, to make life easier for users.\nThis page tracks the knowingly used port ranges.\nFeel free to \u0026ldquo;reserve\u0026rdquo; a free port range when you\u0026rsquo;re developing an extension by adding your extension to the list (see the edit button in the top right corner)."},{"id":130,"href":"/services/app-provider/configuration/","title":"Service Configuration","parent":"App-Provider","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 # Autogenerated # Filename: app-provider-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9165 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9164 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; external_addr: com.owncloud.api.app-provider driver: \u0026#34;\u0026#34; drivers: wopi: app_api_key: \u0026#34;\u0026#34; app_desktop_only: false app_icon_uri: \u0026#34;\u0026#34; app_internal_url: \u0026#34;\u0026#34; app_name: \u0026#34;\u0026#34; app_url: \u0026#34;\u0026#34; app_disable_chat: false insecure: false wopi_server_iop_secret: \u0026#34;\u0026#34; wopi_server_external_url: \u0026#34;\u0026#34; wopi_folder_url_base_url: https://localhost:9200/ wopi_folder_url_path_template: /f/{{.ResourceID}} Environment Variables Name Type Default Value Description APP_PROVIDER_SERVICE_NAME string app-provider The name of the service. This needs to be changed when using more than one app provider. Each app provider configured needs to be identified by a unique service name. Possible examples are: \u0026lsquo;app-provider-collabora\u0026rsquo;, \u0026lsquo;app-provider-onlyoffice\u0026rsquo;, \u0026lsquo;app-provider-office365\u0026rsquo;. OCIS_TRACING_ENABLEDAPP_PROVIDER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAPP_PROVIDER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAPP_PROVIDER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAPP_PROVIDER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAPP_PROVIDER_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAPP_PROVIDER_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAPP_PROVIDER_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAPP_PROVIDER_LOG_FILE string The path to the log file. Activates logging to this file if set. APP_PROVIDER_DEBUG_ADDR string 127.0.0.1:9165 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. APP_PROVIDER_DEBUG_TOKEN string Token to secure the metrics endpoint APP_PROVIDER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling APP_PROVIDER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory. APP_PROVIDER_GRPC_ADDR string 127.0.0.1:9164 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAPP_PROVIDER_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. OCIS_JWT_SECRETAPP_PROVIDER_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. APP_PROVIDER_EXTERNAL_ADDR string com.owncloud.api.app-provider Address of the app provider, where the GATEWAY service can reach it. APP_PROVIDER_DRIVER string Driver, the APP PROVIDER services uses. Only \u0026lsquo;wopi\u0026rsquo; is supported as of now. APP_PROVIDER_WOPI_APP_API_KEY string API key for the wopi app. APP_PROVIDER_WOPI_APP_DESKTOP_ONLY bool false Offer this app only on desktop. APP_PROVIDER_WOPI_APP_ICON_URI string URI to an app icon to be used by clients. APP_PROVIDER_WOPI_APP_INTERNAL_URL string Internal URL to the app, like in your DMZ. APP_PROVIDER_WOPI_APP_NAME string Human readable app name. APP_PROVIDER_WOPI_APP_URL string URL for end users to access the app. APP_PROVIDER_WOPI_DISABLE_CHATOCIS_WOPI_DISABLE_CHAT bool false Disable the chat functionality of the office app. APP_PROVIDER_WOPI_INSECURE bool false Disable TLS certificate validation for requests to the WOPI server and the web office application. Do not set this in production environments. APP_PROVIDER_WOPI_WOPI_SERVER_IOP_SECRET string Shared secret of the CS3org WOPI server. APP_PROVIDER_WOPI_WOPI_SERVER_EXTERNAL_URL string External url of the CS3org WOPI server. OCIS_URLAPP_PROVIDER_WOPI_FOLDER_URL_BASE_URL string https://localhost:9200/ Base url to navigate back from the app to the containing folder in the file list. APP_PROVIDER_WOPI_FOLDER_URL_PATH_TEMPLATE string /f/{{.ResourceID}} Path template to navigate back from the app to the containing folder in the file list. Supported template variables are {{.ResourceInfo.ResourceID}}, {{.ResourceInfo.Mtime.Seconds}}, {{.ResourceInfo.Name}}, {{.ResourceInfo.Path}}, {{.ResourceInfo.Type}}, {{.ResourceInfo.Id.SpaceId}}, {{.ResourceInfo.Id.StorageId}}, {{.ResourceInfo.Id.OpaqueId}}, {{.ResourceInfo.MimeType}} ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 # Autogenerated # Filename: app-provider-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127."},{"id":131,"href":"/services/app-registry/configuration/","title":"Service Configuration","parent":"App Registry","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 # Autogenerated # Filename: app-registry-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9243 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9242 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; app_registry: mimetypes: - mime_type: application/pdf extension: pdf name: PDF description: PDF document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: false - mime_type: application/vnd.oasis.opendocument.text extension: odt name: OpenDocument description: OpenDocument text document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.oasis.opendocument.spreadsheet extension: ods name: OpenSpreadsheet description: OpenDocument spreadsheet document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.oasis.opendocument.presentation extension: odp name: OpenPresentation description: OpenDocument presentation document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.openxmlformats-officedocument.wordprocessingml.document extension: docx name: Microsoft Word description: Microsoft Word document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.openxmlformats-officedocument.wordprocessingml.form extension: docxf name: Form Document description: Form Document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet extension: xlsx name: Microsoft Excel description: Microsoft Excel document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.openxmlformats-officedocument.presentationml.presentation extension: pptx name: Microsoft PowerPoint description: Microsoft PowerPoint document icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/vnd.jupyter extension: ipynb name: Jupyter Notebook description: Jupyter Notebook icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: false - mime_type: text/markdown extension: md name: Markdown file description: Markdown file icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: true - mime_type: application/compressed-markdown extension: zmd name: Compressed markdown file description: Compressed markdown file icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: false - mime_type: application/vnd.geogebra.slides extension: ggs name: GeoGebra Slides description: GeoGebra Slides icon: \u0026#34;\u0026#34; default_app: \u0026#34;\u0026#34; allow_creation: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAPP_REGISTRY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAPP_REGISTRY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAPP_REGISTRY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAPP_REGISTRY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAPP_REGISTRY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAPP_REGISTRY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAPP_REGISTRY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAPP_REGISTRY_LOG_FILE string The path to the log file. Activates logging to this file if set. APP_REGISTRY_DEBUG_ADDR string 127.0.0.1:9243 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. APP_REGISTRY_DEBUG_TOKEN string Token to secure the metrics endpoint. APP_REGISTRY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. APP_REGISTRY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. APP_REGISTRY_GRPC_ADDR string 127.0.0.1:9242 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAPP_REGISTRY_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAPP_REGISTRY_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 # Autogenerated # Filename: app-registry-config-example."},{"id":132,"href":"/services/audit/configuration/","title":"Service Configuration","parent":"Audit","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Autogenerated # Filename: audit-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9229 token: \u0026#34;\u0026#34; pprof: false zpages: false events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; auditlog: log_to_console: true log_to_file: false filepath: \u0026#34;\u0026#34; format: json Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUDIT_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUDIT_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUDIT_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUDIT_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUDIT_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUDIT_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUDIT_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUDIT_LOG_FILE string The path to the log file. Activates logging to this file if set. AUDIT_DEBUG_ADDR string 127.0.0.1:9229 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUDIT_DEBUG_TOKEN string Token to secure the metrics endpoint. AUDIT_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUDIT_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_EVENTS_ENDPOINTAUDIT_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERAUDIT_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREAUDIT_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEAUDIT_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided AUDIT_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSAUDIT_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEAUDIT_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDAUDIT_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. AUDIT_LOG_TO_CONSOLE bool true Logs to stdout if set to \u0026rsquo;true\u0026rsquo;. Independent of the LOG_TO_FILE option. AUDIT_LOG_TO_FILE bool false Logs to file if set to \u0026rsquo;true\u0026rsquo;. Independent of the LOG_TO_CONSOLE option. AUDIT_FILEPATH string Filepath of the logfile. Mandatory if LOG_TO_FILE is set to \u0026rsquo;true\u0026rsquo;. AUDIT_FORMAT string json Log format. Supported values are \u0026rsquo;\u0026rsquo; (empty) and \u0026lsquo;json\u0026rsquo;. Using \u0026lsquo;json\u0026rsquo; is advised, \u0026rsquo;\u0026rsquo; (empty) renders the \u0026lsquo;minimal\u0026rsquo; format. See the text description for more details. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Autogenerated # Filename: audit-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9229 token: \u0026#34;\u0026#34; pprof: false zpages: false events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; auditlog: log_to_console: true log_to_file: false filepath: \u0026#34;\u0026#34; format: json Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUDIT_TRACING_ENABLED bool false Activates tracing."},{"id":133,"href":"/services/auth-basic/configuration/","title":"Service Configuration","parent":"Auth-Basic","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 # Autogenerated # Filename: auth-basic-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9147 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9146 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false auth_provider: ldap auth_providers: ldap: uri: ldaps://localhost:9235 ca_cert: /var/lib/ocis/idm/ldap.crt insecure: false bind_dn: uid=reva,ou=sysusers,o=libregraph-idm bind_password: \u0026#34;\u0026#34; user_base_dn: ou=users,o=libregraph-idm group_base_dn: ou=groups,o=libregraph-idm user_scope: sub group_scope: sub user_filter: \u0026#34;\u0026#34; group_filter: \u0026#34;\u0026#34; user_object_class: inetOrgPerson group_object_class: groupOfNames login_attributes: - uid idp: https://localhost:9200 disable_user_mechanism: attribute ldap_disabled_users_group_dn: cn=DisabledUsersGroup,ou=groups,o=libregraph-idm user_schema: id: ownclouduuid id_is_octet_string: false mail: mail display_name: displayname user_name: uid user_enabled: ownCloudUserEnabled group_schema: id: ownclouduuid id_is_octet_string: false mail: mail display_name: cn group_name: cn member: member owncloudsql: db_username: owncloud db_password: \u0026#34;\u0026#34; db_host: mysql db_port: 3306 db_name: owncloud idp: https://localhost:9200 nobody: 90 join_username: false join_owncloud_uuid: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_BASIC_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_BASIC_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_BASIC_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_BASIC_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_BASIC_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_BASIC_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_BASIC_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_BASIC_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_BASIC_DEBUG_ADDR string 127.0.0.1:9147 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_BASIC_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_BASIC_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_BASIC_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory. AUTH_BASIC_GRPC_ADDR string 127.0.0.1:9146 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_BASIC_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_BASIC_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_BASIC_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups. AUTH_BASIC_AUTH_MANAGER string ldap The authentication manager to check if credentials are valid. Supported value is \u0026rsquo;ldap\u0026rsquo;. OCIS_LDAP_URIAUTH_BASIC_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo; OCIS_LDAP_CACERTAUTH_BASIC_LDAP_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. OCIS_LDAP_INSECUREAUTH_BASIC_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. OCIS_LDAP_BIND_DNAUTH_BASIC_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDAUTH_BASIC_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. OCIS_LDAP_USER_BASE_DNAUTH_BASIC_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_GROUP_BASE_DNAUTH_BASIC_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups. OCIS_LDAP_USER_SCOPEAUTH_BASIC_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_GROUP_SCOPEAUTH_BASIC_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_USER_FILTERAUTH_BASIC_LDAP_USER_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_GROUP_FILTERAUTH_BASIC_LDAP_GROUP_FILTER string LDAP filter to add to the default filters for group searches. OCIS_LDAP_USER_OBJECTCLASSAUTH_BASIC_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;). OCIS_LDAP_GROUP_OBJECTCLASSAUTH_BASIC_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;). LDAP_LOGIN_ATTRIBUTESAUTH_BASIC_LDAP_LOGIN_ATTRIBUTES []string [uid] A list of user object attributes that can be used for login. See the Environment Variable Types description for more details. OCIS_URLOCIS_OIDC_ISSUERAUTH_BASIC_IDP_URL string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. OCIS_LDAP_DISABLE_USER_MECHANISMAUTH_BASIC_DISABLE_USER_MECHANISM string attribute An option to control the behavior for disabling users. Valid options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed. OCIS_LDAP_DISABLED_USERS_GROUP_DNAUTH_BASIC_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_IDAUTH_BASIC_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique ID for users. This should be a stable globally unique ID like a UUID. OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGAUTH_BASIC_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user IDs. OCIS_LDAP_USER_SCHEMA_MAILAUTH_BASIC_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users. OCIS_LDAP_USER_SCHEMA_DISPLAYNAMEAUTH_BASIC_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users. OCIS_LDAP_USER_SCHEMA_USERNAMEAUTH_BASIC_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users. OCIS_LDAP_USER_ENABLED_ATTRIBUTEAUTH_BASIC_LDAP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_GROUP_SCHEMA_IDAUTH_BASIC_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for groups. This should be a stable globally unique id (e.g. a UUID). OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGAUTH_BASIC_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group IDs. OCIS_LDAP_GROUP_SCHEMA_MAILAUTH_BASIC_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty). OCIS_LDAP_GROUP_SCHEMA_DISPLAYNAMEAUTH_BASIC_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute). OCIS_LDAP_GROUP_SCHEMA_GROUPNAMEAUTH_BASIC_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups. OCIS_LDAP_GROUP_SCHEMA_MEMBERAUTH_BASIC_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members. AUTH_BASIC_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database. AUTH_BASIC_OWNCLOUDSQL_DB_PASSWORD string Password for the database user. AUTH_BASIC_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server. AUTH_BASIC_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection. AUTH_BASIC_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database. AUTH_BASIC_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. AUTH_BASIC_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided. AUTH_BASIC_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames AUTH_BASIC_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user ID\u0026rsquo;s. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 # Autogenerated # Filename: auth-basic-config-example."},{"id":134,"href":"/services/auth-bearer/configuration/","title":"Service Configuration","parent":"Auth-Bearer","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # Autogenerated # Filename: auth-bearer-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9149 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9148 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false oidc: issuer: https://localhost:9200 insecure: false id_claim: preferred_username uid_claim: \u0026#34;\u0026#34; gid_claim: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_BEARER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_BEARER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_BEARER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_BEARER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_BEARER_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_BEARER_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_BEARER_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_BEARER_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_BEARER_DEBUG_ADDR string 127.0.0.1:9149 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_BEARER_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_BEARER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_BEARER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. AUTH_BEARER_GRPC_ADDR string 127.0.0.1:9148 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_BEARER_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_BEARER_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_BEARER_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups. OCIS_URLOCIS_OIDC_ISSUERAUTH_BEARER_OIDC_ISSUER string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP. OCIS_INSECUREAUTH_BEARER_OIDC_INSECURE bool false Allow insecure connections to the OIDC issuer. AUTH_BEARER_OIDC_ID_CLAIM string preferred_username Name of the claim, which holds the user identifier. AUTH_BEARER_OIDC_UID_CLAIM string Name of the claim, which holds the UID. AUTH_BEARER_OIDC_GID_CLAIM string Name of the claim, which holds the GID. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # Autogenerated # Filename: auth-bearer-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9149 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127."},{"id":135,"href":"/services/auth-machine/configuration/","title":"Service Configuration","parent":"Auth-Machine","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Autogenerated # Filename: auth-machine-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9167 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9166 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false machine_auth_api_key: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_MACHINE_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_MACHINE_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_MACHINE_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_MACHINE_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_MACHINE_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_MACHINE_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_MACHINE_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_MACHINE_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_MACHINE_DEBUG_ADDR string 127.0.0.1:9167 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_MACHINE_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_MACHINE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_MACHINE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. AUTH_MACHINE_GRPC_ADDR string 127.0.0.1:9166 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_MACHINE_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_MACHINE_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_MACHINE_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups. OCIS_MACHINE_AUTH_API_KEYAUTH_MACHINE_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Autogenerated # Filename: auth-machine-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9167 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9166 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com."},{"id":136,"href":"/services/eventhistory/configuration/","title":"Service Configuration","parent":"Eventhistory","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # Autogenerated # Filename: eventhistory-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9270 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9274 tls: null grpc_client_tls: null events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; store: store: nats-js-kv nodes: - 127.0.0.1:9233 database: eventhistory table: \u0026#34;\u0026#34; ttl: 336h0m0s username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDEVENTHISTORY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEEVENTHISTORY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTEVENTHISTORY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOREVENTHISTORY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELEVENTHISTORY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYEVENTHISTORY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOREVENTHISTORY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEEVENTHISTORY_LOG_FILE string The path to the log file. Activates logging to this file if set. EVENTHISTORY_DEBUG_ADDR string 127.0.0.1:9270 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. EVENTHISTORY_DEBUG_TOKEN string Token to secure the metrics endpoint. EVENTHISTORY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. EVENTHISTORY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. EVENTHISTORY_GRPC_ADDR string 127.0.0.1:9274 The bind address of the GRPC service. OCIS_EVENTS_ENDPOINTEVENTHISTORY_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTEREVENTHISTORY_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREEVENTHISTORY_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEEVENTHISTORY_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. Will be seen as empty if NOTIFICATIONS_EVENTS_TLS_INSECURE is provided. OCIS_EVENTS_ENABLE_TLSEVENTHISTORY_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEEVENTHISTORY_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDEVENTHISTORY_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_PERSISTENT_STOREEVENTHISTORY_STORE string nats-js-kv The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESEVENTHISTORY_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. EVENTHISTORY_STORE_DATABASE string eventhistory The database name the configured store should use. EVENTHISTORY_STORE_TABLE string The database table the store should use. OCIS_PERSISTENT_STORE_TTLEVENTHISTORY_STORE_TTL Duration 336h0m0s Time to live for events in the store. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks). See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEEVENTHISTORY_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDEVENTHISTORY_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # Autogenerated # Filename: eventhistory-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9270 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127."},{"id":137,"href":"/services/frontend/configuration/","title":"Service Configuration","parent":"Frontend","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 # Autogenerated # Filename: frontend-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9141 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9140 protocol: tcp prefix: \u0026#34;\u0026#34; cors: allow_origins: - https://localhost:9200 allow_methods: - OPTIONS - HEAD - GET - PUT - POST - PATCH - DELETE - MKCOL - PROPFIND - PROPPATCH - MOVE - COPY - REPORT - SEARCH allow_headers: - Origin - Accept - Content-Type - Depth - Authorization - Ocs-Apirequest - If-None-Match - If-Match - Destination - Overwrite - X-Request-Id - X-Requested-With - Tus-Resumable - Tus-Checksum-Algorithm - Upload-Concat - Upload-Length - Upload-Metadata - Upload-Defer-Length - Upload-Expires - Upload-Checksum - Upload-Offset - X-HTTP-Method-Override - Cache-Control allow_credentials: false transfer_secret: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; machine_auth_api_key: \u0026#34;\u0026#34; skip_user_groups_in_token: false enable_favorites: false max_quota: 0 upload_max_chunk_size: 10000000 upload_http_method_override: \u0026#34;\u0026#34; default_upload_protocol: tus enable_federated_sharing_incoming: false enable_federated_sharing_outgoing: false search_min_length: 3 edition: Community disable_sse: false default_link_permissions: 1 public_url: https://localhost:9200 max_concurrency: 1 app_handler: insecure: false secure_view_app_addr: com.owncloud.api.collaboration archiver: max_num_files: 10000 max_size: 1073741824 insecure: false data_gateway: prefix: data ocs: prefix: ocs share_prefix: /Shares home_namespace: /users/{{.Id.OpaqueId}} additional_info_attribute: \u0026#39;{{.Mail}}\u0026#39; stat_cache_type: memory stat_cache_nodes: - 127.0.0.1:9233 stat_cache_database: cache-stat stat_cache_table: \u0026#34;\u0026#34; stat_cache_ttl: 5m0s stat_cache_disable_persistence: false stat_cache_auth_username: \u0026#34;\u0026#34; stat_cache_auth_password: \u0026#34;\u0026#34; enable_denials: false list_ocm_shares: true include_ocm_sharees: false public_sharing_share_must_have_password: true public_sharing_writeableshare_must_have_password: false show_email_in_results: false checksums: supported_types: - sha1 - md5 - adler32 preferred_upload_type: sha1 read_only_user_attributes: [] ldap_server_write_enabled: true full_text_search: false middleware: auth: credentials_by_user_agent: {} events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; grpc_client_tls: null auto_accept_shares: true service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; password_policy: min_characters: 8 min_lowercase_characters: 1 min_uppercase_characters: 1 min_digits: 1 min_special_characters: 1 banned_passwords_list: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDFRONTEND_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEFRONTEND_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTFRONTEND_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORFRONTEND_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELFRONTEND_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYFRONTEND_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORFRONTEND_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEFRONTEND_LOG_FILE string The path to the log file. Activates logging to this file if set. FRONTEND_DEBUG_ADDR string 127.0.0.1:9141 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. FRONTEND_DEBUG_TOKEN string Token to secure the metrics endpoint. FRONTEND_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. FRONTEND_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. FRONTEND_HTTP_ADDR string 127.0.0.1:9140 The bind address of the HTTP service. FRONTEND_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. FRONTEND_HTTP_PREFIX string The Path prefix where the frontend can be accessed (defaults to /). OCIS_CORS_ALLOW_ORIGINSFRONTEND_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSFRONTEND_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT POST PATCH DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSFRONTEND_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSFRONTEND_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_TRANSFER_SECRET string Transfer secret for signing file up- and download requests. OCIS_JWT_SECRETFRONTEND_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_MACHINE_AUTH_API_KEYFRONTEND_MACHINE_AUTH_API_KEY string The machine auth API key used to validate internal requests necessary to access resources from other services. FRONTEND_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. FRONTEND_ENABLE_FAVORITES bool false Enables the support for favorites in the clients. OCIS_SPACES_MAX_QUOTAFRONTEND_MAX_QUOTA uint64 0 Set the global max quota value in bytes. A value of 0 equals unlimited. The value is provided via capabilities. FRONTEND_UPLOAD_MAX_CHUNK_SIZE int 10000000 Sets the max chunk sizes in bytes for uploads via the clients. FRONTEND_UPLOAD_HTTP_METHOD_OVERRIDE string Advise TUS to replace PATCH requests by POST requests. FRONTEND_DEFAULT_UPLOAD_PROTOCOL string tus The default upload protocol to use in clients. Currently only \u0026rsquo;tus\u0026rsquo; is available. See the developer API documentation for more details about TUS. OCIS_ENABLE_OCMFRONTEND_ENABLE_FEDERATED_SHARING_INCOMING bool false Changing this value is NOT supported. Enables support for incoming federated sharing for clients. The backend behaviour is not changed. OCIS_ENABLE_OCMFRONTEND_ENABLE_FEDERATED_SHARING_OUTGOING bool false Changing this value is NOT supported. Enables support for outgoing federated sharing for clients. The backend behaviour is not changed. FRONTEND_SEARCH_MIN_LENGTH int 3 Minimum number of characters to enter before a client should start a search for Share receivers. This setting can be used to customize the user experience if e.g too many results are displayed. OCIS_EDITIONFRONTEND_EDITION string Community Edition of oCIS. Used for branding purposes. OCIS_DISABLE_SSEFRONTEND_DISABLE_SSE bool false When set to true, clients are informed that the Server-Sent Events endpoint is not accessible. FRONTEND_DEFAULT_LINK_PERMISSIONS int 1 Defines the default permissions a link is being created with. Possible values are 0 (= internal link, for instance members only) and 1 (= public link with viewer permissions). Defaults to 1. OCIS_URLFRONTEND_PUBLIC_URL string https://localhost:9200 The public facing URL of the oCIS frontend. OCIS_MAX_CONCURRENCYFRONTEND_MAX_CONCURRENCY int 1 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. OCIS_INSECUREFRONTEND_APP_HANDLER_INSECURE bool false Allow insecure connections to the frontend. FRONTEND_APP_HANDLER_SECURE_VIEW_APP_ADDR string com.owncloud.api.collaboration Service name or address of the app provider to use for secure view. Should match the service name or address of the registered CS3 app provider. FRONTEND_ARCHIVER_MAX_NUM_FILES int64 10000 Max number of files that can be packed into an archive. FRONTEND_ARCHIVER_MAX_SIZE int64 1073741824 Max size in bytes of the zip archive the archiver can create. OCIS_INSECUREFRONTEND_ARCHIVER_INSECURE bool false Allow insecure connections to the archiver. FRONTEND_DATA_GATEWAY_PREFIX string data Path prefix for the data gateway. FRONTEND_OCS_PREFIX string ocs URL path prefix for the OCS service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;. FRONTEND_OCS_SHARE_PREFIX string /Shares Path prefix for shares as part of an ocis resource. Note that the path must start with \u0026lsquo;/\u0026rsquo;. FRONTEND_OCS_PERSONAL_NAMESPACE string /users/{{.Id.OpaqueId}} Home namespace identifier. FRONTEND_OCS_ADDITIONAL_INFO_ATTRIBUTE string {{.Mail}} Additional information attribute for the user like {{.Mail}}. OCIS_CACHE_STOREFRONTEND_OCS_STAT_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESFRONTEND_OCS_STAT_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-stat The database name the configured store should use. FRONTEND_OCS_STAT_CACHE_TABLE string The database table the store should use. OCIS_CACHE_TTLFRONTEND_OCS_STAT_CACHE_TTL Duration 5m0s Default time to live for user info in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEFRONTEND_OCS_STAT_CACHE_DISABLE_PERSISTENCE bool false Disable persistence of the cache. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. Defaults to false. OCIS_CACHE_AUTH_USERNAMEFRONTEND_OCS_STAT_CACHE_AUTH_USERNAME string The username to use for authentication. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. OCIS_CACHE_AUTH_PASSWORDFRONTEND_OCS_STAT_CACHE_AUTH_PASSWORD string The password to use for authentication. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. FRONTEND_OCS_ENABLE_DENIALS bool false EXPERIMENTAL: enable the feature to deny access on folders. OCIS_ENABLE_OCMFRONTEND_OCS_LIST_OCM_SHARES bool true Include OCM shares when listing shares. See the OCM service documentation for more details. OCIS_ENABLE_OCMFRONTEND_OCS_INCLUDE_OCM_SHAREES bool false Include OCM sharees when listing sharees. OCIS_SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORDFRONTEND_OCS_PUBLIC_SHARE_MUST_HAVE_PASSWORD bool true Set this to true if you want to enforce passwords on all public shares. OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORDFRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD bool false Set this to true if you want to enforce passwords for writable shares. Only effective if the setting for \u0026lsquo;passwords on all public shares\u0026rsquo; is set to false. OCIS_SHOW_USER_EMAIL_IN_RESULTS bool false Include user email addresses in responses. If absent or set to false emails will be omitted from results. Please note that admin users can always see all email addresses. FRONTEND_CHECKSUMS_SUPPORTED_TYPES []string [sha1 md5 adler32] A list of checksum types that indicate to clients which hashes the server can use to verify upload integrity. Supported types are \u0026lsquo;sha1\u0026rsquo;, \u0026lsquo;md5\u0026rsquo; and \u0026lsquo;adler32\u0026rsquo;. See the Environment Variable Types description for more details. FRONTEND_CHECKSUMS_PREFERRED_UPLOAD_TYPE string sha1 The supported checksum type for uploads that indicates to clients supporting multiple hash algorithms which one is preferred by the server. Must be one out of the defined list of SUPPORTED_TYPES. FRONTEND_READONLY_USER_ATTRIBUTES []string [] A list of user attributes to indicate as read-only. Supported values: \u0026lsquo;user.onPremisesSamAccountName\u0026rsquo; (username), \u0026lsquo;user.displayName\u0026rsquo;, \u0026lsquo;user.mail\u0026rsquo;, \u0026lsquo;user.passwordProfile\u0026rsquo; (password), \u0026lsquo;user.appRoleAssignments\u0026rsquo; (role), \u0026lsquo;user.memberOf\u0026rsquo; (groups), \u0026lsquo;user.accountEnabled\u0026rsquo; (login allowed), \u0026lsquo;drive.quota\u0026rsquo; (quota). See the Environment Variable Types description for more details. OCIS_LDAP_SERVER_WRITE_ENABLEDFRONTEND_LDAP_SERVER_WRITE_ENABLED bool true Allow creating, modifying and deleting LDAP users via the GRAPH API. This can only be set to \u0026rsquo;true\u0026rsquo; when keeping default settings for the LDAP user and group attribute types (the \u0026lsquo;OCIS_LDAP_USER_SCHEMA_* and \u0026lsquo;OCIS_LDAP_GROUP_SCHEMA_* variables). FRONTEND_FULL_TEXT_SEARCH_ENABLED bool false Set to true to signal the web client that full-text search is enabled. OCIS_EVENTS_ENDPOINTFRONTEND_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERFRONTEND_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREFRONTEND_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. FRONTEND_EVENTS_TLS_ROOT_CA_CERTIFICATEOCS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSFRONTEND_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEFRONTEND_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDFRONTEND_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. FRONTEND_AUTO_ACCEPT_SHARES bool true Defines if shares should be auto accepted by default. Users can change this setting individually in their profile. OCIS_SERVICE_ACCOUNT_IDFRONTEND_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETFRONTEND_SERVICE_ACCOUNT_SECRET string The service account secret. OCIS_PASSWORD_POLICY_DISABLEDFRONTEND_PASSWORD_POLICY_DISABLED bool false Disable the password policy. Defaults to false if not set. OCIS_PASSWORD_POLICY_MIN_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_CHARACTERS int 8 Define the minimum password length. Defaults to 8 if not set. OCIS_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS int 1 Define the minimum number of uppercase letters. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS int 1 Define the minimum number of lowercase letters. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_DIGITSFRONTEND_PASSWORD_POLICY_MIN_DIGITS int 1 Define the minimum number of digits. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS int 1 Define the minimum number of characters from the special characters list to be present. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_BANNED_PASSWORDS_LISTFRONTEND_PASSWORD_POLICY_BANNED_PASSWORDS_LIST string Path to the \u0026lsquo;banned passwords list\u0026rsquo; file. This only impacts public link password validation. See the documentation for more details. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 # Autogenerated # Filename: frontend-config-example."},{"id":138,"href":"/services/gateway/configuration/","title":"Service Configuration","parent":"Gateway","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: gateway-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9143 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9142 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false commit_share_to_storage_grant: true share_folder_name: Shares disable_home_creation_on_login: true transfer_secret: \u0026#34;\u0026#34; transfer_expires: 86400 cache: provider_cache_store: noop provider_cache_nodes: - 127.0.0.1:9233 provider_cache_database: cache-providers provider_cache_ttl: 5m0s provider_cache_disable_persistence: false provider_cache_auth_username: \u0026#34;\u0026#34; provider_cache_auth_password: \u0026#34;\u0026#34; create_home_cache_store: memory create_home_cache_nodes: - 127.0.0.1:9233 create_home_cache_database: cache-createhome create_home_cache_ttl: 5m0s create_home_cache_disable_persistence: false create_home_cache_auth_username: \u0026#34;\u0026#34; create_home_cache_auth_password: \u0026#34;\u0026#34; frontend_public_url: https://localhost:9200 users_endpoint: com.owncloud.api.users groups_endpoint: com.owncloud.api.groups permissions_endpoint: com.owncloud.api.settings sharing_endpoint: com.owncloud.api.sharing auth_app_endpoint: com.owncloud.api.auth-app auth_basic_endpoint: com.owncloud.api.auth-basic auth_bearer_endpoint: \u0026#34;\u0026#34; auth_machine_endpoint: com.owncloud.api.auth-machine auth_service_endpoint: com.owncloud.api.auth-service storage_public_link_endpoint: com.owncloud.api.storage-publiclink storage_users_endpoint: com.owncloud.api.storage-users storage_shares_endpoint: com.owncloud.api.storage-shares app_registry_endpoint: com.owncloud.api.app-registry ocm_endpoint: com.owncloud.api.ocm storage_registry: driver: spaces rules: [] json: \u0026#34;\u0026#34; storage_users_mount_id: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGATEWAY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGATEWAY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGATEWAY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGATEWAY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGATEWAY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYGATEWAY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORGATEWAY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEGATEWAY_LOG_FILE string The path to the log file. Activates logging to this file if set. GATEWAY_DEBUG_ADDR string 127.0.0.1:9143 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. GATEWAY_DEBUG_TOKEN string Token to secure the metrics endpoint. GATEWAY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. GATEWAY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_GATEWAY_GRPC_ADDRGATEWAY_GRPC_ADDR string 127.0.0.1:9142 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLGATEWAY_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETGATEWAY_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. GATEWAY_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. GATEWAY_COMMIT_SHARE_TO_STORAGE_GRANT bool true Commit shares to storage grants. This grants access to shared resources for the share receiver directly on the storage. GATEWAY_SHARE_FOLDER_NAME string Shares Name of the share folder in users\u0026rsquo; home space. GATEWAY_DISABLE_HOME_CREATION_ON_LOGIN bool true Disable creation of the home space on login. OCIS_TRANSFER_SECRET string The storage transfer secret. GATEWAY_TRANSFER_EXPIRES int 86400 Expiry for the gateway tokens. OCIS_CACHE_STOREGATEWAY_PROVIDER_CACHE_STORE string noop The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESGATEWAY_PROVIDER_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-providers The database name the configured store should use. OCIS_CACHE_TTLGATEWAY_PROVIDER_CACHE_TTL Duration 5m0s Default time to live for user info in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEGATEWAY_PROVIDER_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the provider cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEGATEWAY_PROVIDER_CACHE_AUTH_USERNAME string The username to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDGATEWAY_PROVIDER_CACHE_AUTH_PASSWORD string The password to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_STOREGATEWAY_CREATE_HOME_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESGATEWAY_CREATE_HOME_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-createhome The database name the configured store should use. OCIS_CACHE_TTLGATEWAY_CREATE_HOME_CACHE_TTL Duration 5m0s Default time to live for user info in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEGATEWAY_CREATE_HOME_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the create home cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEGATEWAY_CREATE_HOME_CACHE_AUTH_USERNAME string The username to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDGATEWAY_CREATE_HOME_CACHE_AUTH_PASSWORD string The password to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_URLGATEWAY_FRONTEND_PUBLIC_URL string https://localhost:9200 The public facing URL of the oCIS frontend. GATEWAY_USERS_ENDPOINT string com.owncloud.api.users The endpoint of the users service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_GROUPS_ENDPOINT string com.owncloud.api.groups The endpoint of the groups service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_PERMISSIONS_ENDPOINT string com.owncloud.api.settings The endpoint of the permissions service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_SHARING_ENDPOINT string com.owncloud.api.sharing The endpoint of the shares service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_APP_ENDPOINT string com.owncloud.api.auth-app The endpoint of the auth-app service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_BASIC_ENDPOINT string com.owncloud.api.auth-basic The endpoint of the auth-basic service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_BEARER_ENDPOINT string The endpoint of the auth-bearer service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_MACHINE_ENDPOINT string com.owncloud.api.auth-machine The endpoint of the auth-machine service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_SERVICE_ENDPOINT string com.owncloud.api.auth-service The endpoint of the auth-service service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_PUBLIC_LINK_ENDPOINT string com.owncloud.api.storage-publiclink The endpoint of the storage-publiclink service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_USERS_ENDPOINT string com.owncloud.api.storage-users The endpoint of the storage-users service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_SHARES_ENDPOINT string com.owncloud.api.storage-shares The endpoint of the storage-shares service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_APP_REGISTRY_ENDPOINT string com.owncloud.api.app-registry The endpoint of the app-registry service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_OCM_ENDPOINT string com.owncloud.api.ocm The endpoint of the ocm service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_REGISTRY_DRIVER string spaces The driver name of the storage registry to use. GATEWAY_STORAGE_REGISTRY_RULES []string [] The rules for the storage registry. See the Environment Variable Types description for more details. GATEWAY_STORAGE_REGISTRY_CONFIG_JSON string Additional configuration for the storage registry in json format. GATEWAY_STORAGE_USERS_MOUNT_ID string Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: gateway-config-example."},{"id":139,"href":"/services/graph/configuration/","title":"Service Configuration","parent":"Graph","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 # Autogenerated # Filename: graph-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; cache: store: memory nodes: - 127.0.0.1:9233 database: cache-roles table: \u0026#34;\u0026#34; ttl: 336h0m0s disable_persistence: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9124 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9120 root: /graph tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; apitoken: \u0026#34;\u0026#34; cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - PUT - PATCH - DELETE - OPTIONS allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Purge - Restore allow_credentials: true api: group_members_patch_limit: 20 graph_username_match: default graph_assign_default_user_role: true graph_identity_search_min_length: 3 show_email_in_results: false reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; grpc_client_tls: null application: id: \u0026#34;\u0026#34; displayname: ownCloud Infinite Scale spaces: webdav_base: https://localhost:9200 webdav_path: /dav/spaces/ default_quota: \u0026#34;1000000000\u0026#34; extended_space_properties_cache_ttl: 60000000000 users_cache_ttl: 60000000000 groups_cache_ttl: 60000000000 storage_users_address: com.owncloud.api.storage-users default_language: \u0026#34;\u0026#34; translation_path: \u0026#34;\u0026#34; identity: backend: ldap ldap: uri: ldaps://localhost:9235 cacert: /var/lib/ocis/idm/ldap.crt insecure: false bind_dn: uid=libregraph,ou=sysusers,o=libregraph-idm bind_password: \u0026#34;\u0026#34; use_server_uuid: false use_password_modify_exop: true write_enabled: true refint_enabled: false user_base_dn: ou=users,o=libregraph-idm user_search_scope: sub user_filter: \u0026#34;\u0026#34; user_objectclass: inetOrgPerson user_mail_attribute: mail user_displayname_attribute: displayName user_name_attribute: uid user_id_attribute: owncloudUUID user_id_is_octet_string: false user_type_attribute: ownCloudUserType user_enabled_attribute: ownCloudUserEnabled disable_user_mechanism: attribute ldap_disabled_users_group_dn: cn=DisabledUsersGroup,ou=groups,o=libregraph-idm group_base_dn: ou=groups,o=libregraph-idm group_create_base_dn: ou=groups,o=libregraph-idm group_search_scope: sub group_filter: \u0026#34;\u0026#34; group_objectclass: groupOfNames group_name_attribute: cn group_member_attribute: member group_id_attribute: owncloudUUID group_id_is_octet_string: false education_resources_enabled: false educationconfig: school_base_dn: \u0026#34;\u0026#34; school_search_scope: \u0026#34;\u0026#34; school_filter: \u0026#34;\u0026#34; school_objectclass: \u0026#34;\u0026#34; school_name_attribute: \u0026#34;\u0026#34; school_number_attribute: \u0026#34;\u0026#34; school_id_attribute: \u0026#34;\u0026#34; school_termination_min_grace_days: 0 include_ocm_sharees: false events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; unified_roles: available_roles: - b1e2218d-eef8-4d4c-b82d-0f1a1b48f3b5 - a8d5fe5e-96e3-418d-825b-534dbdf22b99 - fb6c3e19-e378-47e5-b277-9732f9de6e21 - 58c63c02-1d89-4572-916a-870abc5a1b7d - 2d00ce52-1fc2-4dbc-8b95-a73b73395f5a - 1c996275-f1c9-4e71-abdf-a42f6495e960 - 312c0871-5ef7-4b3a-85b6-0e4074c64049 max_concurrency: 20 keycloak: base_path: \u0026#34;\u0026#34; client_id: \u0026#34;\u0026#34; client_secret: \u0026#34;\u0026#34; client_realm: \u0026#34;\u0026#34; user_realm: \u0026#34;\u0026#34; insecure_skip_verify: false service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGRAPH_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGRAPH_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGRAPH_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGRAPH_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGRAPH_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYGRAPH_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORGRAPH_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEGRAPH_LOG_FILE string The path to the log file. Activates logging to this file if set. OCIS_CACHE_STOREGRAPH_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESGRAPH_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. GRAPH_CACHE_STORE_DATABASE string cache-roles The database name the configured store should use. GRAPH_CACHE_STORE_TABLE string The database table the store should use. OCIS_CACHE_TTLGRAPH_CACHE_TTL Duration 336h0m0s Time to live for cache records in the graph. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks). See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEGRAPH_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEGRAPH_CACHE_AUTH_USERNAME string The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDGRAPH_CACHE_AUTH_PASSWORD string The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. GRAPH_DEBUG_ADDR string 127.0.0.1:9124 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. GRAPH_DEBUG_TOKEN string Token to secure the metrics endpoint. GRAPH_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. GRAPH_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. GRAPH_HTTP_ADDR string 127.0.0.1:9120 The bind address of the HTTP service. GRAPH_HTTP_ROOT string /graph Subdirectory that serves as the root for this HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. GRAPH_HTTP_API_TOKEN string An optional API bearer token OCIS_CORS_ALLOW_ORIGINSGRAPH_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSGRAPH_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSGRAPH_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Purge Restore] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSGRAPH_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. GRAPH_GROUP_MEMBERS_PATCH_LIMIT int 20 The amount of group members allowed to be added with a single patch request. GRAPH_USERNAME_MATCH string default Apply restrictions to usernames. Supported values are \u0026lsquo;default\u0026rsquo; and \u0026rsquo;none\u0026rsquo;. When set to \u0026lsquo;default\u0026rsquo;, user names must not start with a number and are restricted to ASCII characters. When set to \u0026rsquo;none\u0026rsquo;, no restrictions are applied. The default value is \u0026lsquo;default\u0026rsquo;. GRAPH_ASSIGN_DEFAULT_USER_ROLE bool true Whether to assign newly created users the default role \u0026lsquo;User\u0026rsquo;. Set this to \u0026lsquo;false\u0026rsquo; if you want to assign roles manually, or if the role assignment should happen at first login. Set this to \u0026rsquo;true\u0026rsquo; (the default) to assign the role \u0026lsquo;User\u0026rsquo; when creating a new user. GRAPH_IDENTITY_SEARCH_MIN_LENGTH int 3 The minimum length the search term needs to have for unprivileged users when searching for users or groups. OCIS_SHOW_USER_EMAIL_IN_RESULTS bool false Include user email addresses in responses. If absent or set to false emails will be omitted from results. Please note that admin users can always see all email addresses. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_JWT_SECRETGRAPH_JWT_SECRET string The secret to mint and validate jwt tokens. GRAPH_APPLICATION_ID string The ocis application ID shown in the graph. All app roles are tied to this ID. GRAPH_APPLICATION_DISPLAYNAME string ownCloud Infinite Scale The ocis application name. OCIS_URLGRAPH_SPACES_WEBDAV_BASE string https://localhost:9200 The public facing URL of WebDAV. GRAPH_SPACES_WEBDAV_PATH string /dav/spaces/ The WebDAV sub-path for spaces. GRAPH_SPACES_DEFAULT_QUOTA string 1000000000 The default quota in bytes. GRAPH_SPACES_EXTENDED_SPACE_PROPERTIES_CACHE_TTL int 60000000000 Max TTL in seconds for the spaces property cache. GRAPH_SPACES_USERS_CACHE_TTL int 60000000000 Max TTL in seconds for the spaces users cache. GRAPH_SPACES_GROUPS_CACHE_TTL int 60000000000 Max TTL in seconds for the spaces groups cache. GRAPH_SPACES_STORAGE_USERS_ADDRESS string com.owncloud.api.storage-users The address of the storage-users service. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_TRANSLATION_PATHGRAPH_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. GRAPH_IDENTITY_BACKEND string ldap The user identity backend to use. Supported backend types are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;cs3\u0026rsquo;. OCIS_LDAP_URIGRAPH_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo; OCIS_LDAP_CACERTGRAPH_LDAP_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. OCIS_LDAP_INSECUREGRAPH_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. OCIS_LDAP_BIND_DNGRAPH_LDAP_BIND_DN string uid=libregraph,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDGRAPH_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. GRAPH_LDAP_SERVER_UUID bool false If set to true, rely on the LDAP Server to generate a unique ID for users and groups, like when using \u0026rsquo;entryUUID\u0026rsquo; as the user ID attribute. GRAPH_LDAP_SERVER_USE_PASSWORD_MODIFY_EXOP bool true Use the \u0026lsquo;Password Modify Extended Operation\u0026rsquo; for updating user passwords. OCIS_LDAP_SERVER_WRITE_ENABLEDGRAPH_LDAP_SERVER_WRITE_ENABLED bool true Allow creating, modifying and deleting LDAP users via the GRAPH API. This can only be set to \u0026rsquo;true\u0026rsquo; when keeping default settings for the LDAP user and group attribute types (the \u0026lsquo;OCIS_LDAP_USER_SCHEMA_* and \u0026lsquo;OCIS_LDAP_GROUP_SCHEMA_* variables). GRAPH_LDAP_REFINT_ENABLED bool false Signals that the server has the refint plugin enabled, which makes some actions not needed. OCIS_LDAP_USER_BASE_DNGRAPH_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_USER_SCOPEGRAPH_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_USER_FILTERGRAPH_LDAP_USER_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_USER_OBJECTCLASSGRAPH_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;). OCIS_LDAP_USER_SCHEMA_MAILGRAPH_LDAP_USER_EMAIL_ATTRIBUTE string mail LDAP Attribute to use for the email address of users. OCIS_LDAP_USER_SCHEMA_DISPLAYNAMELDAP_USER_SCHEMA_DISPLAY_NAMEGRAPH_LDAP_USER_DISPLAYNAME_ATTRIBUTE string displayName LDAP Attribute to use for the display name of users. OCIS_LDAP_USER_SCHEMA_USERNAMEGRAPH_LDAP_USER_NAME_ATTRIBUTE string uid LDAP Attribute to use for username of users. OCIS_LDAP_USER_SCHEMA_IDGRAPH_LDAP_USER_UID_ATTRIBUTE string owncloudUUID LDAP Attribute to use as the unique ID for users. This should be a stable globally unique ID like a UUID. OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGGRAPH_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user ID\u0026rsquo;s. OCIS_LDAP_USER_SCHEMA_USER_TYPEGRAPH_LDAP_USER_TYPE_ATTRIBUTE string ownCloudUserType LDAP Attribute to distinguish between \u0026lsquo;Member\u0026rsquo; and \u0026lsquo;Guest\u0026rsquo; users. Default is \u0026lsquo;ownCloudUserType\u0026rsquo;. OCIS_LDAP_USER_ENABLED_ATTRIBUTEGRAPH_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP Attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_DISABLE_USER_MECHANISMGRAPH_DISABLE_USER_MECHANISM string attribute An option to control the behavior for disabling users. Supported options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed. Default is \u0026lsquo;attribute\u0026rsquo;. OCIS_LDAP_DISABLED_USERS_GROUP_DNGRAPH_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;. OCIS_LDAP_GROUP_BASE_DNGRAPH_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups. GRAPH_LDAP_GROUP_CREATE_BASE_DN string ou=groups,o=libregraph-idm Parent DN under which new groups are created. This DN needs to be subordinate to the \u0026lsquo;GRAPH_LDAP_GROUP_BASE_DN\u0026rsquo;. This setting is only relevant when \u0026lsquo;GRAPH_LDAP_SERVER_WRITE_ENABLED\u0026rsquo; is \u0026rsquo;true\u0026rsquo;. It defaults to the value of \u0026lsquo;GRAPH_LDAP_GROUP_BASE_DN\u0026rsquo;. All groups outside of this subtree are treated as readonly groups and cannot be updated. OCIS_LDAP_GROUP_SCOPEGRAPH_LDAP_GROUP_SEARCH_SCOPE string sub LDAP search scope to use when looking up groups. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_GROUP_FILTERGRAPH_LDAP_GROUP_FILTER string LDAP filter to add to the default filters for group searches. OCIS_LDAP_GROUP_OBJECTCLASSGRAPH_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;). OCIS_LDAP_GROUP_SCHEMA_GROUPNAMEGRAPH_LDAP_GROUP_NAME_ATTRIBUTE string cn LDAP Attribute to use for the name of groups. OCIS_LDAP_GROUP_SCHEMA_MEMBERGRAPH_LDAP_GROUP_MEMBER_ATTRIBUTE string member LDAP Attribute that is used for group members. OCIS_LDAP_GROUP_SCHEMA_IDGRAPH_LDAP_GROUP_ID_ATTRIBUTE string owncloudUUID LDAP Attribute to use as the unique id for groups. This should be a stable globally unique ID like a UUID. OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGGRAPH_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s. GRAPH_LDAP_EDUCATION_RESOURCES_ENABLED bool false Enable LDAP support for managing education related resources. GRAPH_LDAP_SCHOOL_BASE_DN string Search base DN for looking up LDAP schools. GRAPH_LDAP_SCHOOL_SEARCH_SCOPE string LDAP search scope to use when looking up schools. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. GRAPH_LDAP_SCHOOL_FILTER string LDAP filter to add to the default filters for school searches. GRAPH_LDAP_SCHOOL_OBJECTCLASS string The object class to use for schools in the default school search filter. GRAPH_LDAP_SCHOOL_NAME_ATTRIBUTE string LDAP Attribute to use for the name of a school. GRAPH_LDAP_SCHOOL_NUMBER_ATTRIBUTE string LDAP Attribute to use for the number of a school. GRAPH_LDAP_SCHOOL_ID_ATTRIBUTE string LDAP Attribute to use as the unique id for schools. This should be a stable globally unique ID like a UUID. GRAPH_LDAP_SCHOOL_TERMINATION_MIN_GRACE_DAYS int 0 When setting a \u0026rsquo;terminationDate\u0026rsquo; for a school, require the date to be at least this number of days in the future. OCIS_ENABLE_OCMGRAPH_INCLUDE_OCM_SHAREES bool false Include OCM sharees when listing users. OCIS_EVENTS_ENDPOINTGRAPH_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Set to a empty string to disable emitting events. OCIS_EVENTS_CLUSTERGRAPH_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_INSECUREGRAPH_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEGRAPH_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided GRAPH_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSGRAPH_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEGRAPH_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDGRAPH_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. GRAPH_AVAILABLE_ROLES []string [b1e2218d-eef8-4d4c-b82d-0f1a1b48f3b5 a8d5fe5e-96e3-418d-825b-534dbdf22b99 fb6c3e19-e378-47e5-b277-9732f9de6e21 58c63c02-1d89-4572-916a-870abc5a1b7d 2d00ce52-1fc2-4dbc-8b95-a73b73395f5a 1c996275-f1c9-4e71-abdf-a42f6495e960 312c0871-5ef7-4b3a-85b6-0e4074c64049] A comma separated list of roles that are available for assignment. OCIS_MAX_CONCURRENCYGRAPH_MAX_CONCURRENCY int 20 The maximum number of concurrent requests the service will handle. OCIS_KEYCLOAK_BASE_PATHGRAPH_KEYCLOAK_BASE_PATH string The URL to access keycloak. OCIS_KEYCLOAK_CLIENT_IDGRAPH_KEYCLOAK_CLIENT_ID string The client id to authenticate with keycloak. OCIS_KEYCLOAK_CLIENT_SECRETGRAPH_KEYCLOAK_CLIENT_SECRET string The client secret to use in authentication. OCIS_KEYCLOAK_CLIENT_REALMGRAPH_KEYCLOAK_CLIENT_REALM string The realm the client is defined in. OCIS_KEYCLOAK_USER_REALMGRAPH_KEYCLOAK_USER_REALM string The realm users are defined. OCIS_KEYCLOAK_INSECURE_SKIP_VERIFYGRAPH_KEYCLOAK_INSECURE_SKIP_VERIFY bool false Disable TLS certificate validation for Keycloak connections. Do not set this in production environments. OCIS_SERVICE_ACCOUNT_IDGRAPH_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETGRAPH_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 # Autogenerated # Filename: graph-config-example."},{"id":140,"href":"/services/groups/configuration/","title":"Service Configuration","parent":"Groups","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: groups-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9161 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9160 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false driver: ldap drivers: ldap: uri: ldaps://localhost:9235 ca_cert: /var/lib/ocis/idm/ldap.crt insecure: false bind_dn: uid=reva,ou=sysusers,o=libregraph-idm bind_password: \u0026#34;\u0026#34; user_base_dn: ou=users,o=libregraph-idm group_base_dn: ou=groups,o=libregraph-idm user_scope: sub group_scope: sub group_substring_filter_type: any user_filter: \u0026#34;\u0026#34; group_filter: \u0026#34;\u0026#34; user_object_class: inetOrgPerson group_object_class: groupOfNames idp: https://localhost:9200 user_schema: id: ownclouduuid id_is_octet_string: false mail: mail display_name: displayname user_name: uid group_schema: id: ownclouduuid id_is_octet_string: false mail: mail display_name: cn group_name: cn member: member owncloudsql: db_username: owncloud db_password: \u0026#34;\u0026#34; db_host: mysql db_port: 3306 db_name: owncloud idp: https://localhost:9200 nobody: 90 join_username: false join_owncloud_uuid: false enable_medial_search: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGROUPS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGROUPS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGROUPS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGROUPS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGROUPS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYGROUPS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORGROUPS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEGROUPS_LOG_FILE string The path to the log file. Activates logging to this file if set. GROUPS_DEBUG_ADDR string 127.0.0.1:9161 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. GROUPS_DEBUG_TOKEN string Token to secure the metrics endpoint. GROUPS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. GROUPS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. GROUPS_GRPC_ADDR string 127.0.0.1:9160 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLGROUPS_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETGROUPS_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. GROUPS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. GROUPS_DRIVER string ldap The driver which should be used by the groups service. Supported values are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;. OCIS_LDAP_URIGROUPS_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo; OCIS_LDAP_CACERTGROUPS_LDAP_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. OCIS_LDAP_INSECUREGROUPS_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. OCIS_LDAP_BIND_DNGROUPS_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDGROUPS_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. OCIS_LDAP_USER_BASE_DNGROUPS_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_GROUP_BASE_DNGROUPS_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups. OCIS_LDAP_USER_SCOPEGROUPS_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_GROUP_SCOPEGROUPS_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. LDAP_GROUP_SUBSTRING_FILTER_TYPEGROUPS_LDAP_GROUP_SUBSTRING_FILTER_TYPE string any Type of substring search filter to use for substring searches for groups. Supported values are \u0026lsquo;initial\u0026rsquo;, \u0026lsquo;final\u0026rsquo; and \u0026lsquo;any\u0026rsquo;. The value \u0026lsquo;initial\u0026rsquo; is used for doing prefix only searches, \u0026lsquo;final\u0026rsquo; for doing suffix only searches or \u0026lsquo;any\u0026rsquo; for doing full substring searches OCIS_LDAP_USER_FILTERGROUPS_LDAP_USER_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_GROUP_FILTERGROUPS_LDAP_GROUP_FILTER string LDAP filter to add to the default filters for group searches. OCIS_LDAP_USER_OBJECTCLASSGROUPS_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;). OCIS_LDAP_GROUP_OBJECTCLASSGROUPS_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;). OCIS_URLOCIS_OIDC_ISSUERGROUPS_IDP_URL string https://localhost:9200 The identity provider value to set in the group IDs of the CS3 group objects for groups returned by this group provider. OCIS_LDAP_USER_SCHEMA_IDGROUPS_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for users. This should be a stable globally unique id like a UUID. OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGGROUPS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user ID\u0026rsquo;s. OCIS_LDAP_USER_SCHEMA_MAILGROUPS_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users. OCIS_LDAP_USER_SCHEMA_DISPLAYNAMEGROUPS_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users. OCIS_LDAP_USER_SCHEMA_USERNAMEGROUPS_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users. OCIS_LDAP_GROUP_SCHEMA_IDGROUPS_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for groups. This should be a stable globally unique ID like a UUID. OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGGROUPS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s. OCIS_LDAP_GROUP_SCHEMA_MAILGROUPS_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty). OCIS_LDAP_GROUP_SCHEMA_DISPLAYNAMEGROUPS_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute). OCIS_LDAP_GROUP_SCHEMA_GROUPNAMEGROUPS_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups. OCIS_LDAP_GROUP_SCHEMA_MEMBERGROUPS_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members. GROUPS_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database. GROUPS_OWNCLOUDSQL_DB_PASSWORD string Password for the database user. GROUPS_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server. GROUPS_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection. GROUPS_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database. GROUPS_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. GROUPS_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided. GROUPS_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames. GROUPS_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user IDs. GROUPS_OWNCLOUDSQL_ENABLE_MEDIAL_SEARCH bool false Allow \u0026lsquo;medial search\u0026rsquo; when searching for users instead of just doing a prefix search. This allows finding \u0026lsquo;Alice\u0026rsquo; when searching for \u0026rsquo;lic\u0026rsquo;. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: groups-config-example."},{"id":141,"href":"/services/idm/configuration/","title":"Service Configuration","parent":"IDM","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Autogenerated # Filename: idm-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9239 token: \u0026#34;\u0026#34; pprof: false zpages: false idm: ldaps_addr: 127.0.0.1:9235 cert: /var/lib/ocis/idm/ldap.crt key: /var/lib/ocis/idm/ldap.key database: /var/lib/ocis/idm/ocis.boltdb create_demo_users: false demo_users_issuer_url: https://localhost:9200 service_user_passwords: admin_password: \u0026#34;\u0026#34; idm_password: \u0026#34;\u0026#34; reva_password: \u0026#34;\u0026#34; idp_password: \u0026#34;\u0026#34; admin_user_id: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDIDM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEIDM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTIDM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORIDM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELIDM_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYIDM_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORIDM_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEIDM_LOG_FILE string The path to the log file. Activates logging to this file if set. IDM_DEBUG_ADDR string 127.0.0.1:9239 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. IDM_DEBUG_TOKEN string Token to secure the metrics endpoint. IDM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. IDM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. IDM_LDAPS_ADDR string 127.0.0.1:9235 Listen address for the LDAPS listener (ip-addr:port). IDM_LDAPS_CERT string /var/lib/ocis/idm/ldap.crt File name of the TLS server certificate for the LDAPS listener. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. IDM_LDAPS_KEY string /var/lib/ocis/idm/ldap.key File name for the TLS certificate key for the server certificate. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. IDM_DATABASE_PATH string /var/lib/ocis/idm/ocis.boltdb Full path to the IDM backend database. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. IDM_CREATE_DEMO_USERS bool false Flag to enable or disable the creation of the demo users. OCIS_URLOCIS_OIDC_ISSUER string https://localhost:9200 The OIDC issuer URL to assign to the demo users. IDM_ADMIN_PASSWORD string Password to set for the oCIS \u0026lsquo;admin\u0026rsquo; user. Either cleartext or an argon2id hash. IDM_SVC_PASSWORD string Password to set for the \u0026lsquo;idm\u0026rsquo; service user. Either cleartext or an argon2id hash. IDM_REVASVC_PASSWORD string Password to set for the \u0026lsquo;reva\u0026rsquo; service user. Either cleartext or an argon2id hash. IDM_IDPSVC_PASSWORD string Password to set for the \u0026lsquo;idp\u0026rsquo; service user. Either cleartext or an argon2id hash. OCIS_ADMIN_USER_IDIDM_ADMIN_USER_ID string ID of the user that should receive admin privileges. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Autogenerated # Filename: idm-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9239 token: \u0026#34;\u0026#34; pprof: false zpages: false idm: ldaps_addr: 127.0.0.1:9235 cert: /var/lib/ocis/idm/ldap."},{"id":142,"href":"/services/idp/configuration/","title":"Service Configuration","parent":"IDP","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 # Autogenerated # Filename: idp-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9134 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9130 root: / tls_cert: /var/lib/ocis/idp/server.crt tls_key: /var/lib/ocis/idp/server.key tls: false reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; machine_auth_api_key: \u0026#34;\u0026#34; asset: asset: \u0026#34;\u0026#34; login-background-url: \u0026#34;\u0026#34; idp: iss: https://localhost:9200 identity_manager: ldap uri_base_path: \u0026#34;\u0026#34; sign_in_uri: \u0026#34;\u0026#34; signed_out_uri: \u0026#34;\u0026#34; authorization_endpoint_uri: \u0026#34;\u0026#34; ldap_insecure: false trusted_proxy: [] allow_scope: [] allow_client_guests: false allow_dynamic_client_registration: false encrypt_secret_file: /var/lib/ocis/idp/encryption.key listen: \u0026#34;\u0026#34; identifierdefaultbannerlogo: \u0026#34;\u0026#34; identifierdefaultsigninpagetext: \u0026#34;\u0026#34; identifierdefaultusernamehinttext: \u0026#34;\u0026#34; identifieruilocales: [] signing_kid: private-key signing_method: PS256 signing_private_key_files: - /var/lib/ocis/idp/private-key.pem validation_keys_path: \u0026#34;\u0026#34; cookiebackenduri: \u0026#34;\u0026#34; cookienames: [] cookiesamesite: 3 access_token_duration_seconds: 300 id_token_duration_seconds: 300 refresh_token_duration_seconds: 2592000 dynamic_client_secret_duration_seconds: 0 clients: - id: web name: ownCloud Web app trusted: true secret: \u0026#34;\u0026#34; redirect_uris: - \u0026#39;{{OCIS_URL}}/\u0026#39; - \u0026#39;{{OCIS_URL}}/oidc-callback.html\u0026#39; - \u0026#39;{{OCIS_URL}}/oidc-silent-redirect.html\u0026#39; origins: - \u0026#39;{{OCIS_URL}}\u0026#39; application_type: \u0026#34;\u0026#34; - id: xdXOt13JKxym1B1QcEncf2XDkLAexMBFwiT9j6EfhhHFJhs2KM9jbjTmf8JBXE69 name: ownCloud desktop app trusted: false secret: UBntmLjC2yYCeHwsyj73Uwo9TAaecAetRwMw0xYcvNL9yRdLSUi0hUAHfvCHFeFh redirect_uris: - http://127.0.0.1 - http://localhost origins: [] application_type: native - id: e4rAsNUSIUs0lF4nbv9FmCeUkTlV9GdgTLDH1b5uie7syb90SzEVrbN7HIpmWJeD name: ownCloud Android app trusted: false secret: dInFYGV33xKzhbRmpqQltYNdfLdJIfJ9L5ISoKhNoT9qZftpdWSP71VrpGR9pmoD redirect_uris: - oc://android.owncloud.com origins: [] application_type: native - id: mxd5OQDk6es5LzOzRvidJNfXLUZS2oN3oUFeXPP8LpPrhx3UroJFduGEYIBOxkY1 name: ownCloud iOS app trusted: false secret: KFeFWWEZO9TkisIQzR3fo7hfiMXlOpaqP8CFuTbSHzV1TUuGECglPxpiVKJfOXIx redirect_uris: - oc://ios.owncloud.com origins: [] application_type: native ldap: uri: ldaps://localhost:9235 cacert: /var/lib/ocis/idm/ldap.crt bind_dn: uid=idp,ou=sysusers,o=libregraph-idm bind_password: \u0026#34;\u0026#34; base_dn: ou=users,o=libregraph-idm scope: sub login_attribute: uid email_attribute: mail name_attribute: displayName uuid_attribute: ownCloudUUID uuid_attribute_type: text user_enabled_attribute: ownCloudUserEnabled filter: \u0026#34;\u0026#34; objectclass: inetOrgPerson Environment Variables Name Type Default Value Description IDP_PASSWORD_RESET_URI string The URI where a user can reset their password. OCIS_TRACING_ENABLEDIDP_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEIDP_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTIDP_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORIDP_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELIDP_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYIDP_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORIDP_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEIDP_LOG_FILE string The path to the log file. Activates logging to this file if set. IDP_DEBUG_ADDR string 127.0.0.1:9134 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. IDP_DEBUG_TOKEN string Token to secure the metrics endpoint. IDP_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. IDP_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. IDP_HTTP_ADDR string 127.0.0.1:9130 The bind address of the HTTP service. IDP_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. IDP_TRANSPORT_TLS_CERT string /var/lib/ocis/idp/server.crt Path/File name of the TLS server certificate (in PEM format) for the IDP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. IDP_TRANSPORT_TLS_KEY string /var/lib/ocis/idp/server.key Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the IDP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. IDP_TLS bool false Disable or Enable HTTPS for the communication between the Proxy service and the IDP service. If set to \u0026rsquo;true\u0026rsquo;, the key and cert files need to be configured and present. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_MACHINE_AUTH_API_KEYIDP_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. IDP_ASSET_PATH string Serve IDP assets from a path on the filesystem instead of the builtin assets. IDP_LOGIN_BACKGROUND_URL string Configure an alternative URL to the background image for the login page. OCIS_URLOCIS_OIDC_ISSUERIDP_ISS string https://localhost:9200 The OIDC issuer URL to use. IDP_IDENTITY_MANAGER string ldap The identity manager implementation to use. Supported identity managers are \u0026rsquo;ldap\u0026rsquo;, \u0026lsquo;cs3\u0026rsquo;, \u0026rsquo;libregraph\u0026rsquo; and \u0026lsquo;guest\u0026rsquo;. IDP_URI_BASE_PATH string IDP uri base path (defaults to \u0026lsquo;\u0026rsquo;). IDP_SIGN_IN_URI string IDP sign-in url. IDP_SIGN_OUT_URI string IDP sign-out url. IDP_ENDPOINT_URI string URL of the IDP endpoint. OCIS_LDAP_INSECUREIDP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. IDP_ALLOW_CLIENT_GUESTS bool false Allow guest clients to access oCIS. IDP_ALLOW_DYNAMIC_CLIENT_REGISTRATION bool false Allow dynamic client registration. IDP_ENCRYPTION_SECRET_FILE string /var/lib/ocis/idp/encryption.key Path to the encryption secret file, if unset, a new certificate will be autogenerated upon each restart, thus invalidating all existing sessions. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. IDP_SIGNING_KID string private-key Value of the KID (Key ID) field which is used in created tokens to uniquely identify the signing-private-key. IDP_SIGNING_METHOD string PS256 Signing method of IDP requests like \u0026lsquo;PS256\u0026rsquo; IDP_SIGNING_PRIVATE_KEY_FILES []string [/var/lib/ocis/idp/private-key.pem] A list of private key files for signing IDP requests. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. See the Environment Variable Types description for more details. IDP_VALIDATION_KEYS_PATH string Path to validation keys for IDP requests. IDP_ACCESS_TOKEN_EXPIRATION uint64 300 \u0026lsquo;Access token lifespan in seconds (time before an access token is expired).\u0026rsquo; IDP_ID_TOKEN_EXPIRATION uint64 300 ID token lifespan in seconds (time before an ID token is expired). IDP_REFRESH_TOKEN_EXPIRATION uint64 2592000 Refresh token lifespan in seconds (time before an refresh token is expired). This also limits the duration of an idle offline session. IDP_DYNAMIC_CLIENT_SECRET_DURATION uint64 0 Lifespan in seconds of a dynamically registered OIDC client. OCIS_LDAP_URIIDP_LDAP_URI string ldaps://localhost:9235 Url of the LDAP service to use as IDP. OCIS_LDAP_CACERTIDP_LDAP_TLS_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. OCIS_LDAP_BIND_DNIDP_LDAP_BIND_DN string uid=idp,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDIDP_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. OCIS_LDAP_USER_BASE_DNIDP_LDAP_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_USER_SCOPEIDP_LDAP_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. IDP_LDAP_LOGIN_ATTRIBUTE string uid LDAP User attribute to use for login like \u0026lsquo;uid\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_MAILIDP_LDAP_EMAIL_ATTRIBUTE string mail LDAP User email attribute like \u0026lsquo;mail\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_USERNAMEIDP_LDAP_NAME_ATTRIBUTE string displayName LDAP User name attribute like \u0026lsquo;displayName\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_IDIDP_LDAP_UUID_ATTRIBUTE string ownCloudUUID LDAP User UUID attribute like \u0026lsquo;uid\u0026rsquo;. IDP_LDAP_UUID_ATTRIBUTE_TYPE string text LDAP User uuid attribute type like \u0026rsquo;text\u0026rsquo;. OCIS_LDAP_USER_ENABLED_ATTRIBUTEIDP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP Attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_USER_FILTERIDP_LDAP_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_USER_OBJECTCLASSIDP_LDAP_OBJECTCLASS string inetOrgPerson LDAP User ObjectClass like \u0026lsquo;inetOrgPerson\u0026rsquo;. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 # Autogenerated # Filename: idp-config-example."},{"id":143,"href":"/services/nats/configuration/","title":"Service Configuration","parent":"Nats","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 # Autogenerated # Filename: nats-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9234 token: \u0026#34;\u0026#34; pprof: false zpages: false nats: host: 127.0.0.1 port: 9233 clusterid: ocis-cluster store_dir: /var/lib/ocis/nats tls_cert: /var/lib/ocis/nats/tls.crt tls_key: /var/lib/ocis/nats/tls.key tls_skip_verify_client_cert: false enable_tls: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDNATS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPENATS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTNATS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORNATS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELNATS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYNATS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORNATS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILENATS_LOG_FILE string The path to the log file. Activates logging to this file if set. NATS_DEBUG_ADDR string 127.0.0.1:9234 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. NATS_DEBUG_TOKEN string Token to secure the metrics endpoint. NATS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. NATS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. NATS_NATS_HOST string 127.0.0.1 Bind address. NATS_NATS_PORT int 9233 Bind port. NATS_NATS_CLUSTER_ID string ocis-cluster ID of the NATS cluster. NATS_NATS_STORE_DIR string /var/lib/ocis/nats The directory where the filesystem storage will store NATS JetStream data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/nats. NATS_TLS_CERT string /var/lib/ocis/nats/tls.crt Path/File name of the TLS server certificate (in PEM format) for the NATS listener. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/nats. NATS_TLS_KEY string /var/lib/ocis/nats/tls.key Path/File name for the TLS certificate key (in PEM format) for the NATS listener. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/nats. OCIS_INSECURENATS_TLS_SKIP_VERIFY_CLIENT_CERT bool false Whether the NATS server should skip the client certificate verification during the TLS handshake. OCIS_EVENTS_ENABLE_TLSNATS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 # Autogenerated # Filename: nats-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9234 token: \u0026#34;\u0026#34; pprof: false zpages: false nats: host: 127.0.0.1 port: 9233 clusterid: ocis-cluster store_dir: /var/lib/ocis/nats tls_cert: /var/lib/ocis/nats/tls."},{"id":144,"href":"/services/notifications/configuration/","title":"Service Configuration","parent":"Notification","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 # Autogenerated # Filename: notifications-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9174 token: \u0026#34;\u0026#34; pprof: false zpages: false ocis_url: https://localhost:9200 notifications: SMTP: smtp_host: \u0026#34;\u0026#34; smtp_port: 0 smtp_sender: \u0026#34;\u0026#34; smtp_username: \u0026#34;\u0026#34; smtp_password: \u0026#34;\u0026#34; insecure: false smtp_authentication: \u0026#34;\u0026#34; smtp_encryption: none events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; email_template_path: \u0026#34;\u0026#34; translation_path: \u0026#34;\u0026#34; default_language: \u0026#34;\u0026#34; reva_gateway: com.owncloud.api.gateway grpc_client_tls: null grpc_client_tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDNOTIFICATIONS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPENOTIFICATIONS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTNOTIFICATIONS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORNOTIFICATIONS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELNOTIFICATIONS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYNOTIFICATIONS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORNOTIFICATIONS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILENOTIFICATIONS_LOG_FILE string The path to the log file. Activates logging to this file if set. NOTIFICATIONS_DEBUG_ADDR string 127.0.0.1:9174 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. NOTIFICATIONS_DEBUG_TOKEN string Token to secure the metrics endpoint. NOTIFICATIONS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. NOTIFICATIONS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_URLNOTIFICATIONS_WEB_UI_URL string https://localhost:9200 The public facing URL of the oCIS Web UI, used e.g. when sending notification eMails NOTIFICATIONS_SMTP_HOST string SMTP host to connect to. NOTIFICATIONS_SMTP_PORT int 0 Port of the SMTP host to connect to. NOTIFICATIONS_SMTP_SENDER string Sender address of emails that will be sent (e.g. \u0026lsquo;ownCloud noreply@example.com\u0026rsquo;. NOTIFICATIONS_SMTP_USERNAME string Username for the SMTP host to connect to. NOTIFICATIONS_SMTP_PASSWORD string Password for the SMTP host to connect to. NOTIFICATIONS_SMTP_INSECURE bool false Allow insecure connections to the SMTP server. NOTIFICATIONS_SMTP_AUTHENTICATION string Authentication method for the SMTP communication. Possible values are \u0026rsquo;login\u0026rsquo;, \u0026lsquo;plain\u0026rsquo;, \u0026lsquo;crammd5\u0026rsquo;, \u0026rsquo;none\u0026rsquo; or \u0026lsquo;auto\u0026rsquo;. If set to \u0026lsquo;auto\u0026rsquo; or unset, the authentication method is automatically negotiated with the server. NOTIFICATIONS_SMTP_ENCRYPTION string none Encryption method for the SMTP communication. Possible values are \u0026lsquo;starttls\u0026rsquo;, \u0026lsquo;ssltls\u0026rsquo; and \u0026rsquo;none\u0026rsquo;. OCIS_EVENTS_ENDPOINTNOTIFICATIONS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERNOTIFICATIONS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURENOTIFICATIONS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATENOTIFICATIONS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSNOTIFICATIONS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMENOTIFICATIONS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDNOTIFICATIONS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EMAIL_TEMPLATE_PATHNOTIFICATIONS_EMAIL_TEMPLATE_PATH string Path to Email notification templates overriding embedded ones. OCIS_TRANSLATION_PATHNOTIFICATIONS_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_SERVICE_ACCOUNT_IDNOTIFICATIONS_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETNOTIFICATIONS_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 # Autogenerated # Filename: notifications-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127."},{"id":145,"href":"/services/ocdav/configuration/","title":"Service Configuration","parent":"ocDAV","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 # Autogenerated # Filename: ocdav-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9163 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9350 protocol: tcp prefix: \u0026#34;\u0026#34; cors: allow_origins: - https://localhost:9200 allow_methods: - OPTIONS - HEAD - GET - PUT - POST - DELETE - MKCOL - PROPFIND - PROPPATCH - MOVE - COPY - REPORT - SEARCH allow_headers: - Origin - Accept - Content-Type - Depth - Authorization - Ocs-Apirequest - If-None-Match - If-Match - Destination - Overwrite - X-Request-Id - X-Requested-With - Tus-Resumable - Tus-Checksum-Algorithm - Upload-Concat - Upload-Length - Upload-Metadata - Upload-Defer-Length - Upload-Expires - Upload-Checksum - Upload-Offset - X-HTTP-Method-Override - Cache-Control allow_credentials: false token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false webdav_namespace: /users/{{.Id.OpaqueId}} files_namespace: /users/{{.Id.OpaqueId}} shares_namespace: /Shares ocm_namespace: /public public_url: https://localhost:9200 insecure: false gateway_request_timeout: 84300 machine_auth_api_key: \u0026#34;\u0026#34; allow_propfind_depth_infinity: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCDAV_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCDAV_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCDAV_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCDAV_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCDAV_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYOCDAV_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOROCDAV_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEOCDAV_LOG_FILE string The path to the log file. Activates logging to this file if set. OCDAV_DEBUG_ADDR string 127.0.0.1:9163 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. OCDAV_DEBUG_TOKEN string Token to secure the metrics endpoint. OCDAV_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. OCDAV_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCDAV_HTTP_ADDR string 127.0.0.1:9350 The bind address of the HTTP service. OCDAV_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCDAV_HTTP_PREFIX string A URL path prefix for the handler. OCIS_CORS_ALLOW_ORIGINSOCDAV_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSOCDAV_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT POST DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSOCDAV_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSOCDAV_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_JWT_SECRETOCDAV_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCDAV_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. OCDAV_WEBDAV_NAMESPACE string /users/{{.Id.OpaqueId}} Jail requests to /dav/webdav into this CS3 namespace. Supports template layouting with CS3 User properties. OCDAV_FILES_NAMESPACE string /users/{{.Id.OpaqueId}} Jail requests to /dav/files/{username} into this CS3 namespace. Supports template layouting with CS3 User properties. OCDAV_SHARES_NAMESPACE string /Shares The human readable path for the share jail. Relative to a users personal space root. Upcased intentionally. OCDAV_OCM_NAMESPACE string /public The human readable path prefix for the ocm shares. OCIS_URLOCDAV_PUBLIC_URL string https://localhost:9200 URL where oCIS is reachable for users. OCIS_INSECUREOCDAV_INSECURE bool false Allow insecure connections to the GATEWAY service. OCDAV_GATEWAY_REQUEST_TIMEOUT int64 84300 Request timeout in seconds for requests from the oCDAV service to the GATEWAY service. OCIS_MACHINE_AUTH_API_KEYOCDAV_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. OCIS_EDITIONOCDAV_EDITION string Community Edition of oCIS. Used for branding purposes. OCDAV_ALLOW_PROPFIND_DEPTH_INFINITY bool false Allow the use of depth infinity in PROPFINDS. When enabled, a propfind will traverse through all subfolders. If many subfolders are expected, depth infinity can cause heavy server load and/or delayed response times. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 # Autogenerated # Filename: ocdav-config-example."},{"id":146,"href":"/services/ocm/configuration/","title":"Service Configuration","parent":"OCM","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 # Autogenerated # Filename: ocm-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9281 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9280 protocol: tcp prefix: \u0026#34;\u0026#34; cors: allow_origins: - https://localhost:9200 allow_methods: - OPTIONS - HEAD - GET - PUT - POST - DELETE - MKCOL - PROPFIND - PROPPATCH - MOVE - COPY - REPORT - SEARCH allow_headers: - Origin - Accept - Content-Type - Depth - Authorization - Ocs-Apirequest - If-None-Match - If-Match - Destination - Overwrite - X-Request-Id - X-Requested-With - Tus-Resumable - Tus-Checksum-Algorithm - Upload-Concat - Upload-Length - Upload-Metadata - Upload-Defer-Length - Upload-Expires - Upload-Checksum - Upload-Offset - X-HTTP-Method-Override - Cache-Control allow_credentials: false middleware: auth: credentials_by_user_agent: {} grpc: addr: 127.0.0.1:9282 tls: null protocol: \u0026#34;\u0026#34; grpc_client_tls: null service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; ocmd: prefix: ocm expose_recipient_display_name: false sciencemesh: prefix: sciencemesh science_mesh_directory_url: \u0026#34;\u0026#34; ocm_invite_manager: driver: json drivers: json: file: /var/lib/ocis/storage/ocm/ocminvites.json token_expiration: 24h0m0s timeout: 30s insecure: false ocm_provider_authorizer_driver: json ocm_provider_authorizer_drivers: json: providers: /etc/ocis/ocmproviders.json ocm_share_provider: driver: json drivers: json: file: /var/lib/ocis/storage/ocm/ocmshares.json insecure: false webapp_template: \u0026#34;\u0026#34; ocm_core: driver: json drivers: json: file: /var/lib/ocis/storage/ocm/ocmshares.json ocm_storage_provider: insecure: false storage_root: /var/lib/ocis/storage/ocm data_server_url: http://localhost:9280/data ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 # Autogenerated # Filename: ocm-config-example."},{"id":147,"href":"/services/ocs/configuration/","title":"Service Configuration","parent":"OCS Service","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 # Autogenerated # Filename: ocs-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9114 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9110 root: /ocs cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - PUT - PATCH - DELETE - OPTIONS allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Cache-Control allow_credentials: true tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; grpc_client_tls: null signing_keys: store: nats-js-kv addresses: - 127.0.0.1:9233 ttl: 12h0m0s username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYOCS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOROCS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEOCS_LOG_FILE string The path to the log file. Activates logging to this file if set. OCS_DEBUG_ADDR string 127.0.0.1:9114 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. OCS_DEBUG_TOKEN string Token to secure the metrics endpoint. OCS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. OCS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCS_HTTP_ADDR string 127.0.0.1:9110 The bind address of the HTTP service. OCS_HTTP_ROOT string /ocs Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSOCS_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSOCS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSOCS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSOCS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_CACHE_STOREOCS_PRESIGNEDURL_SIGNING_KEYS_STORE string nats-js-kv The type of the signing key store. Supported values are: \u0026lsquo;redis-sentinel\u0026rsquo; and \u0026rsquo;nats-js-kv\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_TTLOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_TTL Duration 12h0m0s Default time to live for signing keys. See the Environment Variable Types description for more details. OCIS_CACHE_AUTH_USERNAMEOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_JWT_SECRETOCS_JWT_SECRET string The secret to mint and validate jwt tokens. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 # Autogenerated # Filename: ocs-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127."},{"id":148,"href":"/services/policies/configuration/","title":"Service Configuration","parent":"Policies","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # Autogenerated # Filename: policies-config-example.yaml grpc: addr: 127.0.0.1:9125 tls: null debug: addr: 127.0.0.1:9129 token: \u0026#34;\u0026#34; pprof: false zpages: false events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; grpc_client_tls: null log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; engine: timeout: 10s policies: [] mimes: \u0026#34;\u0026#34; postprocessing: query: \u0026#34;\u0026#34; tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description POLICIES_GRPC_ADDR string 127.0.0.1:9125 The bind address of the GRPC service. POLICIES_DEBUG_ADDR string 127.0.0.1:9129 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. POLICIES_DEBUG_TOKEN string Token to secure the metrics endpoint. POLICIES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. POLICIES_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_EVENTS_ENDPOINTPOLICIES_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERPOLICIES_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREPOLICIES_EVENTS_TLS_INSECURE bool false Whether the server should skip the client certificate verification during the TLS handshake. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEPOLICIES_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided POLICIES_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSPOLICIES_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEPOLICIES_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDPOLICIES_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_LOG_LEVELPOLICIES_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYPOLICIES_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORPOLICIES_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEPOLICIES_LOG_FILE string The path to the log file. Activates logging to this file if set. POLICIES_ENGINE_TIMEOUT Duration 10s Sets the timeout the rego expression evaluation can take. Rules default to deny if the timeout was reached. See the Environment Variable Types description for more details. POLICIES_ENGINE_MIMES string Sets the mimes file path which maps mimetypes to associated file extensions. See the text description for details. POLICIES_POSTPROCESSING_QUERY string Defines the \u0026lsquo;Complete Rules\u0026rsquo; variable defined in the rego rule set this step uses for its evaluation. Defaults to deny if the variable was not found. OCIS_TRACING_ENABLEDPOLICIES_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPOLICIES_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPOLICIES_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPOLICIES_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # Autogenerated # Filename: policies-config-example.yaml grpc: addr: 127.0.0.1:9125 tls: null debug: addr: 127.0.0.1:9129 token: \u0026#34;\u0026#34; pprof: false zpages: false events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; grpc_client_tls: null log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; engine: timeout: 10s policies: [] mimes: \u0026#34;\u0026#34; postprocessing: query: \u0026#34;\u0026#34; tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description POLICIES_GRPC_ADDR string 127."},{"id":149,"href":"/services/postprocessing/configuration/","title":"Service Configuration","parent":"Postprocessing","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 # Autogenerated # Filename: postprocessing-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9255 token: \u0026#34;\u0026#34; pprof: false zpages: false store: store: nats-js-kv nodes: - 127.0.0.1:9233 database: postprocessing table: \u0026#34;\u0026#34; ttl: 0s username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; postprocessing: events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; workers: 3 steps: [] delayprocessing: 0s retry_backoff_duration: 5s max_retries: 14 Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDPOSTPROCESSING_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPOSTPROCESSING_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPOSTPROCESSING_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPOSTPROCESSING_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELPOSTPROCESSING_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYPOSTPROCESSING_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORPOSTPROCESSING_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEPOSTPROCESSING_LOG_FILE string The path to the log file. Activates logging to this file if set. POSTPROCESSING_DEBUG_ADDR string 127.0.0.1:9255 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. POSTPROCESSING_DEBUG_TOKEN string Token to secure the metrics endpoint. POSTPROCESSING_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. POSTPROCESSING_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_PERSISTENT_STOREPOSTPROCESSING_STORE string nats-js-kv The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESPOSTPROCESSING_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. POSTPROCESSING_STORE_DATABASE string postprocessing The database name the configured store should use. POSTPROCESSING_STORE_TABLE string The database table the store should use. OCIS_PERSISTENT_STORE_TTLPOSTPROCESSING_STORE_TTL Duration 0s Time to live for events in the store. See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEPOSTPROCESSING_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDPOSTPROCESSING_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_EVENTS_ENDPOINTPOSTPROCESSING_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERPOSTPROCESSING_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREPOSTPROCESSING_EVENTS_TLS_INSECURE bool false Whether the ocis server should skip the client certificate verification during the TLS handshake. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEPOSTPROCESSING_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided POSTPROCESSING_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSPOSTPROCESSING_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEPOSTPROCESSING_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDPOSTPROCESSING_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. POSTPROCESSING_WORKERS int 3 The number of concurrent go routines that fetch events from the event queue. POSTPROCESSING_STEPS []string [] A list of postprocessing steps processed in order of their appearance. Currently supported values by the system are: \u0026lsquo;virusscan\u0026rsquo;, \u0026lsquo;policies\u0026rsquo; and \u0026lsquo;delay\u0026rsquo;. Custom steps are allowed. See the documentation for instructions. See the Environment Variable Types description for more details. POSTPROCESSING_DELAY Duration 0s After uploading a file but before making it available for download, a delay step can be added. Intended for developing purposes only. If a duration is set but the keyword \u0026lsquo;delay\u0026rsquo; is not explicitely added to \u0026lsquo;POSTPROCESSING_STEPS\u0026rsquo;, the delay step will be processed as last step. In such a case, a log entry will be written on service startup to remind the admin about that situation. See the Environment Variable Types description for more details. POSTPROCESSING_RETRY_BACKOFF_DURATION Duration 5s The base for the exponential backoff duration before retrying a failed postprocessing step. See the Environment Variable Types description for more details. POSTPROCESSING_MAX_RETRIES int 14 The maximum number of retries for a failed postprocessing step. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 # Autogenerated # Filename: postprocessing-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127."},{"id":150,"href":"/services/proxy/configuration/","title":"Service Configuration","parent":"Proxy","content":" Example YAML Configutogenerated # Filename: proxy-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9205 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 0.0.0.0:9200 root: / tls_cert: /var/lib/ocis/proxy/server.crt tls_key: /var/lib/ocis/proxy/server.key tls: true reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; grpc_client_tls: null role_quotas: {} policies: - name: ocis routes: - endpoint: / service: com.owncloud.web.web unprotected: true - endpoint: /.well-known/ocm service: com.owncloud.web.ocm unprotected: true - endpoint: /.well-known/webfinger service: com.owncloud.web.webfinger unprotected: true - endpoint: /.well-known/openid-configuration service: com.owncloud.web.idp unprotected: true - endpoint: /branding/logo service: com.owncloud.web.web - endpoint: /konnect/ service: com.owncloud.web.idp unprotected: true - endpoint: /signin/ service: com.owncloud.web.idp unprotected: true - endpoint: /archiver service: com.owncloud.web.frontend - endpoint: /ocs/v2.php/apps/notifications/api/v1/notifications/sse service: com.owncloud.sse.sse - endpoint: /ocs/v2.php/apps/notifications/api/v1/notifications service: com.owncloud.web.userlog - type: regex endpoint: /ocs/v[12].php/cloud/user/signing-key service: com.owncloud.web.ocs - type: regex endpoint: /ocs/v[12].php/config service: com.owncloud.web.frontend unprotected: true - endpoint: /sciencemesh/ service: com.owncloud.web.ocm - endpoint: /ocm/ service: com.owncloud.web.ocm - endpoint: /ocs/ service: com.owncloud.web.frontend - type: query endpoint: /remote.php/?preview=1 service: com.owncloud.web.webdav - type: regex method: REPORT endpoint: (/remote.php)?/(web)?dav service: com.owncloud.web.webdav - type: query endpoint: /dav/?preview=1 service: com.owncloud.web.webdav - type: query endpoint: /webdav/?preview=1 service: com.owncloud.web.webdav - endpoint: /remote.php/ service: com.owncloud.web.ocdav - endpoint: /dav/ service: com.owncloud.web.ocdav - endpoint: /webdav/ service: com.owncloud.web.ocdav - endpoint: /status service: com.owncloud.web.ocdav unprotected: true - endpoint: /status.php service: com.owncloud.web.ocdav unprotected: true - endpoint: /index.php/ service: com.owncloud.web.ocdav - endpoint: /apps/ service: com.owncloud.web.ocdav - endpoint: /data service: com.owncloud.web.frontend unprotected: true - endpoint: /app/list service: com.owncloud.web.frontend unprotected: true - endpoint: /app/ service: com.owncloud.web.frontend - endpoint: /graph/v1beta1/extensions/org.libregraph/activities service: com.owncloud.web.activitylog - endpoint: /graph/v1.0/invitations service: com.owncloud.web.invitations - endpoint: /graph/ service: com.owncloud.web.graph - endpoint: /api/v0/settings service: com.owncloud.web.settings - endpoint: /auth-app/tokens service: com.owncloud.web.auth-app additional_policies: [] oidc: issuer: https://localhost:9200 insecure: false access_token_verify_method: jwt skip_user_info: false user_info_cache: store: memory addresses: - 127.0.0.1:9233 database: cache-userinfo table: \u0026#34;\u0026#34; ttl: 10s disable_persistence: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; jwks: refresh_interval: 60 refresh_timeout: 10 refresh_limit: 60 refresh_unknown_kid: true rewrite_well_known: false service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; role_assignment: driver: default oidc_role_mapper: role_claim: roles role_mapping: - role_name: admin claim_value: ocisAdmin - role_name: spaceadmin claim_value: ocisSpaceAdmin - role_name: user claim_value: ocisUser - role_name: user-light claim_value: ocisGuest policy_selector: static: policy: ocis claims: null regex: null pre_signed_url: allowed_http_methods: - GET enabled: true signing_keys: store: nats-js-kv addresses: - 127.0.0.1:9233 ttl: 12h0m0s disable_persistence: true username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; account_backend: cs3 user_oidc_claim: preferred_username user_cs3_claim: username machine_auth_api_key: \u0026#34;\u0026#34; auto_provision_accounts: false auto_provision_claims: username: preferred_username email: email display_name: name groups: groups enable_basic_auth: false insecure_backends: false backend_https_cacert: \u0026#34;\u0026#34; auth_middleware: credentials_by_user_agent: {} allow_app_auth: false policies_middleware: query: \u0026#34;\u0026#34; csp_config_file_location: \u0026#34;\u0026#34; events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDPROXY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPROXY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPROXY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPROXY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELPROXY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYPROXY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORPROXY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEPROXY_LOG_FILE string The path to the log file. Activates logging to this file if set. PROXY_DEBUG_ADDR string 127.0.0.1:9205 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. PROXY_DEBUG_TOKEN string Token to secure the metrics endpoint. PROXY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. PROXY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. PROXY_HTTP_ADDR string 0.0.0.0:9200 The bind address of the HTTP service. PROXY_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. PROXY_TRANSPORT_TLS_CERT string /var/lib/ocis/proxy/server.crt Path/File name of the TLS server certificate (in PEM format) for the external http services. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/proxy. PROXY_TRANSPORT_TLS_KEY string /var/lib/ocis/proxy/server.key Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the external http services. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/proxy. PROXY_TLS bool true Enable/Disable HTTPS for external HTTP services. Must be set to \u0026rsquo;true\u0026rsquo; if the built-in IDP service an no reverse proxy is used. See the text description for details. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_URLOCIS_OIDC_ISSUERPROXY_OIDC_ISSUER string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP. OCIS_INSECUREPROXY_OIDC_INSECURE bool false Disable TLS certificate validation for connections to the IDP. Note that this is not recommended for production environments. PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD string jwt Sets how OIDC access tokens should be verified. Possible values are \u0026rsquo;none\u0026rsquo; and \u0026lsquo;jwt\u0026rsquo;. When using \u0026rsquo;none\u0026rsquo;, no special validation apart from using it for accessing the IPD\u0026rsquo;s userinfo endpoint will be done. When using \u0026lsquo;jwt\u0026rsquo;, it tries to parse the access token as a jwt token and verifies the signature using the keys published on the IDP\u0026rsquo;s \u0026lsquo;jwks_uri\u0026rsquo;. PROXY_OIDC_SKIP_USER_INFO bool false Do not look up user claims at the userinfo endpoint and directly read them from the access token. Incompatible with \u0026lsquo;PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD=none\u0026rsquo;. OCIS_CACHE_STOREPROXY_OIDC_USERINFO_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESPROXY_OIDC_USERINFO_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-userinfo The database name the configured store should use. PROXY_OIDC_USERINFO_CACHE_TABLE string The database table the store should use. OCIS_CACHE_TTLPROXY_OIDC_USERINFO_CACHE_TTL Duration 10s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEPROXY_OIDC_USERINFO_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEPROXY_OIDC_USERINFO_CACHE_AUTH_USERNAME string The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDPROXY_OIDC_USERINFO_CACHE_AUTH_PASSWORD string The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. PROXY_OIDC_JWKS_REFRESH_INTERVAL uint64 60 The interval for refreshing the JWKS (JSON Web Key Set) in minutes in the background via a new HTTP request to the IDP. PROXY_OIDC_JWKS_REFRESH_TIMEOUT uint64 10 The timeout in seconds for an outgoing JWKS request. PROXY_OIDC_JWKS_REFRESH_RATE_LIMIT uint64 60 Limits the rate in seconds at which refresh requests are performed for unknown keys. This is used to prevent malicious clients from imposing high network load on the IDP via ocis. PROXY_OIDC_JWKS_REFRESH_UNKNOWN_KID bool true If set to \u0026rsquo;true\u0026rsquo;, the JWKS refresh request will occur every time an unknown KEY ID (KID) is seen. Always set a \u0026lsquo;refresh_limit\u0026rsquo; when enabling this. PROXY_OIDC_REWRITE_WELLKNOWN bool false Enables rewriting the /.well-known/openid-configuration to the configured OIDC issuer. Needed by the Desktop Client, Android Client and iOS Client to discover the OIDC provider. OCIS_SERVICE_ACCOUNT_IDPROXY_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETPROXY_SERVICE_ACCOUNT_SECRET string The service account secret. PROXY_ROLE_ASSIGNMENT_DRIVER string default The mechanism that should be used to assign roles to user upon login. Supported values: \u0026lsquo;default\u0026rsquo; or \u0026lsquo;oidc\u0026rsquo;. \u0026lsquo;default\u0026rsquo; will assign the role \u0026lsquo;user\u0026rsquo; to users which don\u0026rsquo;t have a role assigned at the time they login. \u0026lsquo;oidc\u0026rsquo; will assign the role based on the value of a claim (configured via PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM) from the users OIDC claims. PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM string roles The OIDC claim used to create the users role assignment. PROXY_ENABLE_PRESIGNEDURLS bool true Allow OCS to get a signing key to sign requests. OCIS_CACHE_STOREPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE string nats-js-kv The type of the signing key store. Supported values are: \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo; and \u0026lsquo;ocisstoreservice\u0026rsquo; (deprecated). See the text description for details. OCIS_CACHE_STORE_NODESPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_TTLPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_TTL Duration 12h0m0s Default time to live for signing keys. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_DISABLE_PERSISTENCE bool true Disables persistence of the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to true. OCIS_CACHE_AUTH_USERNAMEPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. PROXY_ACCOUNT_BACKEND_TYPE string cs3 Account backend the PROXY service should use. Currently only \u0026lsquo;cs3\u0026rsquo; is possible here. PROXY_USER_OIDC_CLAIM string preferred_username The name of an OpenID Connect claim that is used for resolving users with the account backend. The value of the claim must hold a per user unique, stable and non re-assignable identifier. The availability of claims depends on your Identity Provider. There are common claims available for most Identity providers like \u0026rsquo;email\u0026rsquo; or \u0026lsquo;preferred_username\u0026rsquo; but you can also add your own claim. PROXY_USER_CS3_CLAIM string username The name of a CS3 user attribute (claim) that should be mapped to the \u0026lsquo;user_oidc_claim\u0026rsquo;. Supported values are \u0026lsquo;username\u0026rsquo;, \u0026lsquo;mail\u0026rsquo; and \u0026lsquo;userid\u0026rsquo;. OCIS_MACHINE_AUTH_API_KEYPROXY_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary to access resources from other services. PROXY_AUTOPROVISION_ACCOUNTS bool false Set this to \u0026rsquo;true\u0026rsquo; to automatically provision users that do not yet exist in the users service on-demand upon first sign-in. To use this a write-enabled libregraph user backend needs to be setup an running. PROXY_AUTOPROVISION_CLAIM_USERNAME string preferred_username The name of the OIDC claim that holds the username. PROXY_AUTOPROVISION_CLAIM_EMAIL string email The name of the OIDC claim that holds the email. PROXY_AUTOPROVISION_CLAIM_DISPLAYNAME string name The name of the OIDC claim that holds the display name. PROXY_AUTOPROVISION_CLAIM_GROUPS string groups The name of the OIDC claim that holds the groups. PROXY_ENABLE_BASIC_AUTH bool false Set this to true to enable \u0026lsquo;basic authentication\u0026rsquo; (username/password). PROXY_INSECURE_BACKENDS bool false Disable TLS certificate validation for all HTTP backend connections. PROXY_HTTPS_CACERT string Path/File for the root CA certificate used to validate the server’s TLS certificate for https enabled backend services. PROXY_ENABLE_APP_AUTH bool false Allow app authentication. This can be used to authenticate 3rd party applications. Note that auth-app service must be running for this feature to work. PROXY_POLICIES_QUERY string Defines the \u0026lsquo;Complete Rules\u0026rsquo; variable defined in the rego rule set this step uses for its evaluation. Rules default to deny if the variable was not found. PROXY_CSP_CONFIG_FILE_LOCATION string The location of the CSP configuration file. OCIS_EVENTS_ENDPOINTPROXY_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Set to a empty string to disable emitting events. OCIS_EVENTS_CLUSTERPROXY_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_INSECUREPROXY_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEPROXY_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided PROXY_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSPROXY_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEPROXY_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDPROXY_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 # Autogenerated # Filename: proxy-config-example."},{"id":151,"href":"/services/search/configuration/","title":"Service Configuration","parent":"Search","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 # Autogenerated # Filename: search-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9224 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9220 tls: null token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; grpc_client_tls: null events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster async_uploads: true num_consumers: 0 debounce_duration: 1000 tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; engine: type: bleve bleve: data_path: /var/lib/ocis/search extractor: type: basic cs3_allow_insecure: false tika: tika_url: http://127.0.0.1:9998 clean_stop_words: true content_extraction_size_limit: 20971520 service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSEARCH_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESEARCH_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSEARCH_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSEARCH_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSEARCH_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSEARCH_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSEARCH_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESEARCH_LOG_FILE string The path to the log file. Activates logging to this file if set. SEARCH_DEBUG_ADDR string 127.0.0.1:9224 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SEARCH_DEBUG_TOKEN string Token to secure the metrics endpoint. SEARCH_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. SEARCH_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. SEARCH_GRPC_ADDR string 127.0.0.1:9220 The bind address of the GRPC service. OCIS_JWT_SECRETSEARCH_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_EVENTS_ENDPOINTSEARCH_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERSEARCH_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_ASYNC_UPLOADSSEARCH_EVENTS_ASYNC_UPLOADS bool true Enable asynchronous file uploads. SEARCH_EVENTS_NUM_CONSUMERS int 0 The amount of concurrent event consumers to start. Event consumers are used for searching files. Multiple consumers increase parallelisation, but will also increase CPU and memory demands. The default value is 0. SEARCH_EVENTS_REINDEX_DEBOUNCE_DURATION int 1000 The duration in milliseconds the reindex debouncer waits before triggering a reindex of a space that was modified. OCIS_INSECURESEARCH_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATESEARCH_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SEARCH_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSSEARCH_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMESEARCH_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDSEARCH_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. SEARCH_ENGINE_TYPE string bleve Defines which search engine to use. Defaults to \u0026lsquo;bleve\u0026rsquo;. Supported values are: \u0026lsquo;bleve\u0026rsquo;. SEARCH_ENGINE_BLEVE_DATA_PATH string /var/lib/ocis/search The directory where the filesystem will store search data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/search. SEARCH_EXTRACTOR_TYPE string basic Defines the content extraction engine. Defaults to \u0026lsquo;basic\u0026rsquo;. Supported values are: \u0026lsquo;basic\u0026rsquo; and \u0026rsquo;tika\u0026rsquo;. OCIS_INSECURESEARCH_EXTRACTOR_CS3SOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the CS3 source. SEARCH_EXTRACTOR_TIKA_TIKA_URL string http://127.0.0.1:9998 URL of the tika server. SEARCH_EXTRACTOR_TIKA_CLEAN_STOP_WORDS bool true Defines if stop words should be cleaned or not. See the documentation for more details. SEARCH_CONTENT_EXTRACTION_SIZE_LIMIT uint64 20971520 Maximum file size in bytes that is allowed for content extraction. OCIS_SERVICE_ACCOUNT_IDSEARCH_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETSEARCH_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 # Autogenerated # Filename: search-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127."},{"id":152,"href":"/services/settings/configuration/","title":"Service Configuration","parent":"Settings","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: settings-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9194 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9190 tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; root: / cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - PUT - PATCH - DELETE - OPTIONS allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id allow_credentials: true grpc: addr: 127.0.0.1:9191 tls: null grpc_client_tls: null metadata_config: gateway_addr: com.owncloud.api.storage-system storage_addr: com.owncloud.api.storage-system system_user_id: \u0026#34;\u0026#34; system_user_idp: internal system_user_api_key: \u0026#34;\u0026#34; cache: store: memory addresses: - 127.0.0.1:9233 database: settings-cache files_table: settings_files directories_table: settings_dirs ttl: 10m0s disable_persistence: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; bundles_path: \u0026#34;\u0026#34; admin_user_id: \u0026#34;\u0026#34; token_manager: jwt_secret: \u0026#34;\u0026#34; set_default_assignments: false service_account_ids: - service-user-id default_language: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSETTINGS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESETTINGS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSETTINGS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSETTINGS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSETTINGS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSETTINGS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSETTINGS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESETTINGS_LOG_FILE string The path to the log file. Activates logging to this file if set. SETTINGS_DEBUG_ADDR string 127.0.0.1:9194 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SETTINGS_DEBUG_TOKEN string Token to secure the metrics endpoint. SETTINGS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. SETTINGS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. SETTINGS_HTTP_ADDR string 127.0.0.1:9190 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. SETTINGS_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSSETTINGS_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSSETTINGS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSSETTINGS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSSETTINGS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. SETTINGS_GRPC_ADDR string 127.0.0.1:9191 The bind address of the GRPC service. SETTINGS_STORAGE_GATEWAY_GRPC_ADDRSTORAGE_GATEWAY_GRPC_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. SETTINGS_STORAGE_GRPC_ADDRSTORAGE_GRPC_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSETTINGS_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSETTINGS_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. OCIS_CACHE_STORESETTINGS_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSETTINGS_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string settings-cache The database name the configured store should use. SETTINGS_FILE_CACHE_TABLE string settings_files The database table the store should use for the file cache. SETTINGS_DIRECTORY_CACHE_TABLE string settings_dirs The database table the store should use for the directory cache. OCIS_CACHE_TTLSETTINGS_CACHE_TTL Duration 10m0s Default time to live for entries in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESETTINGS_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESETTINGS_CACHE_AUTH_USERNAME string The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSETTINGS_CACHE_AUTH_PASSWORD string The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. SETTINGS_BUNDLES_PATH string The path to a JSON file with a list of bundles. If not defined, the default bundles will be loaded. OCIS_ADMIN_USER_IDSETTINGS_ADMIN_USER_ID string ID of the user that should receive admin privileges. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand. OCIS_JWT_SECRETSETTINGS_JWT_SECRET string The secret to mint and validate jwt tokens. SETTINGS_SETUP_DEFAULT_ASSIGNMENTSIDM_CREATE_DEMO_USERS bool false The default role assignments the demo users should be setup. SETTINGS_SERVICE_ACCOUNT_IDSOCIS_SERVICE_ACCOUNT_ID []string [service-user-id] The list of all service account IDs. These will be assigned the hidden \u0026lsquo;service-account\u0026rsquo; role. Note: When using \u0026lsquo;OCIS_SERVICE_ACCOUNT_ID\u0026rsquo; this will contain only one value while \u0026lsquo;SETTINGS_SERVICE_ACCOUNT_IDS\u0026rsquo; can have multiple. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details about service accounts. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: settings-config-example."},{"id":153,"href":"/services/sharing/configuration/","title":"Service Configuration","parent":"Sharing","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 # Autogenerated # Filename: sharing-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9151 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9150 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_cert_path: \u0026#34;\u0026#34; enable_tls: false auth_username: \u0026#34;\u0026#34; auth_password: \u0026#34;\u0026#34; skip_user_groups_in_token: false user_sharing_driver: jsoncs3 user_sharing_drivers: jsoncs3: provider_addr: com.owncloud.api.storage-system system_user_id: \u0026#34;\u0026#34; system_user_idp: internal system_user_api_key: \u0026#34;\u0026#34; cache_ttl: 0 max_concurrency: 1 json: file: /var/lib/ocis/storage/shares.json cs3: provider_addr: com.owncloud.api.storage-system system_user_id: \u0026#34;\u0026#34; system_user_idp: internal system_user_api_key: \u0026#34;\u0026#34; owncloudsql: db_username: owncloud db_password: \u0026#34;\u0026#34; db_host: mysql db_port: 3306 db_name: owncloud user_storage_mount_id: \u0026#34;\u0026#34; public_sharing_driver: jsoncs3 public_sharing_drivers: json: file: /var/lib/ocis/storage/publicshares.json jsoncs3: provider_addr: com.owncloud.api.storage-system system_user_id: \u0026#34;\u0026#34; system_user_idp: internal system_user_api_key: \u0026#34;\u0026#34; cs3: provider_addr: com.owncloud.api.storage-system system_user_id: \u0026#34;\u0026#34; system_user_idp: internal system_user_api_key: \u0026#34;\u0026#34; public_sharing_writeableshare_must_have_password: false public_sharing_share_must_have_password: true enable_expired_shares_cleanup: true password_policy: min_characters: 8 min_lowercase_characters: 1 min_uppercase_characters: 1 min_digits: 1 min_special_characters: 1 banned_passwords_list: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSHARING_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESHARING_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSHARING_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSHARING_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSHARING_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSHARING_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSHARING_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESHARING_LOG_FILE string The path to the log file. Activates logging to this file if set. SHARING_DEBUG_ADDR string 127.0.0.1:9151 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SHARING_DEBUG_TOKEN string Token to secure the metrics endpoint. SHARING_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. SHARING_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. SHARING_GRPC_ADDR string 127.0.0.1:9150 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSHARING_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETSHARING_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_EVENTS_ENDPOINTSHARING_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERSHARING_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURESHARING_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATESHARING_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SHARING_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSSHARING_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMESHARING_EVENTS_AUTH_USERNAME string Username for the events broker. OCIS_EVENTS_AUTH_PASSWORDSHARING_EVENTS_AUTH_PASSWORD string Password for the events broker. SHARING_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. SHARING_USER_DRIVER string jsoncs3 Driver to be used to persist shares. Supported values are \u0026lsquo;jsoncs3\u0026rsquo;, \u0026lsquo;json\u0026rsquo;, \u0026lsquo;cs3\u0026rsquo; (deprecated) and \u0026lsquo;owncloudsql\u0026rsquo;. SHARING_USER_JSONCS3_PROVIDER_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSHARING_USER_JSONCS3_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSHARING_USER_JSONCS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEYSHARING_USER_JSONCS3_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. SHARING_USER_JSONCS3_CACHE_TTL int 0 TTL for the internal caches in seconds. OCIS_MAX_CONCURRENCYSHARING_USER_JSONCS3_MAX_CONCURRENCY int 1 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. SHARING_USER_JSON_FILE string /var/lib/ocis/storage/shares.json Path to the JSON file where shares will be persisted. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. SHARING_USER_CS3_PROVIDER_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSHARING_USER_CS3_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSHARING_USER_CS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEYSHARING_USER_CS3_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. SHARING_USER_OWNCLOUDSQL_DB_USERNAME string owncloud Username for the database. SHARING_USER_OWNCLOUDSQL_DB_PASSWORD string Password for the database. SHARING_USER_OWNCLOUDSQL_DB_HOST string mysql Hostname or IP of the database server. SHARING_USER_OWNCLOUDSQL_DB_PORT int 3306 Port that the database server is listening on. SHARING_USER_OWNCLOUDSQL_DB_NAME string owncloud Name of the database to be used. SHARING_USER_OWNCLOUDSQL_USER_STORAGE_MOUNT_ID string Mount ID of the ownCloudSQL users storage for mapping ownCloud 10 shares. SHARING_PUBLIC_DRIVER string jsoncs3 Driver to be used to persist public shares. Supported values are \u0026lsquo;jsoncs3\u0026rsquo;, \u0026lsquo;json\u0026rsquo; and \u0026lsquo;cs3\u0026rsquo; (deprecated). SHARING_PUBLIC_JSON_FILE string /var/lib/ocis/storage/publicshares.json Path to the JSON file where public share meta-data will be stored. This JSON file contains the information about public shares that have been created. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. SHARING_PUBLIC_JSONCS3_PROVIDER_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSHARING_PUBLIC_JSONCS3_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSHARING_PUBLIC_JSONCS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEYSHARING_PUBLIC_JSONCS3_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. SHARING_PUBLIC_CS3_PROVIDER_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSHARING_PUBLIC_CS3_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSHARING_PUBLIC_CS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEYSHARING_PUBLIC_CS3_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORDSHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD bool false Set this to true if you want to enforce passwords on Uploader, Editor or Contributor shares. If not using the global OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD, you must define the FRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD (deprecated) in the frontend service. OCIS_SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORDSHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORD bool true Set this to true if you want to enforce passwords on all public shares. OCIS_PASSWORD_POLICY_DISABLEDSHARING_PASSWORD_POLICY_DISABLED bool false Disable the password policy. Defaults to false if not set. OCIS_PASSWORD_POLICY_MIN_CHARACTERSSHARING_PASSWORD_POLICY_MIN_CHARACTERS int 8 Define the minimum password length. Defaults to 8 if not set. OCIS_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERSSHARING_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS int 1 Define the minimum number of uppercase letters. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERSSHARING_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS int 1 Define the minimum number of lowercase letters. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_DIGITSSHARING_PASSWORD_POLICY_MIN_DIGITS int 1 Define the minimum number of digits. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERSSHARING_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS int 1 Define the minimum number of characters from the special characters list to be present. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_BANNED_PASSWORDS_LISTSHARING_PASSWORD_POLICY_BANNED_PASSWORDS_LIST string Path to the \u0026lsquo;banned passwords list\u0026rsquo; file. This only impacts public link password validation. See the documentation for more details. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 # Autogenerated # Filename: sharing-config-example."},{"id":154,"href":"/services/storage-publiclink/configuration/","title":"Service Configuration","parent":"Storage-Publiclink","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 # Autogenerated # Filename: storage-publiclink-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9179 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9178 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false storage_provider: mount_id: 7993447f-687f-490d-875c-ac95e89a62a4 Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSTORAGE_PUBLICLINK_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_PUBLICLINK_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_PUBLICLINK_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_PUBLICLINK_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_PUBLICLINK_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSTORAGE_PUBLICLINK_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSTORAGE_PUBLICLINK_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESTORAGE_PUBLICLINK_LOG_FILE string The path to the log file. Activates logging to this file if set. STORAGE_PUBLICLINK_DEBUG_ADDR string 127.0.0.1:9179 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. STORAGE_PUBLICLINK_DEBUG_TOKEN string Token to secure the metrics endpoint. STORAGE_PUBLICLINK_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. STORAGE_PUBLICLINK_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. STORAGE_PUBLICLINK_GRPC_ADDR string 127.0.0.1:9178 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSTORAGE_PUBLICLINK_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETSTORAGE_PUBLICLINK_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. STORAGE_PUBLICLINK_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. STORAGE_PUBLICLINK_STORAGE_PROVIDER_MOUNT_ID string 7993447f-687f-490d-875c-ac95e89a62a4 Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 # Autogenerated # Filename: storage-publiclink-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9179 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127."},{"id":155,"href":"/services/storage-shares/configuration/","title":"Service Configuration","parent":"Storage-Shares","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 # Autogenerated # Filename: storage-shares-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9156 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9154 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false mount_id: 7639e57c-4433-4a12-8201-722fd0009154 readonly: false user_share_provider_endpoint: com.owncloud.api.sharing Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSTORAGE_SHARES_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_SHARES_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_SHARES_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_SHARES_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_SHARES_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSTORAGE_SHARES_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSTORAGE_SHARES_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESTORAGE_SHARES_LOG_FILE string The path to the log file. Activates logging to this file if set. STORAGE_SHARES_DEBUG_ADDR string 127.0.0.1:9156 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. STORAGE_SHARES_DEBUG_TOKEN string Token to secure the metrics endpoint. STORAGE_SHARES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. STORAGE_SHARES_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. STORAGE_SHARES_GRPC_ADDR string 127.0.0.1:9154 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSTORAGE_SHARES_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETSTORAGE_SHARES_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. STORAGE_SHARES_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. STORAGE_SHARES_MOUNT_ID string 7639e57c-4433-4a12-8201-722fd0009154 Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format. STORAGE_SHARES_READ_ONLY bool false Set this storage to be read-only. STORAGE_SHARES_USER_SHARE_PROVIDER_ENDPOINT string com.owncloud.api.sharing GRPC endpoint of the SHARING service. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 # Autogenerated # Filename: storage-shares-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9156 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127."},{"id":156,"href":"/services/storage-system/configuration/","title":"Service Configuration","parent":"Storage-System","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # Autogenerated # Filename: storage-system-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9217 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9215 tls: null protocol: tcp http: addr: 127.0.0.1:9216 protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; system_user_id: \u0026#34;\u0026#34; system_user_api_key: \u0026#34;\u0026#34; skip_user_groups_in_token: false cache: store: memory nodes: - 127.0.0.1:9233 database: storage-system ttl: 24m0s disable_persistence: false auth_username: \u0026#34;\u0026#34; auth_password: \u0026#34;\u0026#34; driver: ocis drivers: ocis: root: /var/lib/ocis/storage/metadata max_acquire_lock_cycles: 20 lock_cycle_duration_factor: 30 data_server_url: http://localhost:9216/data Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSTORAGE_SYSTEM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_SYSTEM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_SYSTEM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_SYSTEM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_SYSTEM_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSTORAGE_SYSTEM_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSTORAGE_SYSTEM_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESTORAGE_SYSTEM_LOG_FILE string The path to the log file. Activates logging to this file if set. STORAGE_SYSTEM_DEBUG_ADDR string 127.0.0.1:9217 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. STORAGE_SYSTEM_DEBUG_TOKEN string Token to secure the metrics endpoint STORAGE_SYSTEM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling STORAGE_SYSTEM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. STORAGE_SYSTEM_GRPC_ADDR string 127.0.0.1:9215 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSTORAGE_SYSTEM_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. STORAGE_SYSTEM_HTTP_ADDR string 127.0.0.1:9216 The bind address of the HTTP service. STORAGE_SYSTEM_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCIS_JWT_SECRETSTORAGE_SYSTEM_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_SYSTEM_USER_ID string ID of the oCIS storage-system system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. STORAGE_SYSTEM_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. OCIS_CACHE_STORESTORAGE_SYSTEM_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSTORAGE_SYSTEM_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string storage-system The database name the configured store should use. OCIS_CACHE_TTLSTORAGE_SYSTEM_CACHE_TTL Duration 24m0s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESTORAGE_SYSTEM_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESTORAGE_SYSTEM_CACHE_AUTH_USERNAME string Username for the configured store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSTORAGE_SYSTEM_CACHE_AUTH_PASSWORD string Password for the configured store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. STORAGE_SYSTEM_DRIVER string ocis The driver which should be used by the service. STORAGE_SYSTEM_OCIS_ROOT string /var/lib/ocis/storage/metadata Path for the directory where the STORAGE-SYSTEM service stores it\u0026rsquo;s persistent data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. STORAGE_SYSTEM_OCIS_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used. STORAGE_SYSTEM_OCIS_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used. STORAGE_SYSTEM_DATA_SERVER_URL string http://localhost:9216/data URL of the data server, needs to be reachable by other services using this service. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # Autogenerated # Filename: storage-system-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127."},{"id":157,"href":"/services/storage-users/configuration/","title":"Service Configuration","parent":"Storage-Users","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 # Autogenerated # Filename: storage-users-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9159 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9157 tls: null protocol: tcp http: addr: 127.0.0.1:9158 protocol: tcp prefix: data cors: allow_origins: - https://localhost:9200 allow_methods: - POST - HEAD - PATCH - OPTIONS - GET - DELETE allow_headers: - Authorization - Origin - X-Requested-With - X-Request-Id - X-HTTP-Method-Override - Content-Type - Upload-Length - Upload-Offset - Tus-Resumable - Upload-Metadata - Upload-Defer-Length - Upload-Concat - Upload-Incomplete - Upload-Draft-Interop-Version allow_credentials: false expose_headers: - Upload-Offset - Location - Upload-Length - Tus-Version - Tus-Resumable - Tus-Max-Size - Tus-Extension - Upload-Metadata - Upload-Defer-Length - Upload-Concat - Upload-Incomplete - Upload-Draft-Interop-Version max_age: 86400 token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false graceful_shutdown_timeout: 30 driver: ocis drivers: ocis: propagator: sync async_propagator_options: propagation_delay: 0s root: /var/lib/ocis/storage/users user_layout: \u0026#39;{{.Id.OpaqueId}}\u0026#39; permissions_endpoint: com.owncloud.api.settings personalspacealias_template: \u0026#39;{{.SpaceType}}/{{.User.Username | lower}}\u0026#39; personalspacepath_template: \u0026#34;\u0026#34; generalspacealias_template: \u0026#39;{{.SpaceType}}/{{.SpaceName | replace \u0026#34; \u0026#34; \u0026#34;-\u0026#34; | lower}}\u0026#39; generalspacepath_template: \u0026#34;\u0026#34; share_folder: /Shares max_acquire_lock_cycles: 20 lock_cycle_duration_factor: 30 max_concurrency: 5 async_uploads: true max_quota: 0 disable_versioning: false s3ng: propagator: sync async_propagator_options: propagation_delay: 0s root: /var/lib/ocis/storage/users user_layout: \u0026#39;{{.Id.OpaqueId}}\u0026#39; permissions_endpoint: com.owncloud.api.settings region: default access_key: \u0026#34;\u0026#34; secret_key: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; bucket: \u0026#34;\u0026#34; put_object_disable_content_sha254: false put_object_disable_multipart: true put_object_send_content_md5: true put_object_concurrent_stream_parts: true put_object_num_threads: 4 put_object_part_size: 0 personalspacealias_template: \u0026#39;{{.SpaceType}}/{{.User.Username | lower}}\u0026#39; personalspacepath_template: \u0026#34;\u0026#34; generalspacealias_template: \u0026#39;{{.SpaceType}}/{{.SpaceName | replace \u0026#34; \u0026#34; \u0026#34;-\u0026#34; | lower}}\u0026#39; generalspacepath_template: \u0026#34;\u0026#34; share_folder: /Shares max_acquire_lock_cycles: 20 lock_cycle_duration_factor: 30 max_concurrency: 5 disable_versioning: false owncloudsql: root: /var/lib/ocis/storage/owncloud share_folder: /Shares user_layout: \u0026#39;{{.Username}}\u0026#39; upload_info_dir: /var/lib/ocis/storage/uploadinfo db_username: owncloud db_password: owncloud db_host: \u0026#34;\u0026#34; db_port: 3306 db_name: owncloud users_provider_endpoint: com.owncloud.api.users posix: root: /var/lib/ocis/storage/users personalspacepath_template: users/{{.User.Username}} generalspacepath_template: projects/{{.SpaceId}} permissions_endpoint: com.owncloud.api.settings async_uploads: true scan_debounce_delay: 1s use_space_groups: false watch_type: \u0026#34;\u0026#34; watch_path: \u0026#34;\u0026#34; watch_folder_kafka_hosts: \u0026#34;\u0026#34; data_server_url: http://localhost:9158/data data_gateway_url: https://localhost:9200/data transfer_expires: 86400 events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_cert_path: \u0026#34;\u0026#34; enable_tls: false num_consumers: 0 username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; filemetadata_cache: store: memory nodes: - 127.0.0.1:9233 database: storage-users ttl: 24m0s disable_persistence: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; id_cache: store: memory nodes: - 127.0.0.1:9233 database: ids-storage-users ttl: 24m0s disable_persistence: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; mount_id: \u0026#34;\u0026#34; expose_data_server: false readonly: false upload_expiration: 86400 tasks: purge_trash_bin: user_id: \u0026#34;\u0026#34; personal_delete_before: 720h0m0s project_delete_before: 720h0m0s service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; gateway_addr: 127.0.0.1:9142 machine_auth_api_key: \u0026#34;\u0026#34; max_attempts_rename_file: 0 Environment Variables Name Type Default Value Description STORAGE_USERS_SERVICE_NAME string storage-users Service name to use. Change this when starting an additional storage provider with a custom configuration to prevent it from colliding with the default \u0026lsquo;storage-users\u0026rsquo; service. OCIS_TRACING_ENABLEDSTORAGE_USERS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_USERS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_USERS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_USERS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_USERS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSTORAGE_USERS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSTORAGE_USERS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESTORAGE_USERS_LOG_FILE string The path to the log file. Activates logging to this file if set. STORAGE_USERS_DEBUG_ADDR string 127.0.0.1:9159 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. STORAGE_USERS_DEBUG_TOKEN string Token to secure the metrics endpoint. STORAGE_USERS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. STORAGE_USERS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. STORAGE_USERS_GRPC_ADDR string 127.0.0.1:9157 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSTORAGE_USERS_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. STORAGE_USERS_HTTP_ADDR string 127.0.0.1:9158 The bind address of the HTTP service. STORAGE_USERS_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCIS_CORS_ALLOW_ORIGINSSTORAGE_USERS_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSSTORAGE_USERS_CORS_ALLOW_METHODS []string [POST HEAD PATCH OPTIONS GET DELETE] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSSTORAGE_USERS_CORS_ALLOW_HEADERS []string [Authorization Origin X-Requested-With X-Request-Id X-HTTP-Method-Override Content-Type Upload-Length Upload-Offset Tus-Resumable Upload-Metadata Upload-Defer-Length Upload-Concat Upload-Incomplete Upload-Draft-Interop-Version] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSSTORAGE_USERS_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_CORS_EXPOSE_HEADERSSTORAGE_USERS_CORS_EXPOSE_HEADERS []string [Upload-Offset Location Upload-Length Tus-Version Tus-Resumable Tus-Max-Size Tus-Extension Upload-Metadata Upload-Defer-Length Upload-Concat Upload-Incomplete Upload-Draft-Interop-Version] A list of exposed CORS headers. See following chapter for more details: Access-Control-Expose-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers. See the Environment Variable Types description for more details. OCIS_CORS_MAX_AGESTORAGE_USERS_CORS_MAX_AGE uint 86400 The max cache duration of preflight headers. See following chapter for more details: Access-Control-Max-Age at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age. See the Environment Variable Types description for more details. OCIS_JWT_SECRETSTORAGE_USERS_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. STORAGE_USERS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. STORAGE_USERS_GRACEFUL_SHUTDOWN_TIMEOUT int 30 The number of seconds to wait for the \u0026lsquo;storage-users\u0026rsquo; service to shutdown cleanly before exiting with an error that gets logged. Note: This setting is only applicable when running the \u0026lsquo;storage-users\u0026rsquo; service as a standalone service. See the text description for more details. STORAGE_USERS_DRIVER string ocis The storage driver which should be used by the service. Defaults to \u0026lsquo;ocis\u0026rsquo;, Supported values are: \u0026lsquo;ocis\u0026rsquo;, \u0026lsquo;s3ng\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;. The \u0026lsquo;ocis\u0026rsquo; driver stores all data (blob and meta data) in an POSIX compliant volume. The \u0026lsquo;s3ng\u0026rsquo; driver stores metadata in a POSIX compliant volume and uploads blobs to the s3 bucket. OCIS_DECOMPOSEDFS_PROPAGATORSTORAGE_USERS_OCIS_PROPAGATOR string sync The propagator used for decomposedfs. At the moment, only \u0026lsquo;sync\u0026rsquo; is fully supported, \u0026lsquo;async\u0026rsquo; is available as an experimental option. STORAGE_USERS_ASYNC_PROPAGATOR_PROPAGATION_DELAY Duration 0s The delay between a change made to a tree and the propagation start on treesize and treetime. Multiple propagations are computed to a single one. See the Environment Variable Types description for more details. STORAGE_USERS_OCIS_ROOT string /var/lib/ocis/storage/users The directory where the filesystem storage will store blobs and metadata. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/users. STORAGE_USERS_OCIS_USER_LAYOUT string {{.Id.OpaqueId}} Template string for the user storage layout in the user directory. STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_OCIS_PERMISSIONS_ENDPOINT string com.owncloud.api.settings Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;. STORAGE_USERS_OCIS_PERSONAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.User.Username | lower}} Template string to construct personal space aliases. STORAGE_USERS_OCIS_PERSONAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the personal space roots. STORAGE_USERS_OCIS_GENERAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.SpaceName | replace \u0026quot; \u0026quot; \u0026quot;-\u0026quot; | lower}} Template string to construct general space aliases. STORAGE_USERS_OCIS_GENERAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the projects space roots. STORAGE_USERS_OCIS_SHARE_FOLDER string /Shares Name of the folder jailing all shares. STORAGE_USERS_OCIS_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value will be used. STORAGE_USERS_OCIS_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value will be used. OCIS_MAX_CONCURRENCYSTORAGE_USERS_OCIS_MAX_CONCURRENCY int 5 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. OCIS_ASYNC_UPLOADS bool true Enable asynchronous file uploads. OCIS_SPACES_MAX_QUOTASTORAGE_USERS_OCIS_MAX_QUOTA uint64 0 Set a global max quota for spaces in bytes. A value of 0 equals unlimited. If not using the global OCIS_SPACES_MAX_QUOTA, you must define the FRONTEND_MAX_QUOTA in the frontend service. OCIS_DISABLE_VERSIONING bool false Disables versioning of files. When set to true, new uploads with the same filename will overwrite existing files instead of creating a new version. OCIS_DECOMPOSEDFS_PROPAGATORSTORAGE_USERS_S3NG_PROPAGATOR string sync The propagator used for decomposedfs. At the moment, only \u0026lsquo;sync\u0026rsquo; is fully supported, \u0026lsquo;async\u0026rsquo; is available as an experimental option. STORAGE_USERS_ASYNC_PROPAGATOR_PROPAGATION_DELAY Duration 0s The delay between a change made to a tree and the propagation start on treesize and treetime. Multiple propagations are computed to a single one. See the Environment Variable Types description for more details. STORAGE_USERS_S3NG_ROOT string /var/lib/ocis/storage/users The directory where the filesystem storage will store metadata for blobs. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/users. STORAGE_USERS_S3NG_USER_LAYOUT string {{.Id.OpaqueId}} Template string for the user storage layout in the user directory. STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_S3NG_PERMISSIONS_ENDPOINT string com.owncloud.api.settings Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;. STORAGE_USERS_S3NG_REGION string default Region of the S3 bucket. STORAGE_USERS_S3NG_ACCESS_KEY string Access key for the S3 bucket. STORAGE_USERS_S3NG_SECRET_KEY string Secret key for the S3 bucket. STORAGE_USERS_S3NG_ENDPOINT string Endpoint for the S3 bucket. STORAGE_USERS_S3NG_BUCKET string Name of the S3 bucket. STORAGE_USERS_S3NG_PUT_OBJECT_DISABLE_CONTENT_SHA256 bool false Disable sending content sha256 when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_DISABLE_MULTIPART bool true Disable multipart uploads when copying objects to S3 STORAGE_USERS_S3NG_PUT_OBJECT_SEND_CONTENT_MD5 bool true Send a Content-MD5 header when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_CONCURRENT_STREAM_PARTS bool true Always precreate parts when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_NUM_THREADS uint 4 Number of concurrent uploads to use when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_PART_SIZE uint64 0 Part size for concurrent uploads to S3. STORAGE_USERS_S3NG_PERSONAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.User.Username | lower}} Template string to construct personal space aliases. STORAGE_USERS_S3NG_PERSONAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the personal space roots. STORAGE_USERS_S3NG_GENERAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.SpaceName | replace \u0026quot; \u0026quot; \u0026quot;-\u0026quot; | lower}} Template string to construct general space aliases. STORAGE_USERS_S3NG_GENERAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the projects space roots. STORAGE_USERS_S3NG_SHARE_FOLDER string /Shares Name of the folder jailing all shares. STORAGE_USERS_S3NG_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used. STORAGE_USERS_S3NG_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used. OCIS_MAX_CONCURRENCYSTORAGE_USERS_S3NG_MAX_CONCURRENCY int 5 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value of 100 will be used. OCIS_DISABLE_VERSIONING bool false Disables versioning of files. When set to true, new uploads with the same filename will overwrite existing files instead of creating a new version. STORAGE_USERS_OWNCLOUDSQL_DATADIR string /var/lib/ocis/storage/owncloud The directory where the filesystem storage will store SQL migration data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/owncloud. STORAGE_USERS_OWNCLOUDSQL_SHARE_FOLDER string /Shares Name of the folder jailing all shares. STORAGE_USERS_OWNCLOUDSQL_LAYOUT string {{.Username}} Path layout to use to navigate into a users folder in an owncloud data directory STORAGE_USERS_OWNCLOUDSQL_UPLOADINFO_DIR string /var/lib/ocis/storage/uploadinfo The directory where the filesystem will store uploads temporarily. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/uploadinfo. STORAGE_USERS_OWNCLOUDSQL_DB_USERNAME string owncloud Username for the database. STORAGE_USERS_OWNCLOUDSQL_DB_PASSWORD string owncloud Password for the database. STORAGE_USERS_OWNCLOUDSQL_DB_HOST string Hostname or IP of the database server. STORAGE_USERS_OWNCLOUDSQL_DB_PORT int 3306 Port that the database server is listening on. STORAGE_USERS_OWNCLOUDSQL_DB_NAME string owncloud Name of the database to be used. STORAGE_USERS_OWNCLOUDSQL_USERS_PROVIDER_ENDPOINT string com.owncloud.api.users Endpoint of the users provider. STORAGE_USERS_POSIX_ROOT string /var/lib/ocis/storage/users The directory where the filesystem storage will store its data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/users. STORAGE_USERS_POSIX_PERSONAL_SPACE_PATH_TEMPLATE string users/{{.User.Username}} Template string to construct the paths of the personal space roots. STORAGE_USERS_POSIX_GENERAL_SPACE_PATH_TEMPLATE string projects/{{.SpaceId}} Template string to construct the paths of the projects space roots. STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_POSIX_PERMISSIONS_ENDPOINT string com.owncloud.api.settings Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo;, \u0026lsquo;posix\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;. OCIS_ASYNC_UPLOADS bool true Enable asynchronous file uploads. STORAGE_USERS_POSIX_SCAN_DEBOUNCE_DELAY Duration 1s The time in milliseconds to wait before scanning the filesystem for changes after a change has been detected. STORAGE_USERS_POSIX_USE_SPACE_GROUPS bool false Use space groups to manage permissions on spaces. STORAGE_USERS_POSIX_WATCH_TYPE string Type of the watcher to use for getting notified about changes to the filesystem. Currently available options are \u0026lsquo;inotifywait\u0026rsquo; (default), \u0026lsquo;gpfswatchfolder\u0026rsquo; and \u0026lsquo;gpfsfileauditlogging\u0026rsquo;. STORAGE_USERS_POSIX_WATCH_PATH string Path to the watch directory/file. Only applies to the \u0026lsquo;gpfsfileauditlogging\u0026rsquo; and \u0026lsquo;inotifywait\u0026rsquo; watcher, in which case it is the path of the file audit log file/base directory to watch. STORAGE_USERS_POSIX_WATCH_FOLDER_KAFKA_BROKERS string Comma-separated list of kafka brokers to read the watchfolder events from. STORAGE_USERS_DATA_SERVER_URL string http://localhost:9158/data URL of the data server, needs to be reachable by the data gateway provided by the frontend service or the user if directly exposed. STORAGE_USERS_DATA_GATEWAY_URL string https://localhost:9200/data URL of the data gateway server STORAGE_USERS_TRANSFER_EXPIRES int64 86400 The time after which the token for upload postprocessing expires OCIS_EVENTS_ENDPOINTSTORAGE_USERS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERSTORAGE_USERS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURESTORAGE_USERS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATESTORAGE_USERS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided STORAGE_USERS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSSTORAGE_USERS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. STORAGE_USERS_EVENTS_NUM_CONSUMERS int 0 The amount of concurrent event consumers to start. Event consumers are used for post-processing files. Multiple consumers increase parallelisation, but will also increase CPU and memory demands. The setting has no effect when the OCIS_ASYNC_UPLOADS is set to false. The default and minimum value is 1. OCIS_EVENTS_AUTH_USERNAMESTORAGE_USERS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDSTORAGE_USERS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_CACHE_STORESTORAGE_USERS_FILEMETADATA_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSTORAGE_USERS_FILEMETADATA_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string storage-users The database name the configured store should use. OCIS_CACHE_TTLSTORAGE_USERS_FILEMETADATA_CACHE_TTL Duration 24m0s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESTORAGE_USERS_FILEMETADATA_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESTORAGE_USERS_FILEMETADATA_CACHE_AUTH_USERNAME string The username to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSTORAGE_USERS_FILEMETADATA_CACHE_AUTH_PASSWORD string The password to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_STORESTORAGE_USERS_ID_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSTORAGE_USERS_ID_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string ids-storage-users The database name the configured store should use. OCIS_CACHE_TTLSTORAGE_USERS_ID_CACHE_TTL Duration 24m0s Default time to live for user info in the user info cache. Only applied when access tokens have no expiration. Defaults to 300s which is derived from the underlaying package though not explicitly set as default. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESTORAGE_USERS_ID_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESTORAGE_USERS_ID_CACHE_AUTH_USERNAME string The username to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSTORAGE_USERS_ID_CACHE_AUTH_PASSWORD string The password to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. STORAGE_USERS_MOUNT_ID string Mount ID of this storage. STORAGE_USERS_EXPOSE_DATA_SERVER bool false Exposes the data server directly to users and bypasses the data gateway. Ensure that the data server address is reachable by users. STORAGE_USERS_READ_ONLY bool false Set this storage to be read-only. STORAGE_USERS_UPLOAD_EXPIRATION int64 86400 Duration in seconds after which uploads will expire. Note that when setting this to a low number, uploads could be cancelled before they are finished and return a 403 to the user. OCIS_ADMIN_USER_IDSTORAGE_USERS_PURGE_TRASH_BIN_USER_ID string ID of the user who collects all necessary information for deletion. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand. STORAGE_USERS_PURGE_TRASH_BIN_PERSONAL_DELETE_BEFORE Duration 720h0m0s Specifies the period of time in which items that have been in the personal trash-bin for longer than this value should be deleted. A value of 0 means no automatic deletion. See the Environment Variable Types description for more details. STORAGE_USERS_PURGE_TRASH_BIN_PROJECT_DELETE_BEFORE Duration 720h0m0s Specifies the period of time in which items that have been in the project trash-bin for longer than this value should be deleted. A value of 0 means no automatic deletion. See the Environment Variable Types description for more details. OCIS_SERVICE_ACCOUNT_IDSTORAGE_USERS_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETSTORAGE_USERS_SERVICE_ACCOUNT_SECRET string The service account secret. OCIS_GATEWAY_GRPC_ADDRSTORAGE_USERS_GATEWAY_GRPC_ADDR string 127.0.0.1:9142 The bind address of the gateway GRPC address. OCIS_MACHINE_AUTH_API_KEYSTORAGE_USERS_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. STORAGE_USERS_CLI_MAX_ATTEMPTS_RENAME_FILE int 0 The maximum number of attempts to rename a file when a user restores a file to an existing destination with the same name. The minimum value is 100. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 # Autogenerated # Filename: storage-users-config-example."},{"id":158,"href":"/services/thumbnails/configuration/","title":"Service Configuration","parent":"Thumbnails","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: thumbnails-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9189 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9185 tls: null max_concurrent_requests: 0 http: addr: 127.0.0.1:9186 tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; root: /thumbnails cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - PUT - PATCH - DELETE - OPTIONS allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Cache-Control allow_credentials: true grpc_client_tls: null thumbnail: resolutions: - 16x16 - 32x32 - 64x64 - 128x128 - 1080x1920 - 1920x1080 - 2160x3840 - 3840x2160 - 4320x7680 - 7680x4320 filesystem_storage: root_directory: /var/lib/ocis/thumbnails webdav_allow_insecure: false cs3_allow_insecure: false reva_gateway: com.owncloud.api.gateway font_map_file: \u0026#34;\u0026#34; transfer_secret: \u0026#34;\u0026#34; data_endpoint: http://127.0.0.1:9186/thumbnails/data max_input_width: 7680 max_input_height: 7680 max_input_image_file_size: 50MB Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDTHUMBNAILS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPETHUMBNAILS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTTHUMBNAILS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORTHUMBNAILS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELTHUMBNAILS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYTHUMBNAILS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORTHUMBNAILS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILETHUMBNAILS_LOG_FILE string The path to the log file. Activates logging to this file if set. THUMBNAILS_DEBUG_ADDR string 127.0.0.1:9189 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. THUMBNAILS_DEBUG_TOKEN string Token to secure the metrics endpoint. THUMBNAILS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. THUMBNAILS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. THUMBNAILS_GRPC_ADDR string 127.0.0.1:9185 The bind address of the GRPC service. THUMBNAILS_MAX_CONCURRENT_REQUESTS int 0 Number of maximum concurrent thumbnail requests. Default is 0 which is unlimited. THUMBNAILS_HTTP_ADDR string 127.0.0.1:9186 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. THUMBNAILS_HTTP_ROOT string /thumbnails Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSTHUMBNAILS_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSTHUMBNAILS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSTHUMBNAILS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSTHUMBNAILS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. THUMBNAILS_RESOLUTIONS []string [16x16 32x32 64x64 128x128 1080x1920 1920x1080 2160x3840 3840x2160 4320x7680 7680x4320] The supported list of target resolutions in the format WidthxHeight like 32x32. You can define any resolution as required. See the Environment Variable Types description for more details. THUMBNAILS_FILESYSTEMSTORAGE_ROOT string /var/lib/ocis/thumbnails The directory where the filesystem storage will store the thumbnails. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/thumbnails. OCIS_INSECURETHUMBNAILS_WEBDAVSOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the webdav source. OCIS_INSECURETHUMBNAILS_CS3SOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the CS3 source. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata THUMBNAILS_TXT_FONTMAP_FILE string The path to a font file for txt thumbnails. THUMBNAILS_TRANSFER_TOKEN string The secret to sign JWT to download the actual thumbnail file. THUMBNAILS_DATA_ENDPOINT string http://127.0.0.1:9186/thumbnails/data The HTTP endpoint where the actual thumbnail file can be downloaded. THUMBNAILS_MAX_INPUT_WIDTH int 7680 The maximum width of an input image which is being processed. THUMBNAILS_MAX_INPUT_HEIGHT int 7680 The maximum height of an input image which is being processed. THUMBNAILS_MAX_INPUT_IMAGE_FILE_SIZE string 50MB The maximum file size of an input image which is being processed. Usable common abbreviations: [KB, KiB, MB, MiB, GB, GiB, TB, TiB, PB, PiB, EB, EiB], example: 2GB. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 # Autogenerated # Filename: thumbnails-config-example."},{"id":159,"href":"/services/userlog/configuration/","title":"Service Configuration","parent":"Userlog","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 # Autogenerated # Filename: userlog-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9214 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9210 root: / cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Ocs-Apirequest allow_credentials: true tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; grpc_client_tls: null token_manager: jwt_secret: \u0026#34;\u0026#34; reva_gateway: com.owncloud.api.gateway translation_path: \u0026#34;\u0026#34; default_language: \u0026#34;\u0026#34; events: endpoint: 127.0.0.1:9233 cluster: ocis-cluster tls_insecure: false tls_root_ca_certificate: \u0026#34;\u0026#34; enable_tls: false username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; max_concurrency: 1 persistence: store: memory nodes: [] database: userlog table: events ttl: 336h0m0s username: \u0026#34;\u0026#34; password: \u0026#34;\u0026#34; disable_sse: false global_notifications_secret: \u0026#34;\u0026#34; service_account: service_account_id: \u0026#34;\u0026#34; service_account_secret: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDUSERLOG_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEUSERLOG_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTUSERLOG_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORUSERLOG_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELUSERLOG_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYUSERLOG_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORUSERLOG_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEUSERLOG_LOG_FILE string The path to the log file. Activates logging to this file if set. USERLOG_DEBUG_ADDR string 127.0.0.1:9214 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. USERLOG_DEBUG_TOKEN string Token to secure the metrics endpoint. USERLOG_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. USERLOG_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. USERLOG_HTTP_ADDR string 127.0.0.1:9210 The bind address of the HTTP service. USERLOG_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSUSERLOG_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSUSERLOG_CORS_ALLOW_METHODS []string [GET] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSUSERLOG_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Ocs-Apirequest] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSUSERLOG_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_JWT_SECRETUSERLOG_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_TRANSLATION_PATHUSERLOG_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_EVENTS_ENDPOINTUSERLOG_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERUSERLOG_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREUSERLOG_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEUSERLOG_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSUSERLOG_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEUSERLOG_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDUSERLOG_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_MAX_CONCURRENCYUSERLOG_MAX_CONCURRENCY int 1 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. OCIS_PERSISTENT_STOREUSERLOG_STORE string memory The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESUSERLOG_STORE_NODES []string [] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. USERLOG_STORE_DATABASE string userlog The database name the configured store should use. USERLOG_STORE_TABLE string events The database table the store should use. OCIS_PERSISTENT_STORE_TTLUSERLOG_STORE_TTL Duration 336h0m0s Time to live for events in the store. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks). See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEUSERLOG_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDUSERLOG_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_DISABLE_SSE,USERLOG_DISABLE_SSE bool false Disables server-sent events (sse). When disabled, clients will no longer receive sse notifications. USERLOG_GLOBAL_NOTIFICATIONS_SECRET string The secret to secure the global notifications endpoint. Only system admins and users knowing that secret can call the global notifications POST/DELETE endpoints. OCIS_SERVICE_ACCOUNT_IDUSERLOG_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETUSERLOG_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 # Autogenerated # Filename: userlog-config-example."},{"id":160,"href":"/services/users/configuration/","title":"Service Configuration","parent":"Users","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 # Autogenerated # Filename: users-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9145 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc: addr: 127.0.0.1:9144 tls: null protocol: tcp token_manager: jwt_secret: \u0026#34;\u0026#34; reva: address: com.owncloud.api.gateway tls: mode: \u0026#34;\u0026#34; cacert: \u0026#34;\u0026#34; skip_user_groups_in_token: false driver: ldap drivers: ldap: uri: ldaps://localhost:9235 ca_cert: /var/lib/ocis/idm/ldap.crt insecure: false bind_dn: uid=reva,ou=sysusers,o=libregraph-idm bind_password: \u0026#34;\u0026#34; user_base_dn: ou=users,o=libregraph-idm group_base_dn: ou=groups,o=libregraph-idm user_scope: sub group_scope: sub user_substring_filter_type: any user_filter: \u0026#34;\u0026#34; group_filter: \u0026#34;\u0026#34; user_object_class: inetOrgPerson group_object_class: groupOfNames idp: https://localhost:9200 disable_user_mechanism: attribute user_type_attribute: ownCloudUserType ldap_disabled_users_group_dn: cn=DisabledUsersGroup,ou=groups,o=libregraph-idm user_schema: id: ownclouduuid id_is_octet_string: false mail: mail display_name: displayname user_name: uid user_enabled: ownCloudUserEnabled group_schema: id: ownclouduuid id_is_octet_string: false mail: mail display_name: cn group_name: cn member: member owncloudsql: db_username: owncloud db_password: secret db_host: mysql db_port: 3306 db_name: owncloud idp: https://localhost:9200 nobody: 90 join_username: false join_owncloud_uuid: false enable_medial_search: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDUSERS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEUSERS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTUSERS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORUSERS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELUSERS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYUSERS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORUSERS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEUSERS_LOG_FILE string The path to the log file. Activates logging to this file if set. USERS_DEBUG_ADDR string 127.0.0.1:9145 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. USERS_DEBUG_TOKEN string Token to secure the metrics endpoint. USERS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. USERS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. USERS_GRPC_ADDR string 127.0.0.1:9144 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLUSERS_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. OCIS_JWT_SECRETUSERS_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. USERS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. USERS_DRIVER string ldap The driver which should be used by the users service. Supported values are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;. OCIS_LDAP_URIUSERS_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo; OCIS_LDAP_CACERTUSERS_LDAP_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. OCIS_LDAP_INSECUREUSERS_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. OCIS_LDAP_BIND_DNUSERS_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDUSERS_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. OCIS_LDAP_USER_BASE_DNUSERS_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_GROUP_BASE_DNUSERS_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups. OCIS_LDAP_USER_SCOPEUSERS_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_GROUP_SCOPEUSERS_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. LDAP_USER_SUBSTRING_FILTER_TYPEUSERS_LDAP_USER_SUBSTRING_FILTER_TYPE string any Type of substring search filter to use for substring searches for users. Possible values: \u0026lsquo;initial\u0026rsquo; for doing prefix only searches, \u0026lsquo;final\u0026rsquo; for doing suffix only searches or \u0026lsquo;any\u0026rsquo; for doing full substring searches OCIS_LDAP_USER_FILTERUSERS_LDAP_USER_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_GROUP_FILTERUSERS_LDAP_GROUP_FILTER string LDAP filter to add to the default filters for group searches. OCIS_LDAP_USER_OBJECTCLASSUSERS_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter like \u0026lsquo;inetOrgPerson\u0026rsquo;. OCIS_LDAP_GROUP_OBJECTCLASSUSERS_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter like \u0026lsquo;groupOfNames\u0026rsquo;. OCIS_URLOCIS_OIDC_ISSUERUSERS_IDP_URL string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. OCIS_LDAP_DISABLE_USER_MECHANISMUSERS_LDAP_DISABLE_USER_MECHANISM string attribute An option to control the behavior for disabling users. Valid options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed. OCIS_LDAP_USER_SCHEMA_USER_TYPEUSERS_LDAP_USER_TYPE_ATTRIBUTE string ownCloudUserType LDAP Attribute to distinguish between \u0026lsquo;Member\u0026rsquo; and \u0026lsquo;Guest\u0026rsquo; users. Default is \u0026lsquo;ownCloudUserType\u0026rsquo;. OCIS_LDAP_DISABLED_USERS_GROUP_DNUSERS_LDAP_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_IDUSERS_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique ID for users. This should be a stable globally unique ID like a UUID. OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGUSERS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user ID\u0026rsquo;s. OCIS_LDAP_USER_SCHEMA_MAILUSERS_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users. OCIS_LDAP_USER_SCHEMA_DISPLAYNAMEUSERS_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users. OCIS_LDAP_USER_SCHEMA_USERNAMEUSERS_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users. OCIS_LDAP_USER_ENABLED_ATTRIBUTEUSERS_LDAP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_GROUP_SCHEMA_IDUSERS_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique ID for groups. This should be a stable globally unique ID like a UUID. OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGUSERS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s. OCIS_LDAP_GROUP_SCHEMA_MAILUSERS_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty). OCIS_LDAP_GROUP_SCHEMA_DISPLAYNAMEUSERS_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute). OCIS_LDAP_GROUP_SCHEMA_GROUPNAMEUSERS_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups. OCIS_LDAP_GROUP_SCHEMA_MEMBERUSERS_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members. USERS_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database. USERS_OWNCLOUDSQL_DB_PASSWORD string secret Password for the database user. USERS_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server. USERS_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection. USERS_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database. USERS_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. USERS_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided. USERS_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames USERS_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user IDs. USERS_OWNCLOUDSQL_ENABLE_MEDIAL_SEARCH bool false Allow \u0026lsquo;medial search\u0026rsquo; when searching for users instead of just doing a prefix search. This allows finding \u0026lsquo;Alice\u0026rsquo; when searching for \u0026rsquo;lic\u0026rsquo;. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 # Autogenerated # Filename: users-config-example."},{"id":161,"href":"/services/web/configuration/","title":"Service Configuration","parent":"Web","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 # Autogenerated # Filename: web-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9104 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9100 tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; root: / cache_ttl: 604800 cors: allow_origins: - https://localhost:9200 allow_methods: - OPTIONS - HEAD - GET - PUT - PATCH - POST - DELETE - MKCOL - PROPFIND - PROPPATCH - MOVE - COPY - REPORT - SEARCH allow_headers: - Origin - Accept - Content-Type - Depth - Authorization - Ocs-Apirequest - If-None-Match - If-Match - Destination - Overwrite - X-Request-Id - X-Requested-With - Tus-Resumable - Tus-Checksum-Algorithm - Upload-Concat - Upload-Length - Upload-Metadata - Upload-Defer-Length - Upload-Expires - Upload-Checksum - Upload-Offset - X-HTTP-Method-Override allow_credentials: false asset: core_path: /var/lib/ocis/web/assets/core themes_path: /var/lib/ocis/web/assets/themes apps_path: /var/lib/ocis/web/assets/apps file: \u0026#34;\u0026#34; web: theme_server: https://localhost:9200 theme_path: /themes/owncloud/theme.json config: server: https://localhost:9200 oidc: metadata_url: https://localhost:9200/.well-known/openid-configuration authority: https://localhost:9200 client_id: web response_type: code scope: openid profile email post_logout_redirect_uri: \u0026#34;\u0026#34; apps: - files - search - text-editor - pdf-viewer - external - admin-settings - epub-reader - preview - app-store applications: [] external_apps: [] options: openAppsInTab: false accountEditLink: null disableFeedbackLink: false feedbackLink: null runningOnEos: false cernFeatures: false upload: null editor: null contextHelpersReadMore: true logoutUrl: \u0026#34;\u0026#34; loginUrl: \u0026#34;\u0026#34; tokenStorageLocal: true disabledExtensions: [] embed: enabled: \u0026#34;\u0026#34; target: \u0026#34;\u0026#34; messagesOrigin: \u0026#34;\u0026#34; delegateAuthentication: false delegateAuthenticationOrigin: \u0026#34;\u0026#34; userListRequiresFilter: false concurrentRequests: resourceBatchActions: 0 sse: 0 shares: create: 0 list: 0 styles: [] scripts: [] custom_translations: [] apps: {} token_manager: jwt_secret: \u0026#34;\u0026#34; gateway_addr: com.owncloud.api.gateway Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEB_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEB_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEB_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEB_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEB_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYWEB_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORWEB_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEWEB_LOG_FILE string The path to the log file. Activates logging to this file if set. WEB_DEBUG_ADDR string 127.0.0.1:9104 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. WEB_DEBUG_TOKEN string Token to secure the metrics endpoint. WEB_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. WEB_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. WEB_HTTP_ADDR string 127.0.0.1:9100 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. WEB_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. WEB_CACHE_TTL int 604800 Cache policy in seconds for ownCloud Web assets. OCIS_CORS_ALLOW_ORIGINSWEB_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSWEB_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT PATCH POST DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSWEB_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSWEB_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS. See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. WEB_ASSET_CORE_PATH string /var/lib/ocis/web/assets/core Serve ownCloud Web assets from a path on the filesystem instead of the builtin assets. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/web/assets/core OCIS_ASSET_THEMES_PATHWEB_ASSET_THEMES_PATH string /var/lib/ocis/web/assets/themes Serve ownCloud themes from a path on the filesystem instead of the builtin assets. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/web/assets/themes WEB_ASSET_APPS_PATH string /var/lib/ocis/web/assets/apps Serve ownCloud Web apps assets from a path on the filesystem instead of the builtin assets. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/web/assets/apps WEB_UI_CONFIG_FILE string Read the ownCloud Web json based configuration from this path/file. The config file takes precedence over WEB_OPTION_xxx environment variables. See the text description for more details. OCIS_URLWEB_UI_THEME_SERVER string https://localhost:9200 Base URL to load themes from. Will be prepended to the theme path. WEB_UI_THEME_PATH string /themes/owncloud/theme.json Path to the theme json file. Will be appended to the URL of the theme server. OCIS_URLWEB_UI_CONFIG_SERVER string https://localhost:9200 URL, where the oCIS APIs are reachable for ownCloud Web. WEB_OIDC_METADATA_URL string https://localhost:9200/.well-known/openid-configuration URL for the OIDC well-known configuration endpoint. Defaults to the oCIS API URL + \u0026lsquo;/.well-known/openid-configuration\u0026rsquo;. OCIS_URLOCIS_OIDC_ISSUERWEB_OIDC_AUTHORITY string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP. OCIS_OIDC_CLIENT_IDWEB_OIDC_CLIENT_ID string web The OIDC client ID which ownCloud Web uses. This client needs to be set up in your IDP. Note that this setting has no effect when using the builtin IDP. WEB_OIDC_RESPONSE_TYPE string code The OIDC response type to use for authentication. WEB_OIDC_SCOPE string openid profile email OIDC scopes to request during authentication to authorize access to user details. Defaults to \u0026lsquo;openid profile email\u0026rsquo;. Values are separated by blank. More example values but not limited to are \u0026lsquo;address\u0026rsquo; or \u0026lsquo;phone\u0026rsquo; etc. WEB_OIDC_POST_LOGOUT_REDIRECT_URI string This value needs to point to a valid and reachable web page. The web client will trigger a redirect to that page directly after the logout action. The default value is empty and redirects to the login page. WEB_OPTION_OPEN_APPS_IN_TAB bool false Configures whether apps and extensions should generally open in a new tab. Defaults to false. WEB_OPTION_DISABLE_FEEDBACK_LINK bool false Set this option to \u0026rsquo;true\u0026rsquo; to disable the feedback link in the top bar. Keeping it enabled by setting the value to \u0026lsquo;false\u0026rsquo; or with the absence of the option, allows ownCloud to get feedback from your user base through a dedicated survey website. WEB_OPTION_RUNNING_ON_EOS bool false Set this option to \u0026rsquo;true\u0026rsquo; if running on an EOS storage backend (https://eos-web.web.cern.ch/eos-web/) to enable its specific features. Defaults to \u0026lsquo;false\u0026rsquo;. WEB_OPTION_CONTEXTHELPERS_READ_MORE bool true Specifies whether the \u0026lsquo;Read more\u0026rsquo; link should be displayed or not. WEB_OPTION_LOGOUT_URL string Adds a link to the user\u0026rsquo;s profile page to point him to an external page, where he can manage his session and devices. This is helpful when an external IdP is used. This option is disabled by default. WEB_OPTION_LOGIN_URL string Specifies the target URL to the login page. This is helpful when an external IdP is used. This option is disabled by default. Example URL like: https://www.myidp.com/login. WEB_OPTION_TOKEN_STORAGE_LOCAL bool true Specifies whether the access token will be stored in the local storage when set to \u0026rsquo;true\u0026rsquo; or in the session storage when set to \u0026lsquo;false\u0026rsquo;. If stored in the local storage, login state will be persisted across multiple browser tabs, means no additional logins are required. WEB_OPTION_DISABLED_EXTENSIONS []string [] A list to disable specific Web extensions identified by their ID. The ID can e.g. be taken from the \u0026lsquo;index.ts\u0026rsquo; file of the web extension. Example: \u0026lsquo;com.github.owncloud.web.files.search,com.github.owncloud.web.files.print\u0026rsquo;. See the Environment Variable Types description for more details. WEB_OPTION_EMBED_ENABLED string Defines whether Web should be running in \u0026rsquo;embed\u0026rsquo; mode. Setting this to \u0026rsquo;true\u0026rsquo; will enable a stripped down version of Web with reduced functionality used to integrate Web into other applications like via iFrame. Setting it to \u0026lsquo;false\u0026rsquo; or not setting it (default) will run Web as usual with all functionality enabled. See the text description for more details. WEB_OPTION_EMBED_TARGET string Defines how Web is being integrated when running in \u0026rsquo;embed\u0026rsquo; mode. Currently, the only supported options are \u0026rsquo;\u0026rsquo; (empty) and \u0026rsquo;location\u0026rsquo;. With \u0026rsquo;\u0026rsquo; which is the default, Web will run regular as defined via the \u0026rsquo;embed.enabled\u0026rsquo; config option. With \u0026rsquo;location\u0026rsquo;, Web will run embedded as location picker. Resource selection will be disabled and the selected resources array always includes the current folder as the only item. See the text description for more details. WEB_OPTION_EMBED_MESSAGES_ORIGIN string Defines a URL under which Web can be integrated via iFrame in \u0026rsquo;embed\u0026rsquo; mode. Note that setting this is mandatory when running Web in \u0026rsquo;embed\u0026rsquo; mode. Use \u0026lsquo;*\u0026rsquo; as value to allow running the iFrame under any URL, although this is not recommended for security reasons. See the text description for more details. WEB_OPTION_EMBED_DELEGATE_AUTHENTICATION bool false Defines whether Web should require authentication to be done by the parent application when running in \u0026rsquo;embed\u0026rsquo; mode. If set to \u0026rsquo;true\u0026rsquo; Web will not try to authenticate the user on its own but will require an access token coming from the parent application. Defaults to being unset. WEB_OPTION_EMBED_DELEGATE_AUTHENTICATION_ORIGIN string Defines the host to validate the message event origin against when running Web in \u0026rsquo;embed\u0026rsquo; mode with delegated authentication. Defaults to event message origin validation being omitted, which is only recommended for development setups. WEB_OPTION_USER_LIST_REQUIRES_FILTER bool false Defines whether one or more filters must be set in order to list users in the Web admin settings. Set this option to \u0026rsquo;true\u0026rsquo; if running in an environment with a lot of users and listing all users could slow down performance. Defaults to \u0026lsquo;false\u0026rsquo;. WEB_OPTION_CONCURRENT_REQUESTS_RESOURCE_BATCH_ACTIONS int 0 Defines the maximum number of concurrent requests per file/folder/space batch action. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SSE int 0 Defines the maximum number of concurrent requests in SSE event handlers. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SHARES_CREATE int 0 Defines the maximum number of concurrent requests per sharing invite batch. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SHARES_LIST int 0 Defines the maximum number of concurrent requests when loading individual share information inside listings. Defaults to 2. OCIS_JWT_SECRETWEB_JWT_SECRET string The secret to mint and validate jwt tokens. WEB_GATEWAY_GRPC_ADDR string com.owncloud.api.gateway The bind address of the GRPC service. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 # Autogenerated # Filename: web-config-example."},{"id":162,"href":"/services/webdav/configuration/","title":"Service Configuration","parent":"Webdav","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # Autogenerated # Filename: webdav-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9119 token: \u0026#34;\u0026#34; pprof: false zpages: false grpc_client_tls: null http: addr: 127.0.0.1:9115 root: / cors: allow_origins: - \u0026#39;*\u0026#39; allow_methods: - GET - POST - PUT - PATCH - DELETE - OPTIONS allow_headers: - Authorization - Origin - Content-Type - Accept - X-Requested-With - X-Request-Id - Cache-Control allow_credentials: true tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; disablePreviews: false ocis_public_url: https://127.0.0.1:9200 webdav_namespace: /users/{{.Id.OpaqueId}} reva_gateway: com.owncloud.api.gateway reva_gateway_tls_mode: \u0026#34;\u0026#34; reva_gateway_tls_cacert: \u0026#34;\u0026#34; Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEBDAV_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEBDAV_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEBDAV_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEBDAV_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEBDAV_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYWEBDAV_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORWEBDAV_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEWEBDAV_LOG_FILE string The path to the log file. Activates logging to this file if set. WEBDAV_DEBUG_ADDR string 127.0.0.1:9119 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. WEBDAV_DEBUG_TOKEN string Token to secure the metrics endpoint. WEBDAV_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. WEBDAV_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. WEBDAV_HTTP_ADDR string 127.0.0.1:9115 The bind address of the HTTP service. WEBDAV_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSWEBDAV_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSWEBDAV_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSWEBDAV_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSWEBDAV_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_DISABLE_PREVIEWSWEBDAV_DISABLE_PREVIEWS bool false Set this option to \u0026rsquo;true\u0026rsquo; to disable rendering of thumbnails triggered via webdav access. Note that when disabled, all access to preview related webdav paths will return a 404. OCIS_URLOCIS_PUBLIC_URL string https://127.0.0.1:9200 URL, where oCIS is reachable for users. WEBDAV_WEBDAV_NAMESPACE string /users/{{.Id.OpaqueId}} CS3 path layout to use when forwarding /webdav requests OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_REVA_GATEWAY_TLS_MODE string TLS mode for grpc connection to the CS3 gateway endpoint. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_REVA_GATEWAY_TLS_CACERT string The root CA certificate used to validate the gateway\u0026rsquo;s TLS certificate. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # Autogenerated # Filename: webdav-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127."},{"id":163,"href":"/services/webfinger/configuration/","title":"Service Configuration","parent":"Webfinger","content":" Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 # Autogenerated # Filename: webfinger-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127.0.0.1:9279 token: \u0026#34;\u0026#34; pprof: false zpages: false http: addr: 127.0.0.1:9275 root: / cors: allow_origins: - https://localhost:9200 allow_methods: [] allow_headers: [] allow_credentials: false tls: enabled: false cert: \u0026#34;\u0026#34; key: \u0026#34;\u0026#34; instances: - claim: sub regex: .+ href: \u0026#39;{{.OCIS_URL}}\u0026#39; titles: en: oCIS Instance break: false relations: - http://openid.net/specs/connect/1.0/issuer - http://webfinger.owncloud/rel/server-instance idp: https://localhost:9200 ocis_url: https://localhost:9200 insecure: false Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEBFINGER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEBFINGER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEBFINGER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEBFINGER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEBFINGER_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYWEBFINGER_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORWEBFINGER_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEWEBFINGER_LOG_FILE string The path to the log file. Activates logging to this file if set. WEBFINGER_DEBUG_ADDR string 127.0.0.1:9279 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. WEBFINGER_DEBUG_TOKEN string Token to secure the metrics endpoint. WEBFINGER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. WEBFINGER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. WEBFINGER_HTTP_ADDR string 127.0.0.1:9275 The bind address of the HTTP service. WEBFINGER_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSWEBFINGER_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSWEBFINGER_CORS_ALLOW_METHODS []string [] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSWEBFINGER_CORS_ALLOW_HEADERS []string [] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSWEBFINGER_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. WEBFINGER_RELATIONS []string [http://openid.net/specs/connect/1.0/issuer http://webfinger.owncloud/rel/server-instance] A list of relation URIs or registered relation types to add to webfinger responses. See the Environment Variable Types description for more details. OCIS_URLOCIS_OIDC_ISSUERWEBFINGER_OIDC_ISSUER string https://localhost:9200 The identity provider href for the openid-discovery relation. OCIS_URLWEBFINGER_OWNCLOUD_SERVER_INSTANCE_URL string https://localhost:9200 The URL for the legacy ownCloud server instance relation (not to be confused with the product ownCloud Server). It defaults to the OCIS_URL but can be overridden to support some reverse proxy corner cases. To shard the deployment, multiple instances can be configured in the configuration file. OCIS_INSECUREWEBFINGER_INSECURE bool false Allow insecure connections to the WEBFINGER service. ","description":"Example YAML Config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 # Autogenerated # Filename: webfinger-config-example.yaml tracing: enabled: false type: \u0026#34;\u0026#34; endpoint: \u0026#34;\u0026#34; collector: \u0026#34;\u0026#34; log: level: \u0026#34;\u0026#34; pretty: false color: false file: \u0026#34;\u0026#34; debug: addr: 127."},{"id":164,"href":"/services/sharing/","title":"Sharing","parent":"Services","content":" Abstract This service implements the CS3 LinkAPI to manage public links as well as the CollaborationAPI to manage user and group shares.\nTable of Contents Service Configuration ","description":" Abstract This service implements the CS3 LinkAPI to manage public links as well as the CollaborationAPI to manage user and group shares.\nTable of Contents Service Configuration "},{"id":165,"href":"/ocis/storage/","title":"Storage","parent":"oCIS - ownCloud Infinite Scale","content":" Overview OCIS wraps reva and adds an opinionated configuration to provide two core services for the oCIS platform:\nA Spaces Registry that acts as a dictionary for storage Spaces and their metadata A Spaces Provider that organizes Resources in storage Spaces and persists them in an underlying Storage System Clients will use the Spaces Registry to poll or get notified about changes in all Spaces a user has access to. Every Space has a dedicated /dav/spaces/\u0026lt;spaceid\u0026gt; WebDAV endpoint that is served by a Spaces Provider which uses a specific reva storage driver to wrap an underlying Storage System.\nThe dashed lines in the diagram indicate requests that are made to authenticate requests or lookup the storage provider:\nAfter authenticating a request, the proxy may either use the CS3 userprovider or the accounts service to fetch the user information that will be minted into the x-access-token. The gateway will verify the JWT signature of the x-access-token or try to authenticate the request itself, e.g. using a public link token. The bottom part is lighter because we will deprecate it in favor of using only the CS3 user and group providers after moving some account functionality into reva and glauth. The metadata storage is not registered in the reva gateway to separate metadata necessary for running the service from data that is being served directly. Endpoints and references In order to reason about the request flow, two aspects in the architecture need to be understood well:\nWhat kind of namespaces are presented at the different WebDAV and CS3 endpoints? What kind of resource references are exposed or required: path or id based? ","description":"Overview OCIS wraps reva and adds an opinionated configuration to provide two core services for the oCIS platform:\nA Spaces Registry that acts as a dictionary for storage Spaces and their metadata A Spaces Provider that organizes Resources in storage Spaces and persists them in an underlying Storage System Clients will use the Spaces Registry to poll or get notified about changes in all Spaces a user has access to."},{"id":166,"href":"/services/idm/configuration_hints/","title":"Configuration Hints","parent":"IDM","content":" TLS Server Certificates By default IDM generates a self-signed certificate and key on first startup to be able to provide TLS protected services. The certificate is stored in idm/ldap.crt inside the oCIS base data directory. The key is in idm/ldap.key in the same directory. You can use a custom server certificate by setting the IDM_LDAPS_CERT and IDM_LDAPS_KEY.\nDefault / Demo Users On startup IDM creates a set of default services users that are needed internally to provide access to IDM to other oCIS services. These users are stored in a separate subtree. The base DN of that subtree is: ou=sysusers,o=libregraph-idm. The service users are:\nuid=libregraph,ou=sysusers,o=libregraph-idm: This is the only user with write access to the LDAP tree. It is used by the Graph service to look up, create, delete and modify users and groups. uid=idp,ou=sysusers,o=libregraph-idm: This user is used by the IDP service to perform user lookups for authentication. uid=reva,ou=sysusers,o=libregraph-idm: This user is used by the \u0026ldquo;reva\u0026rdquo; services user, group and auth-basic. IDM is also able to create Demo Users upon startup.\nAccess via LDAP command line tools For testing purposes it is sometimes helpful to query IDM using the ldap command line clients. To e.g. list all users, this command can be used:\nldapsearch -x -H ldaps://127.0.0.1:9235 -x -D uid=libregraph,ou=sysusers,o=libregraph-idm -w idm -b o=libregraph-idm objectclass=inetorgperson When using the default configuration with the self-signed server certificate, you might need to switch off the certificate validation using the LDAPTL_REQCERT env variable:\nLDAPTLS_REQCERT=never ldapsearch -x -H ldaps://127.0.0.1:9235 -x -D uid=libregraph,ou=sysusers,o=libregraph-idm -w idm -b o=libregraph-idm objectclass=inetorgperson ","description":"TLS Server Certificates By default IDM generates a self-signed certificate and key on first startup to be able to provide TLS protected services. The certificate is stored in idm/ldap.crt inside the oCIS base data directory. The key is in idm/ldap.key in the same directory. You can use a custom server certificate by setting the IDM_LDAPS_CERT and IDM_LDAPS_KEY.\nDefault / Demo Users On startup IDM creates a set of default services users that are needed internally to provide access to IDM to other oCIS services."},{"id":167,"href":"/apis/http/graph/spaces/","title":"Spaces","parent":"LibreGraph","content":" Spaces API Example Space Creating Spaces Create a single space POST /drives Create a space item (Enable sync) POST /drives/{drive-id}/root/children Reading Spaces List all spaces GET /drives List My Spaces GET /me/drives Modifying Spaces Set the space quota to 5GB PATCH /drives/{drive-id} Change the space name, subtitle and alias PATCH /drives/{drive-id} Disabling / Deleting Spaces Disable a space DELETE /drives/{drive-id} Restore a space PATCH /drives/{drive-id} Permanently delete a space DELETE /drives/{drive-id} Sharing Space Add member to space POST /drives/{drive-id}/root/invite Sharing space as a link POST /drives/{drive-id}/root/createLink Reading Space Permissions Listing permissions of a space GET /drives/{drive-id}/root/permissions Modifying / Deleting Space Permissions Update permissions of a drive PATCH /drives/{drive-id}/root/permissions/{perm-id} Set password of a link share POST /drives/{drive-id}/root/permissions/{perm-id}/setPassword Removing acess to a space DELETE /drives/{drive-id}/root/permissions/{perm-id} Spaces API The Spaces API is implementing a subset of the functionality of the MS Graph Drives resource.\nExample Space The JSON representation of a Drive, as handled by the Spaces API, looks like this:\n{ \u0026#34;driveAlias\u0026#34;: \u0026#34;project/mars\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-24T21:19:26.417055+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Mars\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;89ad5ad2-5fdb-4877-b8c9-601a9670b925\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 999853685, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 1000000000, \u0026#34;used\u0026#34;: 146315 }, \u0026#34;root\u0026#34;: { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;910af0061161c42d8d1224df6c4a2527\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925\u0026#34;, \u0026#34;permissions\u0026#34;: [ { \u0026#34;grantedToIdentities\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;: [ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925\u0026#34; }, \u0026#34;special\u0026#34;: [ { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;f97829324f63ce778095334cfeb0097b\\\u0026#34;\u0026#34;, \u0026#34;file\u0026#34;: { \u0026#34;mimeType\u0026#34;: \u0026#34;image/jpeg\u0026#34; }, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925!40171bea-3263-47a8-80ef-0ca20c37f45a\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2022-02-15T17:11:50.000000496+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Mars_iStock-MR1805_20161221.jpeg\u0026#34;, \u0026#34;size\u0026#34;: 146250, \u0026#34;specialFolder\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;image\u0026#34; }, \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925%2189ad5ad2-5fdb-4877-b8c9-601a9670b925/.space/Mars_iStock-MR1805_20161221.jpeg\u0026#34; }, { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;ff38b31d8f109a4fbb98ab34499a3379\\\u0026#34;\u0026#34;, \u0026#34;file\u0026#34;: { \u0026#34;mimeType\u0026#34;: \u0026#34;text/markdown\u0026#34; }, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925!e2167612-7578-46e2-8ed7-971481037bc1\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-24T21:10:23.661841+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;readme.md\u0026#34;, \u0026#34;size\u0026#34;: 65, \u0026#34;specialFolder\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;readme\u0026#34; }, \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925%2189ad5ad2-5fdb-4877-b8c9-601a9670b925/.space/readme.md\u0026#34; } ], \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925\u0026#34; } Creating Spaces Create a single space POST /drives https://owncloud.dev/libre-graph-api/#/drives/CreateDrive\nCreate a space item (Enable sync) POST /drives/{drive-id}/root/children https://owncloud.dev/libre-graph-api/#/drives.root/CreateDriveItem\nReading Spaces GET https://ocis.url/graph/{version}/{me/}drives/?{query-parameters} Component Description {version} The version of the LibreGraph API used by the client. {/me} The me component of the part is optional. If used, you only see spaces where the acting user is a regular member of. {query-parameters} Optional parameters for the request to customize the response. List all spaces GET /drives Returns a list of all available spaces, even ones where the acting user is not a regular member of. You need elevated permissions to do list all spaces. If you don\u0026rsquo;t have the elevated permissions, the result is the same like GET /me/drives.\nThe ownCloud spaces concept draws a strict line between users which can work with the content of a space and others who have the permission to manage the space. A user which is able to manage quota and space metadata does not necessarily need to be able to access the content of a space.\nSpace Admin\nThere is a global user role \u0026ldquo;Space Admin\u0026rdquo; which grants users some global permissions to manage space quota and some space metadata. This Role enables the user also to disable, restore and delete spaces. He cannot manage space members.\nSpace Manager\nThe \u0026ldquo;Space Manager\u0026rdquo; is a user which is a regular member of a space because he has been invited. In addition to being part of a space the user can also manage the memberships of the space.\nList My Spaces GET /me/drives https://owncloud.dev/libre-graph-api/#/me.drives/ListMyDrives\nModifying Spaces Modify the properties of a space. You need elevated permissions to execute this request.\nSet the space quota to 5GB PATCH /drives/{drive-id} To limit the quota of a space you need to set the quota.total value. The API response will give back all actual quota properties.\n{ \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 5368709120, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 5368709120, \u0026#34;used\u0026#34;: 0 } } Attribute Description remaining The remaining disk space in bytes. If the quota is not limited, this will show the total available disk space. state The state of the space in regards to quota usage. This can be used for visual indicators. It can be normal(\u0026lt;75%), nearing(between 75% and 89%), critical(between 90% and 99%) and exceeded(100%). total The space id. The value needs to be a space ID. used The used disk space in bytes. Request curl -L -k -X PATCH \u0026#39;https://localhost:9200/graph/v1.0/drives/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#39; \\ -H \u0026#39;Content-Type: application/json\u0026#39; \\ --data-raw \u0026#39;{ \u0026#34;quota\u0026#34;: { \u0026#34;total\u0026#34;: 5368709120 } }\u0026#39; Response - 200 OK { \u0026#34;description\u0026#34;: \u0026#34;Marketing team resources\u0026#34;, \u0026#34;driveAlias\u0026#34;: \u0026#34;project/marketing\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-18T17:13:48.385204589+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Marketing\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 5368709120, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 5368709120, \u0026#34;used\u0026#34;: 0 }, \u0026#34;root\u0026#34;: { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;f91e56554fd9305db81a93778c0fae96\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;permissions\u0026#34;: [ { \u0026#34;grantedToIdentities\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;: [ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } Change the space name, subtitle and alias PATCH /drives/{drive-id} You can change multiple space properties in one request as long as you submit a valid JSON body. Please be aware that some properties need different permissions.\nRequest curl -L -k -X PATCH \u0026#39;https://localhost:9200/graph/v1.0/drives/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#39; \\ -H \u0026#39;Content-Type: application/json\u0026#39; \\ --data-raw \u0026#39;{ \u0026#34;name\u0026#34;: \u0026#34;Mars\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Mission to mars\u0026#34;, \u0026#34;driveAlias\u0026#34;: \u0026#34;project/mission-to-mars\u0026#34; }\u0026#39; Response - 200 OK { \u0026#34;description\u0026#34;: \u0026#34;Mission to mars\u0026#34;, \u0026#34;driveAlias\u0026#34;: \u0026#34;project/mission-to-mars\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-19T14:17:36.094283+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Mars\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 15, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 15, \u0026#34;used\u0026#34;: 0 }, \u0026#34;root\u0026#34;: { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;f5fee4fdfeedd6f98956500779eee15e\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;permissions\u0026#34;: [ { \u0026#34;grantedToIdentities\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;: [ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } Disabling / Deleting Spaces Disable a space DELETE /drives/{drive-id} This operation will make the space content unavailable for all space members. No data will be deleted.\nRequest curl -L -k -X DELETE \u0026#39;https://localhost:9200/graph/v1.0/drives/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff/\u0026#39; Response - 204 No Content This response has no body value.\nA disabled space will appear in listings with a root.deleted.state=trashed property. The space description and the space image will not be readable anymore.\n{ \u0026#34;description\u0026#34;: \u0026#34;Marketing team resources\u0026#34;, \u0026#34;driveAlias\u0026#34;: \u0026#34;project/marketing\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-19T14:17:36.094283+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Marketing\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;total\u0026#34;: 15 }, \u0026#34;root\u0026#34;: { \u0026#34;deleted\u0026#34;: { \u0026#34;state\u0026#34;: \u0026#34;trashed\u0026#34; }, \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;f5fee4fdfeedd6f98956500779eee15e\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;permissions\u0026#34;: [ { \u0026#34;grantedToIdentities\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;: [ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } Restore a space PATCH /drives/{drive-id} This operation will make the space content available again to all members. No content will be changed.\nTo restore a space, the Header Restore: T needs to be set. Request curl -L -X PATCH \u0026#39;https://localhost:9200/graph/v1.0/drives/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff/\u0026#39; \\ -H \u0026#39;Restore: T\u0026#39; \\ -H \u0026#39;Content-Type: text/plain\u0026#39; \\ --data-raw \u0026#39;{}\u0026#39; This request needs an empty body (\u0026ndash;data-raw \u0026lsquo;{}\u0026rsquo;) to fulfil the standard libregraph specification even when the body is not needed. Response - 200 OK { \u0026#34;description\u0026#34;: \u0026#34;Marketing team resources\u0026#34;, \u0026#34;driveAlias\u0026#34;: \u0026#34;project/marketing\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-19T14:17:36.094283+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Marketing\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 15, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 15, \u0026#34;used\u0026#34;: 0 }, \u0026#34;root\u0026#34;: { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;f5fee4fdfeedd6f98956500779eee15e\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;permissions\u0026#34;: [ { \u0026#34;grantedToIdentities\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;: [ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } Permanently delete a space DELETE /drives/{drive-id} This operation will delete a space and all its data permanently. This is restricted to spaces which are already disabled.\nTo delete a space, the Header Purge: T needs to be set.\nRequest curl -L -X DELETE \u0026#39;https://localhost:9200/graph/v1.0/drives/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#39; \\ -H \u0026#39;Purge: T\u0026#39; This request will delete a space and all its content permanently. This operation cannot be reverted. Response - 204 No Content This response has no body value. Response - 400 Bad Request The space to be deleted was not disabled before.\n{ \u0026#34;error\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;invalidRequest\u0026#34;, \u0026#34;innererror\u0026#34;: { \u0026#34;date\u0026#34;: \u0026#34;2023-01-24T19:57:19Z\u0026#34;, \u0026#34;request-id\u0026#34;: \u0026#34;f62af40f-bc18-475e-acd7-e9008d6bd326\u0026#34; }, \u0026#34;message\u0026#34;: \u0026#34;error: bad request: can\u0026#39;t purge enabled space\u0026#34; } } Sharing Space Add member to space POST /drives/{drive-id}/root/invite https://owncloud.dev/libre-graph-api/#/drives.permissions/Invite\nSharing space as a link POST /drives/{drive-id}/root/createLink https://owncloud.dev/libre-graph-api/#/drives.root/CreateLinkSpaceRoot\nReading Space Permissions Listing permissions of a space GET /drives/{drive-id}/root/permissions https://owncloud.dev/libre-graph-api/#/drives.root/ListPermissionsSpaceRoot\nModifying / Deleting Space Permissions Update permissions of a drive PATCH /drives/{drive-id}/root/permissions/{perm-id} https://owncloud.dev/libre-graph-api/#/drives.root/UpdatePermissionSpaceRoot\nSet password of a link share POST /drives/{drive-id}/root/permissions/{perm-id}/setPassword https://owncloud.dev/libre-graph-api/#/drives.root/SetPermissionPasswordSpaceRoot\nRemoving acess to a space DELETE /drives/{drive-id}/root/permissions/{perm-id} https://owncloud.dev/libre-graph-api/#/drives.root/DeletePermissionSpaceRoot\n","description":"Spaces API Example Space Creating Spaces Create a single space POST /drives Create a space item (Enable sync) POST /drives/{drive-id}/root/children Reading Spaces List all spaces GET /drives List My Spaces GET /me/drives Modifying Spaces Set the space quota to 5GB PATCH /drives/{drive-id} Change the space name, subtitle and alias PATCH /drives/{drive-id} Disabling / Deleting Spaces Disable a space DELETE /drives/{drive-id} Restore a space PATCH /drives/{drive-id} Permanently delete a space DELETE /drives/{drive-id} Sharing Space Add member to space POST /drives/{drive-id}/root/invite Sharing space as a link POST /drives/{drive-id}/root/createLink Reading Space Permissions Listing permissions of a space GET /drives/{drive-id}/root/permissions Modifying / Deleting Space Permissions Update permissions of a drive PATCH /drives/{drive-id}/root/permissions/{perm-id} Set password of a link share POST /drives/{drive-id}/root/permissions/{perm-id}/setPassword Removing acess to a space DELETE /drives/{drive-id}/root/permissions/{perm-id} Spaces API The Spaces API is implementing a subset of the functionality of the MS Graph Drives resource."},{"id":168,"href":"/services/idp/theming/","title":"Theming","parent":"IDP","content":" Intro Customizing assets Static assets CSS Containers What pages to theme Components Images Locales Building assets Intro Our default IDP UI is built with the LibreGraph Connect React app. Even though this app comes already with a simple theming options, we have compiled our own edited version of the app with more advanced changes than the default theming offers. Because of that, it is not possible at the moment to do any kind of easy theming and including custom theme means again compiling custom assets.\nCustomizing assets Depending on what changes you wish to do with the theme, there are several files you can edit. All of them are located in the idp/ui folder.\nStatic assets If you wish to add static assets like images, CSS, etc., you can add them to idp/ui/public/static. The public folder also contains the index.html file which can be adjusted to your needs.\nCSS LibreGraph Connect is built with kpop, a collection of React UI components. To include any custom styles on top of that collection, you can define them in the idp/ui/src/app.css file. These rules will take precedence over the kpop.\nContainers Layouts of all pages are located in the idp/ui/src/containers folder. By editing any of files in that folder, you can do any kind of changes in the layout and create advanced themes. It is, however, important to be careful when touching this code as it imports also actions which are responsible for the login flow.\nWhat pages to theme Login Login - login form used to authenticate the users Consent - consent page used to authorise apps for already signed-in users Chooseaccount - page with a list of accounts to choose from Goodbye Goodbyescreen - goodbye message displayed to users after they signed out Welcome Welcomescreen - welcome message displayed to users after they signed in Components idp/ui/src/components folder contains all custom components which are then imported into containers.\nImages Every image placed in idp/ui/src/images can be directly import into components or containers and will be optimized when compiling assets.\nLocales If you need to edit or add new locales, you can do so with json files in the idp/ui/src/locales folder. If adding new locale, make sure to add it also in the index.js file in the same folder.\nBuilding assets In order to build all assets, run pnpm build in the idp folder. This script will compile all assets and output them into idp/assets folder.\nAt this point, you have two possible ways how to deploy your new theme:\nrun make generate in the root folder of your oCIS clone and generate the new assets start the IDP service directly with custom assets by specifying the env var IDP_ASSET_PATH ","description":"Intro Customizing assets Static assets CSS Containers What pages to theme Components Images Locales Building assets Intro Our default IDP UI is built with the LibreGraph Connect React app. Even though this app comes already with a simple theming options, we have compiled our own edited version of the app with more advanced changes than the default theming offers. Because of that, it is not possible at the moment to do any kind of easy theming and including custom theme means again compiling custom assets."},{"id":169,"href":"/ocis/identity-provider/oidc/","title":"OIDC","parent":"Identity Provider","content":"Infinite Scale has implemented OpenID Connect (OIDC) for authentication. OIDC defines a discovery mechanism, called OpenID Connect Discovery, where an OpenID server publishes its metadata at a well-known URL, typically:\nhttps://ocis.test/.well-known/openid-configuration\nThis URL returns a JSON listing of the OpenID/OAuth endpoints, supported scopes and claims, public keys used to sign the tokens, and other details. The clients can use this information to construct a request to the OpenID server. The field names and values are defined in the OpenID Connect Discovery Specification. Here is an example of data returned:\n{ \u0026#34;issuer\u0026#34;: \u0026#34;https://ocis.test\u0026#34;, \u0026#34;authorization_endpoint\u0026#34;: \u0026#34;https://ocis.test/signin/v1/identifier/_/authorize\u0026#34;, \u0026#34;token_endpoint\u0026#34;: \u0026#34;https://ocis.test/konnect/v1/token\u0026#34;, \u0026#34;userinfo_endpoint\u0026#34;: \u0026#34;https://ocis.test/konnect/v1/userinfo\u0026#34;, \u0026#34;end_session_endpoint\u0026#34;: \u0026#34;https://ocis.test/signin/v1/identifier/_/endsession\u0026#34;, \u0026#34;check_session_iframe\u0026#34;: \u0026#34;https://ocis.test/konnect/v1/session/check-session.html\u0026#34;, \u0026#34;jwks_uri\u0026#34;: \u0026#34;https://ocis.test/konnect/v1/jwks.json\u0026#34;, \u0026#34;scopes_supported\u0026#34;: [ \u0026#34;openid\u0026#34;, \u0026#34;offline_access\u0026#34;, \u0026#34;profile\u0026#34;, \u0026#34;email\u0026#34;, \u0026#34;LibgreGraph.UUID\u0026#34;, \u0026#34;LibreGraph.RawSub\u0026#34; ], \u0026#34;response_types_supported\u0026#34;: [ \u0026#34;id_token token\u0026#34;, \u0026#34;id_token\u0026#34;, \u0026#34;code id_token\u0026#34;, \u0026#34;code id_token token\u0026#34; ], \u0026#34;subject_types_supported\u0026#34;: [ \u0026#34;public\u0026#34; ], \u0026#34;id_token_signing_alg_values_supported\u0026#34;: [ \u0026#34;RS256\u0026#34;, \u0026#34;RS384\u0026#34;, \u0026#34;RS512\u0026#34;, \u0026#34;PS256\u0026#34;, \u0026#34;PS384\u0026#34;, \u0026#34;PS512\u0026#34; ], \u0026#34;userinfo_signing_alg_values_supported\u0026#34;: [ \u0026#34;RS256\u0026#34;, \u0026#34;RS384\u0026#34;, \u0026#34;RS512\u0026#34;, \u0026#34;PS256\u0026#34;, \u0026#34;PS384\u0026#34;, \u0026#34;PS512\u0026#34; ], \u0026#34;request_object_signing_alg_values_supported\u0026#34;: [ \u0026#34;ES256\u0026#34;, \u0026#34;ES384\u0026#34;, \u0026#34;ES512\u0026#34;, \u0026#34;RS256\u0026#34;, \u0026#34;RS384\u0026#34;, \u0026#34;RS512\u0026#34;, \u0026#34;PS256\u0026#34;, \u0026#34;PS384\u0026#34;, \u0026#34;PS512\u0026#34;, \u0026#34;none\u0026#34;, \u0026#34;EdDSA\u0026#34; ], \u0026#34;token_endpoint_auth_methods_supported\u0026#34;: [ \u0026#34;client_secret_basic\u0026#34;, \u0026#34;none\u0026#34; ], \u0026#34;token_endpoint_auth_signing_alg_values_supported\u0026#34;: [ \u0026#34;RS256\u0026#34;, \u0026#34;RS384\u0026#34;, \u0026#34;RS512\u0026#34;, \u0026#34;PS256\u0026#34;, \u0026#34;PS384\u0026#34;, \u0026#34;PS512\u0026#34; ], \u0026#34;claims_parameter_supported\u0026#34;: true, \u0026#34;claims_supported\u0026#34;: [ \u0026#34;iss\u0026#34;, \u0026#34;sub\u0026#34;, \u0026#34;aud\u0026#34;, \u0026#34;exp\u0026#34;, \u0026#34;iat\u0026#34;, \u0026#34;name\u0026#34;, \u0026#34;family_name\u0026#34;, \u0026#34;given_name\u0026#34;, \u0026#34;email\u0026#34;, \u0026#34;email_verified\u0026#34; ], \u0026#34;request_parameter_supported\u0026#34;: true, \u0026#34;request_uri_parameter_supported\u0026#34;: false } Refer to the Authorization section for example usages and details.\n","description":"Infinite Scale has implemented OpenID Connect (OIDC) for authentication. OIDC defines a discovery mechanism, called OpenID Connect Discovery, where an OpenID server publishes its metadata at a well-known URL, typically:\nhttps://ocis.test/.well-known/openid-configuration\nThis URL returns a JSON listing of the OpenID/OAuth endpoints, supported scopes and claims, public keys used to sign the tokens, and other details. The clients can use this information to construct a request to the OpenID server. The field names and values are defined in the OpenID Connect Discovery Specification."},{"id":170,"href":"/apis/http/tus_upload/","title":"Resumable Upload","parent":"Http","content":"Infinite Scale supports the tus resumable-upload protocol, which is a robust, modular, and open protocol designed to resume large file uploads reliably over HTTP. In situations where file uploads might be interrupted due to network issues, browser crashes, or other unforeseen interruptions, tus ensures that uploads can be resumed from the point of failure without losing data. This documentation shows some basic examples, refer tus official site for more details.\nSupported tus Features The backend announces certain tus features to clients. WebDAV responses come with tus HTTP headers for the offical tus features, and additional, ownCloud specific features are announced via the capabilities endpoint (e.g. https://localhost:9200/ocs/v1.php/cloud/capabilities?format=json).\nThe following snippet shows the relevant part of the server capabilities of Infinite Scale that concerns the tus upload:\n{ \u0026#34;ocs\u0026#34;: { \u0026#34;data\u0026#34;: { \u0026#34;capabilities\u0026#34;: { \u0026#34;files\u0026#34;: { \u0026#34;tus_support\u0026#34;: { \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;resumable\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;extension\u0026#34;: \u0026#34;creation,creation-with-upload\u0026#34;, \u0026#34;max_chunk_size\u0026#34;: 10000000, \u0026#34;http_method_override\u0026#34;: \u0026#34;\u0026#34; } } } } } } } Parameter Environment Variable Default Value Description max_chunk_size FRONTEND_UPLOAD_MAX_CHUNK_SIZE 10000000 Announces the max chunk sizes in bytes for uploads via the clients. Upload in Chunks Create an Upload URL The client must send a POST request against a known upload creation URL to request a new upload resource. The filename has to be provided in base64-encoded format.\nExample:\n# base64 encoded filename \u0026#39;tustest.txt\u0026#39; is \u0026#39;dHVzdGVzdC50eHQ=\u0026#39; echo -n \u0026#39;tustest.txt\u0026#39; | base64 Request curl -ks -XPOST https://ocis.test/remote.php/dav/spaces/8d72036d-14a5-490f-889e-414064156402$196ac304-7b88-44ce-a4db-c4becef0d2e0 \\ -H \u0026#34;Authorization: Bearer eyJhbGciOiJQUzI...\u0026#34;\\ -H \u0026#34;Tus-Resumable: 1.0.0\u0026#34; \\ -H \u0026#34;Upload-Length: 10\u0026#34; \\ -H \u0026#34;Upload-Metadata: filename dHVzdGVzdC50eHQ=\u0026#34; Response - 201 Created \u0026lt; HTTP/1.1 201 Created \u0026lt; Access-Control-Allow-Headers: Tus-Resumable, Upload-Length, Upload-Metadata, If-Match \u0026lt; Access-Control-Allow-Origin: * \u0026lt; Access-Control-Expose-Headers: Tus-Resumable, Upload-Offset, Location \u0026lt; Content-Length: 0 \u0026lt; Content-Security-Policy: default-src \u0026#39;none\u0026#39;; \u0026lt; Date: Mon, 16 Oct 2023 08:49:39 GMT \u0026lt; Location: https://ocis.test/data/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZXZhIiwiZXhwIjoxNjk3NTMyNTc5LCJpYXQiOjE2OTc0NDYxNzksInRhcmdldCI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTE1OC9kYXRhL3R1cy8zYTU3ZWZlMS04MzE0LTQ4MGEtOWY5Ny04N2Q1YzBjYTJhMTgifQ.FbrlY7mdOfsbFgMrP8OtcHlCEq72a2ZVnPD2iBo9MfM \u0026lt; Tus-Extension: creation,creation-with-upload,checksum,expiration \u0026lt; Tus-Resumable: 1.0.0 \u0026lt; Vary: Origin \u0026lt; X-Content-Type-Options: nosniff \u0026lt; X-Download-Options: noopen \u0026lt; X-Frame-Options: SAMEORIGIN \u0026lt; X-Permitted-Cross-Domain-Policies: none \u0026lt; X-Request-Id: xxxxxxxxxxxxxxxxxxxxxx \u0026lt; X-Robots-Tag: none \u0026lt; X-Xss-Protection: 1; mode=block \u0026lt; * Connection #0 to host localhost left intact The server will return a temporary upload URL in the location header of the response:\n\u0026lt; Location: https://ocis.test/data/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZXZhIiwiZXhwIjoxNjk3NTMyNTc5LCJpYXQiOjE2OTc0NDYxNzksInRhcmdldCI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTE1OC9kYXRhL3R1cy8zYTU3ZWZlMS04MzE0LTQ4MGEtOWY5Ny04N2Q1YzBjYTJhMTgifQ.FbrlY7mdOfsbFgMrP8OtcHlCEq72a2ZVnPD2iBo9MfM Upload the First Chunk Once a temporary upload URL has been created, a client can send a PATCH request to upload a file. The file content should be sent in the body of the request: Request curl -ks -XPATCH https://temporary-upload-url \\ -H \u0026#34;Authorization: Bearer eyJhbGciOiJQUzI...\u0026#34; \\ -H \u0026#34;Tus-Resumable: 1.0.0\u0026#34; \\ -H \u0026#34;Upload-Offset: 0\u0026#34; \\ -H \u0026#34;Content-Type: application/offset+octet-stream\u0026#34; -d \u0026#34;01234\u0026#34; Response - 204 No Content \u0026lt; HTTP/1.1 204 No Content \u0026lt; Date: Tue, 17 Oct 2023 04:10:52 GMT \u0026lt; Oc-Fileid: 8d72036d-14a5-490f-889e-414064156402$73bb5450-816b-4cae-90aa-1f96adc95bd4!84e319e4-de1d-4dd8-bbd0-e51d933cdbcd \u0026lt; Tus-Resumable: 1.0.0 \u0026lt; Upload-Expires: 1697602157 \u0026lt; Upload-Offset: 5 \u0026lt; Vary: Origin \u0026lt; X-Content-Type-Options: nosniff \u0026lt; X-Request-Id: xxxxxxxxxxxxxxxxxxxxxx \u0026lt; * Connection #0 to host localhost left intact Upload Further Chunks After the first chunk is uploaded, the second chunk can be uploaded by pointing Upload-Offset to exact position that was returned in the first response. Upload process will not be marked as complete until the total uploaded content size matches the Upload-Length specified during the creation of the temporary URL.\nRequest curl -ks -XPATCH https://temporary-upload-url \\ -H \u0026#34;Authorization: Bearer eyJhbGciOiJQUzI...\u0026#34; \\ -H \u0026#34;Tus-Resumable: 1.0.0\u0026#34; \\ -H \u0026#34;Upload-Offset: 5\u0026#34; \\ -H \u0026#34;Content-Type: application/offset+octet-stream\u0026#34; -d \u0026#34;56789\u0026#34; Response - 204 No Content \u0026lt; HTTP/1.1 204 No Content \u0026lt; Date: Tue, 17 Oct 2023 04:11:00 GMT \u0026lt; Oc-Fileid: 8d72036d-14a5-490f-889e-414064156402$73bb5450-816b-4cae-90aa-1f96adc95bd4!84e319e4-de1d-4dd8-bbd0-e51d933cdbcd \u0026lt; Tus-Resumable: 1.0.0 \u0026lt; Upload-Expires: 1697602157 \u0026lt; Upload-Offset: 10 \u0026lt; Vary: Origin \u0026lt; X-Content-Type-Options: nosniff \u0026lt; X-Request-Id: xxxxxxxxxxxxxxxxxxxxxx \u0026lt; * Connection #0 to host localhost left intact Upload-Offset header indicates the byte position in the target file where the server should start writing the upload content. It ensures data integrity and order during the upload process. Creation with Upload Request curl -ks -XPOST https://ocis.test/remote.php/dav/spaces/{space-id} \\ -H \u0026#34;Authorization: Bearer eyJhbGciOiJQUzI...\u0026#34; \\ -H \u0026#34;Tus-Resumable: 1.0.0\u0026#34; \\ -H \u0026#34;Upload-Length: 14\u0026#34; \\ -H \u0026#34;Content-Type: application/offset+octet-stream\u0026#34; \\ -H \u0026#34;Upload-Metadata: filename dGVzdC50eHQ=\u0026#34; \\ -H \u0026#34;Tus-Extension: creation-with-upload\u0026#34; \\ -d \u0026#34;upload content\u0026#34; Response - 201 Created \u0026lt; HTTP/1.1 201 Created \u0026lt; Access-Control-Allow-Headers: Tus-Resumable, Upload-Length, Upload-Metadata, If-Match \u0026lt; Access-Control-Allow-Origin: * \u0026lt; Access-Control-Expose-Headers: Tus-Resumable, Upload-Offset, Location \u0026lt; Content-Length: 0 \u0026lt; Content-Security-Policy: default-src \u0026#39;none\u0026#39;; \u0026lt; Content-Type: text/plain \u0026lt; Date: Mon, 16 Oct 2023 04:18:25 GMT \u0026lt; Etag: \u0026#34;372c96743f68bc40e789124d30567371\u0026#34; \u0026lt; Last-Modified: Mon, 16 Oct 2023 04:18:25 +0000 \u0026lt; Location: https://ocis.test/data/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZXZhIiwiZXhwIjoxNjk3NTE2MzA1LCJpYXQiOjE2OTc0Mjk5MDUsInRhcmdldCI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTE1OC9kYXRhL3R1cy82NjlhODBlZi1hN2VjLTQwYTAtOGNmOS05MTgwNTVhYzlkZjAifQ.yq-ofJYnJ9FLML7Z_jki1FJQ7Ulbt9O_cmLe6V411A4 \u0026lt; Oc-Etag: \u0026#34;372c96743f68bc40e789124d30567371\u0026#34; \u0026lt; Oc-Fileid: 44d3e1e0-6c01-4b94-9145-9d0068239fcd$446bdad4-4b27-41f1-afce-0881f202a214!d7c292a6-c395-4e92-bf07-2c1663aec8dd \u0026lt; Oc-Perm: RDNVWZP \u0026lt; Tus-Extension: creation,creation-with-upload,checksum,expiration \u0026lt; Tus-Resumable: 1.0.0 \u0026lt; Upload-Expires: 1697516305 \u0026lt; Upload-Offset: 14 \u0026lt; Vary: Origin \u0026lt; X-Content-Type-Options: nosniff \u0026lt; X-Download-Options: noopen \u0026lt; X-Frame-Options: SAMEORIGIN * TLSv1.2 (IN), TLS header, Supplemental data (23): { [5 bytes data] \u0026lt; X-Permitted-Cross-Domain-Policies: none \u0026lt; X-Request-Id: xxxxxxxxxxxxxxxxxxxxxx \u0026lt; X-Robots-Tag: none \u0026lt; X-Xss-Protection: 1; mode=block \u0026lt; * Connection #0 to host localhost left intact The Upload-Length header of the request has to contain the exact size of the upload content in byte. Supported Upload-Metadata Upload-metadata key-value pairs aren\u0026rsquo;t specified in the general tus docs. The following ones are supported in the ownCloud ecosystem:\nParameter (key) Example (value, MUST be Base64 encoded) Description name OR filename (mandatory) example.pdf Filename mtime (recommended) 1701708712 Modification time (Unix time format) checksum (recommended) SHA1 a330de5886e5a92d78fb3f8d59fe469857759e72 Checksum, computed from the client type OR filetype application/pdf MIME Type, sent by the web UI relativePath undefined File path relative to the folder that is being uploaded, including the filename. Sent by the web UI spaceId 8748cddf-66b7-4b85-91a7-e6d08d8e1639$a9778d63-21e7-4d92-9b47-1b81144b9993 Sent by the web UI spaceName Personal Sent by the web UI driveAlias personal/admin Sent by the web UI driveType personal Sent by the web UI currentFolder / Sent by the web UI currentFolderId 8748cddf-66b7-4b85-91a7-e6d08d8e1639$a9778d63-21e7-4d92-9b47-1b81144b9993!a9778d63-21e7-4d92-9b47-1b81144b9993 Sent by the web UI uppyId uppy-example/pdf-1e-application/pdf-238300 Sent by the web UI relativeFolder File path relative to the folder that is being uploaded, without filename. Sent by the web UI. tusEndpoint https://ocis.ocis-traefik.latest.owncloud.works/remote.php/dav/spaces/8748cddf-66b7-4b85-91a7-e6d08d8e1639$a9778d63-21e7-4d92-9b47-1b81144b9993 Sent by the web UI uploadId 71d5f878-a96c-4d7b-9627-658d782c93d7 Sent by the web UI topLevelFolderId undefined Sent by the web UI routeName files-spaces-generic Sent by the web UI routeDriveAliasAndItem cGVyc29uYWwvYWRtaW4= Sent by the web UI routeShareId Share ID when uploading into a received folder share. Sent by the web UI ","description":"Infinite Scale supports the tus resumable-upload protocol, which is a robust, modular, and open protocol designed to resume large file uploads reliably over HTTP. In situations where file uploads might be interrupted due to network issues, browser crashes, or other unforeseen interruptions, tus ensures that uploads can be resumed from the point of failure without losing data. This documentation shows some basic examples, refer tus official site for more details."},{"id":171,"href":"/ocis/adr/0021-service-accounts/","title":"21. Service accounts","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @c0rby Date: 2023-01-18 Context and Problem Statement There are three levels of security checks in a microservice web application that uses OpenID Connect:\nscope claims limit the possible operations to what the user (or admin on behalf of the organization) consented to service authorization limit the possible operations to what specific services are allowed to do, on behalf of users or even without them permission checks limit the possible operations to the relationships between subject, permission and resource allow This ADR deals with a prerequisite for service authorization: service accounts.\nSome services need access to file content without a user being logged in. We currently pass the owner or manager of a space in events which allows the search service to impersonate that user to extract metadata from the changed resource. There are two problems with this:\nThe service could get all permissions of the user and gain write permission There is a race condition where the user in the event might no longer have read permission, causing the index to go stale The race condition will become more of an issue when we start working on a workflow engine.\nHow can we grant services the least amount of permissions required for their purpose?\nDecision Drivers It should be possible to represent this as servicePrincipals in the libregraph API, similar to the MS Graph servicePrincipal. Services should check permissions using the oCIS permissions or reva auth service, we don\u0026rsquo;t want to introduce a new mechanism for this Considered Options Service Accounts Impersonate Space-Owners Decision Outcome Chosen option: Service Accounts\nConsequences Good, because it allows provisioning permissions for services Good, because it uses existing CS3 concepts Good, because it uses the existing permissions service Good, because it can be mapped to libre graph permissions Bad, because we have to make the reva auth manager aware of CS3 USER_TYPE_SERVICE Bad, because we have to provision and manage service accounts on init Bad, because external APIs may need to filter out service accounts Bad, because we need to persist service accounts in addition to normal user accounts Pros and Cons of the Options Service Accounts Make the reva auth manager and registry aware of CS3 users of type USER_TYPE_SERVICE. Then we can provision service accounts at oCIS initialization and use the permissions service to check permissions. When assigning permissions we use the permission constraints to define the scope of permissions, see Permission Checks for more details.\nTo authenticate service accounts the static reva auth registry needs to be configured with a new auth provider for type service. The actual provider can use a plain JSON file or JSONCS3 that is provisioned once with ocis init. TODO Furthermore, the user provider needs to be able to return users for service accounts.\nGood, because we could replace machine auth with specific service accounts and no longer have to distribute a shared secret everywhere Bad, because we don\u0026rsquo;t know if a there are places in the code that try to look up a user with USER_TYPE_SERVICE at the cs3 users service \u0026hellip; they might not exist there \u0026hellip; or do we have to implement a userregistry, similar to the authregistry? Bad, because we have to provision and manage service accounts on init Bad, because we have to write code to manage service accounts or at least filter them out in the admin ui Impersonate Space-Owners We could implement a new auth manager that can authenticate space owners, a CS3 user type we introduced for project spaces which \u0026lsquo;have no owner\u0026rsquo;, only one or more managers.\nGood, because it reuses the space owner user type Bad, because the space owner always has write permission Bad, because we don\u0026rsquo;t know if a there are places in the code that try to look up a user with USER_TYPE_SPACE_OWNER at the cs3 users service \u0026hellip; they might not exist there \u0026hellip; or do we have to implement a userregistry, similar to the authregistry? Bad, because it feels like another hack and does not protect against compromised services that try to execute operations that the user did not consent to. Links MS Graph servicePrincipal reva auth managers - lacks docs for auth_machine, to be found in the code Permission checks When checking permissions we do not check for global permissions but for the concrete permission. Global permissions describe permissions that are used when assigning permissions, e.g. the index service account has the read permission constrained to tenant. The concrete permission check always contains a resource and a specific permission like Resource.Read or Space.Delete. That we currently check if a user has the delete-all-spaces permission is wrong. It should instead check if the user has the permission Space.Delete on a specific space. The permissions service can implement the check by taking the permission constraint into account.\nAnother example would be a Resource.Read check for a specific resource. Normal users like the demo users Einstein and Marie would have the permission Resource.ReadWrite with the constraint ALL (which limits them to all files they own and that have been shared with them). The permissions service can return true. Service accounts like the indexer would have Resource.Read with the constraint TENANT and thus be granted read access to all resources.\nIn the storage drive implementation we can check the ACLs first (which would allow service accounts that are known to the underlying storage system, e.g. EOS to access the resource) and then make a call to the permissions service. At least for the Read Resource permission. Other permission checks can be introduced as needed.\nThe permission names and constraints are different from the MS Graph API. Giving permission like Files.ReadWrite.All a different meaning, depending on the type of user (for normal users it means all files they have access to, for service accounts it means all files in the organization) is a source of confusion which only gets worse when there are two different UUIDs for this.\n","description":"Status: proposed Deciders: @butonic, @c0rby Date: 2023-01-18 Context and Problem Statement There are three levels of security checks in a microservice web application that uses OpenID Connect:\nscope claims limit the possible operations to what the user (or admin on behalf of the organization) consented to service authorization limit the possible operations to what specific services are allowed to do, on behalf of users or even without them permission checks limit the possible operations to the relationships between subject, permission and resource allow This ADR deals with a prerequisite for service authorization: service accounts."},{"id":172,"href":"/ocis/adr/0022-sharing-and-space-management-api/","title":"22. Sharing and Space Management API","parent":"Architecture Decisions","content":" Status: accepted Deciders: @JammingBen @butonic @theonering @kobergj @micbar Date: 2023-08-08 Technical Story: Public issue\nContext and Problem Statement In the early days of the rewrite of ownCloud it was an important goal to keep all important APIs compatible with ownCloud 10. Infinite Scale embraced that goal until version 1.0.0.\nAfter that first release, the focus changed.\nInfinite Scale started the spaces feature which brings a whole new set of APIs and concepts. We made the conscious decision to keep the sharing API as it was, live with its shortcomings and create workarounds to support spaces. We have come a long way so far. Now we need to move on. The Web Client has made the decision to drop the support of ownCloud 10 and keep version 7.0 alive for ownCloud 10 to keep the easy migration path intact.\nThe desktop and mobile client platforms were suffering from poor support from the server and can now move forward with a new API implementation. By using openApi 3 and all the needed tooling around it developing the LibreGraph specification, documentaion and SDKs, we now feel confident to move on.\nDecision Drivers The Path based nature of the OCS API lacks spaces support The permissions bitmask is no longer working when using sharing roles We want to support server announced sharing roles which are different per instance or scope We need to get rid of the currently hardcoded sharing roles in our clients New sharing roles and permissions are needed to support secure view and other new features Space Memberships are not shares and need to have different semantics Elevation of permissions in subfolders or full denials should be possible without creating a new share Third party integrations need generated SDKs in different languages to speed up the development Considered Options New OCS Api Version Sharing via LibreGraph Decision Outcome Chosen option: \u0026ldquo;LibreGraph\u0026rdquo;\nPositive Consequences: We can create a new clean API which fits the spaces concept LibreGraph embraces OData which is a known API pattern Sharing will be integrated in the existing SDKs and documentation Removing the OCS Api reduces complexity Removing the OCS Api makes the clients codebases smaller and removes manually maintained parts of the SDKs The extra error handling for the OCS API can be dropped from our clients Negative Consequences: We need to deprecate and remove the OCS API Existing third party integrations need to do some refactoring Pros and Cons of the Options New OCS Api Version To overcome the limitations of the OCS 2.0 API we could create a new major version with the spaces concept in mind. This would give us the opportunity to create a new openApi Spec.\nGood, because the workarounds from version 2.0 could be dropped Bad, because we would need to deprecate the version 2.0 Bad, because we would need to maintain a separate specification / repository Bad, because it would create the need to use two different SDKs in our clients Bad, because we would need to implement query parameters and filters on our own Bad, because sharing information could not be included in the spaces API via queries or filters Sharing via LibreGraph Integrate Sharing into the LibreGraph API by using the already existing toolchain and documentation flows.\nGood, because that reduces the number of SDKs Good, because it reduces the number of APIs Good, because spaces and shares can be used together in queries and filters Good, because we would use the existing OData pattern Bad, because we need to deprecate the OCS API Links LibreGraph API OData OpenAPI Standard ","description":"Status: accepted Deciders: @JammingBen @butonic @theonering @kobergj @micbar Date: 2023-08-08 Technical Story: Public issue\nContext and Problem Statement In the early days of the rewrite of ownCloud it was an important goal to keep all important APIs compatible with ownCloud 10. Infinite Scale embraced that goal until version 1.0.0.\nAfter that first release, the focus changed.\nInfinite Scale started the spaces feature which brings a whole new set of APIs and concepts."},{"id":173,"href":"/ocis/adr/0023-index-and-store-metadata/","title":"23. Index and store metadata","parent":"Architecture Decisions","content":" Status: accepted Deciders: @butonic, @theonering, @micbar, @dragotin Date: 2023-10-17 Context and Problem Statement ownCloud Infinite Scale is supposed to become a data platform and as such it needs to provide access to metadata. Currently only metadata common to all file types (filesize, mime-type, \u0026hellip;) is stored in the index and the metadata storage. We want to make other file type specific metadata available to consumers of our internal and external APIs. Simple examples would be audio metadata like artist, album and title or exif metadata in images.\nDecision Drivers Considered Options Store subset of extracted metadata required for graph api Store subset of extracted metadata specified by another standard Store everything from extractors Decision Outcome Chosen option: \u0026ldquo;store only subset of extracted metadata required for graph api\u0026rdquo;, because Graph API is a simple common denominator and we want to avoid putting the complexity of mapping non-standardized data from potentially different extractors in several areas of the code base. Storage and index keys are determined by facet and property name, e.g. audio.artist for the artist in a music file. Storage keys are additionally prefixed with libre.graph., i.e. libre.graph.audio.artist. Handling Graph API specific metadata is a first step towards handling metadata. More generic and extensible handling of arbitrary metadata can be added later.\nPositive Consequences: Graph API endpoint implementation is trivial Documented public api and stored data are the same Reasonable complexity for the initial implementation Negative Consequences: Graph API is limited, so not all available metadata can be accessed Switching the internal format and adding more metadata later will require re-indexing Pros and Cons of the Options Store Subset of Extracted Metadata Required for Graph API Use Graph API facets and properties for determining the subset of stored metadata and the storage key. The index key for the artist property of the audio facet is audio.artist, the storage key is additionally prefixed with libre.graph..\nGood, because central mapping of values happens consistently and only once in a central place it happens in the extractor (integration) which likely knows best how to map metadata to standard properties Good, because when multiple extractors share a common set of provided values, applications can rely on the mapping and the complexity is kept low Bad, because not all metadata is available, not everything can be searched Good, because Graph API already chose a reasonable subset of most interesting properties Store Subset of Extracted Metadata Specified by Another Standard There are a bunch of metadata standards but none of them is really universal. There is always something that is only supported in one or the other standard. Tika for example extracts audio metadata using a mixture of Dublin Core and XMP Dynamic Media keys.\nBad, because it makes implementing a new extractor integration harder Bad, because it makes using the stored data more complicated than a simple standard like discussed above Store Everything from Extractors Good, because all metadata is available and searchable Good, because consuming applications can decide how to map data Good, because extractor implementation becomes more trivial Bad, because all applications become dependent on the extractor and need to handle different extractors on their own Links https://github.com/owncloud/libre-graph-api/pull/120 / https://learn.microsoft.com/de-de/graph/api/resources/audio?view=graph-rest-1.0 https://github.com/owncloud/libre-graph-api/pull/122 / https://learn.microsoft.com/en-us/graph/api/resources/photo?view=graph-rest-1.0 https://github.com/owncloud/libre-graph-api/pull/123 / https://learn.microsoft.com/en-us/graph/api/resources/geoCoordinates?view=graph-rest-1.0 https://developer.adobe.com/xmp/docs/XMPNamespaces/xmpDM/ https://www.dublincore.org/schemas/ ","description":"Status: accepted Deciders: @butonic, @theonering, @micbar, @dragotin Date: 2023-10-17 Context and Problem Statement ownCloud Infinite Scale is supposed to become a data platform and as such it needs to provide access to metadata. Currently only metadata common to all file types (filesize, mime-type, \u0026hellip;) is stored in the index and the metadata storage. We want to make other file type specific metadata available to consumers of our internal and external APIs."},{"id":174,"href":"/ocis/deployment/ocis_full/","title":"Full modular oCIS with WebOffice","parent":"Deployment","content":" Overview Easy Default Goal: Default Components Optional Components Important Note Server Deployment Requirements Install oCIS and Traefik Reverse Proxy and SSL Infinite Scale Release and Version Local Setup Additional services Clamav Virusscanner Traefik Dashboard Cloud Importer S3 Storage Use a Local Minio S3 Storage Backend Local Setup for Web Development Using Podman Overview oCIS, the collaboration service, Collabora or OnlyOffice running behind Traefik as reverse proxy Collabora or OnlyOffice enable you to edit office documents in your browser The collaboration server acts as a bridge to make the oCIS storage accessible to Collabora and OnlyOffice Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup The whole deployment acts as a modular toolkit to use different flavors of office suites and ocis features Find this example on GitHub\nEasy Default The Infinite Scale Team and product management are providing a default setup for oCIS.\nGoal: provide a good starting point for a production deployment minimal effort to get started with an opinionated setup keep it adjustable it to your needs. Default Components Infinite Scale Full Text Search Collabora Online Web Office Prepared for LetsEncrypt SSL certificates via Traefik Reverse Proxy Optional Components ClamAV Virusscanner Cloud Importer (Experimental) OnlyOffice as an alternative to Collabora S3 Storage config to connect to an S3 storage backend S3 Minio Server as a local S3 storage backend for debugging and development Important Note If you deviate from the configuration setup and let the collaboration service run in its own container, you MUST ensure the ocis configuration is shared as shown in the example deployment. This is because secrets generated must be accessible for all services.\nServer Deployment Requirements Linux server with docker and docker-compose installed Three domains set up and pointing to your server ocis.* for serving oCIS collabora.* for serving Collabora onlyoffice.* for serving OnlyOffice wopiserver.* for serving the WOPI server traefik.* for serving the Traefik dashboard companion.* for serving the uppy companion app See also example server setup\nInstall oCIS and Traefik Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git --depth 1\nGo to the deployment example\ncd ocis/deployments/examples/ocis_full\nOpen the .env file in a text editor.\nThe file by default looks like this:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 ## Basic Settings ## # Define the docker compose log driver used. # Defaults to local LOG_DRIVER= # If you\u0026#39;re on an internet facing server, comment out following line. # It skips certificate validation for various parts of Infinite Scale and is # needed when self signed certificates are used. INSECURE=true ## Traefik Settings ## # Note: Traefik is always enabled and can\u0026#39;t be disabled. # Serve Traefik dashboard. # Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. # Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the traefik dashboard. # Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; (written as: \u0026#34;admin:admin\u0026#34;). TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates. # Needs only be changed if this is a public facing server. TRAEFIK_ACME_MAIL= # Set to the following for testing to check the certificate process: # \u0026#34;https://acme-staging-v02.api.letsencrypt.org/directory\u0026#34; # With staging configured, there will be an SSL error in the browser. # When certificates are displayed and are emitted by # \u0026#34;Fake LE Intermediate X1\u0026#34;, # the process went well and the envvar can be reset to empty to get valid certificates. TRAEFIK_ACME_CASERVER= ## Infinite Scale Settings ## # Beside Traefik, this service must stay enabled. # Disable only for testing purposes. # Note: the leading colon is required to enable the service. OCIS=:ocis.yml # The oCIS container image. # For production releases: \u0026#34;owncloud/ocis\u0026#34; # For rolling releases: \u0026#34;owncloud/ocis-rolling\u0026#34; # Defaults to production if not set otherwise OCIS_DOCKER_IMAGE=owncloud/ocis-rolling # The oCIS container version. # Defaults to \u0026#34;latest\u0026#34; and points to the latest stable tag. OCIS_DOCKER_TAG= # Domain of oCIS, where you can find the frontend. # Defaults to \u0026#34;ocis.owncloud.test\u0026#34; OCIS_DOMAIN= # oCIS admin user password. Defaults to \u0026#34;admin\u0026#34;. ADMIN_PASSWORD= # Demo users should not be created on a production instance, # because their passwords are public. Defaults to \u0026#34;false\u0026#34;. # Also see: https://doc.owncloud.com/ocis/latest/deployment/general/general-info.html#demo-users-and-groups DEMO_USERS= # Define the oCIS loglevel used. # For more details see: # https://doc.owncloud.com/ocis/latest/deployment/services/env-vars-special-scope.html LOG_LEVEL= # Define the kind of logging. # The default log can be read by machines. # Set this to true to make the log human readable. # LOG_PRETTY=true # # Define the oCIS storage location. Set the paths for config and data to a local path. # Note that especially the data directory can grow big. # Leaving it default stores data in docker internal volumes. # For more details see: # https://doc.owncloud.com/ocis/next/deployment/general/general-info.html#default-paths # OCIS_CONFIG_DIR=/your/local/ocis/config # OCIS_DATA_DIR=/your/local/ocis/data # S3 Storage configuration - optional # Infinite Scale supports S3 storage as primary storage. # Per default, S3 storage is disabled and the local filesystem is used. # To enable S3 storage, uncomment the following line and configure the S3 storage. # For more details see: # https://doc.owncloud.com/ocis/next/deployment/storage/s3.html # Note: the leading colon is required to enable the service. #S3NG=:s3ng.yml # Configure the S3 storage endpoint. Defaults to \u0026#34;http://minio:9000\u0026#34; for testing purposes. S3NG_ENDPOINT= # S3 region. Defaults to \u0026#34;default\u0026#34;. S3NG_REGION= # S3 access key. Defaults to \u0026#34;ocis\u0026#34; S3NG_ACCESS_KEY= # S3 secret. Defaults to \u0026#34;ocis-secret-key\u0026#34; S3NG_SECRET_KEY= # S3 bucket. Defaults to \u0026#34;ocis\u0026#34; S3NG_BUCKET= # # For testing purposes, add local minio S3 storage to the docker-compose file. # The leading colon is required to enable the service. #S3NG_MINIO=:minio.yml # Minio domain. Defaults to \u0026#34;minio.owncloud.test\u0026#34;. MINIO_DOMAIN= # Define SMPT settings if you would like to send Infinite Scale email notifications. # For more details see: # https://doc.owncloud.com/ocis/latest/deployment/services/s-list/notifications.html # NOTE: when configuring Inbucket, these settings have no effect, see inbucket.yml for details. # SMTP host to connect to. SMTP_HOST= # Port of the SMTP host to connect to. SMTP_PORT= # An eMail address that is used for sending Infinite Scale notification eMails # like \u0026#34;ocis notifications \u0026lt;noreply@yourdomain.com\u0026gt;\u0026#34;. SMTP_SENDER= # Username for the SMTP host to connect to. SMTP_USERNAME= # Password for the SMTP host to connect to. SMTP_PASSWORD= # Authentication method for the SMTP communication. SMTP_AUTHENTICATION= # Allow insecure connections to the SMTP server. Defaults to false. SMTP_INSECURE= ## Default Enabled Services ## ### Apache Tika Content Analysis Toolkit ### # Tika (search) is enabled by default, comment if not required. # Note: the leading colon is required to enable the service. TIKA=:tika.yml # Set the desired docker image tag or digest. # Defaults to \u0026#34;latest\u0026#34; TIKA_IMAGE= ### Collabora Settings ### # Collabora web office is default enabled, comment if not required. # Note: the leading colon is required to enable the service. COLLABORA=:collabora.yml # Domain of Collabora, where you can find the frontend. # Defaults to \u0026#34;collabora.owncloud.test\u0026#34; COLLABORA_DOMAIN= # Domain of the wopiserver which handles OnlyOffice. # Defaults to \u0026#34;wopiserver.owncloud.test\u0026#34; WOPISERVER_DOMAIN= # Admin user for Collabora. # Defaults to \u0026#34;admin\u0026#34;. # Collabora Admin Panel URL: # https://{COLLABORA_DOMAIN}/browser/dist/admin/admin.html COLLABORA_ADMIN_USER= # Admin password for Collabora. # Defaults to \u0026#34;admin\u0026#34;. COLLABORA_ADMIN_PASSWORD= # Set to true to enable SSL for Collabora Online. Default is true if not specified. COLLABORA_SSL_ENABLE=false # If you\u0026#39;re on an internet-facing server, enable SSL verification for Collabora Online. # Please comment out the following line: COLLABORA_SSL_VERIFICATION=false ... Reverse Proxy and SSL Domains and SSL\nThough it may sound strange, most of the setups are failing due to a misconfiguration regarding domains and SSL. Please make sure that you have set up the domains correctly and that they are pointing to your server. Also, make sure that you have set up the email address for the LetsEncrypt certificates in TRAEFIK_ACME_MAIL=. You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nInfinite Scale Release and Version By default oCIS will be started in the latest rolling version. Please note that this deployment does currently not work with the 5.x productions releases. The oCIS \u0026ldquo;collaboration\u0026rdquo; service, which is required by this deployment, is not part of the 5.x releases.\nIf you want to use a specific version of oCIS, set the version to a dedicated tag like OCIS_DOCKER_TAG=6.3.0. The minimal required oCIS Version to run this deployment is 6.3.0. Available production versions can be found on Docker Hub Production and available rolling releases can be found on Docker Hub Rolling\nYou can read more about the different oCIS releases in the oCIS Release Lifecycle. Set your domain for the oCIS frontend in OCIS_DOMAIN=, e.g. OCIS_DOMAIN=ocis.owncloud.test.\nSet the initial admin user password in ADMIN_PASSWORD=, it defaults to admin.\nWeb Office needs a public domain for the WOPI server to be set in WOPISERVER_DOMAIN=, where the office suite can work on the files via the WOPI protocol.\nNow it\u0026rsquo;s time to set up Collabora and you need to configure the domain of Collabora in COLLABORA_DOMAIN=.\nIf you want to use the Collabora admin panel you need to set the username and password for the administrator in COLLABORA_ADMIN_USER= and COLLABORA_ADMIN_PASSWORD=.\nStart the docker stack\ndocker-compose up -d\nYou now can visit oCIS and are able to open an office document in your browser. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\nLocal Setup This docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 ocis.owncloud.test 127.0.0.1 traefik.owncloud.test 127.0.0.1 collabora.owncloud.test 127.0.0.1 onlyoffice.owncloud.test 127.0.0.1 wopiserver.owncloud.test 127.0.0.1 mail.owncloud.test 127.0.0.1 companion.owncloud.test 127.0.0.1 minio.owncloud.test After that, you\u0026rsquo;re ready to start the application stack:\ndocker-compose pull \u0026amp;\u0026amp; docker-compose up -d\nOpen https://collabora.owncloud.test in your browser and accept the invalid certificate warning.\nOpen https://ocis.owncloud.test in your browser and accept the invalid certificate warning. You are now able to open an office document in your browser. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\nAdditional services Clamav Virusscanner You can add a Clamav Virusscanner to the stack. The service is disabled by default. To enable it, uncomment the CLAMAV line in the .env file.\n1 2 3 ## Clamav Settings ## # The leading colon is required to enable the service. CLAMAV=:clamav.yml After enabling that service, you can add the service to the stack with docker-compose up -d again.\nTraefik Dashboard If you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\n1 2 3 4 5 6 7 8 9 10 ### Traefik Settings ### # Serve Traefik dashboard. # Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD=true # Domain of Traefik, where you can find the dashboard. # Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the traefik dashboard. # Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; (written as: \u0026#34;admin:admin\u0026#34;). TRAEFIK_BASIC_AUTH_USERS= Cloud Importer Cloud importer can provide an Upload Interface to your oCIS instance. It is a separate service that can be enabled in the .env file.\n1 2 3 4 5 6 7 8 9 10 11 12 ## Uppy Companion Settings ## # The leading colon is required to enable the service. CLOUD_IMPORTER=:cloudimporter.yml ## The docker image to be used for uppy companion. # owncloud has built a container with public link import support. COMPANION_IMAGE= # Domain of Uppy Companion. Defaults to \u0026#34;companion.owncloud.test\u0026#34;. COMPANION_DOMAIN= # Provider settings, see https://uppy.io/docs/companion/#provideroptions for reference. # Empty by default, which disables providers. COMPANION_ONEDRIVE_KEY= COMPANION_ONEDRIVE_SECRET= After Enabling that servive by uncommenting the CLOUD_IMPORTER line, you can add the service to the stack with docker-compose up -d again.\nS3 Storage You can use an S3 compatible Storage as the primary data store. The metadatata of the files will still be stored on the local filesystem.\nThe endpoint, region and keys for your S3 Server need to be provided by the service or company who operates it. Normally you can get these via web portal. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # S3 Storage configuration - optional # Infinite Scale supports S3 storage as primary storage. # Per default, S3 storage is disabled and the local filesystem is used. # To enable S3 storage, uncomment the following line and configure the S3 storage. # For more details see: # https://doc.owncloud.com/ocis/next/deployment/storage/s3.html # Note: the leading colon is required to enable the service. # S3NG=:s3ng.yml # Configure the S3 storage endpoint. Defaults to \u0026#34;http://minio:9000\u0026#34; for testing purposes. S3NG_ENDPOINT= # S3 region. Defaults to \u0026#34;default\u0026#34;. S3NG_REGION= # S3 access key. Defaults to \u0026#34;ocis\u0026#34; S3NG_ACCESS_KEY= # S3 secret. Defaults to \u0026#34;ocis-secret-key\u0026#34; S3NG_SECRET_KEY= # S3 bucket. Defaults to \u0026#34;ocis\u0026#34; S3NG_BUCKET= Use a Local Minio S3 Storage Backend For testing purposes, you can use a local minio S3 storage backend. To enable it, uncomment the S3NG_MINIO line in the .env file.\nThe frontend for the minio server is available at http://minio.owncloud.test and the access key is ocis and the secret key is ocis-secret.\nLocal Setup for Web Development In case you want to run ownCloud Web from a development branch together with this deployment example (e.g. for feature development for the app provider frontend) you can use this deployment example with the local setup and some additional steps as described below.\nClone the ownCloud Web repository on your development machine. Run pnpm i \u0026amp;\u0026amp; pnpm build:w for web, so that it creates and continuously updates the dist folder for web. Add the dist folder as read only volume to volumes section of the ocis service in the docker-compose.yml file: - /your/local/path/to/web/dist/:/web/dist:ro Make sure to point to the dist folder inside your local copy of the web repository. Set the oCIS environment variables WEB_ASSET_CORE_PATH and WEB_ASSET_APPS_PATH in the environment section of the ocis service, so that it uses your mounted dist folder for the web assets, instead of the assets that are embedded into oCIS. WEB_ASSET_CORE_PATH: \u0026#34;/web/dist\u0026#34; WEB_ASSET_APPS_PATH: \u0026#34;/web/dist\u0026#34; Start the deployment example as described above in the Local setup section. For app provider frontend development in web you can find the source code in web/packages/web-app-external. Some parts of the integration live in web/packages/web-app-files.\nUsing Podman Podman doesn\u0026rsquo;t have a \u0026ldquo;local\u0026rdquo; log driver. Also it\u0026rsquo;s docker-compatibility socket does live in a different location, especially when running a rootless podman.\nUsing the following settings you can run the deployment with a recent podman version:\nLOG_DRIVER=journald \\ DOCKER_SOCKET_PATH=/run/user/1000/podman/podman.sock \\ podman compose start ","description":"Overview Easy Default Goal: Default Components Optional Components Important Note Server Deployment Requirements Install oCIS and Traefik Reverse Proxy and SSL Infinite Scale Release and Version Local Setup Additional services Clamav Virusscanner Traefik Dashboard Cloud Importer S3 Storage Use a Local Minio S3 Storage Backend Local Setup for Web Development Using Podman Overview oCIS, the collaboration service, Collabora or OnlyOffice running behind Traefik as reverse proxy Collabora or OnlyOffice enable you to edit office documents in your browser The collaboration server acts as a bridge to make the oCIS storage accessible to Collabora and OnlyOffice Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup The whole deployment acts as a modular toolkit to use different flavors of office suites and ocis features Find this example on GitHub"},{"id":175,"href":"/ocis/adr/0024-msgpack-metadata/","title":"24. Messagepack metadata","parent":"Architecture Decisions","content":" Status: accepted Deciders: @butonic, @aduffeck, @micbar, @dragotin Date: 2023-03-15 Context and Problem Statement File metadata management is an important aspect for oCIS as a data platform. While using extended attributes to store metadata allows attaching the metadata to the actual file it causes a significant amount of syscalls that outweigh the benefits. Furthermore, filesystems are subject to different limitations in the number of extended attributes or the value size that is available.\nDecision Drivers Performance of reading extended attributes suffers from the syscall overhead when listing and reading all attributes. Getting rid of limitations imposed by the filesystem used to store decomposedfs metadata.\nConsidered Options Going back to the original ADR-0016 Storage for Files Metadata we decided to use a dedicated file for metadata storage next to the decomposedfs file representing the node. Several options for the data format were considered:\nUse JSON files to store metadata Use INI files to store metadata Use msgpack files to store metadata Use protobuf messages to store metadata Decision Outcome Chosen option: \u0026ldquo;msgpack files\u0026rdquo;, because we want to stay with a self describing binary format. This is a performance tradeoff that is faster and more efficient than text based formats and more flexible but less efficient than protobuf.\nNote: directory listings are still read from the storage and remain uncached.\nPositive Consequences: Way less syscalls Node metadata can easily be cached, avoiding all trips to the storage until a file changes. Negative Consequences: We need to migrate existing metadata We need to build tooling that allows manipulating metadata similar to setfattr and getfattr. Pros and Cons of the Options Ini files Good, human readable Good, self describing Good, widely used and well understood Good, suited for key value like content - exactly what we need for extended attributes Bad, slower and less efficient than binary formats JSON files Good, human readable Good, self describing Good, widely used and well understood Good, could be used for more than just key value Bad, slower and less efficient than binary formats Msgpack files Good, self describing Good, efficient because it is binary encoded Good, could be used for more than just key value Bad, not human readable - requires tooling to manipulate safely protobuf files Good, very efficient because it is binary encoded Good, could be used for more than just key value Bad, not human readable Bad, not self describing - requires tooling to evolve the messages Links supersedes ADR-0016 Storage for Files Metadata The need for speed — Experimenting with message serialization ","description":"Status: accepted Deciders: @butonic, @aduffeck, @micbar, @dragotin Date: 2023-03-15 Context and Problem Statement File metadata management is an important aspect for oCIS as a data platform. While using extended attributes to store metadata allows attaching the metadata to the actual file it causes a significant amount of syscalls that outweigh the benefits. Furthermore, filesystems are subject to different limitations in the number of extended attributes or the value size that is available."},{"id":176,"href":"/ocis/deployment/ocis_hello/","title":"oCIS with Hello extension","parent":"Deployment","content":" Overview Server Deployment Requirements Install oCIS and Traefik Local setup Overview oCIS running behind Traefik as reverse proxy oCIS Hello extension runs beside the main oCIS stack and providing the Hello functionality Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup Find this example on GitHub\nThe docker stack consists of 3 containers. One of them is Traefik, a proxy which is terminating SSL and forwards the requests to oCIS in the internal docker network.\nThe oCIS Hello extension is running in another container and enables you to use its functionality from within ownCloud Web.\nServer Deployment Requirements Linux server with docker and docker-compose installed two domains set up and pointing to your server ocis.* for serving oCIS traefik.* for serving the Traefik dashboard See also example server setup\nInstall oCIS and Traefik Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\nGo to the deployment example\ncd ocis/deployment/examples/ocis_hello\nOpen the .env file in a text editor.\nThe file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # Domain of oCIS, where you can find the frontend. Defaults to \u0026#34;ocis.owncloud.test\u0026#34; OCIS_DOMAIN= # oCIS admin user password. Defaults to \u0026#34;admin\u0026#34;. ADMIN_PASSWORD= # The demo users should not be created on a production instance # because their passwords are public. Defaults to \u0026#34;false\u0026#34;. DEMO_USERS= ### oCIS Hello settings ### # oCIS Hello version. Defaults to \u0026#34;latest\u0026#34; OCIS_HELLO_DOCKER_TAG= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default oCIS will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oCIS frontend in OCIS_DOMAIN=, e.g. OCIS_DOMAIN=ocis.owncloud.test.\nSet the initial admin user password in ADMIN_PASSWORD=, it defaults to admin.\nBy default the oCIS Hello extension will be started in the latest version. If you want to start a specific version of oCIS Hello set the version to OCIS_HELLO_DOCKER_TAG=. Available versions can be found on Docker Hub.\nNow you have configured everything and can save the file.\nStart the docker stack\ndocker-compose up -d\nYou now can visit oCIS and are able to switch to the Hello extension by using the application switcher on the top right corner of ownCloud Web. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\nLocal setup For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 ocis.owncloud.test 127.0.0.1 traefik.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nOpen https://ocis.owncloud.test in your browser and accept the invalid certificate warning. You are now able to switch to the Hello extension by using the application switcher on the top right corner of ownCloud Web. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n","description":"Overview Server Deployment Requirements Install oCIS and Traefik Local setup Overview oCIS running behind Traefik as reverse proxy oCIS Hello extension runs beside the main oCIS stack and providing the Hello functionality Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup Find this example on GitHub\nThe docker stack consists of 3 containers. One of them is Traefik, a proxy which is terminating SSL and forwards the requests to oCIS in the internal docker network."},{"id":177,"href":"/ocis/deployment/ocis_keycloak/","title":"oCIS with Keycloak","parent":"Deployment","content":" Overview Server Deployment Requirements Install oCIS and Traefik Local setup Overview oCIS and Keycloak running behind Traefik as reverse proxy Keycloak acting as the IDP for oCIS Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup Find this example on GitHub\nThe docker stack consists 4 containers. One of them is Traefik, a proxy which is terminating ssl and forwards the requests to oCIS in the internal docker network. It is also responsible for redirecting requests on the OIDC discovery endpoints (e.g. .well-known/openid-configuration) to the correct destination in Keycloak.\nKeycloak add two containers: Keycloak itself and a PostgreSQL as database. Keycloak will be configured as oCIS\u0026rsquo; IDP instead of the internal IDP LibreGraph Connect\nThe other container is oCIS itself, running all services in one container. In this example oCIS uses the oCIS storage driver\nServer Deployment Requirements Linux server with docker and docker-compose installed Three domains set up and pointing to your server ocis.* for serving oCIS keycloak.* for serving Keycloak traefik.* for serving the Traefik dashboard See also example server setup\nInstall oCIS and Traefik Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\nGo to the deployment example\ncd ocis/deployments/examples/ocis_keycloak\nOpen the .env file in a text editor.\nThe file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # Domain of oCIS, where you can find the frontend. Defaults to \u0026#34;ocis.owncloud.test\u0026#34; OCIS_DOMAIN= # ownCloud Web openid connect client id. Defaults to \u0026#34;ocis-web\u0026#34; OCIS_OIDC_CLIENT_ID= ### Keycloak ### # Domain of Keycloak, where you can find the management and authentication frontend. Defaults to \u0026#34;keycloak.owncloud.test\u0026#34; KEYCLOAK_DOMAIN= # Realm which to be used with oCIS. Defaults to \u0026#34;oCIS\u0026#34; KEYCLOAK_REALM= # Admin user login name. Defaults to \u0026#34;admin\u0026#34; KEYCLOAK_ADMIN_USER= # Admin user login password. Defaults to \u0026#34;admin\u0026#34; KEYCLOAK_ADMIN_PASSWORD= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default oCIS will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oCIS frontend in OCIS_DOMAIN=, e.g. OCIS_DOMAIN=ocis.owncloud.test.\nIf you want to change the OIDC client id of th ownCloud Web frontend, you can do this by setting the name to OCIS_OIDC_CLIENT_ID=.\nSet your domain for the Keycloak administration panel and authentication endpoints to KEYCLOAK_DOMAIN= e.g. KEYCLOAK_DOMAIN=keycloak.owncloud.test.\nChanging the used Keycloak realm can be done by setting KEYCLOAK_REALM=. This defaults to the oCIS realm KEYCLOAK_REALM=oCIS. The oCIS realm will be automatically imported on startup and includes our demo users.\nYou probably should secure your Keycloak admin account by setting KEYCLOAK_ADMIN_USER= and KEYCLOAK_ADMIN_PASSWORD= to values other than admin.\nNow you have configured everything and can save the file.\nStart the docker stack\ndocker-compose up -d\nYou now can visit oCIS, Keycloak and Traefik dashboard on your configured domains. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\nLocal setup For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 ocis.owncloud.test 127.0.0.1 traefik.owncloud.test 127.0.0.1 keycloak.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nOpen https://keycloak.owncloud.test in your browser and accept the invalid certificate warning.\nOpen https://ocis.owncloud.test in your browser and accept the invalid certificate warning. You now can login to oCIS with the demo users. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n","description":"Overview Server Deployment Requirements Install oCIS and Traefik Local setup Overview oCIS and Keycloak running behind Traefik as reverse proxy Keycloak acting as the IDP for oCIS Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup Find this example on GitHub\nThe docker stack consists 4 containers. One of them is Traefik, a proxy which is terminating ssl and forwards the requests to oCIS in the internal docker network."},{"id":178,"href":"/ocis/deployment/ocis_ldap/","title":"oCIS with LDAP","parent":"Deployment","content":" Overview Server Deployment Requirements Install this example Local setup Overview Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup OpenLDAP server with demo users LDAP admin interface to edit users oCIS running behind Traefik as reverse proxy oCIS is using the LDAP server as user backend Find this example on GitHub\nServer Deployment Requirements Linux server with docker and docker-compose installed four domains set up and pointing to your server ocis.* for serving oCIS ldap .* for serving the LDAP management UI traefik.* for serving the Traefik dashboard See also example server setup\nInstall this example Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\nGo to the deployment example\ncd ocis/deployment/examples/ocis_ldap\nOpen the .env file in a text editor.\nThe file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # Domain of oCIS, where you can find the frontend. Defaults to \u0026#34;ocis.owncloud.test\u0026#34; OCIS_DOMAIN= # JWT secret which is used for the storage provider. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;Pive-Fumkiu4\u0026#34; OCIS_JWT_SECRET= # JWT secret which is used for uploads to create transfer tokens. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;replace-me-with-a-transfer-secret\u0026#34; STORAGE_TRANSFER_SECRET= # Machine auth api key secret. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;change-me-please\u0026#34; OCIS_MACHINE_AUTH_API_KEY= ### LDAP server settings ### # Password of LDAP user \u0026#34;cn=admin,dc=owncloud,dc=com\u0026#34;. Defaults to \u0026#34;admin\u0026#34; LDAP_ADMIN_PASSWORD= ### LDAP manager settings ### # Domain of LDAP manager. Defaults to \u0026#34;ldap.owncloud.test\u0026#34; LDAP_MANAGER_DOMAIN= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default oCIS will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oCIS frontend in OCIS_DOMAIN=, e.g. OCIS_DOMAIN=cloud.owncloud.test.\nThe OpenLDAP server in this example deployment has an admin users, which is also used as bind user in order to keep these examples simple. You can change the default password \u0026ldquo;admin\u0026rdquo; to a different one by setting it to LDAP_ADMIN_PASSWORD=....\nSet your domain for the LDAP manager UI in LDAP_MANAGER_DOMAIN=, e.g. ldap.owncloud.test.\nGrant the oCIS Admin role to the admin user from your LDAP in OCIS_ADMIN_USER_ID:. You need to enter the uuid of LDAP user.\nIn the .ldif file in this example, the admin user id is base64 encoded. You need to decode it to make it work. Now you have configured everything and can save the file.\nStart the docker stack\ndocker-compose up -d\nYou now can visit oCIS and Traefik dashboard on your configured domains. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\nLocal setup For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 cloud.owncloud.test 127.0.0.1 keycloak.owncloud.test 127.0.0.1 ldap.owncloud.test 127.0.0.1 traefik.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nOpen https://ocis.owncloud.test in your browser and accept the invalid certificate warning. You now can login to oCIS with the default users, which also can be found here: Getting started. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n","description":"Overview Server Deployment Requirements Install this example Local setup Overview Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup OpenLDAP server with demo users LDAP admin interface to edit users oCIS running behind Traefik as reverse proxy oCIS is using the LDAP server as user backend Find this example on GitHub\nServer Deployment Requirements Linux server with docker and docker-compose installed four domains set up and pointing to your server ocis."},{"id":179,"href":"/ocis/deployment/oc10_ocis_parallel/","title":"Parallel deployment of oC10 and oCIS","parent":"Deployment","content":" Overview Server Deployment Requirements Install this example Local setup Overview This setup reflects stage 6 of the oC10 to oCIS migration plan Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup OpenLDAP server with demo users LDAP admin interface to edit users Keycloak as OpenID Connect provider in federation with the LDAP server ownCloud 10 with MariaDB and Redis ownCloud 10 is configured to synchronize users from the LDAP server ownCloud 10 is used to use OpenID Connect for authentication with Keycloak oCIS running behind Traefik as reverse proxy oCIS is using the ownCloudSQL storage driver on the same files and same database as ownCloud 10 oCIS is using Keycloak as OpenID Connect provider oCIS is using the LDAP server as user backend All requests to both oCIS and oC10 are routed through the oCIS proxy and will be routed based on an OIDC claim to one of them. Therefore admins can change on a user basis in the LDAP which backend is used. Find this example on GitHub\nServer Deployment Requirements Linux server with docker and docker-compose installed four domains set up and pointing to your server cloud.* for serving oCIS keycloak.* for serving Keycloak ldap .* for serving the LDAP management UI traefik.* for serving the Traefik dashboard See also example server setup\nInstall this example Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\nGo to the deployment example\ncd ocis/deployment/examples/oc10_ocis_parallel\nOpen the .env file in a text editor The file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### TRAEFIK_LOG_LEVEL= # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### shared oCIS / oC10 settings ### # Domain of oCIS / oC10, where you can find the frontend. Defaults to \u0026#34;cloud.owncloud.test\u0026#34; CLOUD_DOMAIN= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # JWT secret which is used for the storage provider. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;Pive-Fumkiu4\u0026#34; OCIS_JWT_SECRET= # JWT secret which is used for uploads to create transfer tokens. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;replace-me-with-a-transfer-secret\u0026#34; STORAGE_TRANSFER_SECRET= # Machine auth api key secret. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;change-me-please\u0026#34; OCIS_MACHINE_AUTH_API_KEY= ### oCIS settings ### # oC10 version. Defaults to \u0026#34;latest\u0026#34; OC10_DOCKER_TAG= # client secret which the openidconnect app uses to authenticate to Keycloak. Defaults to \u0026#34;oc10-oidc-secret\u0026#34; OC10_OIDC_CLIENT_SECRET= # app which will be shown when opening the ownCloud 10 UI. Defaults to \u0026#34;files\u0026#34; but also could be set to \u0026#34;web\u0026#34; OWNCLOUD_DEFAULT_APP= # if set to \u0026#34;false\u0026#34; (default) links will be opened in the classic UI, if set to \u0026#34;true\u0026#34; ownCloud Web is used OWNCLOUD_WEB_REWRITE_LINKS= ### LDAP settings ### # password for the LDAP admin user \u0026#34;cn=admin,dc=owncloud,dc=com\u0026#34;, defaults to \u0026#34;admin\u0026#34; LDAP_ADMIN_PASSWORD= # Domain of the LDAP management frontend. Defaults to \u0026#34;ldap.owncloud.test\u0026#34; LDAP_MANAGER_DOMAIN= ### Keycloak ### # Domain of Keycloak, where you can find the management and authentication frontend. Defaults to \u0026#34;keycloak.owncloud.test\u0026#34; KEYCLOAK_DOMAIN= # Realm which to be used with oC10 and oCIS. Defaults to \u0026#34;owncloud\u0026#34; KEYCLOAK_REALM= # Admin user login name. Defaults to \u0026#34;admin\u0026#34; KEYCLOAK_ADMIN_USER= # Admin user login password. Defaults to \u0026#34;admin\u0026#34; KEYCLOAK_ADMIN_PASSWORD= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default oCIS will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oC10 and oCIS frontend in CLOUD_DOMAIN=, e.g. CLOUD_DOMAIN=cloud.owncloud.test.\nBy default ownCloud 10 will be started in the latest version. If you want to start a specific version of oCIS set the version to OC10_DOCKER_TAG=. Available versions can be found on Docker Hub.\nYou can switch the default application of ownCloud 10 by settingOWNCLOUD_DEFAULT_APP=files in oder to have the classic UI as frontend, which is also the default. If you prefer ownCloud Web as the default application in ownCloud 10 just set OWNCLOUD_DEFAULT_APP=web.\nIn oder to change the default link open action which defaults to the classic UI (OWNCLOUD_WEB_REWRITE_LINKS=false) you can set it to OWNCLOUD_WEB_REWRITE_LINKS=true. This will lead to links being opened in ownCloud Web.\nThe OpenLDAP server in this example deployment has an admin users, which is also used as bind user in order to keep these examples simple. You can change the default password \u0026ldquo;admin\u0026rdquo; to a different one by setting it to LDAP_ADMIN_PASSWORD=....\nSet your domain for the LDAP manager UI in LDAP_MANAGER_DOMAIN=, e.g. ldap.owncloud.test.\nSet your domain for the Keycloak administration panel and authentication endpoints to KEYCLOAK_DOMAIN= e.g. KEYCLOAK_DOMAIN=keycloak.owncloud.test.\nChanging the used Keycloak realm can be done by setting KEYCLOAK_REALM=. This defaults to the ownCloud realm KEYCLOAK_REALM=owncloud. The ownCloud realm will be automatically imported on startup and includes our demo users.\nYou probably should secure your Keycloak admin account by setting KEYCLOAK_ADMIN_USER= and KEYCLOAK_ADMIN_PASSWORD= to values other than admin.\nNow you have configured everything and can save the file.\nStart the docker stack\ndocker-compose up -d\nYou now can visit the cloud, oC10 or oCIS depending on the user configuration. Marie defaults to oC10 and Richard and Einstein default to oCIS, but you can change the ownCloud selector at any time in the LDAP management UI.\nLocal setup For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 cloud.owncloud.test 127.0.0.1 keycloak.owncloud.test 127.0.0.1 ldap.owncloud.test 127.0.0.1 traefik.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nYou now can visit the cloud, oC10 or oCIS depending on the user configuration. Marie defaults to oC10 and Richard and Einstein default to oCIS, but you can change the ownCloud selector at any time in the LDAP management UI.\n","description":"Overview Server Deployment Requirements Install this example Local setup Overview This setup reflects stage 6 of the oC10 to oCIS migration plan Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup OpenLDAP server with demo users LDAP admin interface to edit users Keycloak as OpenID Connect provider in federation with the LDAP server ownCloud 10 with MariaDB and Redis ownCloud 10 is configured to synchronize users from the LDAP server ownCloud 10 is used to use OpenID Connect for authentication with Keycloak oCIS running behind Traefik as reverse proxy oCIS is using the ownCloudSQL storage driver on the same files and same database as ownCloud 10 oCIS is using Keycloak as OpenID Connect provider oCIS is using the LDAP server as user backend All requests to both oCIS and oC10 are routed through the oCIS proxy and will be routed based on an OIDC claim to one of them."},{"id":180,"href":"/ocis/adr/0025-distributed-search-index/","title":"25. Distributed Search Index","parent":"Architecture Decisions","content":" Status: draft Deciders: @butonic, @fschade, @aduffeck Date: 2024-02-09 Context and Problem Statement Search is currently implemented with blevesearch, which internally uses bbolt. bbolt writes to a local file, which prevents scaling out the service.\nThe initial implementation used a single blevesearch index for all spaces. While this makes querying all spaces easy because the results do not need to be aggregated from multiple indexes, the single node becomes a bottleneck when answering search queries. Furthermore, indexing is also part of the search service and has to share the resources.\nDecision Drivers Indexing should be decoupled from the search service The search service should be able to scale horizontally The solution needs to be embeddable in the single binary Considered Options one index per space elasticsearch (java) dgraph (go) manticore (C++) meilisearch (Rust) Decision Outcome Chosen option: ???\nPositive Consequences: TODO Negative Consequences: TODO Pros and Cons of the Options one index per space Instead of using a single index (current implementation) or a distributed search index like elasticsearch the search service should aggregate queries from dedicated indexes per space. The api to a space index provider should be able to take multiple space ids in the request, similar to how a storage provider can handle multiple spaces. When treating spaces and the corresponding search index to belong together we can also treat them as a single unit for backup and restore. In federated deployments we can send the search queries to all search providers / spaces that the user has access to.\nHow a search provider is implemented then depends on the requirements. For a single node deployment bleve might be fine, for a kubernetes deployment a dedicated service might be the better fit.\nelasticsearch Good, commercial support available at https://www.elastic.co/de/pricing Good, industry standard Bad, nobody seems to like it Bad, not embeddable (Java) dgraph Good, commercial support available at https://dgraph.io/pricing Good, embeddable? (go) - TODO verify manticore Good, commercial support available at https://manticoresearch.com/services/ Bad, not embeddable (C++) meilisearch Good, commercial support available at https://www.meilisearch.com/pricing Bad, not embeddable (Rust) Links supersedes ADR-0019 File Search Index ","description":"Status: draft Deciders: @butonic, @fschade, @aduffeck Date: 2024-02-09 Context and Problem Statement Search is currently implemented with blevesearch, which internally uses bbolt. bbolt writes to a local file, which prevents scaling out the service.\nThe initial implementation used a single blevesearch index for all spaces. While this makes querying all spaces easy because the results do not need to be aggregated from multiple indexes, the single node becomes a bottleneck when answering search queries."},{"id":181,"href":"/ocis/deployment/kubernetes/","title":"Kubernetes","parent":"Deployment","content":" What is Kubernetes References and further reads How does oCIS fit in the Kubernetes model What is Minikube What is kubectl What are Helm Charts, and why they are useful for oCIS Installing Helm Setting up Minikube oCIS charts Run oCIS What is Kubernetes Formally described as:\nKubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation.\nsource\nWithout getting too deep in definitions, and for the purpose of compactness, Kubernetes can be summarized as a way of managing containers that run applications to ensure that there is no downtime and an optimal usage of resources. It provides with a framework in which to run distributed systems.\nKubernetes provides you with:\nService discovery and load balancing: Kubernetes can expose a container using the DNS name or using their own IP address. If traffic to a container is high, Kubernetes is able to load balance and distribute the network traffic so that the deployment is stable. Storage orchestration: Kubernetes allows you to automatically mount a storage system of your choice, such as local storages, public cloud providers, and more. Automated rollouts and rollbacks: You can describe the desired state for your deployed containers using Kubernetes, and it can change the actual state to the desired state at a controlled rate. For example, you can automate Kubernetes to create new containers for your deployment, remove existing containers and adopt all their resources to the new container. Automatic bin packing: You provide Kubernetes with a cluster of nodes that it can use to run containerized tasks. You tell Kubernetes how much CPU and memory (RAM) each container needs. Kubernetes can fit containers onto your nodes to make the best use of your resources. Self-healing: Kubernetes restarts containers that fail, replaces containers, kills containers that don\u0026rsquo;t respond to your user-defined health check, and doesn\u0026rsquo;t advertise them to clients until they are ready to serve. Secret and configuration management: Kubernetes lets you store and manage sensitive information, such as passwords, OAuth tokens, and SSH keys. You can deploy and update secrets and application configuration without rebuilding your container images, and without exposing secrets in your stack configuration. extracted from k8s docs\nIf that is still too abstract, here is an ELI5 writeup.\nReferences and further reads Marcel Wunderlich\u0026rsquo;s 4 series articles on Kubernetes clarifying its declarative nature, deep diving into ingress networking, storage and monitoring. How does oCIS fit in the Kubernetes model oCIS was designed with running on Kubernetes in mind. We set up to adopt the Twelve-Factor App principles regarding configuration, with almost every aspect of oCIS being modifiable via environment variables. This comes in handy when you especially have a look at how a helm chart\u0026rsquo;s (we will introduce this concept shortly) list of values looks like.\nWhat is Minikube Minikube lets you run a Kubernetes cluster locally. It is the most approachable way to test a deployment. It requires no extra configuration on any cloud platform, as everything runs on your local machine. For the purpose of these docs, this is the first approach we chose to run oCIS and will develop on how to set it up.\nWhat is kubectl kubectl is the command-line tool for Kubernetes. It allows users to run commands against a k8s cluster the user has access to. It supports for having multiple contexts for as many clusters as you have access to. In these docs we will setup 2 contexts, a minikube and a GCP context.\nWhat are Helm Charts, and why they are useful for oCIS Helm is the equivalent of a package manager for Kubernetes. It can be described as a layer on top of how you would write pods, deployments or any other k8s resource declaration.\nInstalling Helm Follow the official installation guide.\nSetting up Minikube For a guide on how to set minikube up follow the official minikube start guide for your specific OS.\noCIS charts We have not yet published the oCIS Helm charts, therefore you need to clone the git repository manually. It currently also does not support to be run on Kind or Minikube clusters. For known issues and planned features, please have a look at the GitHub issue tracker.\nConfiguration options are described here.\nRun oCIS clone the charts: git clone https://github.com/owncloud/ocis-charts.git /var/tmp/ocis-charts cd into the charts root: cd /var/tmp/ocis-charts/charts/ocis install the package: helm install ocis . (you need to set configuration values in almost all cases) verify the application is running in the cluster: kubectl get pods ","description":"What is Kubernetes References and further reads How does oCIS fit in the Kubernetes model What is Minikube What is kubectl What are Helm Charts, and why they are useful for oCIS Installing Helm Setting up Minikube oCIS charts Run oCIS What is Kubernetes Formally described as:\nKubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation.\nsource\nWithout getting too deep in definitions, and for the purpose of compactness, Kubernetes can be summarized as a way of managing containers that run applications to ensure that there is no downtime and an optimal usage of resources."},{"id":182,"href":"/clients/web/releasing/","title":"Releasing","parent":"ownCloud Web","content":" Releasing ownCloud Web Versioning Release Guide Next steps Releasing ownCloud Web OwnCloud Web can be hosted standalone for a dedicated oCIS backend or bundled as part of oCIS.\nVersioning We follow the Semantic Versioning scheme. Therefore, each change is of one of the possible types: Bugfix, Change, Enhancement, Security.\nThe highest type before a new release determines the version update number, so if it\u0026rsquo;s only Bugfix and Security changes the next release will be a PATCH version bump, if there\u0026rsquo;s at least one Enhancement within the changes this leads to a MINOR version bump, while Change type changes make for a new MAJOR release version.\nRelease Guide Create a branch release-$version in https://github.com/owncloud/web. Create a folder in changelog for the release version and date mkdir $major.$minor.$patchVersion_YYYY-MM-DD. Move all changelog items from the changelog/unreleased/ folder to the $major.$minor.$patchVersion_YYYY-MM-DD folder. Run ./dev/scripts/bump_versions.sh $version. This script will bump the package.json files in all relevant packages. Commit and push your changes. Run ./dev/scripts/create_and_push_tags.sh. This script will create and push tags for the main app as well as all packages that need to be released. After merging, wait for the CI to run on the merge commit. Go to the Releases section and click \u0026ldquo;Draft a new Release\u0026rdquo;. The release artifacts will be created automatically. Next steps For oCIS the release assets need to be updated.\n","description":"Releasing ownCloud Web Versioning Release Guide Next steps Releasing ownCloud Web OwnCloud Web can be hosted standalone for a dedicated oCIS backend or bundled as part of oCIS.\nVersioning We follow the Semantic Versioning scheme. Therefore, each change is of one of the possible types: Bugfix, Change, Enhancement, Security.\nThe highest type before a new release determines the version update number, so if it\u0026rsquo;s only Bugfix and Security changes the next release will be a PATCH version bump, if there\u0026rsquo;s at least one Enhancement within the changes this leads to a MINOR version bump, while Change type changes make for a new MAJOR release version."},{"id":183,"href":"/ocis/adr/0026-application-based-user-settings/","title":"26. Application based user settings","parent":"Architecture Decisions","content":" Status: draft Deciders: @butonic, @fschade, @kulmann Date: 2024-02-09 Context and Problem Statement To share user settings across devices applications want to store user specific settings on the server. The ePUB app wants to remember which page the user is on. The iOS app wants to rember search queries. The Caldav app needs a space to store data.\nDecision Drivers Considered Options OCS provisioning API settings service libregraph API Decision Outcome Chosen option: ???\nPositive Consequences: TODO Negative Consequences: TODO Pros and Cons of the Options OCS provisioning API Nextcloud added a /ocs/v2.php/apps/provisioning_api/api/v1/config/users/{appId}/{configKey} endpoint\nBad, legacy API we want to get rid of settings service Bad, yet another API. Always uses POST requests. libregraph API The MS Graph API has a special approot driveItem that apps can use to store arbitrary files. See also: Using an App Folder to store user content without access to all files and a blog post with the section Store data in the application’s personal folder.\nIt basically uses the /me/drive/special/approot:/{filename} endpoint to\nPUT https://graph.microsoft.com/v1.0/me/drive/special/approot:/settings.json:/content content-type: text/plain authorization: Bearer abc {\u0026#34;key\u0026#34;: \u0026#34;value\u0026#34;} or\nGET https://graph.microsoft.com/v1.0/me/drive/special/approot:/settings.json:/content authorization: Bearer abc On single page apps you need two requests:\nGET https://graph.microsoft.com/v1.0/me/drive/special/approot:/settings.json?select=@microsoft.graph.downloadUrl authorization: Bearer abc followed by\nGET \u0026lt;url from the response[\u0026#39;@microsoft.graph.downloadUrl\u0026#39;] property\u0026gt; Currently, applications have no dedicated tokens that we could use to derive the appid from. All apps should have an appid and be discoverable under\nGET /applications In any case for libregraph we could introduce a LIBRE_GRAPH_APPID header to make these requests possible rather soon.\nThen we can decide if we want to store these files in the users personal drive, or if we create a space for every app that then uses the userid as a folder that contains all the files for the user.\nGood, because clients can remain in libregraph API land Bad, we currently have no application tokens Links ","description":"Status: draft Deciders: @butonic, @fschade, @kulmann Date: 2024-02-09 Context and Problem Statement To share user settings across devices applications want to store user specific settings on the server. The ePUB app wants to remember which page the user is on. The iOS app wants to rember search queries. The Caldav app needs a space to store data.\nDecision Drivers Considered Options OCS provisioning API settings service libregraph API Decision Outcome Chosen option: ?"},{"id":184,"href":"/ocis/adr/0027-new-share-jail/","title":"27. New Share Jail","parent":"Architecture Decisions","content":" Status: draft Deciders: @butonic, @rhafer, @dragotin Date: 2024-02-21 Context and Problem Statement The oCIS share jail is a space that contains all accepted / synced shares of a user. In contrast to a personal or project space that contains actual resources, the share jail space only contains references pointing to shared resources. The root directory only consists of mountpoints that actually represent resources in other spaces. On the WebDAV API clients expect an oc:fileid property to identify resources in other API endpoints, eg. the libregraph /me/sharedWithMe endpoint.\nCurrently, we construct the oc:fileid from the pattern {shareproviderid}${sharespaceid}!{sharemountid}. {shareproviderid}and {sharespaceid} are both hardcoded to a0ca6a90-a365-4782-871e-d44447bbc668. The {sharemountid} itself uses the pattern {shared-resource-providerid}:{shared-resource-spaceid}:{shareid}.\nSince a resource can be shared to the same user in multiple ways (a group share and a user share) we deduplicate the two shares and only show one mountpoint in the share jail root. This is where this solution starts to fall apart:\nWhen accepting, mounting or syncing a share we implicitly have to accept all shares Each share has a different {shareid}, so we currently look up the oldest share and use it to build the oc:fileid Consequently, when the oldest share is revoked the oc:fileid changes. We need to build the oc:fileid from a more stable pattern.\nShareid The WebDAV PROPFIND response also contains a oc:shareid which currently is derived from the path when the spaceid matches the share jail. The jsoncs3 implementation of the share manager currently is the only one using the {shared-resource-providerid}:{shared-resource-spaceid}:{shareid} pattern, where {shareid} is a uuid that is generated when creating the share.\nAgain, the problem is that a resource can be shared multiple times.\nDecision Drivers We need to change the oc:fileid pattern without breaking clients. We need to be able to correlate files from WebDAV and the Graph API. Considered Options Share based id Resource based id Permission based id Use graph for file metadata Decision Outcome Resource based id: it correctly reflects the semantic meaning of a mount point, by indirectly pointing to the resource, not the share. The permissions on the share have to be checked in the storageprovider itself, anyway. Switching to graph requires more effort and the transition can happen gradually ofter changing the oc:fileid pattern in the sharejail.\nPositive Consequences: We get rid of mixing share ids with fileids, preventing unexpected oc:fileid changes. Negative Consequences: We need to teach clients about a new share jail space that uses the new oc:fileid pattern. They may need to implement a migration strategy to switch from the old share jail space to a new share jail space by replacing the fileid in their internal database. The might be able to just switch over, because the only oc:fileid that changes is the one from the mountpoints. The other nodes in the subtree already use the resourceid of the shared resource. Clients relying on oc:shareid to correlate share jail entries in PROPFIND responses need to either deal with multiple oc:shareid as a resource can be shared multiple times, or we deprecate oc:shareid and only use the oc:fileid. jfd: Who is using this? why? Please explain and add to the decision drivers above! The graph api also needs to be able to list entries from the new share jail. jfd: clients could use a filter to ask for the new share jail id Pros and Cons of the Options Share based id Follow the pattern {shareproviderid}${sharespaceid}!{sharemountid}, where {sharemountid} is {shared-resource-providerid}:{shared-resource-spaceid}:{shareid}. Combined patter {shareproviderid}${sharespaceid}!{shared-resource-providerid}:{shared-resource-spaceid}:{shareid}. {shareproviderid} and {sharespaceid}are both hardcodet to a0ca6a90-a365-4782-871e-d44447bbc668 to route all id based requests for mountpoints to the share jail space.\nGood, the {shared-resource-providerid} and {shared-resource-spaceid} are used to shard the shares per space. Bad, oc:fileid changes if the oldest received share to a resource is revoked. Resource based id Follow the pattern {shareproviderid}${sharespaceid}!{shared-resource-providerid}:{shared-resource-spaceid}:{shared-resource-opaqueid}. Hardcode 756e6cdf-5630-4b66-9380-55a85188e0f6 as a new {sharespaceid} to allow clients to detect the new share jail and change it at their own pace.\nGood, stable oc:fileid that remains the same, regardless of permission changes. Good, clients can detect the new share jail and deal with it on their terms. Permission based id Follow the pattern {shareproviderid}${sharespaceid}!{shared-resource-providerid}:{shared-resource-spaceid}:{shared-resource-opaqueid}:{permission-id}.\nBad, same instability as the share id Bad, we don\u0026rsquo;t even have a permission id. We could construct one from the grantee, but this leads nowhere. Use graph for file metadata Instead of using WebDAV to correlate files with shares fully embrace libregraph to manage file metadata. Follow the pattern {shareproviderid}${sharespaceid}!{shared-resource-providerid}:{shared-resource-spaceid}:{shared-resource-opaqueid}. WebDAV can be stripped of any ownCloud specific properties and will only be used for file up and download.\nBad, more effort Good, clean way of representing mountpoints and the shared resource in one driveItem that can include the resource based id. Good, pagination, sorting and filtering cleanly specified Good, WebDAV can be stripped down. Good, Clients could get rid of WebDAV client and XML libs as all endpoints use JSON (all OCS endpoins return JSON when appending a format=json query parameter) Links ","description":"Status: draft Deciders: @butonic, @rhafer, @dragotin Date: 2024-02-21 Context and Problem Statement The oCIS share jail is a space that contains all accepted / synced shares of a user. In contrast to a personal or project space that contains actual resources, the share jail space only contains references pointing to shared resources. The root directory only consists of mountpoints that actually represent resources in other spaces. On the WebDAV API clients expect an oc:fileid property to identify resources in other API endpoints, eg."},{"id":185,"href":"/ocis/adr/0028-activities-service/","title":"28. Activity Service","parent":"Architecture Decisions","content":" Status: draft Deciders: @kobergj, @fschade Date: 2024-05-16 Context and Problem Statement The user should be able to see all activities for a resource. Besides the current resource, the user should also be able to decide if he wants to include child resource activities or not.\nDecision Drivers The user should be able to see all activities for a resource. The user should be able to decide if he wants to include child resource activities. Activities should be stored space efficiently. Activities should be stored in a way that they can be queried efficiently. Activities should stay in place even if the resource is gone. Activities reflect the state at a given point in time and not the current state. The Service should only store a configurable number of activities per resource. Considered Options Activity store Use a go-micro store to store the individual activities. Use a time series database to store the activities. Use a graph database to store the activities. Use a relational database to store the activities. Use the file system to store the activities. Activity format Normalize the activities before storing them. Only store relevant data to get the related event from the event-history service when needed, e.g., package pseudo_code import ( \u0026#34;time\u0026#34; ) type Activity struct { ResourceId string EventID string Depth int64 Timestamp time.Time } Store the activity in a human-readable way e.g. \u0026ldquo;resource A has been shared with user B.\u0026rdquo; Store each activity only on the resource itself. Store each activity only on the resource itself and all its parents. Decision Outcome Activity store: Use a go-micro store to store the individual activities. Activity format: Store each activity only on the resource itself and all its parents. Only store event ids and get the related event from the event-history service when needed. Positive Consequences: Activity store (go-micro store): Reuse existing technology. We can use nats-js-kv store which already proved reliable in production. No need to introduce any kind of new technology, e.g., a time series database, a relational database. Activity Format: Having each activity stored on each resource (the resource itself and its parents) makes it easy to retrieve the timeline of activities for a resource and its children. Only storing the event id and getting the related event from the event-history we benefit from the event-history services capabilities to store and query events. Walking the resource tree from the resource to the root is a linear operation and can be done efficiently. Negative Consequences: Activity store: Other database types might be more efficient for storing activities. Using the go-micro-store only allows storing the activity in a key-value format. Activity Format: Storing only the event ids and getting the related data from the event-history service when needed might introduce additional latency when querying activities. Adding each event-id to each resource parent leads to a lot of duplicated data. Pros and Cons of the Options Activity store: (PRO) Introducing a new database type might be more efficient for storing activities. (CON) Introducing a new database type brings extra complexity and maintenance overhead. (CON) Using the file system to store the activities might be inefficient and could be problematic especially in a distributed environment. Activity format: (PRO) Normalizing the activities before storing them might make it easier and more efficient to query them. (PRO) Storing each activity only on the resource itself is more space-efficient. (CON) Storing each activity only on the resource itself increases the complexity of querying activities. (CON) Storing each activity in a human-readable format is not space-efficient. Links Story ","description":"Status: draft Deciders: @kobergj, @fschade Date: 2024-05-16 Context and Problem Statement The user should be able to see all activities for a resource. Besides the current resource, the user should also be able to decide if he wants to include child resource activities or not.\nDecision Drivers The user should be able to see all activities for a resource. The user should be able to decide if he wants to include child resource activities."},{"id":186,"href":"/architecture/posixfs-storage-driver/","title":"PosixFS Storage Driver","parent":"Architecture","content":" Introduction Technical Aspects Path Locations Metadata Monitoring Automatic ETag Propagation Automatic Tree Size Propagation Quota File ID Resolution User Management GID Based Space Access Advanced Features Versioning Trashbin Limitations Setup Prerequisites Setup Configuration GPFS Specifics Extended Attributes FS Watcher GPFS File Audit Logging GPFS Watchfolder The Posix FS Storage Driver is a new storage driver for Infinite Scale.\nThe scope of this document is to give a high level overview to the technical aspects of the Posix FS Storage Driver and guide the setup.\nIntroduction The Posix FS Storage Driver is a backend component that manages files on the server utilizing a \u0026ldquo;real\u0026rdquo; file tree that represents the data with folders and files in the file system as users are used to it. That is the big difference compared to Decomposed FS which is the default storage driver in Infinite Scale.\nThis does not mean that Infinite Scale is trading any of its benefits to this new feature: It still implements simplicity by running without a database, it continues to store metadata in the file system and adds them transparently to caches and search indexes, and it also features the full spaces concept as before, just to name a few examples.\nThe architecture of Infinite Scale allows configuring different storage drivers for specific storage types and purposes on a space granularity. The Posix FS Storage Driver is an alternative to the default driver called Decomposed FS.\nHowever, the clarity of the file structure in the underlying file system is not the only benefit of the Posix FS Storage Driver. This new technology allows users to manipulate the data directly in the file system, and any changes made to files outside of Infinite Scale are monitored and directly reflected in Infinite Scale. For example, a scanner could store its output directly to the Infinite Scale file system, which immediately gets picked up in Infinite Scale.\nFor the first time ever with feature rich open source file sync \u0026amp; share systems, users can either choose to work with their data through the clients of the system, its APIs or even directly in the underlying file system on the server.\nThat is another powerful vector for integration and enables a new spectrum of use cases across all domains.\nTechnical Aspects The Posix FS Storage Driver uses a few features of the underlying file system, which are mandatory and directly contributing to the performance of the system.\nWhile the simplest form of Posix FS Storage Driver runs with default file systems of every modern Linux system which are directly mounted and thus support inotify, the full power of this unfolds with more capable file systems such as IBM Storage Scale or Ceph. These are recommended as reliable foundations for big installations of Infinite Scale.\nThis chapter describes some technical aspects of this storage driver.\nPath Locations The file tree that is used as storage path for both data and metadata is located under the local path on the machine that is running Infinite Scale. That might either be a real local file system or a mounted net filesystem. It is expected that oCIS is the only consumer of that file tree, except what is expected behaviour with a collaborative file system, that works with files in that tree.\nUnderneath the Infinite Scale file system root, there is a collection of different folders containing Infinite Scale specific data storing personal spaces, project spaces and indexes.\nMetadata Infinite Scale is highly dependent on the efficient usage of meta data which are attached to file resources, but also logical elements such as spaces.\nMetadata is stored in extended attributes (as also supported by decompsed FS) which poses the benefit that metadata is always directly attached to the actual resources. As a result, care has to be taken that extended attributes are considered when working with the file tree however, e.g. when creating or restoring backups.\nNote: The maximum number and size of extended attributes are limited depending on the filesystem and block size. See GPFS Specifics for more details on GPFS file systems.\nAll indexing and caching of metadata is implemented in higher system levels than the storage driver, and thus are not different to the components used with other storage drivers like the decomposed FS.\nMonitoring To get information about changes such as new files added, files edited or removed, Infinite Scale uses a monitoring system to directly watch the file system. This starts with the Linux inotify system and ranges to much more sophisticated services as for example in Spectrum Scale (see GPFS Specifics for more details on GPFS file systems).\nBased on the information transmitted by the watching service, Infinite Scale is able to \u0026ldquo;register\u0026rdquo; new or changed files into its own caches and internal management structures. This enables Infinite Scale to deliver resource changes through the \u0026ldquo;traditional\u0026rdquo; channels such as APIs and clients.\nSince the most important metadata is the file tree structure itself, it is impossible for the \u0026ldquo;split brain\u0026rdquo; situation between data and metadata to cause trouble.\nAutomatic ETag Propagation The ETag of a resource can be understood as a content fingerprint of any file- or folder resource in Infinite Scale. It is mainly used by clients to detect changes of resources. The rule is, that if the content of a file changed the ETag has to change as well, as well as the ETag of all parent folders up to the root of the space.\nInfinite Scale uses a built in mechanism to maintain the ETag for each resource in the file meta data, and also propagates it automatically.\nA sophisticated underlying file system could provide an attribute that fulfills this requirement and changes whenever content or metadata of a resource changes, and - which is most important - also changes the attribute of the parent resource and the parent of the parent etc.\nAutomatic Tree Size Propagation Similar to the ETag propagation described before, Infinite Scale also tracks the accumulated tree size in all nodes of the file tree. A change to any file requires a re-calculation of the size attribute in all parent folders.\nInfinite Scale would benefit from file systems with native tree size propagation.\nQuota Each space has it\u0026rsquo;s own quota, thus every storage driver implementation needs to consider that.\nFor example, IBM Spectrum Scale supports quota handling directly in the file system.\nOther systems store quota data in the metadata storage and implement propagation of used quota similar to the tree size propagation.\nFile ID Resolution Infinite Scale uses an ID based approach to work with resources, rather than a file path based mechanism. The reason for that is, that ID based lookups can be done way more efficiently compared to tree traversals, just to name one reason.\nThe most important component of the ID is a unique file ID that identifies the resource within a space. Ideally the Inode of a file could be used here. However, some file systems re-use inodes which must be avoided. Infinite Scale thus does not use the file Inode, but generates a UUID instead.\nID based lookups utilize an ID cache which needs to be shared between all storageprovider and dataprovider instances. During startup a scan of the whole file tree is performed to detect and cache new entities.\nIn the future a powerful underlying file system could support Infinite Scale by providing an API that\nProvides the ID for a given file path referenced resource Provides the path for a given ID. These two operations are very crucial for the performance of the entire system.\nUser Management With the requirement that data can be manipulated either through the filesystem or the Infinite Scale system, the question under which UID the manipulation happens is important.\nThere are a few possible ways for user management:\nChanges can either be only accepted by the same user that Infinite Scale is running under, for example the user ocis. All manipulations in the filesystem have to be done by, and only by this user. Group based: All users who should be able to manipulate files have to be in a unix group. The Infinite Scale user has also to be member of that group. The default umask in the directory used has to allow group writing all over the place. Impersonation: Infinite Scale impersonates the user who owns the folder on the file system to mimic the access as the user. All possibilities have pros and cons for operations.\nOne for all, it seems reasonable to use LDAP to manage users which is the base for the Infinite Scale IDP as well as the system login system via PAM.\nGID Based Space Access The Posix FS Storage Driver supports GID based space access to support the problem that project spaces might have to be accessible by multiple users on disk. In order to enable this feature the ocis binary needs to have the setgid capability and STORAGE_USERS_POSIX_USE_SPACE_GROUPS needs to be set to true. Inifinite Scale will then use the space GID (the gid of the space root) for all file system access using the setfsgid syscall, i.e. all files and directories created by Infinite Scale will belong to the same group as the space root.\nAdvanced Features Depending on the capabilities of the underlying file system, the Posix FS Storage Driver can benefit from more advanced functionality described here.\nVersioning If the underlying file system is able to create versions of single resources (imagine a git based file system) this functionality could directly be used by Infinite Scale.\nIn the current state of the Posix FS Storage Driver, versioning is not supported.\nTrashbin If the underlying file system handles deleted files in a trash bin that allows restoring of previously removed files, this functionality could directly be used by Infinite Scale.\nIf not available it will follow the the Free Desktop Trash specificaton.\nLimitations As of Q2/2024 the Posix FS Storage Driver is not officially supported and in technical preview state.\nThe tech preview comes with the following limitations:\nOnly inotify and GPFS file system change notification methods are supported Versioning is not supported yet The space/project folders in the filesystem are named after the UUID, not the real space name No CephFS support yet Postprocessing (ie. anti virus check) does not happen for file actions outside of Infinite Scale Setup This describes the steps to use the Posix FS Storage Driver storage driver with Infinite Scale.\nIt is possible to use different storage drivers in the same Infinite Scale installation. For example it is possible to set up one space running on Posix FS Storage Driver while others run Decomposed FS.\nPrerequisites To use the Posix FS Storage Driver, the following prerequisites have to be fulfilled:\nThere must be storage available to store meta data and blobs, available under a root path. When using inotify, the storage must be local on the same machine. Network mounts do not work with inotify. inotifywait needs to be installed. The storage root path must be writeable and executable by the same user Infinite Scale is running under. An appropiate version of Infinite Scale is installed, version number 5.0.5 and later. nats-js-kv as cache service Setup Configuration This is an example configuration with environment variables that configures Infinite Scale to use Posix FS Storage Driver for all spaces it works with, ie. Personal and Project Spaces:\nexport STORAGE_USERS_DRIVER=\u0026#34;posix\u0026#34; export STORAGE_USERS_POSIX_ROOT=\u0026#34;/home/kf/tmp/posix-storage\u0026#34; export STORAGE_USERS_POSIX_WATCH_TYPE=\u0026#34;inotifywait\u0026#34; export STORAGE_USERS_ID_CACHE_STORE=\u0026#34;nats-js-kv\u0026#34; export STORAGE_USERS_ID_CACHE_STORE_NODES=\u0026#34;localhost:9233\u0026#34; # Optionally enable gid based space access export STORAGE_USERS_POSIX_USE_SPACE_GROUPS=\u0026#34;true\u0026#34; GPFS Specifics When using GPFS as the underlying filesystem the machine running the according storage-users service needs to have the GPFS filesystem mounted locally. The mount path is given to ocis as the STORAGE_USERS_POSIX_ROOT path.\nOther than that there a few other points to consider:\nExtended Attributes As described above metadata is stored as extended attributes of the according entities and thus is suspect to their limitations. In GPFS extended attributes are first stored in the inode itself but can then also use an overflow block which is at least 64KB and up to the metadata block size. Inode and metadata block size should be chosen accordingly.\nFS Watcher The Posix FS Storage Driver supports two different watchers for detecting changes to the filesystem. The watchfolder watcher is better tested and supported at that point.\nGPFS File Audit Logging The gpfsfileauditlogging watcher tails a GPFS file audit log and parses the JSON events to detect relevant changes.\nexport STORAGE_USERS_POSIX_WATCH_TYPE=\u0026#34;gpfsfileauditlogging\u0026#34; export STORAGE_USERS_POSIX_WATCH_PATH=\u0026#34;/path/to/current/audit/log\u0026#34; GPFS Watchfolder The gpfswatchfolder watcher connects to a kafka cluster which is being filled with filesystem events by the GPFS watchfolder service.\nexport STORAGE_USERS_POSIX_WATCH_TYPE=\u0026#34;gpfswatchfolder\u0026#34; export STORAGE_USERS_POSIX_WATCH_PATH=\u0026#34;fs1_audit\u0026#34; # the kafka topic to watch export STORAGE_USERS_POSIX_WATCH_FOLDER_KAFKA_BROKERS=\u0026#34;192.168.1.180:29092\u0026#34; ","description":"Introduction Technical Aspects Path Locations Metadata Monitoring Automatic ETag Propagation Automatic Tree Size Propagation Quota File ID Resolution User Management GID Based Space Access Advanced Features Versioning Trashbin Limitations Setup Prerequisites Setup Configuration GPFS Specifics Extended Attributes FS Watcher GPFS File Audit Logging GPFS Watchfolder The Posix FS Storage Driver is a new storage driver for Infinite Scale.\nThe scope of this document is to give a high level overview to the technical aspects of the Posix FS Storage Driver and guide the setup."},{"id":187,"href":"/ocis/backup/","title":"Backup Considerations","parent":"oCIS - ownCloud Infinite Scale","content":"This small guide aims to shed some light on the internal Infinite Scale data structure. You can refer to it when you are trying to optimize your backups or if you are just curious about how Infinite Scale stores its data.\nNote, as a prerequisite backing up Infinite Scale, the instance has to be fully shut down for the time being.\nOcis Data Structure Ocis stores its data in a folder that can be configured via the environment variable OCIS_BASE_DATA_PATH. Without further configuration, services derive from that path when they store data, though individual settings for certain data types can be configured.\nThe default value for the OCIS_BASE_DATA_PATH variable is $HOME/.ocis (or /var/lib/ocis when using the docker container. Note: Configuration data is by default stored in /etc/ocis/ in the container.).\nInside this folder, Infinite Scale will store all its data in separate subdirectories. That includes metadata, configurations, queues and stores etc. The actual bytes of files (blobs) are handled by a so called blobstore, which also stores here by default. Depending on the used blobstore, the blobs need to be backed up separately, for example if S3 is used. Note: See special case for the config folder in a docker container.\nBase Data Path Overview Listing the contents of the folder will return the following:\n~/.ocis/:tree -L 1 . ├── config ├── idm ├── idp ├── nats ├── proxy ├── search ├── storage ├── thumbnails └── web 10 directories, 0 files The following sections describe the content and background of the subdirectories to decide if a backup is required or recommended and its effect when it is not backed up.\nconfig Contains basic Infinite Scale configuration created by ocis init(Note: The location of the configuration folder can be specified with the OCIS_CONFIG_DIR environment variable, but for this document we will assume this variable is not set and the default is used.)\n~/.ocis/config/:tree . └── ocis.yaml 1 directory, 1 file ocis.yaml:\nBACKUP RECOMMENDED. Holds Infinite Scale configuration data. The contents can vary depending on your environment variables. In general, most of this file can be recreated again by running ocis init. This will recreate secrets and certificates. However, if not backed up completely, some fields MUST be copied over from the old config manually to regain data access after a restore: Field Name Envvar Name Description If not backed up idp.ldap.bind_password OCIS_LDAP_BIND_PASSWORD Password for the idp no logins possible idm.service_user_passwords.idp_password IDM_IDPSVC_PASSWORD Same as above no logins possible system_user_id OCIS_SYSTEM_USER_ID The id of storage-system user no logins possible idm.service_user_passwords.reva_password IDM_REVASVC_PASSWORD The reva password no logins possible auth_basic.auth_providers.ldap.bind_password AUTH_BASIC_LDAP_BIND_PASSWORD Same as above no logins possible users.drivers.ldap.bind_password USERS_LDAP_BIND_PASSWORD Same as above no logins possible groups.drivers.ldap.bind_password GROUPS_LDAP_BIND_PASSWORD Same as above no logins possible storage_users.mount_id STORAGE_USERS_MOUNT_ID The mountid of the storage_users service sharing data lost gateway.storage_registry.storage_users_mount_id GATEWAY_STORAGE_USERS_MOUNT_ID Same as above sharing data lost idm Note: This folder will not appear if you use an external idm. Refer to your idms documentation for backup details in this case.\nContains the data for the internal Infinite Scale identity management. See the IDM README for more details.\n~/.ocis/idm/:tree . ├── ldap.crt ├── ldap.key └── ocis.boltdb 1 directory, 3 files ocis.boltdb:\nBACKUP REQUIRED. This is the boltdb database that stores user data. Use IDM_DATABASE_PATH to specify its path. If not backed up, Infinite Scale will have no users, therefore also all data is lost. ldap.crt:\nBACKUP OPTIONAL. This is the certificate for the idm. Use IDM_LDAPS_CERT to specify its path. Will be auto-generated if not backed up. ldap.key:\nBACKUP OPTIONAL. This is the certificate key for the idm. Use IDM_LDAPS_KEY to specify its path. Will be auto-generated if not backed up. idp Note: This folder will not appear if you use an external idp. Refer to your idp\u0026rsquo;s documentation for backup details in this case.\nContains the data for the internal Infinite Scale identity provider. See the IDP README for more details.\n~/.ocis/idp/:tree . ├── encryption.key ├── private-key.pem └── tmp └── identifier-registration.yaml 2 directories, 3 files encryption.key:\nBACKUP RECOMMENDED. This is the encryption secret. Use IDP_ENCRYPTION_SECRET_FILE to specify its paths. Not backing this up will force users to relogin. private-key.pem:\nBACKUP RECOMMENDED. This is the encryption key. Use IDP_SIGNING_PRIVATE_KEY_FILES to specify its paths. Not backing this up will force users to relogin. identifier-registration.yml:\nBACKUP OPTIONAL. It holds configuration for oidc clients (web, desktop, ios, android). Will be recreated if not backed up. nats Note: This folder will not appear if you use an external nats installation. In that case, data has to secured in alignment with the external installation.\nContains nats data for streams and stores. See the NATS README for more details.\n~/.ocis/nats/:tree -L 1 . └── jetstream jetstream:\nBACKUP RECOMMENDED. This folder contains nats data about streams and key-value stores. Use NATS_NATS_STORE_DIR to specify its path. Not backing it up can break history for multiple (non-vital) features such as history or notifications. The Infinite Scale functionality is not impacted if omitted. proxy Contains proxy service data. See the PROXY README for more details.\n~/.ocis/proxy/:tree . ├── server.crt └── server.key 1 directory, 2 files server.crt:\nBACKUP OPTIONAL. This is the certificate for the http services. Use PROXY_TRANSPORT_TLS_CERT to specify its path. server.key:\nBACKUP OPTIONAL. This is the certificate key for the http services. Use PROXY_TRANSPORT_TLS_KEY to specify its path. search Contains the search index. See the SEARCH README for more details.\n~/.ocis/search/:tree -L 1 . └── bleve 2 directories, 0 files bleve:\nBACKUP RECOMMENDED/OPTIONAL. This contains the search index. Can be specified via SEARCH_ENGINE_BLEVE_DATA_PATH. If not backed up, the search index needs to be recreated. This can take a long time depending on the amount of files. storage Contains Infinite Scale meta (and blob) data, depending on the blobstore. See the STORAGE-USERS README for more details.\n~/.ocis/storage/:tree -L 1 . ├── metadata ├── ocm └── users 4 directories, 0 files metadata:\nBACKUP REQUIRED. Contains system data. Path can be specified via STORAGE_SYSTEM_OCIS_ROOT. Not backing it up will remove shares from the system and will also remove custom settings. ocm:\nBACKUP REQUIRED/OMITABLE. Contains ocm share data. When not using ocm sharing, this folder does not need to be backed up. users:\nBACKUP REQUIRED. Contains user data. Path can be specified via STORAGE_USERS_OCIS_ROOT. Not backing it up will remove all spaces and all files. As result, you will have a configured but empty Infinite Scale instance, which is fully functional accepting new data. Old data is lost. thumbnails Contains thumbnails data. See the THUMBNAILS README for more details.\n~/.ocis/thumbnails/:tree -L 1 . └── files files:\nOPTIONAL/RECOMMENDED. This folder contains prerendered thumbnails. Can be specified via THUMBNAILS_FILESYSTEMSTORAGE_ROOT. If not backed up, thumbnails will be regenerated automatically on access which leads to some load on the thumbnails service. web Contains web assets such as custom logos, themes etc. See the WEB README for more details.\n~/.ocis/web/:tree -L 1 . └── assets 2 directories, 0 files assets:\nBACKUP RECOMMENDED/OMITABLE. This folder contains custom web assets. Can be specified via WEB_ASSET_CORE_PATH. If no custom web assets are used, there is no need for a backup. If those exist but are not backed up, they need to be reuploaded. external services When using an external idp/idm/nats or blobstore, its data needs to be backed up separately. Refer to your idp/idm/nats/blobstore documentation for backup details.\nBackup Consistency Command Infinite Scale now allows checking an existing backup for consistency. Use the command:\nocis backup consistency -p \u0026#34;\u0026lt;path-to-base-folder\u0026gt;\u0026#34; path-to-base-folder needs to be replaced with the path to the storage providers base path. Should be same as the STORAGE_USERS_OCIS_ROOT\nUse the -b s3ng option when using an external (s3) blobstore. Note: When using this flag, the path to the blobstore must be configured via envvars or a yaml file to match the configuration of the original instance. Consistency checks for other blobstores than ocis and s3ng are not supported at the moment.\n","description":"This small guide aims to shed some light on the internal Infinite Scale data structure. You can refer to it when you are trying to optimize your backups or if you are just curious about how Infinite Scale stores its data.\nNote, as a prerequisite backing up Infinite Scale, the instance has to be fully shut down for the time being.\nOcis Data Structure Ocis stores its data in a folder that can be configured via the environment variable OCIS_BASE_DATA_PATH."},{"id":188,"href":"/architecture/collaborative-storage/","title":"Collaborative Storage","parent":"Architecture","content":" Storage Driver Components Path Locations Spaces ID to Path Lookup Change Notification ETag Propagation Metadata Management Quota User Management Exclusive Environment Collaborative Storage Trashbin Versions One of the envisioned design goals of Infinite Scale is to work with so called collaborative storage, which means that the file system it is running on is not exclusive for Infinite Scale, but can be manipulated in parallel through third party tools. Infinite Scale is expected to monitor the changes that happen independently and react in a consistent and user friendly way.\nA real world example of that would be a third party \u0026ldquo;data producer\u0026rdquo; that submits data directly into a file system path, not going through Infinite Scale APIs.\nThis document outlines a few challenges and design concepts for collaborative storage. It is also the base \u0026ldquo;checklist\u0026rdquo; for custom storage provider implementations for certain storages, ie. for Ceph- or IBM Storage Scale which provide features that allow more sophisticated and efficient implementations of this goal.\nStorage Driver Components This discusses a few components and sub functions of the storage driver that have relevance for the collaborative storage.\nPath Locations What is called \u0026ldquo;the oCIS file system\u0026rdquo; is defined as the entire filetree underneath a special path in the local POSIX file system, which might either be a real local file system or a mounted net filesystem. It is expected that oCIS is the only consumer of that file tree, except what is expected behaviour with a collaborative file system, that adds and edits files in that tree.\nUnderneath the oCIS file system root, there is an collection of different folders containing oCIS specific data. Specific storage driver data is in the directory storage/users, organized by spaces. (TODO: Check again how different storage drivers work together without overwriting data of each other)\nSpaces Infinite Scale provides spaces as an additional organization organizational unit for data. Each space is a separate entity with its own attributes such as access patterns and quota.\nA storage driver has to model the separation of spaces and provide a list of spaces in general and also a list of spaces a user can access. Furthermore, it needs to be able to create different types of spaces (Home- or Project space).\nOn POSIX, each space could for example be mapped to it\u0026rsquo;s own directory in a special spaces folder under the oCIS root folder.\nID to Path Lookup Infinite Scale uses file IDs to efficiently identify files within a file tree. The lookup from a given ID to a path within the oCIS file tree is a very basic function that more or less defines the Infinite Scale performance. The functionality to for example query the file path for a given Inode number (which is the nearest equivalent for the Infinite Scale file ID) can not be done with standard POSIX system calls.\nThe interface defining the collaborative storage needs an abstraction for this particular function, returning the file id for a given path, and returning the path for given id.\nChange Notification When a file is changed by a process outside of oCIS, this needs to be monitored by oCIS to quickly maintain internal caches and data structures as required.\nThe collaborative storage driver needs a way to achieve that. The easiest way for an POSIX based collaborative storage is inotify, that needs to be set up recursively on a file tree to record changes. Additional it is a challenge to destinguish between changes that were done from external activity and the ones that oCIS creates by its own file operations.\nFor GPFS, there is a subsystem called delivering that:\nhttps://www.ibm.com/docs/en/storage-scale/5.1.9?topic=reference-clustered-watch-folder]\nETag Propagation ownCloud requires that changes which happen \u0026ldquo;down\u0026rdquo; in a tree, can be detected in the root element of the tree. That happens through the change of the ETag metadata of each file and/or directory. An ETag is a random, text based tag, that only has one requirement: It has to change its content if a resource further down in the file tree has changed either its content or its metadata. (See this issue for further discussion about the ETag/CTag).\nPOSIX file systems do not maintain a change flag like the ETag by default. The file time stamps (atime, ctime, mtime) in general are not fine granular enough (only seconds for some file systems) and depend on the server time, which renders them useless in a distributed environment.\nInfinite Scale needs to implement ETag propagation \u0026ldquo;up\u0026rdquo;. For the collaborative storage, that needs to be combined with the change notification described above.\nCertain file systems implement this functionality either independently from Infinite Scale (EOS) or at least support proper change notifications (Ceph, GPFS?).\nMetadata Management Metadata are data \u0026ldquo;snippets\u0026rdquo; that are as tightly attached to files as ever possible. In best case, a rename of a file silently keeps the metadata as well. In POSIX, this can be achieved by extended file attributes with certain limitations.\nQuota Each space has it\u0026rsquo;s own quota, thus a storage driver implementation needs to consider that.\nFor GPFS for example, there is support for quota handling in the file system.\nhttps://www.ibm.com/docs/en/gpfs/4.1.0.4?topic=interfaces-gpfs-quotactl-subroutine\nOther systems store quota data in the metadata storage and implement propagation of used quota similar to the ETag propagation.\nUser Management With user management it is meant how to handle the users and groups within oCIS and how that reflects to the file system where data is stored.\nExclusive Environment In exclusive environments (aka. decomposedFS) all files of oCIS (ie. the entire oCIS filetree) belongs to a system user with the name ocis typically.\nCollaborative Storage For collaborative storages, the approach described above does not longer work because users are supposed to be able to manipulate data in \u0026ldquo;their\u0026rdquo; file tree parts, and that is identified by ACLs and the owner of the files.\nThat requires a few prerequisites that have to be fulfilled:\noCIS as one \u0026ldquo;client\u0026rdquo; changing data and the system that allows to access the file tree directly have to use the same user provider, to ensure that each user that is available on a shell is also available in oCIS. That ensures that changes are authenticated through system ACLs and users. LDAP based authentication on the system via PAM and the same LDAP as source for the oCIS IDP should be a sufficient setup. oCIS must be able to write as a \u0026ldquo;different\u0026rdquo; user than the ocis system user. That means that we somehow have to impersonate file changing ooperations and run these as the user that is authenticated in oCIS. Example: There is a user ben. It has to have an entry in the LDAP that is used by IDP which oCIS is running \u0026ldquo;behind\u0026rdquo;. With that, ben is able to authenticate through the IDP and work in the oCIS web app. The oCIS linux process will do writes and other changes impersonated as user ben.\nFor the access of data on the commandline, the logins to the linux system must be authenticated against the same LDAP - so that ben can authenticate on a terminal using username and password. With that, the user can interactively change data that belongs to user ben (simplified said).\nTo give permissions to groups, the linux group management must work accordingly. The same is true for file permissions.\nTrashbin When a user deletes a file in oCIS it is moved to a so called trashbin that allows to restore the file if the deletion was accidentailly.\nVersions When an existing file is changed, the former file state is to be preserved with data and metadata by oCIS. Some file system types provide this functionality via snapshots on partition or even file level. Other do not and have to implement that via a hidden directory keeping old file versions.\n","description":"Storage Driver Components Path Locations Spaces ID to Path Lookup Change Notification ETag Propagation Metadata Management Quota User Management Exclusive Environment Collaborative Storage Trashbin Versions One of the envisioned design goals of Infinite Scale is to work with so called collaborative storage, which means that the file system it is running on is not exclusive for Infinite Scale, but can be manipulated in parallel through third party tools. Infinite Scale is expected to monitor the changes that happen independently and react in a consistent and user friendly way."},{"id":189,"href":"/architecture/upload-processing/","title":"Upload processing","parent":"Architecture","content":"Uploads are handled by a dedicated service that uses TUS.io for resumable uploads. When all bytes have been transferred the upload is finalized by making the file available in file listings and for download.\nThe finalization may be asynchronous when mandatory workflow steps are involved.\nLegacy PUT upload %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocdav participant storageprovider participant dataprovider Client-\u003e\u003e+ocdav: PUT /dav/spaces/{spaceid}/newfile.bin ocdav-\u003e\u003e+storageprovider: InitiateFileUpload storageprovider--\u003e\u003e-ocdav: OK, Protocol simple, UploadEndpoint: /data, Token: {jwt} Note right of ocdav: The {jwt} contains the internal actual target, eg.:\nhttp://localhost:9158/data/simple/91cc9882-db71-4b37-b694-a522850fcee1 ocdav-\u003e\u003e+dataprovider: PUT /data\nX-Reva-Transfer: {jwt} dataprovider--\u003e\u003e-ocdav: 201 Created ocdav--\u003e\u003e-Client: 201 Created TUS upload %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocdav participant storageprovider participant datagateway participant dataprovider Client-\u003e\u003e+ocdav: POST /dav/spaces/{spaceid}\nUpload-Metadata: {base64 encoded filename etc}\nTUS-Resumable: 1.0.0 ocdav-\u003e\u003e+storageprovider: InitiateFileUpload storageprovider--\u003e\u003e-ocdav: OK, Protocol tus, UploadEndpoint: /data, Token: {jwt} Note right of ocdav: The {jwt} contains the internal actual target, eg.:\nhttp://localhost:9158/data/tus/24d893f5-b942-4bc7-9fb0-28f49f980160 ocdav--\u003e\u003e-Client: 201 Created\nLocation: /data/{jwt}\nTUS-Resumable: 1.0.0 Client-\u003e\u003e+datagateway: PATCH /data/{jwt}\nTUS-Resumable: 1.0.0\nUpload-Offset: 0 Note over datagateway: unwrap the {jwt} target datagateway-\u003e\u003e+dataprovider: PATCH /data/tus/24d893f5-b942-4bc7-9fb0-28f49f980160\nX-Reva-Transfer: {jwt} Note over dataprovider: storage driver\nhandles request dataprovider--\u003e\u003e-datagateway: 204 No Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 datagateway--\u003e\u003e-Client: 204 No Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 TUS upload with async postprocessing %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocdav participant storageprovider participant datagateway participant dataprovider participant nats Client-\u003e\u003e+ocdav: POST /dav/spaces/{spaceid}\nUpload-Metadata: {base64 encoded filename etc}\nTUS-Resumable: 1.0.0 ocdav-\u003e\u003e+storageprovider: InitiateFileUpload storageprovider--\u003e\u003e-ocdav: OK, Protocol tus, UploadEndpoint: /data, Token: {jwt} Note right of ocdav: The {jwt} contains the internal actual target, eg.:\nhttp://localhost:9158/data/tus/24d893f5-b942-4bc7-9fb0-28f49f980160 ocdav--\u003e\u003e-Client: 201 Created\nLocation: /data/{jwt}\nTUS-Resumable: 1.0.0 Client-\u003e\u003e+datagateway: PATCH /data/{jwt}\nTUS-Resumable: 1.0.0\nUpload-Offset: 0 Note over datagateway: unwrap the {jwt} target datagateway-\u003e\u003e+dataprovider: PATCH /data/tus/24d893f5-b942-4bc7-9fb0-28f49f980160\nX-Reva-Transfer: {jwt} Note over dataprovider: storage driver\nhandles request dataprovider-)nats: emit all-bytes-received event nats-)processing: all-bytes-received({uploadid}) event Note over dataprovider: TODO: A lot of time may pass here, we could use\nthe `Prefer: respond-async` header to return early\nwith a 202 Accepted status and a Location header\nto a websocket endpoint alt success processing-)nats: emit processing-finished({uploadid}) event nats-)dataprovider: processing-finished({uploadid}) event dataprovider--\u003e\u003e-datagateway: 204 No Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 datagateway--\u003e\u003e-Client: 204 No Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 else failure activate dataprovider activate datagateway processing-)nats: emit processing-aborted({uploadid}) event nats-)dataprovider: processing-aborted({uploadid}) event Note over dataprovider: FIXME: What HTTP status code should we report?\n422 Unprocessable Content is just a proposal, see\nhttps://httpwg.org/specs/rfc9110.html#status.422 dataprovider--\u003e\u003e-datagateway: 422 Unprocessable Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 datagateway--\u003e\u003e-Client: 422 Unprocessable Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 end Async TUS upload with postprocessing This might be a TUS extension or a misunderstanding on our side of what tus can do for us. Clients should send a Prefer: respond-async header to allow the server to return early when postprocessing might take longer. The PATCH requests can then return status 202 Accepted and a Location header to a websocket that clients can use to track the processing / upload progress.\nTODO there is a conflict with the TUS.io POST request with the creation extension, as that also returns a Location header which carries the upload URL. We would need another header to transport the websocket location. Maybe Websocket-Location or Progress-Location?\n","description":"Uploads are handled by a dedicated service that uses TUS.io for resumable uploads. When all bytes have been transferred the upload is finalized by making the file available in file listings and for download.\nThe finalization may be asynchronous when mandatory workflow steps are involved.\nLegacy PUT upload %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg."},{"id":190,"href":"/architecture/protocol-changes/","title":"Protocol changes","parent":"Architecture","content":"The spaces concept allows clients to look up the space endpoints a user has access to and then do individual sync discoveries. Technically, we introduce an indirection that allows clients to rely on server provided URLs instead of hardcoded /webdav or /dav/files/{username} paths, that may change over time.\nSpace discovery %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant Graph participant SpaceA participant SpaceB links Client: {\"web\": \"https://owncloud.dev/clients/web/\", \"RClone\": \"https://owncloud.dev/clients/rclone/\"} link Graph: Documentation @ https://owncloud.dev/extensions/graph/ Note left of Client: First, a clients looksup the spaces a user has access to opt space lookup Client-\u003e\u003e+Graph: GET /me/drives Graph--\u003e\u003e-Client: 200 OK JSON list of spaces, say A, B and C, each with a dedicated webDavURL, etag and quota end Note left of Client: Then it can do a parallelsync discovery on spaceswhose etag changed par Client to Space A Client-\u003e\u003e+SpaceA: PROPFIND {webDavURL for Space A} SpaceA--\u003e\u003e-Client: 207 Multistatus PROPFIND response and Client to Space B Client-\u003e\u003e+SpaceB: PROPFIND {webDavURL for space B} SpaceB--\u003e\u003e-Client: 207 Multistatus PROPFIND response end New /dav/spaces/{spaceid} endpoint with spaceid and a relative path The ocDAV service is responsible for translating ownCloud flavoured WebDAV into CS3 API calls.\nGeneral view\nA PROPFIND finds its way to a storage provider like this:\n%%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocDAV participant StorageProvider Note right of Client: {spaceid} identifies the space\n{relative/path} is relative to the space root Client-\u003e\u003e+ocDAV: PROPFIND /dav/space/{spaceid}/{relative/path} Note right of ocDAV: translate ownCloud flavoured webdav\ninto CS3 API requests ocDAV-\u003e\u003e+StorageProvider: ListContainer({spaceid}, path: {relative/path}) StorageProvider--\u003e\u003e-ocDAV: []ResourceInfo ocDAV--\u003e\u003e-Client: 207 Multistatus While the above is a simplification to get an understanding of what needs to go where, there are several places where sharding can happen.\nProxy can do user based routing\nThe ocis proxy authenticates requests and can forward requests to different backends, depending on the logged-in user or cookies. For example multiple ocdav services can be configured to shard users based on username or affiliation.\n%%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant proxy participant ocDAV1 as ocDAV [a-k] participant ocDAV2 as ocDAV [l-z] Note right of Client: {spaceid} identifies the space\n{relative/path} is relative to the space root Client-\u003e\u003e+proxy: PROPFIND /dav/space/{spaceid}/{relative/path} alt username starting with a-k proxy-\u003e\u003e+ocDAV1: PROPFIND /dav/space/{spaceid}/{relative/path} Note right of ocDAV1: translate ownCloud flavoured webdav\ninto CS3 API requests ocDAV1--\u003e\u003e-Client: 207 Multistatus else username starting with l-z proxy-\u003e\u003e+ocDAV2: PROPFIND /dav/space/{spaceid}/{relative/path} ocDAV2--\u003e\u003e-Client: 207 Multistatus end Gateway can do path or storage provider id based routing\nThe reva gateway acts as a facade to multiple storage providers that can be configured with the storage registry:\n%%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant ocDAV participant Gateway participant StorageRegistry participant StorageProvider1 as StorageProvider [a-k] participant StorageProvider2 as StorageProvider [l-z] Note right of ocDAV: translate ownCloud flavoured webdav\ninto CS3 API requests ocDAV-\u003e\u003e+Gateway: ListContainer({spaceid}, path: {relative/path}) Note right of Gateway: find address of the storage provider\nthat is responsible for the space Gateway-\u003e\u003e+StorageRegistry: ListStorageProviders({spaceid}) StorageRegistry--\u003e\u003e-Gateway: []ProviderInfo Note right of Gateway: forward request to\ncorrect storage provider alt username starting with a-k Gateway-\u003e\u003e+StorageProvider1: ListContainer({spaceid}, path: {relative/path}) StorageProvider1--\u003e\u003e-Gateway: []ResourceInfo else username starting with l-z Gateway-\u003e\u003e+StorageProvider2: ListContainer({spaceid}, path: {relative/path}) StorageProvider2--\u003e\u003e-Gateway: []ResourceInfo end Gateway--\u003e\u003e-ocDAV: []ResourceInfo Old /dav/files/{username} endpoint with username and a path relative to the users home PROPFIND request against old webdav endpoints\nTo route a PROPFIND request against the old webdav endpoints like /dav/files/username, ocdav first has to build a CS3 namespace prefix, e.g. /users/{{.Id.OpaqueId}} to the users home.\n%%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocDAV participant Gateway opt old /dav/files/{username} endpoint with username and a path relative to the users home Note right of Client: translate ownCloud flavoured webdav\ninto CS3 API requests Client-\u003e\u003e+ocDAV: PROPFIND /dav/files/{username}/{relative/path} Note right of ocDAV: translate ownCloud flavoured webdav\ninto CS3 API requests ocDAV-\u003e\u003e+Gateway: GetUser({username}) Gateway--\u003e\u003e-ocDAV: User Note right of ocDAV: build path prefix to user home ocDAV-\u003e\u003e+ocDAV: {namespace/prefix} = ApplyLayout({path layout}, User), eg. /users/e/einstein Note right of ocDAV: look up the space responsible for a path ocDAV-\u003e\u003e+Gateway: ListStorageSpaces(path: {namespace/prefix}/{relative/path}) Gateway--\u003e\u003e-ocDAV: []StorageSpace Note right of ocDAV: make actual request with space and relative path ocDAV-\u003e\u003e+Gateway: ListContainer({spaceid}, path: {relative/path}) Gateway--\u003e\u003e-ocDAV: []ResourceInfo ocDAV--\u003e\u003e-Client: 207 Multistatus end Handling legacy global namespace webdav endpoints\nThe reason ocis uses a path based lookup instead of looking up the current users home using the user id and a space type filter is, because there are deployments that use a global namespace at the legacy /webdav endpoint. To support these use cases, the gateway allows looking up spaces using their mount path.\n%%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocDAV participant Gateway Note right of Client: translate ownCloud flavoured webdav\ninto CS3 API requests alt old /dav/files/{username} endpoint with username and a path relative to the users home Client-\u003e\u003e+ocDAV: PROPFIND /dav/files/{username}/{relative/path} Note right of ocDAV: look up {username} in URL path ocDAV-\u003e\u003e+Gateway: GetUser({username}) Gateway--\u003e\u003e-ocDAV: User Note right of ocDAV:build namespace prefix to user home ocDAV-\u003e\u003e+ocDAV: {namespace/prefix} = ApplyLayout({namespace layout}, User), eg. /users/e/einstein else legacy /webdav/ endpoint with a path relative to the users home Client-\u003e\u003e+ocDAV: PROPFIND /webdav/{relative/path} Note right of ocDAV: use currently logged in user ocDAV-\u003e\u003e+ocDAV: ContextGetUser() Note right of ocDAV: build namespace prefix to user home ocDAV-\u003e\u003e+ocDAV: {namespace/prefix} = ApplyLayout({namespace layout}, User), eg. /users/e/einstein else legacy /webdav/ endpoint with a path relative to a global namespace Client-\u003e\u003e+ocDAV: PROPFIND /webdav/{relative/path} Note right of ocDAV: omit namespace prefix by using empty layout template ocDAV-\u003e\u003e+ocDAV: {namespace/prefix} = ApplyLayout(\"/\", u), always returns \"/\" end Note right of ocDAV: look up the space responsible for a path ocDAV-\u003e\u003e+Gateway: ListStorageSpaces(path: {namespace/prefix}/{relative/path}) Gateway--\u003e\u003e-ocDAV: []StorageSpace Note right of ocDAV: make actual request with space and relative path ocDAV-\u003e\u003e+Gateway: ListContainer({spaceid}, path: {relative/path}) Gateway--\u003e\u003e-ocDAV: []ResourceInfo ocDAV--\u003e\u003e-Client: 207 Multistatus ","description":"The spaces concept allows clients to look up the space endpoints a user has access to and then do individual sync discoveries. Technically, we introduce an indirection that allows clients to rely on server provided URLs instead of hardcoded /webdav or /dav/files/{username} paths, that may change over time.\nSpace discovery %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg."},{"id":191,"href":"/architecture/services-communication/","title":"Services Communication","parent":"Architecture","content":" ","description":" "},{"id":192,"href":"/clients/web/development/repo-structure/","title":"Repo structure and (published) packages","parent":"Development","content":" Repository Structure dev Folder and docker-compose.yml File docs Folder packages Folder tests Folder package.json File vite.config.ts (Published) Packages Code Style and Build Config ownCloud Design System web-client web-pkg web-runtime Standalone Core Apps Viewer and Editor Apps Testing Repository Structure From a developer\u0026rsquo;s perspective, the most important parts of the ownCloud Web repo are the following files and folders:\ndev Folder and docker-compose.yml File The /dev folder contains all the configuration files that are needed in the docker-compose.yml file. This docker compose stack contains all the backend and testing related infrastructure that is needed for an out-of-the-box usable localhost development setup, as described in the tooling section.\ndocs Folder Within the /docs folder you will find all the documentation source documents that get published to the dev docs.\npackages Folder We\u0026rsquo;re using the ownCloud Web repo as a mono repo. It contains a variety of packages. Some of them get published to npmjs.com, others define the core packages, apps and extensions that are the foundation of the ownCloud Web release artifact.\nHaving these packages side by side within the /packages folder of the repo is possible because of a pnpm feature called Workspaces. You can learn more about that by visiting the pnpm docs.\ntests Folder We\u0026rsquo;re using the Playwright for UI testing. The UI tests are located in the /tests/e2e\nYou\u0026rsquo;re more than welcome to make a pull request and adjust this section of the docs accordingly. :-) You can read more about testing in our testing section\npackage.json File This is probably no surprise: the root level package.json file defines the project information, build scripts, dependencies and some more details. Each package in /packages can and most likely will contain another package.json which does the same for the respective package.\nvite.config.ts We\u0026rsquo;re working with Vite as a local development server and build tool. vite.config.ts is the main configuration file for that. You can read more about the usage in our tooling section.\n(Published) Packages Each package in the /packages folder can - not exclusively, but most commonly - consist of\nsource code (/src), unit tests (/tests), translations (/l10n) and a package.json file for package specific details and dependencies. Code Style and Build Config Some of our packages in /packages are pure helper packages which ensure a common code style and build configuration for all our internal (mono repo) and external packages. We encourage you to make use of the very same packages. This helps the community understand code more easily, even when coming from different developers or vendors in the ownCloud Web ecosystem.\nNamely those packages are\n/packages/babel-preset /packages/eslint-config /packages/extension-sdk /packages/prettier-config /packages/tsconfig/ ownCloud Design System The ownCloud Design System (/packages/design-system) is a collection of components, design tokens and styles which ensure a unique and consistent look and feel and branding throughout the ownCloud Web ecosystem. We hope that you use it, too, so that your very own apps and extensions will blend in with all the others. Documentation and code examples can be found in the design system documentation.\nThe ownCloud Design System is a standalone project, but to make development easier we have the code in our mono repo. We\u0026rsquo;re planning to publish it on npmjs.com as @ownclouders/design-system as soon as possible. Since it\u0026rsquo;s bundled with ownCloud Web, you should not bundle it with your app or extension.\nweb-client The client package (/packages/web-client) serves as an abstraction layer for the various ownCloud APIs, like LibreGraph, WebDAV and OCS. The package provides TypeScript interfaces for various entities (like files, folders, shares and spaces) and makes sure that raw API responses are properly transformed so that you can deal with more useful objects. The web-client package gets published on npmjs.com as @ownclouders/web-client.\nDedicated documentation for the web-client package is not available, yet, since our extension system is still work in progress. However, the package\u0026rsquo;s README.md gives you a few examples on how to use it.\nweb-pkg The web-pkg package (/packages/web-pkg) is a collection of opinionated components, composables, types and other helpers that aim at making your app and extension developer experience as easy and seamless as possible. The web-pkg package gets published on npmjs.com as @ownclouders/web-pkg.\nDedicated documentation for the web-pkg package is not available, yet, since our extension system is still work in progress.\nweb-runtime At the very heart of ownCloud Web, the web-runtime is responsible for dependency injection, app bootstrapping, configuration, authentication, data preloading and much more. It is very likely that you will never get in touch with it as most of the developer-facing features are exposed via web-pkg. If you have more questions about this package, please join our public chat and simply ask or write an issue in our issue tracker.\nStandalone Core Apps Both web-app-admin-settings and web-app-files are standalone apps which are bundled with the default ownCloud Web release artifact.\nViewer and Editor Apps Apps which fall into the categories viewer or editor can be opened from the context of a file or folder. This mostly happens from within the files app. We currently bundle the following apps with the default ownCloud Web release artifact:\nweb-app-epub-reader a simple reader for .epub files web-app-external an iframe integration of all the apps coming from the app provider (e.g. OnlyOffice, Collabora Online and others) web-app-pdf-viewer a viewer for .pdf files, which relies on native PDF rendering support from the browser web-app-preview a viewer for various media files (audio / video / image formats) web-app-text-editor a simple editor for .txt, .md and other plain text files If you\u0026rsquo;re interested in writing your own viewer or editor app for certain file types, please get in touch with us for more info.\nTesting Additional unit testing code lives in test-helpers.\n","description":"Repository Structure dev Folder and docker-compose.yml File docs Folder packages Folder tests Folder package.json File vite.config.ts (Published) Packages Code Style and Build Config ownCloud Design System web-client web-pkg web-runtime Standalone Core Apps Viewer and Editor Apps Testing Repository Structure From a developer\u0026rsquo;s perspective, the most important parts of the ownCloud Web repo are the following files and folders:\ndev Folder and docker-compose.yml File The /dev folder contains all the configuration files that are needed in the docker-compose."},{"id":193,"href":"/ocis/storage-backends/cephfs/","title":"cephfs","parent":"Storage backends","content":" Development Architecture Implemented Aspects Future work oCIS intends to make the aspects of existing storage systems available as transparently as possible, but the static sync algorithm of the desktop client relies on some form of recursive change time propagation on the server side to detect changes. While this can be bolted on top of existing file systems with inotify, the kernel audit or a fuse based overlay filesystem, a storage system that already implements this aspect is preferable. Aside from EOS, cephfs supports a recursive change time that oCIS can use to calculate an etag for the webdav API.\nDevelopment The cephfs development happens in a Reva branch and is currently driven by CERN.\nArchitecture In the original approach the driver was based on the localfs driver, relying on a locally mounted cephfs. It would interface with it using the POSIX apis. This has been changed to directly call the Ceph API using https://github.com/ceph/go-ceph. It allows using the ceph admin APIs to create sub-volumes for user homes and maintain a file id to path mapping using symlinks.\nImplemented Aspects The recursive change time built ino cephfs is used to implement the etag propagation expected by the ownCloud clients. This allows oCIS to pick up changes that have been made by external tools, bypassing any oCIS APIs.\nLike other filesystems cephfs uses inodes and like most other filesystems inodes are reused. To get stable file identifiers the current cephfs driver assigns every node a file id and maintains a custom fileid to path mapping in a system directory:\n/tmp/cephfs $ tree -a . ├── reva │ └── einstein │ ├── Pictures │ └── welcome.txt └── .reva_hidden ├── .fileids │ ├── 50BC39D364A4703A20C58ED50E4EADC3_570078 -\u0026gt; /tmp/cephfs/reva/einstein │ ├── 571EFB3F0ACAE6762716889478E40156_570081 -\u0026gt; /tmp/cephfs/reva/einstein/Pictures │ └── C7A1397524D0419B38D04D539EA531F8_588108 -\u0026gt; /tmp/cephfs/reva/einstein/welcome.txt └── .uploads Versions are not file but snapshot based, a native feature of cephfs. The driver maps entries in the native cephfs .snap folder to the CS3 api recycle bin concept and makes them available in the web UI using the versions sidebar. Snapshots can be triggered by users themselves or on a schedule.\nTrash is not implemented, as cephfs has no native recycle bin and instead relies on the snapshot functionality that can be triggered by end users. It should be possible to automatically create a snapshot before deleting a file. This needs to be explored.\nShares are mapped to ACLs supported by cephfs. The share manager is used to persist the intent of a share and can be used to periodically verify or reset the ACLs on cephfs.\nFuture work The spaces concept matches cephfs sub-volumes. We can implement the CreateStorageSpace call with that, keep track of the list of storage spaces using symlinks, like for the id based lookup. The share manager needs a persistence layer. Currently we persist using a single json file. As it basically provides two lists, shared with me and shared with others, we could persist them directly on cephfs! If needed for redundancy, the share manager can be run multiple times, backed by the same cephfs To save disk io the data can be cached in memory, and invalidated using stat requests. A good tradeoff would be a folder for each user with a json file for each list. That way, we only have to open and read a single file when the user want\u0026rsquo;s to list the shares. To allow deprovisioning a user the data should be sharded by userid. That way all share information belonging to a user can easily be removed from the system. If necessary it can also be restored easily by copying the user specific folder back in place. For consistency over metadata any file blob data, backups can be done using snapshots. An example where einstein has shared a file with marie would look like this on disk: /tmp/cephfs $ tree -a . ├── reva │ └── einstein │ ├── Pictures │ └── welcome.txt ├── .reva_hidden │ ├── .fileids │ │ ├── 50BC39D364A4703A20C58ED50E4EADC3_570078 -\u0026gt; /tmp/cephfs/reva/einstein │ │ ├── 571EFB3F0ACAE6762716889478E40156_570081 -\u0026gt; /tmp/cephfs/reva/einstein/Pictures │ │ └── C7A1397524D0419B38D04D539EA531F8_588108 -\u0026gt; /tmp/cephfs/reva/einstein/welcome.txt │ └── .uploads └── .reva_share_manager ├── einstein │ └── sharedWithOthers.json └── marie └── sharedWithMe.json The fileids should not be based on the path and instead use a uuid that is also persisted in the extended attributes to allow rebuilding the index from scratch if necessary. ","description":"Development Architecture Implemented Aspects Future work oCIS intends to make the aspects of existing storage systems available as transparently as possible, but the static sync algorithm of the desktop client relies on some form of recursive change time propagation on the server side to detect changes. While this can be bolted on top of existing file systems with inotify, the kernel audit or a fuse based overlay filesystem, a storage system that already implements this aspect is preferable."},{"id":194,"href":"/ocis/flow-docs/","title":"Flow documentation","parent":"oCIS - ownCloud Infinite Scale","content":"","description":""},{"id":195,"href":"/ocis/storage-backends/dcfsnfs/","title":"Decomposed FS on NFS","parent":"Storage backends","content":" NFS Server Setup NFS Client Mount oCIS Start using the NFS Share oCIS\u0026rsquo; default storage backend is the Decomposed FS. The Decomposed FS can be set up to run on a NFS share. That way the same storage can be provided over the network to other nodes running oCIS.\nThis document summarizes a few important considerations of the NFS setup and describes a tested setup. The test has not covered concurrent access of data from different nodes yet.\nNFS Server Setup This document covers the linux kernel NFS server on a standard Linux running on x86_64.\nThe NFS server needs to be set up in a way that it supports extended file attributes.\nExtended attributes are supported by NFS starting with Kernel version 5.9, which means that the server with the NFS server has to run a kernel with that or a higher version number. To check that, run the command uname -a on the NFS server and compare the displayed version number.\nThe NFS server in the test setup was configured with the following line in the config file /etc/exports:\n/space/nfstest 192.168.178.0/24(rw,root_squash,async,subtree_check,anonuid=0,anongid=100,all_squash)\nThis exports the directory /space/nfstest to the internal network with certain options.\nImportant:\nThe share needs to be exported with the async option for proper NFS performance. NFS Client Mount The nodes that run oCIS need to mount the NFS storage to a local mount point.\nThe test setup uses the client mount command: mount -t nfs -o nfsvers=4 192.168.178.28:/space/nfstest /mnt/ocisdata/\nIt sets the NFS version to 4, which is important to support extended attributes.\nAfter successfully mounting the storage on the client, it can be checked if the NFS setup really supports extended attributes properly using the following commands.\nsetfattr -n user.test -v \u0026quot;xattr test string\u0026quot; ocisdata/foo to write an extended attribute to a file, and getfattr -d ocisdata/foo to list all the attributes a file has set.\nThe NFS server setup can be optimized considering system administrative-, performance- and security options. This is not (yet) covered in this documentation. oCIS Start using the NFS Share The oCIS server can be instructed to set up the decomposed FS at a certain path by setting the environment variable OCIS_BASE_DATA_PATH.\nThe test setup started an oCIS tech preview single binary release using this start command:\n./ocis init OCIS_BASE_DATA_PATH=/mnt/ocisdata/ OCIS_LOG_LEVEL=debug OCIS_INSECURE=true PROXY_HTTP_ADDR=0.0.0.0:9200 OCIS_URL=https://hostname:9200 ./ocis server This starts oCIS and a decomposed FS skeleton file system structure is set up on the NFS share.\nThe oCIS instance is passing a smoke test.\n","description":"NFS Server Setup NFS Client Mount oCIS Start using the NFS Share oCIS\u0026rsquo; default storage backend is the Decomposed FS. The Decomposed FS can be set up to run on a NFS share. That way the same storage can be provided over the network to other nodes running oCIS.\nThis document summarizes a few important considerations of the NFS setup and describes a tested setup. The test has not covered concurrent access of data from different nodes yet."},{"id":196,"href":"/architecture/efficient-stat-polling/","title":"Efficient Stat Polling","parent":"Architecture","content":"The fallback sync mechanism uses the ETag to determine which part of a sync tree needs to be checked by recursively descending into folders whose ETag has changed. The ETag can be calculated using a stat() call in the filesystem and we are going to explore how many stat() calls are necessary and how the number might be reduced.\nETag propagation What does ETag propagation mean? Whenever a file changes its content or metadata the ETag or \u0026ldquo;entity tag\u0026rdquo; changes. In the early days of ownCloud it was decided to extend this behavior to folders as well, which is outside of any WebDAV RFC specification. Nevertheless, here we are, using the ETag to reflect changes, not only on WebDAV resources but also WebDAV collections. The server will propagate the ETag change up to the root of the tree.\ngraph TD linkStyle default interpolate basis subgraph final ETag propagation ert3(( etag:N )) --- el3(( etag:O )) \u0026 er3(( etag:N )) er3 --- erl3(( etag:O )) \u0026 err3(( etag:N )) end subgraph first ETag propagation ert2(( etag:O )) --- el2(( etag:O )) \u0026 er2(( etag:N )) er2 --- erl2(( etag:O )) \u0026 err2(( etag:N )) end subgraph initial file change ert(( etag:O )) --- el(( etag:O )) \u0026 er(( etag:O )) er --- erl(( etag:O )) \u0026 err(( etag:N )) end The old etag:O is replaced by propagating the new etag:N up to the root, where the client will pick it up and explore the tree by comparing the old ETags known to him with the state of the current ETags on the server. This form of sync is called state based sync.\nSingle user sync To let the client detect changes in the drive (a tree of files and folders) of a user, we rely on the ETag of every node in the tree. The discovery phase starts at the root of the tree and checks if the ETag has changed since the last discovery:\nif it is still the same nothing has changed inside the tree if it changed the client will compare the ETag of all immediate children and recursively descend into every node that changed This works, because the server side will propagate ETag changes in the tree up to the root.\ngraph TD linkStyle default interpolate basis ec( client ) --\u003e|\"stat()\"|ert subgraph ert(( )) --- el(( )) \u0026 er(( )) er --- erl(( )) \u0026 err(( )) end Multiple users On an ocis server there is not one user but many. Each of them may have one or more clients running. In the worst case all of them polling the ETag of his home root node every 30 seconds.\nKeep in mind that etags are only propagated inside each distinct tree. No sharing is considered yet.\ngraph TD linkStyle default interpolate basis ec( client ) --\u003e|\"stat()\"|ert subgraph ert(( )) --- el(( )) \u0026 er(( )) er --- erl(( )) \u0026 err(( )) end mc( client ) --\u003e|\"stat()\"|mrt subgraph mrt(( )) --- ml(( )) \u0026 mr(( )) mr --- mrl(( )) \u0026 mrr(( )) end fc( client ) --\u003e|\"stat()\"|frt subgraph frt(( )) --- fl(( )) \u0026 fr(( )) fr --- frl(( )) \u0026 frr(( )) end Sharing Storage providers are responsible for persisting shares as close to the storage as possible.\nOne implementation may persist shares using ACLs, another might use custom extended attributes. The chosen implementation is storage specific and always a tradeoff between various requirements. Yet, the goal is to treat the storage provider as the single source of truth for all metadata.\nIf users can bypass the storage provider using e.g. ssh additional mechanisms needs to make sure no inconsistencies arise:\nthe ETag must still be propagated in a tree, eg using inotify, a policy engine or workflows triggered by other means deleted files should land in the trash (e.g. rm could be wrapped to move files to trash) overwriting files should create a new version \u0026hellip; other than a fuse fs I see no way of providing this for normal posix filesystems. Other storage backends that use the s3 protocol might provide versions natively. The storage provider is also responsible for keeps track of references e.g. using a shadow tree that users normally cannot see or representing them as symbolic links in the filesystem (Beware of symbolic link cycles. The clients are currently unaware of them and would flood the filesystem).\nTo prevent write amplification ETags must not propagate across references. When a file that was shared by einstein changes the ETag must not be propagated into any share recipients tree.\ngraph TD linkStyle default interpolate basis ec( einsteins client ) --\u003e|\"stat()\"|ert subgraph ml --- mlr(( )) mrt(( )) --- ml(( )) \u0026 mr(( )) mr --- mrl(( )) \u0026 mrr(( )) end mlr -. reference .-\u003e er subgraph ert(( )) --- el(( )) \u0026 er(( )) er --- erl(( )) \u0026 err(( )) end mc( maries client ) --\u003e|\"stat()\"|mrt But how can Marie\u0026rsquo;s client detect the change?\nWe are trading writes for reads: the client needs to stat the own tree \u0026amp; all shares or entry points into other storage trees.\nIt would require client changes that depend on the server side actually having an endpoint that can efficiently list all entry points into storages a user has access to including their current etag.\nBut having to list n storages might become a bottleneck anyway, so we are going to have the gateway calculate a virtual root ETag for all entry points a user has access to and cache that.\nServer Side Stat Polling Every client polls the virtual root ETag (every 30 sec). The gateway will cache the virtual root ETag of every storage for 30 sec as well. That way every storage provider is only stated once every 30 sec (can be throttled dynamically to adapt to storage io load).\ngraph TD linkStyle default interpolate basis ec( client ) --\u003e|\"stat()\"|evr subgraph gateway caching virtual etags evr(( )) mvr(( )) fvr(( )) end evr --- ert mvr --- mrt fvr --- frt subgraph ert(( )) --- el(( )) \u0026 er(( )) er --- erl(( )) \u0026 err(( )) end mc( client ) --\u003e|\"stat()\"|mvr subgraph mrt(( )) --- ml(( )) \u0026 mr(( )) ml --- mlm(( )) mr --- mrl(( )) \u0026 mrr(( )) end mlm -.- er mvr -.- er fc( client ) --\u003e|\"stat()\"|fvr subgraph frt(( )) --- fl(( )) \u0026 fr(( )) fr --- frl(( )) \u0026 frr(( )) end Since the active clients will poll the etag for all active users the gateway will have their ETag cached. This is where sharing comes into play: The gateway also needs to stat the ETag of all other entry points \u0026hellip; or mount points. That may increase the number of stat like requests to storage providers by an order of magnitude.\nRam considerations For a single machine using a local posix storage the linux kernel already caches the inodes that contain the metadata that is necessary to calculate the ETag (even extended attributes are supported). With 4k inodes 256 nodes take 1Mb of RAM, 1k inodes take 4Mb and 1M inodes take 4Gb to completely cache the file metadata. For distributed filesystems a dedicated cache might make sense to prevent hammering it with stat like requests to calculate ETags.\nBandwidth considerations The bandwidth for a single machine might be another bottleneck. Consider a propfind request with roughly 500 bytes and a response with roughly 800 bytes in size:\nAt 100Mbit (~10Mb/s) you can receive 20 000 PROPFIND requests At 1000Mbit (~100Mb/s) you can receive 200 000 PROPFIND requests At 10Gbit (~1Gb/s) you can receive 2 000 000 PROPFIND requests This can be scaled by adding more gateways and sharding users because these components are stateless.\nShare mount point polling cache What can we do to reduce the number of stat calls to storage providers. Well, the gateway queries the share manager for all mounted shares of a user (or all entry points, not only the users own root/home). The share references contain the storage provider that contains the share. If every user has its own storage provider id the gateway could check in its own cache if the storage root etag has changed. It will be up-to-date because another client likely already polled for its etag. This would reduce the number of necessary stat requests to active storages.\nActive share node cache invalidation We can extend the lifetime of share ETag cache entries and only invalidate them when the root of the storage that contains them changes its ETag. That would reduce the number of stat requests to the number of active users.\nPush notifications We can further enhance this by sending push notifications when the root of a storage changes. Which is becoming increasingly necessary for mobile devices anyway.\n","description":"The fallback sync mechanism uses the ETag to determine which part of a sync tree needs to be checked by recursively descending into folders whose ETag has changed. The ETag can be calculated using a stat() call in the filesystem and we are going to explore how many stat() calls are necessary and how the number might be reduced.\nETag propagation What does ETag propagation mean? Whenever a file changes its content or metadata the ETag or \u0026ldquo;entity tag\u0026rdquo; changes."},{"id":197,"href":"/ocis/deployment/bridge/","title":"Bridge","parent":"Deployment","content":" Current status How to do it Install the owncloud 10 graphapi app Enable the graphapi app Grab ocis! Start ocis glauth configure it Run it! Check it is up and running Start ocis storage-gateway, storage-authbasic and storage-userprovider Start ocis storage-userprovider Start ocis idp Set environment variables Run it! Check it is up and running Start ocis proxy Start ocis-web Run it! Patch owncloud Install the owncloud 10 openidconnect app Next steps We are planning to build a bridge from ownCloud 10 to ocis. The idea is to have a reverse proxy in front of ownCloud 10 that will forward requests to ownCloud 10 or ocis-reva, depending on the migration status of the logged-in user.\nThis document is a work in progress of the current setup.\nCurrent status Using ocis and the ownCloud 10 graphapi app it is possible today to use an existing owncloud 10 instance as a user backend and storage backend for ocis.\nHow to do it Install the owncloud 10 graphapi app In an owncloud 10 apps folder\n$ git clone git@github.com:owncloud/graphapi.git $ cd graphapi $ composer install Enable the graphapi app occ a:e graphapi No configuration necessary. You can test with curl:\n$ curl https://cloud.ocis.test/index.php/apps/graphapi/v1.0/users -u admin -s | jq Enter host password for user \u0026#39;admin\u0026#39;: { \u0026#34;value\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;admin\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;admin\u0026#34;, \u0026#34;mail\u0026#34;: null }, { \u0026#34;id\u0026#34;: \u0026#34;demo\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Demo\u0026#34;, \u0026#34;mail\u0026#34;: null }, ... ], \u0026#34;@odata.nextLink\u0026#34;: \u0026#34;https://cloud.ocis.test/apps/graphapi/v1.0/users?$top=10\u0026amp;$skip=10\u0026#34; } The MS graph api actually asks for Bearer auth, but in order to check users passwords during an LDAP bind we are exploiting ownClouds authentication implementation that will grant access when Basic auth is used. An LDAP Bind you may ask? Read on! Grab ocis! $ git clone git@github.com:owncloud/ocis.git $ cd ocis $ make -C ocis build This should give you an ocis/bin/ocis binary. Try listing the help with ocis/bin/ocis --help.\nYou can check out a custom branch and build a custom binary which can then be used for the steps below. Start ocis glauth We are going to use the built binary and ownCloud 10 graphapi app to turn ownCloud 10 into the datastore for an LDAP proxy.\nconfigure it While ocis can be configured using environment variables, e.g. for a docker compose setup we are going to use a more traditional config file here. Create a config file for ocis in either /etc/ocis, $HOME/.ocis or ./.config. You can use .json, .yaml or .toml. I will use toml here, because \u0026hellip; reasons.\n[glauth.backend] datastore = \u0026#34;owncloud\u0026#34; # switch to the owncloud datastore servers = [\u0026#34;https://cloud.ocis.test/apps/graphapi/v1.0\u0026#34;] # the graph api endpoint to connect to basedn = \u0026#34;dc=ocis,dc=test\u0026#34; # base dn to construct the LDAP dn. The user `admin` will become `cn=admin,dc=ocis,dc=test` There is a bug in the config merging for environment variables, cli flags and config files causing log settings not to be picked up from the config file when specifying --extensions. That is why I will\nconfigure most of the config in a file, adjust logging using OCIS_LOG_* environment variables and specify which extension to run using ocis/bin/ocis server --extensions \u0026quot;comma, separated, list, of, extensions\u0026quot;. Run it! For now, we only start the glauth extension:\n$ OCIS_LOG_PRETTY=true OCIS_LOG_COLOR=true ocis/bin/ocis server --extensions \u0026#34;glauth\u0026#34; Check it is up and running You should now be able to list accounts from your ownCloud 10 oc_accounts table using:\n$ ldapsearch -x -H ldap://127.0.0.1:9125 -b dc=ocis,dc=test -D \u0026#34;cn=admin,dc=ocis,dc=test\u0026#34; -W \u0026#39;(objectclass=posixaccount)\u0026#39; Groups should work as well:\n$ ldapsearch -x -H ldap://127.0.0.1:9125 -b dc=ocis,dc=test -D \u0026#34;cn=admin,dc=ocis,dc=test\u0026#34; -W \u0026#39;(objectclass=posixgroup)\u0026#39; This is currently a readonly implementation and minimal to the use-case of authenticating users with an IDP. Start ocis storage-gateway, storage-authbasic and storage-userprovider We are going to set up reva to authenticate users against our glauth LDAP proxy. This allows us to log in and use the reva cli. The ocis storage-gateway starts the reva gateway which will authenticate basic auth requests using the storage-authbasic service. Furthermore, users have to be available in the storage-userprovider to retrieve displayname, email address and other user metadata.\nTo configure LDAP to use our glauth we add this section to the config file:\n[storage.reva.ldap] idp = \u0026#34;https://ocis.ocis.test\u0026#34; basedn = \u0026#34;dc=ocis,dc=test\u0026#34; binddn = \u0026#34;cn=admin,dc=ocis,dc=test\u0026#34; # an admin user in your oc10 bindpassword = \u0026#34;secret\u0026#34; userschema = { uid = \u0026#34;uid\u0026#34;, displayname = \u0026#34;givenname\u0026#34; } # TODO make glauth return an ownclouduuid and displayname attribute Now we can start all necessary services.\n$ OCIS_LOG_PRETTY=true OCIS_LOG_COLOR=true ocis/bin/ocis server --extensions \u0026#34;glauth, storage-gateway, storage-authbasic, storage-userprovider\u0026#34; Here I ran out of time. I tried to verify this step with the reva cli: cmd/reva/reva -insecure -host localhost:9142 login basic but it tries to create the user home, which cannot be disabled in a config file: https://github.com/owncloud/ocis/issues/2416#issuecomment-901197053\nstarting STORAGE_GATEWAY_DISABLE_HOME_CREATION_ON_LOGIN=true OCIS_LOG_LEVEL=debug OCIS_LOG_PRETTY=true OCIS_LOG_COLOR=true ocis/bin/ocis server --extensions \u0026quot;storage-gateway, storage-authbasic, storage-userprovider\u0026quot; let me login:\n✗ cmd/reva/reva -insecure -host localhost:9142 reva-cli v1.11.0-27-g95b1f2ee (rev-95b1f2ee) Please use `exit` or `Ctrl-D` to exit this program. \u0026gt;\u0026gt; login basic username: jfd password: OK \u0026gt;\u0026gt; whoami id:\u0026lt;idp:\u0026#34;https://ocis.ocis.test\u0026#34; opaque_id:\u0026#34;jfd\u0026#34; type:USER_TYPE_PRIMARY \u0026gt; username:\u0026#34;jfd\u0026#34; mail:\u0026#34;jfd@butonic.de\u0026#34; display_name:\u0026#34;J\\303\\266rn\u0026#34; uid_number:99 gid_number:99 \u0026gt;\u0026gt; exit I hope https://github.com/owncloud/ocis/pull/2024 fixes the parsing order of things.\neverything below this is outdated\n\u0026hellip; gotta run\nStart ocis storage-userprovider ocis/bin/ocis storage-userprovider --ldap-port 19126 --ldap-user-schema-uid uid --ldap-user-schema-displayName givenName --addr :19144 TODO clone git clone git@github.com:cs3org/cs3apis.git\nquery users using grpcurl\ngrpcurl -import-path ./cs3apis/ -proto ./cs3apis/cs3/identity/user/v1beta1/user_api.proto -plaintext localhost:19144 cs3.identity.user.v1beta1.UserAPI/FindUsers ERROR: Code: Unauthenticated Message: auth: core access token not found Start ocis idp Set environment variables The built-in libregraph/lico needs environment variables to configure the LDAP server:\nexport OCIS_URL=https://ocis.ocis.test export IDP_LDAP_URI=ldap://127.0.0.1:9125 export IDP_LDAP_BASE_DN=\u0026#34;dc=ocis,dc=test\u0026#34; export IDP_LDAP_BIND_DN=\u0026#34;cn=admin,dc=ocis,dc=test\u0026#34; export IDP_LDAP_BIND_PASSWORD=\u0026#34;its-a-secret\u0026#34; export IDP_LDAP_SCOPE=sub export IDP_LDAP_LOGIN_ATTRIBUTE=uid export IDP_LDAP_NAME_ATTRIBUTE=givenName Don\u0026rsquo;t forget to use an existing user with admin permissions (only admins are allowed to list all users via the graph api) and the correct password.\nRun it! You can now bring up ocis/bin/ocis idp with:\n$ ocis/bin/ocis idp server --iss http://127.0.0.1:9130 --signing-kid gen1-2020-02-27 ocis/bin/ocis idp needs to know\n--iss http://127.0.0.1:9130 the issuer, which must be a reachable http endpoint. For testing an ip works. For openid connect HTTPS is NOT optional. This URL is exposed in the http://127.0.0.1:9130/.well-known/openid-configuration endpoint and clients need to be able to connect to it, securely. We will change this when introducing the proxy. --signing-kid gen1-2020-02-27 a signature key id, otherwise the jwks key has no name, which might cause problems with clients. a random key is ok, but it should change when the actual signing key changes. TODO: the port in the --iss needs to be changed when hiding the idp behind the proxy TODO: the signing keys and encryption keys should be precreated so they are reused between restarts. Otherwise all client sessions will become invalid when restarting the IdP. Check it is up and running Try getting the configuration: $ curl http://127.0.0.1:9130/.well-known/openid-configuration Check if the login works at http://127.0.0.1:9130/signin/v1/identifier If you later get a Unable to find a key for (algorithm, kid):PS256, ) Error make sure you did set a --signing-kid when starting ocis/bin/ocis idp by checking it is present in http://127.0.0.1:9130/konnect/v1/jwks.json Start ocis proxy Everything below this hint is outdated. Next steps are roughly:\ndirectly after glauth start the ocis storage-userporvider? how to verify that works? https://github.com/fullstorydev/grpcurl start proxy the ocis ipd url can be changed to https when do we hide oc10 behind ocis? -\u0026gt; advanced bridge at the end? for now run it without touching the existing oc10 instance start web verify the login works, but how? TODO the login works, but then the capabilities requests will fail \u0026hellip; unless we make the proxy answer them by talking to oc10? Other ideas:\nthe owncloud backend in glauth also works with the user provisioning api \u0026hellip; no changes to a running production instance? db access could be done with a read only account as well\u0026hellip; Start ocis-web Run it! Point ocis-web to your owncloud domain and tell it where to find the openid connect issuing authority:\n$ bin/web server --web-config-server https://cloud.example.com --oidc-authority https://192.168.1.100:9130 --oidc-metadata-url https://192.168.1.100:9130/.well-known/openid-configuration --oidc-client-id ocis ocis-web needs to know\n--web-config-server https://cloud.example.com is ownCloud url with webdav and ocs endpoints (oc10 or ocis) --oidc-authority https://192.168.1.100:9130 the openid connect issuing authority, in our case oidc-idp, running on port 9130 --oidc-metadata-url https://192.168.1.100:9130/.well-known/openid-configuration the openid connect configuration endpoint, typically the issuer host with .well-known/openid-configuration, but there are cases when another endpoint is used, e.g. ping identity provides multiple endpoints to separate domains --oidc-client-id ocis the client id we will register later with ocis-idp in idp OIDC client settings Patch owncloud While the UserSession in ownCloud 10 is currently used to test all available IAuthModule implementations, it immediately logs out the user when an exception occurs. However, existing owncloud 10 instances use the oauth2 app to create Bearer tokens for mobile and desktop clients.\nTo give the openidconnect app a chance to verify the tokens we need to change the code a bit. See https://github.com/owncloud/core/pull/37043 for a possible solution.\nNote: The PR is hot \u0026hellip; as in younger than this list of steps. And it messes with authentication. Use with caution.\nInstall the owncloud 10 openidconnect app In an owncloud 10 apps folder\n$ git clone git@github.com:owncloud/openidconnect.git $ cd openidconnect $ composer install After enabling the app configure it in config/oidc.config.php\n$CONFIG = [ \u0026#39;openid-connect\u0026#39; =\u0026gt; [ \u0026#39;provider-url\u0026#39; =\u0026gt; \u0026#39;https://192.168.1.100:9130\u0026#39;, \u0026#39;client-id\u0026#39; =\u0026gt; \u0026#39;ocis\u0026#39;, \u0026#39;loginButtonName\u0026#39; =\u0026gt; \u0026#39;OpenId Connect @ Konnectd\u0026#39;, ], \u0026#39;debug\u0026#39; =\u0026gt; true, // if using self-signed certificates // allow the different domains access to the ocs and webdav endpoints: \u0026#39;cors.allowed-domains\u0026#39; =\u0026gt; [ \u0026#39;https://cloud.example.com\u0026#39;, \u0026#39;http://localhost:9100\u0026#39;, ], ]; In the above configuration replace\nprovider-url with the URL to your ocis-idp issuer https://cloud.example.com with the URL to your ownCloud 10 instance http://localhost:9100 with the URL to your ownCloud Web instance Note: By default the openidconnect app will use the email of the user to match the user from the oidc userinfo endpoint with the ownCloud account. So make sure your users have a unique primary email.\nNext steps Aside from the above todos these are the next steps\ntie it all together behind ocis-proxy create an ocis bridge command that runs all the ocis services in one step with a properly preconfigured idp OIDC client ocis-idp for ownCloud Web and the owncloud 10 openidconnect app, as well as a randomized --signing-kid. ","description":"Current status How to do it Install the owncloud 10 graphapi app Enable the graphapi app Grab ocis! Start ocis glauth configure it Run it! Check it is up and running Start ocis storage-gateway, storage-authbasic and storage-userprovider Start ocis storage-userprovider Start ocis idp Set environment variables Run it! Check it is up and running Start ocis proxy Start ocis-web Run it! Patch owncloud Install the owncloud 10 openidconnect app Next steps We are planning to build a bridge from ownCloud 10 to ocis."},{"id":198,"href":"/ocis/storage-backends/eos/","title":"EOS","parent":"Storage backends","content":" Docker dev environment for eos storage 1. Start eos \u0026amp; ocis containers 2. LDAP support 3. Home storage 4. Users storage 5. Metadata storage 6. Accounts service Verification Further exploration Cleaning up Troubleshooting Docker-compose exits right away Where are the logs ? How do I update a service in the ocis container? Creation and upload of files does not work Uploading big files appears to hang Running out of space quickly oCIS can be configured to run on top of eos. While the eos documentation does cover a lot of topics, it leaves out some details that you may have to either pull from various docker containers, the forums or even the source itself.\nThis document is a work in progress of the current setup.\nDocker dev environment for eos storage We begin with the docker-compose.yml found in https://github.com/owncloud/ocis/tree/master/ocis/ and switch it to eos-storage.\n1. Start eos \u0026amp; ocis containers Start the eos cluster and ocis via the compose stack.\ndocker-compose up -d The first time the ocis container starts up, it will compile ocis from scratch which can take a while. To follow progress, run docker-compose logs -f --tail=10 ocis 2. LDAP support Configure the OS to resolve users and groups using ldap\ndocker-compose exec -d ocis /start-ldap Check that the OS in the ocis container can now resolve einstein or the other demo users\n$ docker-compose exec ocis id einstein uid=20000(einstein) gid=30000(users) groups=30000(users),30001(sailing-lovers),30002(violin-haters),30007(physics-lovers) If the user is not found at first you might need to wait a few more minutes in case the ocis container is still compiling. We also need to restart the storage-userprovider service, so it picks up the changed environment. Without a restart it is not able to resolve users from LDAP.\ndocker-compose exec ocis ./bin/ocis kill storage-userprovider docker-compose exec ocis ./bin/ocis run storage-userprovider 3. Home storage Kill the home storage. By default it uses the ocis storage driver. We need to switch it to the eoshome driver:\ndocker-compose exec ocis ./bin/ocis kill storage-home docker-compose exec -e STORAGE_HOME_DRIVER=eoshome ocis ./bin/ocis run storage-home 4. Users storage Kill the users storage. By default it uses the ocis storage driver. We need to switch it to the eos driver:\ndocker-compose exec ocis ./bin/ocis kill storage-users docker-compose exec -e STORAGE_USERS_DRIVER=eos ocis ./bin/ocis run storage-users 5. Metadata storage First we need to create the metadata root in eos and set an owner:\ndocker-compose exec ocis eos mkdir -p /eos/dockertest/ocis/metadata docker-compose exec ocis eos chown 2:2 /eos/dockertest/ocis/metadata The uid and gid 2 are referencing the user daemon inside the ocis container. That user is also configured when restarting the accounts service later. For production systems you should create a dedicated user for the metadata storage. Kill the metadata storage. By default it uses the ocis storage driver. We need to switch it to the eos driver:\ndocker-compose exec ocis ./bin/ocis kill storage-system docker-compose exec -e STORAGE_SYSTEM_DRIVER=eos -e STORAGE_SYSTEM_ROOT=/eos/dockertest/ocis/metadata ocis ./bin/ocis run storage-system 6. Accounts service Kill the accounts service. By default it uses the ocis storage driver. We need to switch it to the eos driver:\ndocker-compose exec ocis ./bin/ocis kill accounts docker-compose exec -e ACCOUNTS_SERVICE_USER_USERNAME=daemon -e ACCOUNTS_SERVICE_USER_UID=2 -e ACCOUNTS_SERVICE_USER_GID=2 ocis ./bin/ocis run accounts Verification Login with einstein / relativity, upload a file to einsteins home and verify the file is there using\ndocker-compose exec ocis eos ls -l /eos/dockertest/reva/users/4/4c510ada-c86b-4815-8820-42cdf82c3d51/ -rw-r--r-- 1 einstein users 10 Jul 1 15:24 newfile.txt If the problem persists, please check the troubleshooting section about uploads.\nFurther exploration EOS has a built-in shell that you can enter using\n$ docker-compose exec mgm-master eos # --------------------------------------------------------------------------- # EOS Copyright (C) 2011-2019 CERN/Switzerland # This program comes with ABSOLUTELY NO WARRANTY; for details type `license\u0026#39;. # This is free software, and you are welcome to redistribute it # under certain conditions; type `license\u0026#39; for details. # --------------------------------------------------------------------------- EOS_INSTANCE=eostest EOS_SERVER_VERSION=4.6.5 EOS_SERVER_RELEASE=1 EOS_CLIENT_VERSION=4.6.5 EOS_CLIENT_RELEASE=1 EOS Console [root://localhost] |/\u0026gt; help access Access Interface accounting Accounting Interface acl Acl Interface archive Archive Interface attr Attribute Interface backup Backup Interface clear Clear the terminal cd Change directory chmod Mode Interface chown Chown Interface config Configuration System console Run Error Console cp Cp command debug Set debug level exit Exit from EOS console file File Handling fileinfo File Information find Find files/directories newfind Find files/directories (new implementation) fs File System configuration fsck File System Consistency Checking fuse Fuse Mounting fusex Fuse(x) Administration geosched Geoscheduler Interface group Group configuration health Health information about system help Display this text info Retrieve file or directory information inspector Interact with File Inspector io IO Interface json Toggle JSON output flag for stdout license Display Software License ls List a directory ln Create a symbolic link map Path mapping interface member Check Egroup membership mkdir Create a directory motd Message of the day mv Rename file or directory node Node configuration ns Namespace Interface pwd Print working directory quit Exit from EOS console quota Quota System configuration reconnect Forces a re-authentication of the shell recycle Recycle Bin Functionality rmdir Remove a directory rm Remove a file role Set the client role route Routing interface rtlog Get realtime log output from mgm \u0026amp; fst servers silent Toggle silent flag for stdout space Space configuration stagerrm Remove disk replicas of a file if it has tape replicas stat Run \u0026#39;stat\u0026#39; on a file or directory squash Run \u0026#39;squashfs\u0026#39; utility function test Run performance test timing Toggle timing flag for execution time measurement touch Touch a file token Token interface tracker Interact with File Tracker transfer Transfer Interface version Verbose client/server version vid Virtual ID System Configuration whoami Determine how we are mapped on server side who Statistics about connected users ? Synonym for \u0026#39;help\u0026#39; .q Exit from EOS console EOS Console [root://localhost] |/\u0026gt; But this is a different adventure. See the links at the top of this page for other sources of information on eos.\nCleaning up To clean up and start completely from scratch, run docker-compose down -v. Then delete the local \u0026ldquo;bin\u0026rdquo; folder as root which contains the ocis binaries compiled by the \u0026ldquo;ocis\u0026rdquo; docker.\nTroubleshooting Docker-compose exits right away When running docker-compose up -d ocis exits right away.\nYou can check the error code using docker-compose ps and investigate further by running only ocis again using docker-compose up ocis (without -d so you can see what is going on in the foreground). One reason might be that the binary was already built but does not match the container env. Try running make clean before running docker-compose up ocis so it gets built inside the container.\nWhere are the logs ? The ocis logs can be accessed using docker-compose logs ocis. Add -f for following.\nHow do I update a service in the ocis container? docker-compose exec ocis make clean build to update the binary docker-compose exec ocis ./bin/ocis kill \u0026lt;service\u0026gt; to kill the service docker-compose exec ocis ./bin/ocis run \u0026lt;service\u0026gt; to start the service. Do not forget to set any env vars, e.g. docker-compose exec -e STORAGE_HOME_DRIVER=eoshome -e STORAGE_DRIVER_EOS_LAYOUT=\u0026quot;{{substr 0 1 .Id.OpaqueId}}/{{.Id.OpaqueId}}\u0026quot; ocis ./bin/ocis run storage-home Creation and upload of files does not work If the upload did not work, please check the status of the eos space using the command docker-compose exec mgm-master eos fs ls. In case the default space appears as offline, run docker-compose exec mgm-master eos space set default on.\nUploading big files appears to hang Please note that the uploads first go into the \u0026ldquo;ocis\u0026rdquo; docker and land in its \u0026ldquo;/tmp\u0026rdquo; folder, then gets copied over to the EOS docker using xrdcopy. This is why uploading first transfers all bytes and then seem to hang for a while during the final copy.\nRunning out of space quickly The EOS dockers are configured with replication, so every file uploaded there will be replicated 4 times, so make sure there is enough physical space on disk when testing.\nAlso please note that older failed uploads might still be present in the \u0026ldquo;/tmp\u0026rdquo; directory of the \u0026ldquo;ocis\u0026rdquo; container.\n","description":"Docker dev environment for eos storage 1. Start eos \u0026amp; ocis containers 2. LDAP support 3. Home storage 4. Users storage 5. Metadata storage 6. Accounts service Verification Further exploration Cleaning up Troubleshooting Docker-compose exits right away Where are the logs ? How do I update a service in the ocis container? Creation and upload of files does not work Uploading big files appears to hang Running out of space quickly oCIS can be configured to run on top of eos."},{"id":199,"href":"/services/ocm/invitation_flow/","title":"Invitation flow","parent":"OCM","content":" OCM Invitation Flow sequenceDiagram box Instance A participant ima as InviteManager A participant gwa as Gateway A participant httpa as HTTP Api A (ocm, sm) end actor usera as User A actor userb as User B box Instance B participant httpb as HTTP Api B (ocm, sm) participant gwb as Gateway B participant imb as InviteManager B end Note over usera: A creates invitation token usera-\u003e\u003e+httpa: POST /generate-invite (sciencemesh) httpa-\u003e\u003e+gwa: GenerateInviteToken gwa-\u003e\u003e+ima: GenerateInviteToken Note left of ima: store token in repo ima--\u003e\u003e-gwa: return token gwa--\u003e\u003e-httpa: return token httpa--\u003e\u003e-usera: return token Note over usera,userb: A passes token to B Note over userb: B accepts invitation userb-\u003e\u003e+httpb: POST /accept-invite (sciencemesh) httpb-\u003e\u003e+gwb: ForwardInvite gwb-\u003e\u003e+imb: ForwardInvite imb-\u003e\u003e+httpa: POST /invite-accepted (ocm) httpa-\u003e\u003e+gwa: AcceptInvite gwa-\u003e\u003e+ima: AcceptInvite Note left of ima: get token from repo Note left of ima: add remote user ima--\u003e\u003e-gwa: return gwa--\u003e\u003e-httpa: return remote user httpa-\u003e\u003e-imb: return remote user Note right of imb: add remote user imb--\u003e\u003e-gwb: return gwb--\u003e\u003e-httpb: return httpb--\u003e\u003e-userb: return ","description":" OCM Invitation Flow sequenceDiagram box Instance A participant ima as InviteManager A participant gwa as Gateway A participant httpa as HTTP Api A (ocm, sm) end actor usera as User A actor userb as User B box Instance B participant httpb as HTTP Api B (ocm, sm) participant gwb as Gateway B participant imb as InviteManager B end Note over usera: A creates invitation token usera-\u003e\u003e+httpa: POST /generate-invite (sciencemesh) httpa-\u003e\u003e+gwa: GenerateInviteToken gwa-\u003e\u003e+ima: GenerateInviteToken Note left of ima: store token in repo ima--\u003e\u003e-gwa: return token gwa--\u003e\u003e-httpa: return token httpa--\u003e\u003e-usera: return token Note over usera,userb: A passes token to B Note over userb: B accepts invitation userb-\u003e\u003e+httpb: POST /accept-invite (sciencemesh) httpb-\u003e\u003e+gwb: ForwardInvite gwb-\u003e\u003e+imb: ForwardInvite imb-\u003e\u003e+httpa: POST /invite-accepted (ocm) httpa-\u003e\u003e+gwa: AcceptInvite gwa-\u003e\u003e+ima: AcceptInvite Note left of ima: get token from repo Note left of ima: add remote user ima--\u003e\u003e-gwa: return gwa--\u003e\u003e-httpa: return remote user httpa-\u003e\u003e-imb: return remote user Note right of imb: add remote user imb--\u003e\u003e-gwb: return gwb--\u003e\u003e-httpb: return httpb--\u003e\u003e-userb: return "},{"id":200,"href":"/apis/http/graph/users/","title":"Users","parent":"LibreGraph","content":" Users API Reading users GET /me GET /users GET /users?$expand=memberOf GET /users/{userid or accountname} GET /users/{userid or accountname}?$expand=memberOf Creating / Updating Users POST /users Request Body Response DELETE /users/{id} PATCH /users/{id} Change password POST /me/changePassword Request Body Users API The Users API is implementing a subset of the functionality of the MS Graph User resource The JSON representation of a User handled by the Users API looks like this:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;einstein@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;einstein\u0026#34; } Our implementation currently supports only a limited set of Attributes of Users:\nAttribute Description displayName The full name of the user, usually a combination of given name and last name mail The user\u0026rsquo;s email address onPremisesSamAccountName The loginname/account name of the user id An unique, stable readonly identifier for the user that stays the same for the whole lifetime of the User, usually a UUID passwordProfile Contains the password of the users. This is only present when updating or creating users. It is never returned by the API Reading users GET /me Returns the user object of the currently signed-in user\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/me\u0026#39; -u user:password Response:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;einstein@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;einstein\u0026#34; } GET /users Returns a list of all users\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/users\u0026#39; -u user:password Response:\n{ \u0026#34;value\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;einstein@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;einstein\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;Maurice Moss\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;058bff95-6708-4fe5-91e4-9ea3d377588b\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;moss@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;moss\u0026#34; } ] } GET /users?$expand=memberOf Returns a list of all users\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/users?$expand=memberOf\u0026#39; -u user:password Response:\n{ \u0026#34;value\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;einstein@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;einstein\u0026#34;, \u0026#34;memberOf\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;509a9dcd-bb37-4f4f-a01a-19dca27d9cfa\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;sailing-lovers\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;6040aa17-9c64-4fef-9bd0-77234d71bad0\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;violin-haters\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;dd58e5ec-842e-498b-8800-61f2ec6f911f\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;physics-lovers\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;262982c1-2362-4afa-bfdf-8cbfef64a06e\u0026#34; } ], }, { \u0026#34;displayName\u0026#34;: \u0026#34;Maurice Moss\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;058bff95-6708-4fe5-91e4-9ea3d377588b\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;moss@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;moss\u0026#34;, \u0026#34;memberOf\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;509a9dcd-bb37-4f4f-a01a-19dca27d9cfa\u0026#34; } ], } ] } GET /users/{userid or accountname} Example:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/users/058bff95-6708-4fe5-91e4-9ea3d377588b\u0026#39; -u user:password Response:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Maurice Moss\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;058bff95-6708-4fe5-91e4-9ea3d377588b\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;moss@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;moss\u0026#34; } GET /users/{userid or accountname}?$expand=memberOf Example:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/users/058bff95-6708-4fe5-91e4-9ea3d377588b?$expand=memberOf\u0026#39; -u user:password Response:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Maurice Moss\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;058bff95-6708-4fe5-91e4-9ea3d377588b\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;moss@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;moss\u0026#34;, \u0026#34;memberOf\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;509a9dcd-bb37-4f4f-a01a-19dca27d9cfa\u0026#34; } ], } Creating / Updating Users POST /users Use this to create a new user.\nRequest Body Note the missing \u0026quot;id\u0026quot; Attribute. It will be generated by the server:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Example User\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;example@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;example\u0026#34;, \u0026#34;passwordProfile\u0026#34;: { \u0026#34;password\u0026#34;: \u0026#34;ThePassword\u0026#34; } } Response When successful, the response will return the new user, without the password, but including the newly allocated \u0026quot;id\u0026quot;:\n{ \u0026#34;displayName\u0026#34;:\u0026#34;Example User\u0026#34;, \u0026#34;id\u0026#34;:\u0026#34;c067b139-c91c-4e47-8be6-669156a0587b\u0026#34;, \u0026#34;mail\u0026#34;:\u0026#34;example@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;:\u0026#34;example\u0026#34; } DELETE /users/{id} Example:\ncurl -k --request DELETE \u0026#39;https://localhost:9200/graph/v1.0/users/c067b139-c91c-4e47-8be6-669156a0587b\u0026#39; -u user:password When successful the API returns no response body and the HTTP status code 204 (No Content)\nPATCH /users/{id} Updating attributes of a single user can be done with a patch request. The Request Body contains the new values of the attributes to be updated. E.g. to update the displayName Attribute:\ncurl -k --header \u0026#34;Content-Type: application/json\u0026#34; \\ --request PATCH --data \u0026#39;{\u0026#34;displayName\u0026#34;: \u0026#34;Test User\u0026#34; }\u0026#39; \\ \u0026#39;https://localhost:9200/graph/v1.0/users/c54b0588-7157-4521-bb52-c1c8ca84ea71\u0026#39; -u user:password Similar to creating a user via POST, the PATCH request will return the user object containing the new attribute values.\nChange password POST /me/changePassword Users can change their own password by sending a POST request to /me/changePassword\nRequest Body { \u0026#34;currentPassword\u0026#34;: \u0026#34;current\u0026#34;, \u0026#34;newPassword\u0026#34;: \u0026#34;new\u0026#34; } When successful the API returns no response body and the HTTP status code 204 (No Content)\ncurl -i -k --header \u0026#34;Content-Type: application/json\u0026#34; \\ --request POST --data \u0026#39;{\u0026#34;currentPassword\u0026#34;: \u0026#34;current\u0026#34;, \u0026#34;newPassword\u0026#34;: \u0026#34;new\u0026#34; }\u0026#39; \\ \u0026#39;https://localhost:9200/graph/v1.0/me/changePassword\u0026#39; -u user:current ","description":"Users API Reading users GET /me GET /users GET /users?$expand=memberOf GET /users/{userid or accountname} GET /users/{userid or accountname}?$expand=memberOf Creating / Updating Users POST /users Request Body Response DELETE /users/{id} PATCH /users/{id} Change password POST /me/changePassword Request Body Users API The Users API is implementing a subset of the functionality of the MS Graph User resource The JSON representation of a User handled by the Users API looks like this:"},{"id":201,"href":"/ocis/storage/spaces/","title":"Spaces","parent":"Storage","content":" Editing a Storage Space Updating a space property Updating a space description Quotas Quota Enforcement Considerations Storage Spaces Shares Notes Editing a Storage Space The OData specification allows for a mirage of ways of addressing an entity. We will support addressing a Drive entity by its unique identifier, which is the one the graph-api returns when listing spaces, and its format is:\n{ \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!b6e2c9cc-9dbe-42f0-b522-4f2d3e175e9c\u0026#34; } This is an extract of an element of the list spaces response. An entire object has the following shape:\n{ \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!b6e2c9cc-9dbe-42f0-b522-4f2d3e175e9c\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2021-10-07T11:06:43.245418+02:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;marketing\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;ddc2004c-0977-11eb-9d3f-a793888cd0f8\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;total\u0026#34;: 65536 }, \u0026#34;root\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!b6e2c9cc-9dbe-42f0-b522-4f2d3e175e9c\u0026#34;, \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157!b6e2c9cc-9dbe-42f0-b522-4f2d3e175e9c\u0026#34; } } Updating a space property Having introduced the above, one can refer to a Drive with the following URL format:\n\u0026#39;https://localhost:9200/graph/v1.0/drives/1284d238-aa92-42ce-bdc4-0b0000009157!07c26b3a-9944-4f2b-ab33-b0b326fc7570 Updating an entity attribute:\ncurl -X PATCH \u0026#39;https://localhost:9200/graph/v1.0/drives/1284d238-aa92-42ce-bdc4-0b0000009157!07c26b3a-9944-4f2b-ab33-b0b326fc7570\u0026#39; -d \u0026#39;{\u0026#34;name\u0026#34;:\u0026#34;42\u0026#34;}\u0026#39; -v The previous URL resource path segment (1284d238-aa92-42ce-bdc4-0b0000009157!07c26b3a-9944-4f2b-ab33-b0b326fc7570) is parsed and handed over to the storage registry in order to apply the patch changes in the body, in this case update the space name attribute to 42. Since space names are not unique we only support addressing them by their unique identifiers, any other query would render too ambiguous and explode in complexity.\nUpdating a space description Since every space is the root of a webdav directory, following some conventions we can make use of this to set a default storage description and image. In order to do so, every space is created with a hidden .space folder at its root, which can be used to store such data.\ncurl -k -X PUT https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157\\!07c26b3a-9944-4f2b-ab33-b0b326fc7570/.space/description.md -d \u0026#34;Add a description to your spaces\u0026#34; -u admin:admin Verify the description was updated:\n❯ curl -k https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157\\!07c26b3a-9944-4f2b-ab33-b0b326fc7570/.space/description.md -u admin:admin Add a description to your spaces This feature makes use of the internal storage layout and is completely abstracted from the end user.\nQuotas Spaces capacity (quota) is independent of the Storage quota. As a Space admin you can set the quota for all users of a space, and as such, there are no limitations and is up to the admin to make a correct use of this.\nIt is possible to have a space quota greater than the storage quota. A Space may also have \u0026ldquo;infinite\u0026rdquo; quota, meaning a single space without quota can occupy the entirety of a disk.\nQuota Enforcement Creating a Space with a quota of 10 bytes:\ncurl -k -X POST 'https://localhost:9200/graph/v1.0/drives' -u admin:admin -d '{\u0026quot;name\u0026quot;:\u0026quot;marketing\u0026quot;, \u0026quot;quota\u0026quot;: {\u0026quot;total\u0026quot;: 10}}' -v\n/var/tmp/ocis/storage/users ├── blobs ├── nodes │ ├── 627981c2-2a71-4adf-b680-177e245afdda │ ├── 9541e7c3-8fda-4b49-b697-e7e51457cf5a │ ├── b5692345-108d-4b80-9747-3a7e9739ad57 │ └── root │ ├── 118351d7-67a4-4cdf-b495-6093d1e572ed -\u0026gt; ../627981c2-2a71-4adf-b680-177e245afdda │ └── ddc2004c-0977-11eb-9d3f-a793888cd0f8 -\u0026gt; ../b5692345-108d-4b80-9747-3a7e9739ad57 ├── spaces │ ├── personal │ │ └── b5692345-108d-4b80-9747-3a7e9739ad57 -\u0026gt; ../../nodes/b5692345-108d-4b80-9747-3a7e9739ad57 │ ├── project │ │ └── 627981c2-2a71-4adf-b680-177e245afdda -\u0026gt; ../../nodes/627981c2-2a71-4adf-b680-177e245afdda │ └── share ├── trash └── uploads Verify the new space has 10 bytes, and none of it is used:\n{ \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!627981c2-2a71-4adf-b680-177e245afdda\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2021-10-15T11:16:26.029188+02:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;marketing\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;ddc2004c-0977-11eb-9d3f-a793888cd0f8\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 10, \u0026#34;total\u0026#34;: 10, \u0026#34;used\u0026#34;: 0 }, \u0026#34;root\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!627981c2-2a71-4adf-b680-177e245afdda\u0026#34;, \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157!627981c2-2a71-4adf-b680-177e245afdda\u0026#34; } } Upload a 6 bytes file:\ncurl -k -X PUT https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157\\!627981c2-2a71-4adf-b680-177e245afdda/6bytes.txt -d \u0026quot;012345\u0026quot; -u admin:admin -v\nQuery the quota again:\n{ \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 4, \u0026#34;total\u0026#34;: 10, \u0026#34;used\u0026#34;: 6 } } Now attempt to upload 5 bytes to the space:\ncurl -k -X PUT https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157\\!627981c2-2a71-4adf-b680-177e245afdda/5bytes.txt -d \u0026quot;01234\u0026quot; -u admin:admin -v\nThe request will fail with 507 Insufficient Storage:\nHTTP/1.1 507 Insufficient Storage \u0026lt; Access-Control-Allow-Origin: * \u0026lt; Content-Length: 0 \u0026lt; Content-Security-Policy: default-src \u0026#39;none\u0026#39;; \u0026lt; Date: Fri, 15 Oct 2021 09:24:46 GMT \u0026lt; Vary: Origin \u0026lt; X-Content-Type-Options: nosniff \u0026lt; X-Download-Options: noopen \u0026lt; X-Frame-Options: SAMEORIGIN \u0026lt; X-Permitted-Cross-Domain-Policies: none \u0026lt; X-Robots-Tag: none \u0026lt; X-Xss-Protection: 1; mode=block \u0026lt; * Connection #0 to host localhost left intact * Closing connection 0 Considerations If a Space quota is updated to unlimited, the upper limit is the entire available space on disk The current implementation in oCIS might not yet fully reflect this concept. Feel free to add links to ADRs, PRs and Issues in short warning boxes like this. Storage Spaces A storage space is a logical concept. It organizes a set of resources in a hierarchical tree. It has a single owner (user or group), a quota, permissions and is identified by a storage space id.\nExamples would be every user\u0026rsquo;s personal storage space, project storage spaces or group storage spaces. While they all serve different purposes and may or may not have workflows like antivirus scanning enabled, we need a way to identify and manage these subtrees in a generic way. By creating a dedicated concept for them this becomes easier and literally makes the codebase cleaner. A storage Spaces Registry then allows listing the capabilities of storage spaces, e.g. free space, quota, owner, syncable, root etag, upload workflow steps, \u0026hellip;\nFinally, a logical storage space id is not tied to a specific spaces provider. If the storage driver supports it, we can import existing files including their file id, which makes it possible to move storage spaces between spaces providers to implement storage classes, e.g. with or without archival, workflows, on SSDs or HDDs.\nShares To be clarified: we are aware that storage spaces may be too \u0026lsquo;heavyweight\u0026rsquo; for ad hoc sharing with groups. That being said, there is no technical reason why group shares should not be treated like storage spaces that users can provision themselves. They would share the quota with the users home or personal storage space and the share initiator would be the sole owner. Technically, the mechanism of treating a share like a new storage space would be the same. This obviously also extends to user shares and even file individual shares that would be wrapped in a virtual collection. It would also become possible to share collections of arbitrary files in a single storage space, e.g. the ten best pictures from a large album.\nNotes We can implement ListStorageSpaces by either\niterating over the root of the storage and treating every folder following the \u0026lt;user_layout\u0026gt; as a home storage space, iterating over the root of the storage and treating every folder following a new \u0026lt;project_layout\u0026gt; as a project storage space, or iterating over the root of the storage and treating every folder following a generic \u0026lt;layout\u0026gt; as a storage space for a configurable space type, or we allow configuring a map of space type to layout (based on the CreateStorageSpaceRequest) which would allow things like home=/var/lib/ocis/storage/home/{{substr 0 1 .Owner.Username}}/{{.Owner.Username}} spaces=/spaces/var/lib/ocis/storage/projects/{{.Name}} ","description":"Editing a Storage Space Updating a space property Updating a space description Quotas Quota Enforcement Considerations Storage Spaces Shares Notes Editing a Storage Space The OData specification allows for a mirage of ways of addressing an entity. We will support addressing a Drive entity by its unique identifier, which is the one the graph-api returns when listing spaces, and its format is:\n{ \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!b6e2c9cc-9dbe-42f0-b522-4f2d3e175e9c\u0026#34; } This is an extract of an element of the list spaces response."},{"id":202,"href":"/clients/web/development/tooling/","title":"Tooling","parent":"Development","content":" Packaging Development Setup Prerequisites Installing Dependencies Starting the Server Building and Accessing Web Using Instant Hot-Reload via Vite Running Web with oC10 Packaging Web is using pnpm as package manager and vite as build tool. The latter is built on top of rollup and brings some additional features such as instant hot-reloading.\nDevelopment Setup Prerequisites docker docker-compose (if not already included in your docker installation) pnpm node If you’re not using Docker Desktop, you might have to modify your /etc/hosts and add 127.0.0.1 host.docker.internal to make host.docker.internal links work.\nInstalling Dependencies After cloning the source code, install the dependencies via pnpm install.\nStarting the Server You can start the server by running docker-compose up ocis.\nNote that the container needs a short while to start because it is waiting for tika to be initialized. This is the case as soon as the tika-service container has stopped running.\nBuilding and Accessing Web After the docker containers are running (and tika is being initialized), run pnpm build:w to build Web. This also includes hot-reloading after changes you make, although it will take a while to rebuild the project. See down below for some details on how to enable instant hot-reloading.\nNow you can access Web via https://host.docker.internal:9200.\nUsing Instant Hot-Reload via Vite To work with instant hot-reloading, you can also build Web by running pnpm vite. The port to access Web is slightly different then: https://host.docker.internal:9201. Also note that the initial page load may take a bit longer than usual. This is normal and to be expected.\nRunning Web with oC10 Older versions of Web (\u0026lt; 7.1.0) also support running oC10 as server. The development setup is nearly the same as mentioned above, the only differences are:\nThe server can be started via docker-compose up oc10 The server port is 8080 (8081 when running Web via pnpm vite:oc10) ","description":"Packaging Development Setup Prerequisites Installing Dependencies Starting the Server Building and Accessing Web Using Instant Hot-Reload via Vite Running Web with oC10 Packaging Web is using pnpm as package manager and vite as build tool. The latter is built on top of rollup and brings some additional features such as instant hot-reloading.\nDevelopment Setup Prerequisites docker docker-compose (if not already included in your docker installation) pnpm node If you’re not using Docker Desktop, you might have to modify your /etc/hosts and add 127."},{"id":203,"href":"/ocis/storage_registry_discovery/","title":"Storage Registry Discovery","parent":"oCIS - ownCloud Infinite Scale","content":" Introduction In order for an oCIS client to access oCIS storage spaces for an End-User, the client needs to know where the oCIS instance is. oCIS uses WebFinger RFC7033 to locate the oCIS instance for an End-User.\nThis discovery is optional. If the client has another way of discovering the OpenID instance, e.g. when logging in with a username a static domain might be configured or the domain in the URL might be used.\nFor guest accounts that do not have an OIDC issuer or whose IdP is not part of a trusted federation clients may fall back to a local IdP.\nUser Input using E-Mail Address Syntax To find the oCIS instance for the given user input in the form of an e-mail address joe@example.com, the WebFinger parameters are as follows:\nWebFinger Parameter Value resource acct:joe@example.com host example.com rel http://owncloud.com/specs/ocis/1.0/instance Note that in this case, the acct: scheme is prepended to the identifier.\nThe client (relying party) would make the following WebFinger request to discover the oCIS instance location (with line wraps within lines for display purposes only):\nGET /.well-known/webfinger ?resource=acct%3Ajoe%40example.com \u0026amp;rel=http%3A%2F%2Fowncloud.com%2Fspecs%2Focis%2F1.0%2Finstance HTTP/1.1 Host: example.com HTTP/1.1 200 OK Content-Type: application/jrd+json { \u0026#34;subject\u0026#34;: \u0026#34;acct:joe@example.com\u0026#34;, \u0026#34;links\u0026#34;: [ { \u0026#34;rel\u0026#34;: \u0026#34;http://owncloud.com/specs/ocis/1.0/instance\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://cloud.example.com\u0026#34; } ] } Note: the example.com domain is derived from the email. The https://cloud.example.com domain above would point to the ocis instance. TODO that ins ocis web \u0026hellip; not the registry \u0026hellip; hmmmm maybe introduce an ocis provider which then has an /.well-known/ocis-configuration, similar to /.well-known/openid-configuration? It would contain\nthe ocis domain, e.g. https://cloud.example.com the web endpoint, e.g. https://cloud.example.com the registry / drives endpoint, e.g. https://cloud.example.com/graph/v0.1/drives/me see Add draft of adr for spaces API. #1827 example:\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;instance\u0026#34;: \u0026#34;https://cloud.example.com\u0026#34;, \u0026#34;graph_endpoint\u0026#34;: \u0026#34;https://cloud.example.com/graph/v0.0\u0026#34;, \u0026#34;ocis_web_config\u0026#34;: \u0026#34;https://cloud.example.com/web/config.json\u0026#34;, \u0026#34;issuer\u0026#34;: \u0026#34;https://idp.example.com\u0026#34;, } graph_endpoint is the open-graph-api endpoint that is used to list storage spaces at e.g. https://cloud.example.com/graph/v0.1/me/drives.\nocis_web_config points ocis web to the config for the instance. Maybe we can add more config in the /.well-known/ocis-configuration to replace the config.json? Is this the new status.php? How safe is it to expose all this info \u0026hellip;?\nThe issuer could be used to detect the issuer that is used if no other issuer is found \u0026hellip; might be a fallback_issuer, but actually we may decide to skid the OIDC discovery and rely on this property. Maybe we need it if no IdP is present yet or the /.well-known/openid-configuration is not set up / reachable.\nObtaining oCIS Provider Configuration Information Using the instance location discovered as described above or by other means, the oCIS Provider\u0026rsquo;s configuration information can be retrieved.\noCIS Providers supporting Discovery MUST make a JSON document available at the path formed by concatenating the string /.well-known/openid-configuration to the instance. The syntax and semantics of .well-known are defined in RFC5785 and apply to the instance value when it contains no path component. ocis-configuration MUST point to a JSON document compliant with this specification and MUST be returned using the application/json content type.\noCIS Provider Configuration Request An oCIS Provider Configuration Document MUST be queried using an HTTP GET request at the previously specified path.\nThe client (relying party) would make the following request to the instance https://example.com to obtain its Configuration information, since the Issuer contains no path component:\nGET /.well-known/openid-configuration HTTP/1.1 Host: example.com If the Issuer value contains a path component, any terminating / MUST be removed before appending /.well-known/openid-configuration. The RP would make the following request to the Issuer https://example.com/issuer1 to obtain its Configuration information, since the Issuer contains a path component:\nGET /issuer1/.well-known/openid-configuration HTTP/1.1 Host: example.com Using path components enables supporting multiple issuers per host. This is required in some multi-tenant hosting configurations. This use of .well-known is for supporting multiple issuers per host; unlike its use in RFC 5785 [RFC5785], it does not provide general information about the host.\n","description":"Introduction In order for an oCIS client to access oCIS storage spaces for an End-User, the client needs to know where the oCIS instance is. oCIS uses WebFinger RFC7033 to locate the oCIS instance for an End-User.\nThis discovery is optional. If the client has another way of discovering the OpenID instance, e.g. when logging in with a username a static domain might be configured or the domain in the URL might be used."},{"id":204,"href":"/clients/web/backend-oc10/","title":"Setup with ownCloud 10","parent":"ownCloud Web","content":" Compatibility Prerequisites Setting up the ownCloud Server Adjusting config.php Setting up OAuth2 Setting up Web Running Web Running acceptance tests Compatibility Please note that the usage of Web UI and ownCloud 10 as backend is not recommended starting with version 7.1.0 of the Web UI. Therefore, this section only applies to versions \u0026lt; 7.1.0.\nPrerequisites Decide on which host and port Web will be served, for example https://web-host:9100/web-path/. In this document, we will refer to the following:\n\u0026lt;web-url\u0026gt; as the full URL, for example https://web-host:9100/web-path/ \u0026lt;web-domain\u0026gt; as the protocol, domain and port, for example: https://web-host:9100 Setting up the ownCloud Server Make sure you have an ownCloud Server already installed.\nAdjusting config.php Add the following entries to config/config.php:\ntell ownCloud where Web is located: \u0026#39;web.baseUrl\u0026#39; =\u0026gt; \u0026#39;\u0026lt;web-url\u0026gt;\u0026#39;, add a CORS domain entry for Web in config.php: \u0026#39;cors.allowed-domains\u0026#39; =\u0026gt; [\u0026#39;\u0026lt;web-domain\u0026gt;\u0026#39;], Setting up OAuth2 To connect to the ownCloud server, it is necessary to set it up with OAuth2.\nInstall and enable the oauth2 app:\n% occ market:install oauth2 % occ app:enable oauth2 Login as administrator in the ownCloud Server web interface and go to the \u0026ldquo;User Authentication\u0026rdquo; section in the admin settings and add an entry for Web as follows:\npick an arbitrary name for the client set the redirection URI to \u0026lt;web-url\u0026gt;/oidc-callback.html make sure to take note of the client identifier value as it will be needed in the Web configuration later on Setting up Web In the local Web checkout, copy the config/config.json.sample-oc10 file to config/config.json and adjust it accordingly:\nSet the \u0026ldquo;server\u0026rdquo; key to the URL of the ownCloud server including path. If the URL contains a path, please also add a trailing slash there. Set the \u0026ldquo;clientId\u0026rdquo; key to the client identifier as copied from the \u0026ldquo;User Authentication\u0026rdquo; section before. Adjust \u0026ldquo;url\u0026rdquo; and \u0026ldquo;authUrl\u0026rdquo; using the ownCloud server URL as prefix for both Optionally adjust \u0026ldquo;apps\u0026rdquo; for the list of apps to be loaded. These match the app names inside the \u0026ldquo;apps\u0026rdquo; folder. Running Web if running from source, make sure to build Web first run by launching a rollup dev server pnpm serve when working on the Web code, rollup will recompile the code automatically Running acceptance tests For testing, please refer to the testing docs\n","description":"Compatibility Prerequisites Setting up the ownCloud Server Adjusting config.php Setting up OAuth2 Setting up Web Running Web Running acceptance tests Compatibility Please note that the usage of Web UI and ownCloud 10 as backend is not recommended starting with version 7.1.0 of the Web UI. Therefore, this section only applies to versions \u0026lt; 7.1.0.\nPrerequisites Decide on which host and port Web will be served, for example https://web-host:9100/web-path/. In this document, we will refer to the following:"},{"id":205,"href":"/ocis/development/extensions/","title":"Extensions","parent":"Development","content":"oCIS is all about files, sync and share - but most of the time there is more you want to do with your files, e.g. having a different view on your photo collection or editing your offices files in an online file editor. ownCloud 10 faced the same problem and solved it with applications, which can extend the functionality of ownCloud 10 in a wide range. Since oCIS is different in its architecture compared to ownCloud 10, we had to come up with a similar (yet slightly different) solution. To extend the functionality of oCIS, you can write or install extensions. An extension is basically any running code which integrates into oCIS and provides functionality to oCIS and its users. Because extensions are just microservices providing an API, you can technically choose any programming language you like - a huge improvement to ownCloud 10, where it was nearly impossible to use a different programming language than PHP.\nWe will now introduce you to the oCIS extension system and show you how you can create a custom extension yourself.\nExtension examples Technically every service in oCIS is an extension, even if oCIS would not really work without some of them. Therefore, you can draw inspiration from any of the plenty of extensions in the oCIS monorepo.\nBesides these \u0026ldquo;default\u0026rdquo; extensions in the oCIS monorepo, there are two more extensions you should be aware of:\nHello WOPI server Differences between the extensions maintained inside the oCIS monorepo and the ones maintained in their own repository are:\nextensions inside the oCIS monorepo are all written in Go, whereas other extensions may choose the programming language freely extensions inside the oCIS monorepo heavily share tooling to reduce maintenance efforts, whereas other extensions may use different tooling (e.g. a different CI system) extensions inside the oCIS monorepo will be all build into one binary and started with the ocis server command. All other extensions must be started individually besides oCIS. For quickstart purposes we also offer a template project which can be used to generate all the boilerplate code for you. But you also can decide to use your own project layout or even a different programming language.\nIntegration into oCIS Depending on the functionality of your extension, you might need to integrate with one or multiple of the components of oCIS mentioned below.\nownCloud Web If your extension is not just doing something in the background, you will need a UI in order to allow the user to interact with your extension. You could just provide your own web frontend for that purpose, but for a better user experience you can easily integrate into the web frontend of oCIS, the new ownCloud Web.\nownCloud Web allows you to write an extension for itself and therefore offers a seamless user experience. Upon login, the user will be able to use the application switcher to switch between the files view, settings and other available and installed extensions, yours included. Furthermore it is also possible to register your extension for different file actions. As an example, you could offer your extension to the user for creating and editing office documents. The user will then be able to create or open a file with your application directly from the files view. How to provide create an extension for ownCloud Web can be seen best in the Hello extension, whereas plain file handling without any web frontend is available in the WOPI server extension.\nTo make ownCloud Web pick up your extension, you need to activate it in the configuration like seen in the Hello extension.\nFor a consistent look and feel, ownCloud Web uses an external design library, the ownCloud design system. Since its classes and components are available through the wrapping web runtime, we highly recommend you to leverage it in your extension as well.\nSettings An extension likely has some behaviour which the user can configure. Fundamental configuration will often be done by administrators during deployment, via configuration files or by setting environment variables. But for other settings, which are supposed to change more often or which are even user specific, this is not a viable way. Therefore you need to offer the users a UI where they can configure your extension to their liking. Because implementing something like this is a repetitive task among extensions, oCIS already offers the settings extensions which does that for your extension. Your extension just needs to register settings bundles, respective permissions and finally read the current values from the settings service. You can read more on that on the settings extension and see how oCIS Hello uses these settings.\nProxy The Proxy is an API gateway and acts as the single connection point where all external request from users and devices need to pass through.\nTo make sure that requests can reach your extension\u0026rsquo;s API, you need to register one or multiple endpoints at the proxy. The registration is an easy task and can be seen best on the oCIS Hello example.\nAs files in ownCloud must always stay private (unless you share them with your friends or coworkers), requests to oCIS have an authenticated user context. This user context is also available to your extension and can be used to interact with the user\u0026rsquo;s files. How to get the user context and authentication can be seen on the oCIS Hello example.\nStorage oCIS leverages the CS3 APIs and CS3 REVA as a storage system because it offers a very flexible setup and supports a variety of storage backends like EOS, S3 and of course your local hard drive. REVA makes it easy to support more storage backends as needed.\nIf you need to interact with files directly, you have the full power of the CS3 APIs in your hand. With the user context and the user\u0026rsquo;s authentication token, which your extensions gets from the proxy, your extension can make these request in behalf of the user.\nIf your extension needs to store persistent data which is not supposed to live in the user\u0026rsquo;s home folder, there is also a so-called metadata storage, intended for exactly that purpose. You should always use the metadata storage in favor of the local filesystem for persistent files, because your extension will then automatically use the storage backend the oCIS admin decides to use. For a temporary cache it is perfectly fine to use the local filesystem.\n","description":"oCIS is all about files, sync and share - but most of the time there is more you want to do with your files, e.g. having a different view on your photo collection or editing your offices files in an online file editor. ownCloud 10 faced the same problem and solved it with applications, which can extend the functionality of ownCloud 10 in a wide range. Since oCIS is different in its architecture compared to ownCloud 10, we had to come up with a similar (yet slightly different) solution."},{"id":206,"href":"/ocis/storage-backends/","title":"Storage backends","parent":"oCIS - ownCloud Infinite Scale","content":"","description":""},{"id":207,"href":"/services/ocm/create_share_flow/","title":"Create Share Flow","parent":"OCM","content":" OCM Create Share Flow sequenceDiagram box Instance A participant osp as ocmsharesprovider participant gwa as Gateway A participant httpa as ocs end actor usera as User A box Instance B participant httpb as ocmd participant gwb as Gateway B participant ocmc as OCMCore end Note over usera: A shares a resource with B usera-\u003e\u003e+httpa: CreateShare httpa-\u003e\u003e+gwa: GetInfoByDomain Note left of gwa: GetInfoByDomain (ocmproviderauthorizer) gwa--\u003e\u003e-httpa: return httpa-\u003e\u003e+gwa: GetAcceptedUser Note left of gwa: GetAcceptedUser (ocminvitemanager) gwa--\u003e\u003e-httpa: return httpa-\u003e\u003e+gwa: CreateOCMShare gwa-\u003e\u003e+osp: CreateOCMShare osp-\u003e\u003e+gwa: Stat gwa--\u003e\u003e-osp: return Note left of osp: store share in repo osp-\u003e\u003e+httpb: POST /shares httpb-\u003e\u003e+gwb: IsProviderAllowed Note right of gwb: IsProviderAllowed (ocmproviderauthorizer) gwb--\u003e\u003e-httpb: return httpb-\u003e\u003e+gwb: GetUser Note right of gwb: GetUser (userprovider) gwb--\u003e\u003e-httpb: return httpb-\u003e\u003e+gwb: CreateOCMCoreShare gwb-\u003e\u003e+ocmc: CreateOCMCoreShare Note right of ocmc: StoreReceivedShare ocmc--\u003e\u003e-gwb: return gwb--\u003e\u003e-httpb: return httpb--\u003e\u003e-osp: return osp--\u003e\u003e-gwa: return gwa--\u003e\u003e-httpa: return httpa-\u003e\u003e+gwa: Stat Note left of gwa: Stat (storageprovider) gwa--\u003e\u003e-httpa: return httpa--\u003e\u003e-usera: return ","description":" OCM Create Share Flow sequenceDiagram box Instance A participant osp as ocmsharesprovider participant gwa as Gateway A participant httpa as ocs end actor usera as User A box Instance B participant httpb as ocmd participant gwb as Gateway B participant ocmc as OCMCore end Note over usera: A shares a resource with B usera-\u003e\u003e+httpa: CreateShare httpa-\u003e\u003e+gwa: GetInfoByDomain Note left of gwa: GetInfoByDomain (ocmproviderauthorizer) gwa--\u003e\u003e-httpa: return httpa-\u003e\u003e+gwa: GetAcceptedUser Note left of gwa: GetAcceptedUser (ocminvitemanager) gwa--\u003e\u003e-httpa: return httpa-\u003e\u003e+gwa: CreateOCMShare gwa-\u003e\u003e+osp: CreateOCMShare osp-\u003e\u003e+gwa: Stat gwa--\u003e\u003e-osp: return Note left of osp: store share in repo osp-\u003e\u003e+httpb: POST /shares httpb-\u003e\u003e+gwb: IsProviderAllowed Note right of gwb: IsProviderAllowed (ocmproviderauthorizer) gwb--\u003e\u003e-httpb: return httpb-\u003e\u003e+gwb: GetUser Note right of gwb: GetUser (userprovider) gwb--\u003e\u003e-httpb: return httpb-\u003e\u003e+gwb: CreateOCMCoreShare gwb-\u003e\u003e+ocmc: CreateOCMCoreShare Note right of ocmc: StoreReceivedShare ocmc--\u003e\u003e-gwb: return gwb--\u003e\u003e-httpb: return httpb--\u003e\u003e-osp: return osp--\u003e\u003e-gwa: return gwa--\u003e\u003e-httpa: return httpa-\u003e\u003e+gwa: Stat Note left of gwa: Stat (storageprovider) gwa--\u003e\u003e-httpa: return httpa--\u003e\u003e-usera: return "},{"id":208,"href":"/apis/http/authorization/","title":"Authorization","parent":"Http","content":"In its default configuration, Infinite Scale supports three authentication methods as outlined on the OIDC official site:\nAuthorization Code Flow Implicit Flow Hybrid Flow For detailed information on Infinite Scale\u0026rsquo;s support for OpenID Connect (OIDC), please consult the OIDC section. To authenticate a client app using OIDC, both client_id and client_secret are essential. Infinite Scale does not offer dynamic registration. The required data for the default ownCloud clients can be found in the link and are availble for the following apps:\nDesktop Android iOS While selecting an ownCloud client for authentication, take note of specific limitations such as the Redirect URI:\nSource Redirect URI Android oc://android.owncloud.com iOS oc://ios.owncloud.com Desktop http://127.0.0.1 http://localhost In this example, the desktop app\u0026rsquo;s client_id and client_secret are being used.\nclient_id=xdXOt13JKxym1B1QcEncf2XDkLAexMBFwiT9j6EfhhHFJhs2KM9jbjTmf8JBXE69 client_secret=UBntmLjC2yYCeHwsyj73Uwo9TAaecAetRwMw0xYcvNL9yRdLSUi0hUAHfvCHFeFh Authorization Code Flow Requesting authorization\nTo initiate the OIDC Code Flow, you can use tools like curl and a web browser. The user should be directed to a URL to authenticate and give their consent (bypassing consent is against the standard):\nhttps://ocis.test/signin/v1/identifier/_/authorize?client_id=client_id\u0026amp;scope=openid+profile+email+offline_access\u0026amp;response_type=code\u0026amp;redirect_uri=http://path-to-redirect-uri After a successful authentication, the browser will redirect to a URL that looks like this:\nhttp://path-to-redirect-uri?code=mfWsjEL0mc8gx0ftF9LFkGb__uFykaBw\u0026amp;scope=openid%20profile%20email%20offline_access\u0026amp;session_state=32b08dd...\u0026amp;state= For the next step extract the code from the URL.\nIn the above example, the code is mfWsjEL0mc8gx0ftF9LFkGb__uFykaBw\nRequesting an access token\nThe next step in the OIDC Code Flow involves an HTTP POST request to the token endpoint of the Infinite Scale Identity Server.\ncurl -vk -X POST https://ocis.test/konnect/v1/token \\ -d \u0026#34;grant_type=authorization_code\u0026#34; \\ -d \u0026#34;code=3a3PTcO-WWXfN3l1mDN4u7G5PzWFxatU\u0026#34; \\ -d \u0026#34;redirect_uri=http:path-to-redirect-uri\u0026#34; \\ -d \u0026#34;client_id=client_id\u0026#34; \\ -d \u0026#34;client_secret=client_secret\u0026#34; Response looks like this:\n{ \u0026#34;access_token\u0026#34;: \u0026#34;eyJhbGciOid...\u0026#34;, \u0026#34;token_type\u0026#34;: \u0026#34;Bearer\u0026#34;, \u0026#34;id_token\u0026#34;: \u0026#34;eyJhbGciOi...\u0026#34;, \u0026#34;refresh_token\u0026#34;: \u0026#34;eyJhbGciOiJ...\u0026#34;, \u0026#34;expires_in\u0026#34;: 300 } Refreshing an access token\nIf the access token has expired, you can get a new one using the refresh token.\ncurl -vk -X POST https://ocis.test/konnect/v1/token \\ -d \u0026#34;grant_type=refresh_token\u0026#34; \\ -d \u0026#34;refresh_token=eyJhbGciOiJ...\u0026#34; \\ -d \u0026#34;redirect_uri=http://path-to-redirect-uri\u0026#34; \\ -d \u0026#34;client_id=client_id\u0026#34; \\ -d \u0026#34;client_secret=client_secret\u0026#34; Response looks like this:\n{ \u0026#34;access_token\u0026#34;: \u0026#34;eyJhbGciOi...\u0026#34;, \u0026#34;token_type\u0026#34;: \u0026#34;Bearer\u0026#34;, \u0026#34;expires_in\u0026#34;: 300 } Implicit Code Flow When using the implicit flow, tokens are provided in a URI fragment of the redirect URL. Valid values for the response_type request parameter are:\ntoken id_token token If you are using the implicit flow, nonce parameter is required in the initial /authorize request. nonce=pL3UkpAQPZ8bTMGYOmxHY/dQABin8yrqipZ7iN0PY18=\nbash command to generate cryptographically random value\nopenssl rand -base64 32 The user should be directed to a URL to authenticate and give their consent (bypassing consent is against the standard):\nhttps://ocis.test/signin/v1/identifier/_/authorize?client_id=client_id\u0026amp;scope=openid+profile+email+offline_access\u0026amp;response_type=id_token+token\u0026amp;redirect_uri=http://path-to-redirect-uri\u0026amp;nonce=pL3UkpAQPZ8bTMGYOmxHY/dQABin8yrqipZ7iN0PY18= After a successful authentication, the browser will redirect to a URL that looks like this:\nhttp://path-to-redirect-uri#access_token=eyJhbGciOiJQUzI...\u0026amp;expires_in=300\u0026amp;id_token=eyJhbGciOiJ...\u0026amp;scope=email%20openid%20profile\u0026amp;session_state=c8a1019f5e054d...\u0026amp;state=\u0026amp;token_type=Bearer For the next step, extract the access_token from the URL.\naccess_token = \u0026#39;eyJhbGciOiJQ...\u0026#39; Hybrid Flow The Hybrid Flow in OpenID Connect melds features from both the Implicit and Authorization Code flows. It allows clients to directly retrieve certain tokens from the Authorization Endpoint, yet also offers the option to acquire additional tokens from the Token Endpoint.\nThe Authorization Server redirects back to the client with appropriate parameters in the response, based on the value of the response_type request parameter:\ncode token code id_token code id_token token ","description":"In its default configuration, Infinite Scale supports three authentication methods as outlined on the OIDC official site:\nAuthorization Code Flow Implicit Flow Hybrid Flow For detailed information on Infinite Scale\u0026rsquo;s support for OpenID Connect (OIDC), please consult the OIDC section. To authenticate a client app using OIDC, both client_id and client_secret are essential. Infinite Scale does not offer dynamic registration. The required data for the default ownCloud clients can be found in the link and are availble for the following apps:"},{"id":209,"href":"/apis/http/graph/groups/","title":"Groups","parent":"LibreGraph","content":" Groups API Reading groups GET /groups GET /groups?$expand=members GET /groups/{groupid} GET /groups/{groupid}?$expand=members Getting Group Members GET /groups/{groupid}/members Creating / Updating Groups POST /groups Request Body Response DELETE /groups/{id} PATCH /groups/{id} Adding a single member to a group POST /groups/{id}/members/$ref Adding multiple members in a single request PATCH /groups/{id} Removing a member DELETE /groups/{groupid}/members/{id}/$ref Groups API The Groups API is implementing a subset of the functionality of the MS Graph Group resource The JSON representation of a Group as handled by the Groups API looks like this:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;f0d97060-da16-4b0d-9fa4-d1ec43afc5f1\u0026#34; } Our implementation currently supports two Attributes for a Group:\nAttribute Description displayName The groups name id An unique, stable readonly identifier for the group that stays the same for the whole lifetime of the Group, usually a UUID Reading groups GET /groups Returns a list of all groups\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/groups\u0026#39; -u user:password Response:\n{ \u0026#34;value\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;38580a2e-7018-42ed-aff6-b2af0b4e9790\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a20f238-8a22-4458-902d-47674c317e5f\u0026#34; } ] } GET /groups?$expand=members Returns a list of all groups including its members\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/groups?$expand=members\u0026#39; -u user:password Response:\n{ \u0026#34;value\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;38580a2e-7018-42ed-aff6-b2af0b4e9790\u0026#34;, \u0026#34;members\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;user1\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;2e7b7e23-6c42-4d34-81b0-2bed34e51983\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;user1@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;user1\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;user2\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;b45c9e35-0d95-4165-96bc-68bff4a316ed\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;user2@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;user2\u0026#34; } ] }, { \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a20f238-8a22-4458-902d-47674c317e5f\u0026#34;, \u0026#34;members\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;user3\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;026fbfef-79ef-4f5d-887b-9eaf42777239\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;user3@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;user3\u0026#34; } ] } ] } GET /groups/{groupid} Example:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f\u0026#39; -u user:password Response:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a20f238-8a22-4458-902d-47674c317e5f\u0026#34; } GET /groups/{groupid}?$expand=members Example:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f?$expand=members\u0026#39; -u user:password Response:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a20f238-8a22-4458-902d-47674c317e5f\u0026#34;, \u0026#34;members\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;user3\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;026fbfef-79ef-4f5d-887b-9eaf42777239\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;user3@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;user3\u0026#34; } ] } Getting Group Members GET /groups/{groupid}/members Returns a list of User objects that are members of a group.\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f/members\u0026#39; -u user:password Response:\n[ { \u0026#34;displayName\u0026#34;: \u0026#34;Test User\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;c54b0588-7157-4521-bb52-c1c8ca84ea71\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;example@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;example\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;einstein@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;einstein\u0026#34; } ] Creating / Updating Groups POST /groups Use this to create a new group. h\nRequest Body Note the missing \u0026quot;id\u0026quot; Attribute. It will be generated by the server:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34; } Response When successful, the response will return the new group including the newly allocated \u0026quot;id\u0026quot;:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a20f238-8a22-4458-902d-47674c317e5f\u0026#34; } DELETE /groups/{id} Example:\ncurl -k --request DELETE \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f\u0026#39; -u user:password When successful the API returns no response body and the HTTP status code 204 (No Content)\nPATCH /groups/{id} Updating attributes of a single group is supposed to be done with a patch request. This is however currently not fully implemented for our write-enabled backends. The PATCH request can however be used to add multiple members to a group at once. See below.\nAdding a single member to a group POST /groups/{id}/members/$ref The request body contains a single attribute \u0026ldquo;@odata.id\u0026rdquo; referencing the new member of the group by URI. Example:\ncurl -k --header \u0026#34;Content-Type: application/json\u0026#34; \\ --request POST --data \\ \u0026#39;{ \u0026#34;@odata.id\u0026#34;: \u0026#34;https://localhost:9200/graph/v1.0/users/4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34; }\u0026#39; \\ \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f/members/$ref\u0026#39; -u user:password When successful the API returns no response body and the HTTP status code 204 (No Content)\nAdding multiple members in a single request PATCH /groups/{id} The request body contains the attribute members@odata.bind holding a list of URI references for the new members. Example:\n{ \u0026#34;members@odata.bind\u0026#34;: [ \u0026#34;https://localhost:9200/graph/v1.0/users/4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;https://localhost:9200/graph/v1.0/users/c54b0588-7157-4521-bb52-c1c8ca84ea71\u0026#34; ] } When successful the API returns no response body and the HTTP status code 204 (No Content)\nRemoving a member DELETE /groups/{groupid}/members/{id}/$ref Example\ncurl -k --request DELETE \\ \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f/members/4c510ada-c86b-4815-8820-42cdf82c3d51/$ref\u0026#39; \\ -u user:password When successful the API returns no response body and the HTTP status code 204 (No Content)\n","description":"Groups API Reading groups GET /groups GET /groups?$expand=members GET /groups/{groupid} GET /groups/{groupid}?$expand=members Getting Group Members GET /groups/{groupid}/members Creating / Updating Groups POST /groups Request Body Response DELETE /groups/{id} PATCH /groups/{id} Adding a single member to a group POST /groups/{id}/members/$ref Adding multiple members in a single request PATCH /groups/{id} Removing a member DELETE /groups/{groupid}/members/{id}/$ref Groups API The Groups API is implementing a subset of the functionality of the MS Graph Group resource The JSON representation of a Group as handled by the Groups API looks like this:"},{"id":210,"href":"/services/web/releasing/","title":"Releasing","parent":"Web","content":" Releasing Package Hierarchy Prerequisites Updating ocis-web Releasing The next generation Web Frontend is shipped as an oCIS Extension. The ocis-web extension is also embedded in the single binary and part of the ocis server command.\nTo update this package within all the deliveries, we need to update the package in the following chain from the bottom to the top.\nPackage Hierarchy ocis ocis-web ocis-pkg ownCloud Web Prerequisites Before updating the assets, make sure that ownCloud Web has been released first and take note of its release tag name.\nUpdating ocis-web Create a branch update-web-$version in the ocis repository Change into web package folder via cd web Inside web/, update the Makefile so that the WEB_ASSETS_VERSION variable references the currently released version of https://github.com/owncloud/web Move to the changelog (cd ../changelog/) and add a changelog file to the unreleased/ folder (You can copy an old web release changelog item as a template) Move to the repo root (cd ..)and update the WEB_COMMITID in the /.drone.env file to the commit id from the released version (unless the existing commit id is already newer) Optional: Test the changes locally by running cd ocis \u0026amp;\u0026amp; go run cmd/ocis/main.go server, visiting https://localhost:9200 and confirming everything renders correctly Commit your changes, push them and create a PR ","description":"Releasing Package Hierarchy Prerequisites Updating ocis-web Releasing The next generation Web Frontend is shipped as an oCIS Extension. The ocis-web extension is also embedded in the single binary and part of the ocis server command.\nTo update this package within all the deliveries, we need to update the package in the following chain from the bottom to the top.\nPackage Hierarchy ocis ocis-web ocis-pkg ownCloud Web Prerequisites Before updating the assets, make sure that ownCloud Web has been released first and take note of its release tag name."},{"id":211,"href":"/ocis/migration/","title":"Migration","parent":"oCIS - ownCloud Infinite Scale","content":"The migration happens in subsequent stages while the service is online. First all users need to migrate to the new architecture, then the global namespace needs to be introduced. Finally, the data on disk can be migrated user by user by switching the storage driver.\n@jfd: It might be easier to introduce the spaces api in oc10 and then migrate to oCIS. We cannot migrate both at the same time, the architecture to oCIS (which will change fileids) and introduce a global namespace (which requires stable fileids to let clients handle moves without redownloading). Either we implement arbitrary mounting of shares in oCIS / reva or we make clients and oc10 spaces aware. Migration Stages Stage 0: pre migration Is the pre-migration stage when having a functional ownCloud 10 instance.\nFAQ Feel free to add your question as a PR to this document using the link at the top of this page!\nStage 1: introduce ownCloud Web Install and introduce ownCloud Web and let users test it voluntarily to gain early feedback on the new UI.\nSteps Deploy web and enable switching to and from it. For more details see: ownCloud 10 with ownCloud Web\nTODO allow limiting the web ui switch to an \u0026rsquo;early adopters\u0026rsquo; group\nValidation Ensure switching back and forth between the classic ownCloud 10 web UI and ownCloud web works as at our https://demo.owncloud.com.\nRollback Should there be problems with ownCloud web at this point it can simply be removed from the menu and be undeployed.\nNotes The ownCloud 10 demo instance uses OAuth to obtain a token for ownCloud web and currently always requires explicit consent. In oCIS the token is provided by the OpenID Connect Identity Provider, which may skip the consent step for trusted clients for a more seamless login experience. You may want to introduce OpenID Connect before enabling the new web UI. TODO make oauth2 in oc10 trust the new web ui, based on redirect_uri and CSRF so no explicit consent is needed?\nFAQ Feel free to add your question as a PR to this document using the link at the top of this page!\nStage 2: introduce OpenID Connect Basic auth requires us to properly store and manage user credentials. Something we would rather like to delegate to a tool specifically built for that task. While SAML and Shibboleth are protocols that solve that problem, they are limited to web clients. Desktop and mobile clients were an afterthought and keep running into timeouts. For these reasons, we decided to move to OpenID Connect as our primary authentication protocol.\nTODO @butonic add ADR for OpenID Connect and flesh out pros and cons of the above\nUser impact When introducing OpenID Connect, the clients will detect the new authentication scheme when their current way of authenticating returns an error. Users will then have to reauthorize at the OpenID Connect IdP, which again, may be configured to skip the consent step for trusted clients.\nSteps There are multiple products that can be used as an OpenID Connect IdP. We test with LibreGraph Connect, which is also embedded in oCIS. Other alternatives include Keycloak or Ping. Please refer to the corresponding setup instructions for the product you intend to use. TODO @butonic flesh out oCIS IDP documentation\nAdd Openid Connect (OIDC) support to ownCloud 10. Validation When OpenID Connect support is enabled verify that all clients can login:\nweb classic ownCloud web desktop android iOS Rollback Should there be problems with OpenID Connect at this point you can disable the app. Users will have to reauthenticate in this case.\nNotes Legacy clients relying on Basic auth or app passwords need to be migrated to OpenId Connect to work with oCIS. For a transition period Basic auth in oCIS can be enabled with `PROXY_ENABLE_BASIC_AUTH=true`, but we strongly recommend adopting OpenID Connect for other tools as well. While OpenID Connect providers will send an iss and sub claim that relying parties (services like oCIS or ownCloud 10) can use to identify users we recommend introducing a dedicated, globally unique, persistent, non-reassignable user identifier like a UUID for every user. This ownclouduuid should be sent as an additional claim to save additional lookups on the server side. It will become the user id in oCIS, e.g. when searching for recipients the ownclouduuid will be used to persist permissions with the share manager. It has a different purpose than the ownCloud 10 username, which is used to login. Using UUIDs we can not only mitigate username collisions when merging multiple instances but also allow renaming usernames after the migration to oCIS has been completed.\nFAQ Feel free to add your question as a PR to this document using the link at the top of this page!\nStage 3: introduce oCIS internally Before letting oCIS handle end user requests we will first make it available in the internal network. By subsequently adding services we can add functionality and verify the services work as intended.\nStart oCIS backend and make read only tests on existing data using the owncloudsql storage driver which will read (and write)\nblobs from the same datadirectory layout as in ownCloud 10 metadata from the ownCloud 10 database: The oCIS share manager will read share information from the ownCloud database using an owncloud driver as well. TODO @butonic add guide on how to configure owncloudsql\nTODO we need a share manager that can read from the ownCloud 10 database as well as from whatever new backend will be used for a pure oCIS setup. Currently, that would be the json file. Or that is migrated after all users have switched to oCIS. \u0026ndash; jfd\nUser impact None, only administrators will be able to explore oCIS during this stage.\nSteps and verifications We are going to run and explore a series of services that will together handle the same requests as ownCloud 10. For initial exploration the oCIS binary is recommended. The services can later be deployed using a single oCIS runtime or in multiple containers.\nStorage provider for file metadata Deploy OCIS storage provider with owncloudsql driver. Set read_only: true in the storage provider config. TODO @butonic add read only flag to storage drivers Use cli tool to list files using the CS3 api File ID alternatives Multiple ownCloud instances can be merged into one oCIS instance. To prevent the numeric ids from colliding, the file ids will be prefixed with a new storage space id which is used by oCIS to route requests to the correct storage provider. See Stage 8 below.\nAlternative 1 Add a routable prefix to fileids in oc10, and replicate the prefix in oCIS.\nStage-3.1 Let oc10 render file ids with prefixes: \u0026lt;instance name\u0026gt;$\u0026lt;numeric storageid\u0026gt;!\u0026lt;fileid\u0026gt;. This will allow clients to handle moved files.\nStage-3.2 Roll out new clients that understand the spaces API and know how to convert local sync pairs for legacy oc10 /webdav or /dav/files/\u0026lt;username\u0026gt; home folders into multiple sync pairs. One pair for /webdav/home or /dav/files/\u0026lt;username\u0026gt;/home and another pair for every accepted share. The shares will be accessible at /webdav/shares/ when the server side enables the spaces API. Files can be identified using \u0026lt;instance name\u0026gt;$\u0026lt;numeric storageid\u0026gt;!\u0026lt;fileid\u0026gt; and moved to the correct sync pair.\nStage-3.3 Enable spaces API in oc10:\nNew clients will get a response from the spaces API and can set up new sync pairs. Legacy clients will still poll /webdav or /dav/files/\u0026lt;username\u0026gt; where they will see new subfolders instead of the users home. They will move down the users files into /home and shares into /shares. Custom sync pairs will no longer be available, causing the legacy client to leave local files in place. They can be picked up manually when installing a new client. Alternative 2 An additional uuid property used only to detect moves. A lookup by uuid is not necessary for this. The /dav/meta endpoint would still take the fileid. Clients would use the uuid to detect moves and set up new sync pairs when migrating to a global namespace.\nStage-3.1 Generate a uuid for every file as a file property. Clients can submit a uuid when creating files. The server will create a uuid if the client did not provide one.\nStage-3.2 Roll out new clients that understand the spaces API and know how to convert local sync pairs for legacy oc10 /webdav or /dav/files/\u0026lt;username\u0026gt; home folders into multiple sync pairs. One pair for /webdav/home or /dav/files/\u0026lt;username\u0026gt;/home and another pair for every accepted share. The shares will be accessible at /webdav/shares/ when the server side enables the spaces API. Files can be identified using the uuid and moved to the correct sync pair.\nStage-4.1 When reading the files from oCIS return the same uuid. It can be migrated to an extended attribute or it can be read from oc10. If users change it the client will not be able to detect a move and maybe other weird stuff happens. What if the uuid gets lost on the server side due to a partial restore?\ngraph API endpoint Deploy graph api to list spaces Use curl to list spaces using graph drives endpoint owncloud flavoured WebDAV endpoint Deploy ocdav Use curl to send PROPFIND data provider for up and download Deploy dataprovider Use curl to up and download files Use tus to upload files Deploy \u0026hellip;\nshare manager Deploy share manager with ownCloud driver\nreva gateway Deploy gateway to authenticate requests? I guess we need that first\u0026hellip; Or we need the to mint a token. Might be a good exercise. automated deployment Finally, deploy oCIS with a config to set up everything running in a single oCIS runtime or in multiple containers.\nRollback You can stop the oCIS process at any time.\nNotes Multiple ownCloud instances can be merged into one oCIS instance. The file ids will be prefixed with a new storage space id which is used to route requests to the correct storage provider. FAQ Feel free to add your question as a PR to this document using the link at the top of this page!\nStage 4: internal write access with oCIS Test writing data with oCIS into the existing ownCloud 10 data directory using the owncloudsql storage driver.\nUser impact Only administrators will be able to explore oCIS during this stage. End users should not be affected if the testing is limited to test users.\nSteps Set read_only: false in the storage provider config.\nTODO @butonic add read only flag to storage drivers\nVerification Rollback Set read_only: true in the storage provider config.\nTODO @butonic add read only flag to storage drivers\nNotes With write access it becomes possible to manipulate existing files and shares. FAQ Feel free to add your question as a PR to this document using the link at the top of this page!\nStage-5: introduce user aware proxy In the previous stages oCIS was only accessible for administrators with access to the network. To expose only a single service to the internet, oCIS comes with a user aware proxy that can be used to route requests to the existing ownCloud 10 installation or oCIS, based on the authenticated user. The proxy uses OIDC to identify the logged-in user and route them to the configured backend.\nUser impact The IP address of the ownCloud host changes. There is no change for the file sync and share functionality when requests are handled by the oCIS codebase as it uses the same database and storage system as owncloud 10.\nSteps and verifications Deploy oCIS proxy Deploy the ocis proxy Verify the requests are routed based on the ownCloud 10 routing policy oc10 by default Test user based routing Change the routing policy for a user or an early adopters group to ocis TODO @butonic currently, the migration selector will use the ocis policy for users that have been added to the accounts service. IMO we need to evaluate a claim from the IdP. Verify the requests are routed based on the oCIS routing policy oc10 for \u0026lsquo;migrated\u0026rsquo; users. At this point you are ready to rock \u0026amp; roll!\nLet ownCloud domain point to proxy Update the dns to use the oCIS proxy instead of the ownCloud application servers directly. Let DNS propagate the change and monitor requests moving from the ownCloud application servers to the oCIS proxy. Verify the DNS change has propagated sufficiently. All requests should now use the oCIS Proxy. Rollback Should there be a problem with the oCIS routes the user can be routed to ownCloud by changing his routing policy. In case of unfixable problems with the proxy the DNS needs to be updated to use the ownCloud 10 application servers directly. This could also be done in a load balancer.\nNotes The proxy is stateless, multiple instances can be deployed as needed. FAQ Feel free to add your question as a PR to this document using the link at the top of this page!\nStage-6: parallel deployment Running ownCloud 10 and oCIS in parallel is a crucial stage for the migration: it allows users access to group shares regardless of the system that is being used to access the data. A user by user migration with multiple domains would technically break group shares when users vanish because they (and their data) are no longer available in the old system.\nDepending on the amount of power users on an instance, the admin may want to allow users to voluntarily migrate to the oCIS backend. A monitoring system can be used to visualize the behavior for the two systems and gain trust in the overall stability and performance.\nUser impact Since the underling data is still stored in the same systems, a similar or performance can be expected.\nSee TODO hmpf outdated didn\u0026rsquo;t we want to run them nightly? \u0026hellip; TODO @butonic update performance comparisons nightly\nSteps There are several options to move users to the oCIS backend:\nUse a canary app to let users decide themselves Use an early adopters group with an opt-in Force migrate users in batch or one by one at the administrators will Verification The same verification steps as for the internal testing stage apply. Just from the outside.\nRollback Until now, the oCIS configuration mimics ownCloud 10 and uses the old data directory layout and the ownCloud 10 database. Users can seamlessly be switched from ownCloud 10 to oCIS and back again.\nTODO @butonic we need a canary app that allows users to decide for themselves which backend to use\nNotes Running the two systems in parallel stage Try to keep the duration of this stage short. Until now we only added services and made the system more complex. oCIS aims to reduce the maintenance cost of an ownCloud instance. You will not get there if you keep both systems alive.\nFAQ Feel free to add your question as a PR to this document using the link at the top of this page!\nStage-7: introduce spaces using ocis To encourage users to switch you can promote the workspaces feature that is built into oCIS. The ownCloud 10 storage backend can be used for existing users. New users and group or project spaces can be provided by storage providers that better suit the underlying storage system.\nSteps First, the admin needs to\ndeploy a storage provider with the storage driver that best fits the underlying storage system and requirements. register the storage in the storage registry with a new storage id (we recommend a uuid). Then a user with the necessary create storage space role can create a storage space and assign Managers.\nTODO @butonic a user with management permission needs to be presented with a list of storage spaces where he can see the amount of free space and decide on which storage provider the storage space should be created. For now a config option for the default storage provider for a specific type might be good enough.\nVerification The new storage space should show up in the /graph/drives endpoint for the managers and the creator of the space.\nNotes Depending on the requirements and acceptable tradeoffs, a database less deployment using the ocis or s3ng storage driver is possible. There is also a cephfs driver on the way, that directly works on the API level instead of POSIX.\nStage-8: shut down ownCloud 10 Disable ownCloud 10 in the proxy, all requests are now handled by oCIS, shut down oc10 web servers and redis (or keep for calendar \u0026amp; contacts only? rip out files from oCIS?)\nUser impact All users are already sent to the oCIS backend. Shutting down ownCloud 10 will remove the old web UI, apps and functionality that is not yet present in ownCloud web. For example contacts and calendar.\nTODO @butonic recommend alternatives\nSteps Shut down the apache servers that are running the ownCloud 10 PHP code. DO NOT SHUT DOWN THE DATABASE, YET! Verification The ownCloud 10 classic web UI should no longer be reachable.\nRollback Redeploy ownCloud 10.\nNotes The database needs to remain online until the storage layer and share metadata have been migrated as well. One thing at a time. FAQ Feel free to add your question as a PR to this document using the link at the top of this page!\nStage 9: storage migration To get rid of the database we will move the metadata from the old ownCloud 10 database into dedicated storage providers. This can happen in a user by user fashion. group drives can properly be migrated to group, project or workspaces in this stage.\nUser impact Noticeable performance improvements because we effectively shard the storage logic and persistence layer.\nSteps User by user storage migration from owncloud or ownclouds3 driver to ocis/s3ng/cephfs\u0026hellip; currently this means copying the metadata from one storage provider to another using the cs3 api. Change the responsible storage provider for a storage space (e.g. a user home, a group or project space are a workspace) in the storage registry. TODO @butonic implement ownclouds3 based on s3ng TODO @butonic implement tiered storage provider for seamless migration TODO @butonic document how to manually do that until the storage registry can discover that on its own.\nVerification Start with a test user, then move to early adopters and finally migrate all users.\nRollback To switch the storage provider again the same storage space migration can be performed again: copy metadata and blob data using the CS3 api, then change the responsible storage provider in the storage registry.\nNotes Multiple ownCloud instances can be merged into one oCIS instance. The file ids will be prefixed with a new storage space id which is used to route requests to the correct storage provider. The storage space migration will become a seamless feature in the future that allows administrators to move users to storage systems with different capabilities, to implement premium features, deprovisioning strategies or archiving.\nFAQ Feel free to add your question as a PR to this document using the link at the top of this page!\nStage-10: share metadata migration Migrate share data to yet to determine share manager backend and shut down ownCloud database.\nThe ownCloud 10 database still holds share information in the oc_share and oc_share_external tables. They are used to efficiently answer queries about who shared what with whom. In oCIS shares are persisted using a share manager and if desired these grants are also sent to the storage provider so it can set ACLs if possible. Only one system should be responsible for the shares, which in case of treating the storage as the primary source effectively turns the share manager into a cache.\nUser impact Depending on chosen the share manager provider some sharing requests should be faster: listing incoming and outgoing shares is no longer bound to the ownCloud 10 database but to whatever technology is used by the share provider:\nFor non HA scenarios they can be served from memory, backed by a simple json file. TODO: implement share manager with redis / nats / \u0026hellip; key value store backend: use the micro store interface please \u0026hellip; Steps Start new share manager Migrate metadata using the CS3 API (copy from old to new) Shut down old share manager Shut down ownCloud 10 database TODO for HA implement share manager with redis / nats / \u0026hellip; key value store backend: use the micro store interface please \u0026hellip; TODO for batch migration implement share data migration cli with progress that reads all shares via the cs3 api from one provider and writes them into another provider TODO for seamless migration implement tiered/chained share provider that reads share data from the old provider and writes new shares to the new one TODO for storage provider as source of truth persist ALL share data in the storage provider. Currently, part is stored in the share manager, part is in the storage provider. We can keep both, but the share manager should directly persist its metadata to the storage system used by the storage provider so metadata is kept in sync\nVerification After copying all metadata start a dedicated gateway and change the configuration to use the new share manager. Route a test user, a test group and early adopters to the new gateway. When no problems occur you can start the desired number of share managers and roll out the change to all gateways.\nTODO let the gateway write updates to multiple share managers \u0026hellip; or rely on the tiered/chained share manager provider to persist to both providers\nRollback To switch the share manager to the database one revert routing users to the new share manager. If you already shut down the old share manager start it again. Use the tiered/chained share manager provider in reverse configuration (new share provider as read only, old as write) and migrate the shares again. You can also restore a database backup if needed.\nStage-11 Profit! Well, on the one hand you do not need to maintain a clustered database setup and can rely on the storage system. On the other hand you are now in microservice wonderland and will have to relearn how to identify bottlenecks and scale oCIS accordingly. The good thing is that tools like jaeger and prometheus have evolved and will help you understand what is going on. But this is a different topic. See you on the other side!\nFAQ Feel free to add your question as a PR to this document using the link at the top of this page!\nArchitectural differences The fundamental difference between ownCloud 10 and oCIS is that the file metadata is moved from the database in the oc_filecache table (which is misnamed, as it actually is an index) to the storage provider who can place metadata as close to the underlying storage system as possible. In effect, the file metadata is sharded over multiple specialized services.\nData that will be migrated Currently, oCIS focuses on file sync and share use cases.\nBlob data In ownCloud 10 the files are laid out on disk in the data directory using the following layout:\ndata ├── einstein │ ├── cache │ ├── files │ │ ├── Photos │ │ │ └── Portugal.jpg │ │ ├── Projects │ │ │ └── Notes.md │ │ └── ownCloud Manual.pdf │ ├── files_external │ ├── files_trashbin │ │ ├── files │ │ │ ├── Documents.d1564687985 │ │ │ ├── TODO.txt.d1565721976 │ │ │ └── welcome.txt.d1564775872 │ │ └── versions │ │ │ ├── TODO.txt.v1564605543.d1565721976 │ │ │ └── TODO.txt.v1564775936.d1565721976 │ ├── files_versions │ │ ├── Projects │ │ │ ├── Notes.md.v1496912691 │ │ │ └── Notes.md.v1540305560 │ │ └── ownCloud Manual.pdf.v1396628249 │ ├── thumbnails │ │ └── 123 │ │ │ ├── 2048-1536-max.png │ │ │ └── 32-32.png // the file id, e.g. of /Photos/Portugal.jpg │ └── uploads ├── marie │ ├── cache │ ├── files │ ├── files_external │ ├── files_trashbin │ ├── files_versions │ └── thumbnails │ … ├── moss … The data directory may also contain subfolders for ownCloud 10 applications like avatars, gallery, files_external and cache.\nWhen an object storage is used as the primary storage all file blobs are stored by their file id and a prefix, e.g.: urn:oid:\u0026lt;fileid\u0026gt;.\nThe three types of blobs we need to migrate are stored in\nfiles for file blobs, the current file content, files_trashbin for trashed files (and their versions) and files_versions for file blobs of older versions. Filecache table In both cases the file metadata, including a full replication of the file tree, is stored in the oc_filecache table of an ownCloud 10 database. The primary key of a row is the file id. It is used to attach additional metadata like shares, tags, favorites or arbitrary file properties.\nThe filecache table itself has more metadata:\nField Type Null Key Default Extra Comment Migration fileid bigint(20) NO PRI NULL auto_increment MUST become the oCIS opaqueid of a file reference. ocis driver stores it in extended attributes and can use numbers as node ids on disk. for eos see note below table storage int(11) NO MUL 0 the filecache holds metadata for multiple storages corresponds to an oCIS storage space path varchar(4000) YES NULL the path relative to the storages root MUST become the path relative to the storage root. files prefix needs to be trimmed. path_hash varchar(32) NO *mysql once had problems indexing long paths, so we stored a hash for lookup by path. - parent bigint(20) NO MUL 0 used to implement the hierarchy and listing children of a folder by id. redundant with path - name varchar(250) YES NULL basename of path - mimetype int(11) NO 0 joined with the oc_mimetypes table. only relevant for object storage deployments can be determined from blob / file extension mimepart int(11) NO 0 \u0026quot; can be determined from blob / file extension size bigint(20) NO 0 same as blob size unless encryption is used MAY become size, can be determined from blob mtime bigint(20) NO 0 same as blob mtime for files MAY become mtime (can be determined from blob as well), for directories MUST become tmtime encrypted int(11) NO 0 encrypted flag oCIS currently does not support encryption etag varchar(40) YES NULL used to propagate changes in a tree MUST be migrated (or calculated in the same way) to prevent clients from syncing unnecessarily unencrypted_size bigint(20) NO 0 same as blob size oCIS currently does not support encryption storage_mtime bigint(20) NO 0 used to detect external storage changes oCIS delegates that to the storage providers and drivers permissions int(11) YES 0 *used as the basis for permissions. synced from disk when running a file scan. * oCIS delegates that to the storage providers and drivers checksum varchar(255) YES NULL same as blob checksum SHOULD become the checksum in the storage provider. eos calculates it itself, ocis driver stores it in extended attributes Note: for EOS a hot migration only works seamlessly if file ids in oc10 are already read from eos. Otherwise, either a mapping from the oc10 filecache file id to the new eos file id has to be created under the assumption that these id sets do not intersect or files and corresponding shares need to be exported and imported offline to generate a new set of ids. While this will preserve public links, user, group and even federated shares, old internal links may still point to different files because they contain the oc10 fileid\nshare table used to store\nPublic links Private shares with users and groups Federated shares partly Guest shares Field Type Null Key Default Extra Comment CS3 API id int(11) NO PRI NULL auto_increment ShareId.opaqueid string share_type smallint(6) NO 0 in CS3 every type is handled by a dedicated API. See below the table does NOT map to Share.ShareType TODO clarify share_with varchar(255) YES MUL NULL Share.grantee Grantee uid_owner varchar(64) NO ShareId.owner UserID parent int(11) YES NULL - item_type varchar(64) NO MUL Share.resource_id ResourceId item_source varchar(255) YES MUL NULL Share.resource_id ResourceId item_target varchar(255) YES NULL Share.resource_id ResourceId file_source bigint(20) YES MUL NULL cannot store uuid style file ids from oCIS. when all users have migrated to oCIS the share manager needs to be updated / migrated to a version that does. Share.resource_id ResourceId file_target varchar(512) YES NULL Share.resource_id ResourceId permissions smallint(6) NO 0 Share.Permissions SharePermissions stime bigint(20) NO 0 Share.ctime, Share.mtime accepted smallint(6) NO 0 ReceivedShare.ShareState ShareState expiration datetime YES NULL only used for the Link API and storage provider api, currently cannot be added using the Collaboration or OCM API Grant token varchar(32) YES MUL NULL PublicShare.token mail_send smallint(6) NO 0 - uid_initiator varchar(64) YES NULL ShareId.creator UserID share_name varchar(64) YES NULL only exists for public shares PublicShare.display_name attributes longtext YES NULL additional share attributes could be implemented using opaque data, but should be added to the CS3 api In the CS3 API\npublic links are handled by the PublicShareProvider using the Link API internal shares are handled by the UserShareProvider using the Collaboration API. This covers user and group shares. federated shares are handled by the OcmShareProvider using the OCM Share Provider AP aka. Open Cloud Mesh. share_external Used to store additional metadata for federated shares.\nField Type Null Key Default Extra Comment id bigint(20) NO PRI NULL auto_increment remote varchar(512) NO NULL Url of the remote owncloud instance share_token varchar(64) NO NULL Public share token password varchar(64) YES NULL Optional password for the public share name varchar(64) NO NULL Original name on the remote server owner varchar(64) NO NULL User that owns the public share on the remote server user varchar(64) NO MUL NULL Local user which added the external share mountpoint varchar(4000) NO NULL Full path where the share is mounted mountpoint_hash varchar(32) NO NULL md5 hash of the mountpoint remote_id varchar(255) NO -1 accepted int(11) NO 0 TODO document how the reva OCM service currently persists the data\ntrusted_servers used to determine if federated shares can automatically be accepted\nField Type Null Key Default Extra Comment id int(11) NO PRI NULL auto_increment url varchar(512) NO NULL Url of trusted server url_hash varchar(255) NO UNI sha1 hash of the url without the protocol token varchar(128) YES NULL token used to exchange the shared secret shared_secret varchar(256) YES NULL shared secret used to authenticate status int(11) NO 2 current status of the connection sync_token varchar(512) YES NULL cardDav sync token TODO clarify how OCM handles this and where we store / configure this. It seems related to trusted IdPs\nuser data Users are migrated in two steps:\nThey should all be authenticated using OpenID Connect, which already moves them to a common identity management system. To search share recipients, both, ownCloud 10 and oCIS need access to the same user directory using e.g. LDAP. TODO add state to CS3 API, so we can \u0026lsquo;disable\u0026rsquo; users TODO how do we map (sub) admins? -\u0026gt; map to roles \u0026amp; permissions\naccounts:\nField Type Null Key Default Extra Comment id bigint(20) unsigned NO PRI NULL auto_increment email varchar(255) YES MUL NULL user_id varchar(255) NO UNI NULL lower_user_id varchar(255) NO UNI NULL display_name varchar(255) YES MUL NULL quota varchar(32) YES NULL last_login int(11) NO 0 backend varchar(64) NO NULL home varchar(1024) NO NULL state smallint(6) NO 0 users:\nField Type Null Key Default Extra Comment uid varchar(64) NO PRI password varchar(255) NO displayname varchar(64) YES NULL groups:\nThe groups table really only contains the group name.\nField Type Null Key Default Extra gid varchar(64) NO PRI LDAP TODO clarify if metadata from ldap \u0026amp; user_shibboleth needs to be migrated\nThe dn -\u0026gt; owncloud internal username mapping that currently lives in the oc_ldap_user_mapping table needs to move into a dedicated ownclouduuid attribute in the LDAP server. The idp should send it as a claim so the proxy does not have to look up the user using LDAP again. The username cannot be changed in ownCloud 10 and the oCIS provisioning API will not allow changing it as well. When we introduce the graph api we may allow changing usernames when all clients have moved to that api.\nThe problem is that the username in owncloud 10 and in oCIS also need to be the same, which might not be the case when the ldap mapping used a different column. In that case we should add another owncloudusername attribute to the ldap server.\nactivities dedicated service, not yet implemented, requires decisions about an event system \u0026ndash; jfd\nField Type Null Key Default Extra Comment activity_id bigint(20) NO PRI NULL auto_increment timestamp int(11) NO MUL 0 priority int(11) NO 0 type varchar(255) YES NULL user varchar(64) YES NULL affecteduser varchar(64) NO MUL NULL app varchar(255) NO NULL subject varchar(255) NO NULL subjectparams longtext NO NULL message varchar(255) YES NULL messageparams longtext YES NULL file varchar(4000) YES NULL link varchar(4000) YES NULL object_type varchar(255) YES MUL NULL object_id bigint(20) NO 0 Links The data_exporter has logic that allows exporting and importing users, including shares. The model classes contain the exact mapping.\n","description":"The migration happens in subsequent stages while the service is online. First all users need to migrate to the new architecture, then the global namespace needs to be introduced. Finally, the data on disk can be migrated user by user by switching the storage driver.\n@jfd: It might be easier to introduce the spaces api in oc10 and then migrate to oCIS. We cannot migrate both at the same time, the architecture to oCIS (which will change fileids) and introduce a global namespace (which requires stable fileids to let clients handle moves without redownloading)."},{"id":212,"href":"/ocis/flow-docs/login-flow/","title":"Login Flow","parent":"Flow documentation","content":" Login Flow The following sequence diagram describes the openid connect auth code flow. The eight numbered steps and notes correspond to the openid connect auth code flow steps. Example requests are based on the spec as well:\nsequenceDiagram %% we have comments!! \\o/ %% this documents the login workflow %% examples taken from the oidc spec https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth %% TODO add PKCE, see https://developer.okta.com/blog/2019/08/22/okta-authjs-pkce#use-pkce-to-make-your-apps-more-secure participant user as User participant client as Client participant proxy as ocis-proxy participant idp as IdP participant idm as LibreIDM participant ldap as External User Directory user-\u003e\u003e+client: What is the content of my home? client-\u003e\u003e+proxy: PROPFIND no (or expired) auth Note over client,proxy: ocis needs to know the IdP that is used to authenticate users. The proxy will redirect unauthenticated requests to that IdP. proxy--\u003e\u003e-client: 401 Unauthorized client-\u003e\u003e+proxy: 1. The client starts a new openIDConnect Flow Note over client, proxy: GET /.well-known/openid-configuration proxy--\u003e\u003e-client: Return openidConnect configuration for the IdP client--\u003e\u003eclient: 2. Client prepares an Authentication Request containing the desired request parameters and generates the code challenge (PKCE). client-\u003e\u003e+idp: 3. Client sends the request and the code challenge to the Authorization Server. Note over client, idp: GET /authorize? flow=oidc\u0026response_type=code \u0026scope=openid%20profile%20email \u0026code_challenge=Y2SGoq9vtAp7YAavTaO0B550H_Rsj9DypiL7xZuFjOE \u0026code_challenge_method=S25\u0026client_id=s6BhdRkqt3 \u0026state=af0ifjsldkj \u0026redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb HTTP/1.1 Host: server.example.com Note over user, idp: 3. Authorization Server Authenticates the End-User. alt all users managed by idp/ocis idm idp-\u003e\u003e+idm: LDAP query/bind idm--\u003e\u003e-idp: LDAP result Note over idp,ldap: In case users are managed in an external ldap they have to be autoprovisioned in the ocis IdM when they are loggin in. else all users authenticated by an external idp idp-\u003e\u003e+ldap: Lookup of the user in the directory ldap--\u003e\u003e-idp: Lookup result end idp--\u003e\u003e-user: Idp presents the user an authentication prompt. user-\u003e\u003e+idp: 5. User authenticates and gives consent. idp--\u003e\u003e-client: 6. Authorization Server sends the End-User back to the Client with an Authorization Code. Note over client, idp: HTTP/1.1 302 Found Location: https://client.example.org/cb? code=SplxlOBeZQQYbYS6WxSbIA\u0026state=af0ifjsldkj client-\u003e\u003e+idp: 7. Client requests a response using the Authorization Code and the code verifier at the Token Endpoint. Note over client, idp: POST /token HTTP/1.1 Host: server.example.com Content-Type: application/x-www-form-urlencoded grant_type=authorization_code\u0026code=SplxlOBeZQQYbYS6WxSbIA \u0026redirect_uri=https%3A%2F%2Fclient.example.org \u0026code_verifier=a98ccbe253754259963e6e2b67b5a044929446d7a15046cc8e3194022ad061d9d667dce91876418d9e6fe9f54819332e idp-\u003e\u003e+idp: 8. IdP checks the code verifier (PKCE) idp--\u003e\u003e-client: 9. Client receives a response that contains an ID Token and Access Token in the response body. If offline access is requested, the client also receives a refresh token. Note over client, idp: HTTP/1.1 200 OK Content-Type: application/json Cache-Control: no-store Pragma: no-cache { \"access_token\": \"SlAV32hkKG\", \"token_type\": \"Bearer\", \"refresh_token\": \"8xLOxBtZp8\", \"expires_in\": 3600, \"id_token\": \"a ... b.c ... d.e ... f\" // must be a JWT } client--\u003e\u003eclient: 10. Client validates the ID token and retrieves the End-User's Subject Identifier. client-\u003e\u003e+proxy: PROPFIND With access token proxy--\u003e\u003e-client: 207 Multi-Status client--\u003e\u003e-user: List of Files X, Y, Z ... ","description":"Login Flow The following sequence diagram describes the openid connect auth code flow. The eight numbered steps and notes correspond to the openid connect auth code flow steps. Example requests are based on the spec as well: sequenceDiagram %% we have comments!! \\o/ %% this documents the login workflow %% examples taken from the oidc spec https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth %% TODO add PKCE, see https://developer.okta.com/blog/2019/08/22/okta-authjs-pkce#use-pkce-to-make-your-apps-more-secure participant user as User participant client as Client participant proxy as ocis-proxy participant idp as IdP participant idm as LibreIDM participant ldap as External User Directory user-\u003e\u003e+client: What is the content of my home?"},{"id":213,"href":"/ocis/metrics/","title":"Metrics","parent":"oCIS - ownCloud Infinite Scale","content":" Metrics This service provides some Prometheus metrics through the debug endpoint, you can optionally secure the metrics endpoint by some random token, which has to be configured either through the flag --debug-token or the environment variable OCIS_DEBUG_TOKEN mentioned above. By default, the metrics endpoint is bound to http://0.0.0.0:8001/metrics.\ngo_gc_duration_seconds A summary of the GC invocation durations go_gc_duration_seconds_sum A summary of the GC invocation durations go_gc_duration_seconds_count A summary of the GC invocation durations go_goroutines Number of goroutines that currently exist go_info Information about the Go environment go_memstats_alloc_bytes Number of bytes allocated and still in use go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table go_memstats_frees_total Total number of frees go_memstats_gc_cpu_fraction The fraction of this program\u0026rsquo;s available CPU time used by the GC since the program started go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use go_memstats_heap_idle_bytes Number of heap bytes waiting to be used go_memstats_heap_inuse_bytes Number of heap bytes that are in use go_memstats_heap_objects Number of allocated objects go_memstats_heap_released_bytes Number of heap bytes released to OS go_memstats_heap_sys_bytes Number of heap bytes obtained from system go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection go_memstats_lookups_total Total number of pointer lookups go_memstats_mallocs_total Total number of mallocs go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place go_memstats_other_sys_bytes Number of bytes used for other system allocations go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator go_memstats_sys_bytes Number of bytes obtained from system go_threads Number of OS threads created promhttp_metric_handler_requests_in_flight Current number of scrapes being served promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code ","description":" Metrics This service provides some Prometheus metrics through the debug endpoint, you can optionally secure the metrics endpoint by some random token, which has to be configured either through the flag --debug-token or the environment variable OCIS_DEBUG_TOKEN mentioned above. By default, the metrics endpoint is bound to http://0.0.0.0:8001/metrics.\ngo_gc_duration_seconds A summary of the GC invocation durations go_gc_duration_seconds_sum A summary of the GC invocation durations go_gc_duration_seconds_count A summary of the GC invocation durations go_goroutines Number of goroutines that currently exist go_info Information about the Go environment go_memstats_alloc_bytes Number of bytes allocated and still in use go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table go_memstats_frees_total Total number of frees go_memstats_gc_cpu_fraction The fraction of this program\u0026rsquo;s available CPU time used by the GC since the program started go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use go_memstats_heap_idle_bytes Number of heap bytes waiting to be used go_memstats_heap_inuse_bytes Number of heap bytes that are in use go_memstats_heap_objects Number of allocated objects go_memstats_heap_released_bytes Number of heap bytes released to OS go_memstats_heap_sys_bytes Number of heap bytes obtained from system go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection go_memstats_lookups_total Total number of pointer lookups go_memstats_mallocs_total Total number of mallocs go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place go_memstats_other_sys_bytes Number of bytes used for other system allocations go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator go_memstats_sys_bytes Number of bytes obtained from system go_threads Number of OS threads created promhttp_metric_handler_requests_in_flight Current number of scrapes being served promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code "},{"id":214,"href":"/ocis/flow-docs/request-flow/","title":"Request Flow","parent":"Flow documentation","content":" Request Flow The following sequence diagram describes the general request flow. It shows where account provisioning and token minting are happening:\nsequenceDiagram %% we have comments!! \\o/ participant user as User participant client as Client participant proxy as ocis-proxy participant idp as IdP participant accounts as ocis-accounts participant ldap as corporate LDAP server user-\u003e\u003e+client: What is the content of my home? client-\u003e\u003e+proxy: PROPFIND Bearer auth using oidc auth token Note over client,proxy: What is in a bearer token? The spec recommends opaque tokens. Treat it as random byte noise. Note over client,proxy: the proxy MUST authenticate users using ocis-accounts because it needs to decide where to send the request %% Mention introspection endpoint for opaque tokens %% idp uses jwt, so we can save a request %% either way the token can be used to look up the sub and iss of the user %% or is token check enough? proxy-\u003e\u003e+idp: GET /userinfo alt userinfo succeeds idp--\u003e\u003eproxy: 200 OK Note over proxy,accounts: Content-Type: application/json{\"sub\": \"248289761001\",\"name\": \"Jane Doe\",\"given_name\": \"Jane\",\"family_name\": \"Doe\",\"preferred_username\": \"j.doe\",\"email\": \"janedoe@example.com\",\"picture\": \"http://example.com/janedoe/me.jpg\"} %% see: https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse else userinfo fails idp--\u003e\u003e-proxy: 401 Unauthorized Note over proxy,accounts: WWW-Authenticate: error=\"invalid_token\",error_description=\"The Access Token expired\" proxy--\u003e\u003eclient: 401 Unauthorized or 302 Found with redirect to idp Note over client: start at login flow or refresh the token end proxy-\u003e\u003e+accounts: TODO API call to exchange sub@iss with account UUID Note over proxy,accounts: does not autoprovision users. They are explicitly provisioned later. alt account exists or has been migrated accounts--\u003e\u003eproxy: existing account UUID else account does not exist opt oc10 endpoint is configured Note over proxy,oc10: Check if user exists in oc10 proxy-\u003e\u003e+oc10: GET /apps/graphapi/v1.0/users/\u0026lt;uuid\u0026gt; opt user exists in oc10 oc10--\u003e\u003e-proxy: 200 %% TODO auth using internal token proxy-\u003e\u003e+oc10: PROPFIND Note over proxy,oc10: forward existing bearer auth oc10--\u003e\u003e-proxy: Multistatus response proxy--\u003e\u003eclient: Multistatus response client--\u003e\u003euser: List of Files X, Y, Z ... end end Note over proxy,accounts: provision a new account including displayname, email and sub@iss TODO only if the user is allowed to login, based on group membership in the ldap server proxy-\u003e\u003eproxy: generate new uuid proxy-\u003e\u003e+accounts: TODO create account with new generated uuid accounts--\u003e\u003e-proxy: OK / error else account has been disabled accounts--\u003e\u003e-proxy: account is disabled proxy--\u003e\u003eclient: 401 Unauthorized or 302 Found with redirect to idp Note over client: start at login flow or refresh the token end proxy-\u003e\u003eproxy: store uuid in context %% what if oc10 does not support a certain request / API proxy-\u003e\u003eproxy: mint an internal jwt that includes the UUID and username using revas `x-access-token` header proxy-\u003e\u003e+reva: PROPFIND Token auth using internal JWT reva--\u003e\u003e-proxy: Multistatus response proxy--\u003e\u003e-client: Multistatus response client--\u003e\u003e-user: List of Files X, Y, Z ... ","description":"Request Flow The following sequence diagram describes the general request flow. It shows where account provisioning and token minting are happening: sequenceDiagram %% we have comments!! \\o/ participant user as User participant client as Client participant proxy as ocis-proxy participant idp as IdP participant accounts as ocis-accounts participant ldap as corporate LDAP server user-\u003e\u003e+client: What is the content of my home? client-\u003e\u003e+proxy: PROPFIND Bearer auth using oidc auth token Note over client,proxy: What is in a bearer token?"},{"id":215,"href":"/ocis/flow-docs/public-upload-flow/","title":"Public upload Flow","parent":"Flow documentation","content":" Public Upload flow The following diagram describes the flow of requests:\n","description":"Public Upload flow The following diagram describes the flow of requests:"},{"id":216,"href":"/apis/grpc_apis/ocis_messages_eventhistory_v0/","title":"ocis.messages.eventhistory.v0","parent":"gRPC","content":" ocis/messages/eventhistory/v0/eventhistory.proto Event Scalar Value Types ocis/messages/eventhistory/v0/eventhistory.proto Event Field Type Label Description type string REQUIRED. id string REQUIRED. event bytes REQUIRED Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/messages/eventhistory/v0/eventhistory.proto Event Scalar Value Types ocis/messages/eventhistory/v0/eventhistory.proto Event Field Type Label Description type string REQUIRED. id string REQUIRED. event bytes REQUIRED Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead."},{"id":217,"href":"/apis/grpc_apis/ocis_messages_policies_v0/","title":"ocis.messages.policies.v0","parent":"gRPC","content":" ocis/messages/policies/v0/policies.proto Environment Request Resource Resource.ID User User.ID Stage Scalar Value Types ocis/messages/policies/v0/policies.proto Environment Field Type Label Description stage Stage user User request Request resource Resource Request Field Type Label Description method string path string Resource Field Type Label Description id Resource.ID name string size uint64 url string Resource.ID Field Type Label Description storage_id string opaque_id string space_id string User Field Type Label Description id User.ID username string mail string display_name string groups string repeated User.ID Field Type Label Description opaque_id string Stage Name Number Description STAGE_PP 0 STAGE_HTTP 1 Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/messages/policies/v0/policies.proto Environment Request Resource Resource.ID User User.ID Stage Scalar Value Types ocis/messages/policies/v0/policies.proto Environment Field Type Label Description stage Stage user User request Request resource Resource Request Field Type Label Description method string path string Resource Field Type Label Description id Resource.ID name string size uint64 url string Resource.ID Field Type Label Description storage_id string opaque_id string space_id string User Field Type Label Description id User.ID username string mail string display_name string groups string repeated User."},{"id":218,"href":"/apis/grpc_apis/ocis_messages_search_v0/","title":"ocis.messages.search.v0","parent":"gRPC","content":" ocis/messages/search/v0/search.proto Audio Entity GeoCoordinates Image Match Photo Reference ResourceID Scalar Value Types ocis/messages/search/v0/search.proto Audio Field Type Label Description album string optional albumArtist string optional artist string optional bitrate int64 optional composers string optional copyright string optional disc int32 optional discCount int32 optional duration int64 optional genre string optional hasDrm bool optional isVariableBitrate bool optional title string optional track int32 optional trackCount int32 optional year int32 optional Entity Field Type Label Description ref Reference id ResourceID name string etag string size uint64 last_modified_time google.protobuf.Timestamp mime_type string permissions string type uint64 deleted bool shareRootName string parent_id ResourceID tags string repeated highlights string audio Audio location GeoCoordinates remote_item_id ResourceID image Image photo Photo GeoCoordinates Field Type Label Description altitude double optional latitude double optional longitude double optional Image Field Type Label Description width int32 optional height int32 optional Match Field Type Label Description entity Entity the matched entity score float the match score Photo Field Type Label Description cameraMake string optional cameraModel string optional exposureDenominator float optional exposureNumerator float optional fNumber float optional focalLength float optional iso int32 optional orientation int32 optional takenDateTime google.protobuf.Timestamp optional Reference Field Type Label Description resource_id ResourceID path string ResourceID Field Type Label Description storage_id string opaque_id string space_id string Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/messages/search/v0/search.proto Audio Entity GeoCoordinates Image Match Photo Reference ResourceID Scalar Value Types ocis/messages/search/v0/search.proto Audio Field Type Label Description album string optional albumArtist string optional artist string optional bitrate int64 optional composers string optional copyright string optional disc int32 optional discCount int32 optional duration int64 optional genre string optional hasDrm bool optional isVariableBitrate bool optional title string optional track int32 optional trackCount int32 optional year int32 optional Entity Field Type Label Description ref Reference id ResourceID name string etag string size uint64 last_modified_time google."},{"id":219,"href":"/apis/grpc_apis/ocis_messages_settings_v0/","title":"ocis.messages.settings.v0","parent":"gRPC","content":" ocis/messages/settings/v0/settings.proto Bool Bundle Identifier Int ListOption ListOptionValue ListValue MultiChoiceList Permission Resource Setting SingleChoiceList String UserRoleAssignment UserRoleAssignmentFilter Value ValueWithIdentifier Bundle.Type Permission.Constraint Permission.Operation Resource.Type UserRoleAssignmentFilter.Type Scalar Value Types ocis/messages/settings/v0/settings.proto Bool Field Type Label Description default bool @gotags: yaml:\u0026ldquo;default\u0026rdquo; label string @gotags: yaml:\u0026ldquo;label\u0026rdquo; Bundle Field Type Label Description id string @gotags: yaml:\u0026ldquo;id\u0026rdquo; name string @gotags: yaml:\u0026ldquo;name\u0026rdquo; type Bundle.Type @gotags: yaml:\u0026ldquo;type\u0026rdquo; extension string @gotags: yaml:\u0026ldquo;extension\u0026rdquo; display_name string @gotags: yaml:\u0026ldquo;display_name\u0026rdquo; settings Setting repeated @gotags: yaml:\u0026ldquo;settings\u0026rdquo; resource Resource @gotags: yaml:\u0026ldquo;resource\u0026rdquo; Identifier Field Type Label Description extension string bundle string setting string Int Field Type Label Description default int64 @gotags: yaml:\u0026ldquo;default\u0026rdquo; min int64 @gotags: yaml:\u0026ldquo;min\u0026rdquo; max int64 @gotags: yaml:\u0026ldquo;max\u0026rdquo; step int64 @gotags: yaml:\u0026ldquo;step\u0026rdquo; placeholder string @gotags: yaml:\u0026ldquo;placeholder\u0026rdquo; ListOption Field Type Label Description value ListOptionValue @gotags: yaml:\u0026ldquo;value\u0026rdquo; default bool @gotags: yaml:\u0026ldquo;default\u0026rdquo; display_value string @gotags: yaml:\u0026ldquo;display_value\u0026rdquo; ListOptionValue Field Type Label Description string_value string @gotags: yaml:\u0026ldquo;string_value\u0026rdquo; int_value int64 @gotags: yaml:\u0026ldquo;int_value\u0026rdquo; ListValue Field Type Label Description values ListOptionValue repeated @gotags: yaml:\u0026ldquo;values\u0026rdquo; MultiChoiceList Field Type Label Description options ListOption repeated @gotags: yaml:\u0026ldquo;options\u0026rdquo; Permission Field Type Label Description operation Permission.Operation @gotags: yaml:\u0026ldquo;operation\u0026rdquo; constraint Permission.Constraint @gotags: yaml:\u0026ldquo;constraint\u0026rdquo; Resource Field Type Label Description type Resource.Type id string Setting Field Type Label Description id string @gotags: yaml:\u0026ldquo;id\u0026rdquo; name string @gotags: yaml:\u0026ldquo;name\u0026rdquo; display_name string @gotags: yaml:\u0026ldquo;display_name\u0026rdquo; description string @gotags: yaml:\u0026ldquo;description\u0026rdquo; int_value Int @gotags: yaml:\u0026ldquo;int_value\u0026rdquo; string_value String @gotags: yaml:\u0026ldquo;string_value\u0026rdquo; bool_value Bool @gotags: yaml:\u0026ldquo;bool_value\u0026rdquo; single_choice_value SingleChoiceList @gotags: yaml:\u0026ldquo;single_choice_value\u0026rdquo; multi_choice_value MultiChoiceList @gotags: yaml:\u0026ldquo;multi_choice_value\u0026rdquo; permission_value Permission @gotags: yaml:\u0026ldquo;permission_value\u0026rdquo; resource Resource @gotags: yaml:\u0026ldquo;resource\u0026rdquo; SingleChoiceList Field Type Label Description options ListOption repeated @gotags: yaml:\u0026ldquo;options\u0026rdquo; String Field Type Label Description default string @gotags: yaml:\u0026ldquo;default\u0026rdquo; required bool @gotags: yaml:\u0026ldquo;required\u0026rdquo; min_length int32 @gotags: yaml:\u0026ldquo;min_length\u0026rdquo; max_length int32 @gotags: yaml:\u0026ldquo;max_length\u0026rdquo; placeholder string @gotags: yaml:\u0026ldquo;placeholder\u0026rdquo; UserRoleAssignment Field Type Label Description id string id is generated upon saving the assignment account_uuid string role_id string the role_id is a bundle_id internally UserRoleAssignmentFilter Field Type Label Description type UserRoleAssignmentFilter.Type account_uuid string role_id string Value Field Type Label Description id string id is the id of the Value. It is generated on saving it.\n@gotags: yaml:\u0026ldquo;id\u0026rdquo; bundle_id string @gotags: yaml:\u0026ldquo;bundle_id\u0026rdquo; setting_id string setting_id is the id of the setting from within its bundle.\n@gotags: yaml:\u0026ldquo;setting_id\u0026rdquo; account_uuid string @gotags: yaml:\u0026ldquo;account_uuid\u0026rdquo; resource Resource @gotags: yaml:\u0026ldquo;resource\u0026rdquo; bool_value bool @gotags: yaml:\u0026ldquo;bool_value\u0026rdquo; int_value int64 @gotags: yaml:\u0026ldquo;int_value\u0026rdquo; string_value string @gotags: yaml:\u0026ldquo;string_value\u0026rdquo; list_value ListValue @gotags: yaml:\u0026ldquo;list_value\u0026rdquo; ValueWithIdentifier Field Type Label Description identifier Identifier value Value Bundle.Type Name Number Description TYPE_UNKNOWN 0 TYPE_DEFAULT 1 TYPE_ROLE 2 Permission.Constraint Name Number Description CONSTRAINT_UNKNOWN 0 CONSTRAINT_OWN 1 CONSTRAINT_SHARED 2 CONSTRAINT_ALL 3 Permission.Operation Name Number Description OPERATION_UNKNOWN 0 OPERATION_CREATE 1 OPERATION_READ 2 OPERATION_UPDATE 3 OPERATION_DELETE 4 OPERATION_WRITE 5 WRITE is a combination of CREATE and UPDATE OPERATION_READWRITE 6 READWRITE is a combination of READ and WRITE Resource.Type Name Number Description TYPE_UNKNOWN 0 TYPE_SYSTEM 1 TYPE_FILE 2 TYPE_SHARE 3 TYPE_SETTING 4 TYPE_BUNDLE 5 TYPE_USER 6 TYPE_GROUP 7 UserRoleAssignmentFilter.Type Name Number Description TYPE_UNKNOWN 0 TYPE_ACCOUNT 1 TYPE_ROLE 2 Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/messages/settings/v0/settings.proto Bool Bundle Identifier Int ListOption ListOptionValue ListValue MultiChoiceList Permission Resource Setting SingleChoiceList String UserRoleAssignment UserRoleAssignmentFilter Value ValueWithIdentifier Bundle.Type Permission.Constraint Permission.Operation Resource.Type UserRoleAssignmentFilter.Type Scalar Value Types ocis/messages/settings/v0/settings.proto Bool Field Type Label Description default bool @gotags: yaml:\u0026ldquo;default\u0026rdquo; label string @gotags: yaml:\u0026ldquo;label\u0026rdquo; Bundle Field Type Label Description id string @gotags: yaml:\u0026ldquo;id\u0026rdquo; name string @gotags: yaml:\u0026ldquo;name\u0026rdquo; type Bundle.Type @gotags: yaml:\u0026ldquo;type\u0026rdquo; extension string @gotags: yaml:\u0026ldquo;extension\u0026rdquo; display_name string @gotags: yaml:\u0026ldquo;display_name\u0026rdquo; settings Setting repeated @gotags: yaml:\u0026ldquo;settings\u0026rdquo; resource Resource @gotags: yaml:\u0026ldquo;resource\u0026rdquo; Identifier Field Type Label Description extension string bundle string setting string Int Field Type Label Description default int64 @gotags: yaml:\u0026ldquo;default\u0026rdquo; min int64 @gotags: yaml:\u0026ldquo;min\u0026rdquo; max int64 @gotags: yaml:\u0026ldquo;max\u0026rdquo; step int64 @gotags: yaml:\u0026ldquo;step\u0026rdquo; placeholder string @gotags: yaml:\u0026ldquo;placeholder\u0026rdquo; ListOption Field Type Label Description value ListOptionValue @gotags: yaml:\u0026ldquo;value\u0026rdquo; default bool @gotags: yaml:\u0026ldquo;default\u0026rdquo; display_value string @gotags: yaml:\u0026ldquo;display_value\u0026rdquo; ListOptionValue Field Type Label Description string_value string @gotags: yaml:\u0026ldquo;string_value\u0026rdquo; int_value int64 @gotags: yaml:\u0026ldquo;int_value\u0026rdquo; ListValue Field Type Label Description values ListOptionValue repeated @gotags: yaml:\u0026ldquo;values\u0026rdquo; MultiChoiceList Field Type Label Description options ListOption repeated @gotags: yaml:\u0026ldquo;options\u0026rdquo; Permission Field Type Label Description operation Permission."},{"id":220,"href":"/apis/grpc_apis/ocis_messages_store_v0/","title":"ocis.messages.store.v0","parent":"gRPC","content":" ocis/messages/store/v0/store.proto DeleteOptions Field ListOptions ReadOptions ReadOptions.WhereEntry Record Record.MetadataEntry WriteOptions Scalar Value Types ocis/messages/store/v0/store.proto DeleteOptions Field Type Label Description database string table string Field Field Type Label Description type string type of value e.g string, int, int64, bool, float64 value string the actual value ListOptions Field Type Label Description database string table string prefix string suffix string limit uint64 offset uint64 ReadOptions Field Type Label Description database string table string prefix bool suffix bool limit uint64 offset uint64 where ReadOptions.WhereEntry repeated ReadOptions.WhereEntry Field Type Label Description key string value Field Record Field Type Label Description key string key of the recorda value bytes value in the record expiry int64 time.Duration (signed int64 nanoseconds) metadata Record.MetadataEntry repeated the associated metadata Record.MetadataEntry Field Type Label Description key string value Field WriteOptions Field Type Label Description database string table string expiry int64 time.Time ttl int64 time.Duration Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/messages/store/v0/store.proto DeleteOptions Field ListOptions ReadOptions ReadOptions.WhereEntry Record Record.MetadataEntry WriteOptions Scalar Value Types ocis/messages/store/v0/store.proto DeleteOptions Field Type Label Description database string table string Field Field Type Label Description type string type of value e.g string, int, int64, bool, float64 value string the actual value ListOptions Field Type Label Description database string table string prefix string suffix string limit uint64 offset uint64 ReadOptions Field Type Label Description database string table string prefix bool suffix bool limit uint64 offset uint64 where ReadOptions."},{"id":221,"href":"/apis/grpc_apis/ocis_messages_thumbnails_v0/","title":"ocis.messages.thumbnails.v0","parent":"gRPC","content":" ocis/messages/thumbnails/v0/thumbnails.proto CS3Source WebdavSource ThumbnailType Scalar Value Types ocis/messages/thumbnails/v0/thumbnails.proto CS3Source Field Type Label Description path string authorization string WebdavSource Field Type Label Description url string REQUIRED. is_public_link bool REQUIRED. webdav_authorization string OPTIONAL. reva_authorization string OPTIONAL. public_link_token string OPTIONAL. ThumbnailType The file types to which the thumbnail can be encoded to.\nName Number Description PNG 0 Represents PNG type JPG 1 Represents JPG type GIF 2 Represents GIF type Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/messages/thumbnails/v0/thumbnails.proto CS3Source WebdavSource ThumbnailType Scalar Value Types ocis/messages/thumbnails/v0/thumbnails.proto CS3Source Field Type Label Description path string authorization string WebdavSource Field Type Label Description url string REQUIRED. is_public_link bool REQUIRED. webdav_authorization string OPTIONAL. reva_authorization string OPTIONAL. public_link_token string OPTIONAL. ThumbnailType The file types to which the thumbnail can be encoded to.\nName Number Description PNG 0 Represents PNG type JPG 1 Represents JPG type GIF 2 Represents GIF type Scalar Value Types ."},{"id":222,"href":"/apis/grpc_apis/ocis_services_eventhistory_v0/","title":"ocis.services.eventhistory.v0","parent":"gRPC","content":" ocis/services/eventhistory/v0/eventhistory.proto GetEventsForUserRequest GetEventsRequest GetEventsResponse EventHistoryService Scalar Value Types ocis/services/eventhistory/v0/eventhistory.proto GetEventsForUserRequest A request to retrieve events belonging to a userID\nField Type Label Description userID string the userID of the events we want to get GetEventsRequest A request to retrieve events\nField Type Label Description ids string repeated the ids of the events we want to get GetEventsResponse The service response\nField Type Label Description events ocis.messages.eventhistory.v0.Event repeated EventHistoryService A Service for storing events\nMethod Name Request Type Response Type Description GetEvents GetEventsRequest GetEventsResponse returns the specified events GetEventsForUser GetEventsForUserRequest GetEventsResponse returns all events for the specified userID Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/services/eventhistory/v0/eventhistory.proto GetEventsForUserRequest GetEventsRequest GetEventsResponse EventHistoryService Scalar Value Types ocis/services/eventhistory/v0/eventhistory.proto GetEventsForUserRequest A request to retrieve events belonging to a userID\nField Type Label Description userID string the userID of the events we want to get GetEventsRequest A request to retrieve events\nField Type Label Description ids string repeated the ids of the events we want to get GetEventsResponse The service response\nField Type Label Description events ocis.messages.eventhistory.v0.Event repeated EventHistoryService A Service for storing events"},{"id":223,"href":"/apis/grpc_apis/ocis_services_policies_v0/","title":"ocis.services.policies.v0","parent":"gRPC","content":" ocis/services/policies/v0/policies.proto EvaluateRequest EvaluateResponse policiesProvider Scalar Value Types ocis/services/policies/v0/policies.proto EvaluateRequest Field Type Label Description query string environment ocis.messages.policies.v0.Environment EvaluateResponse Field Type Label Description result bool policiesProvider Method Name Request Type Response Type Description Evaluate EvaluateRequest EvaluateResponse Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/services/policies/v0/policies.proto EvaluateRequest EvaluateResponse policiesProvider Scalar Value Types ocis/services/policies/v0/policies.proto EvaluateRequest Field Type Label Description query string environment ocis.messages.policies.v0.Environment EvaluateResponse Field Type Label Description result bool policiesProvider Method Name Request Type Response Type Description Evaluate EvaluateRequest EvaluateResponse Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead."},{"id":224,"href":"/apis/grpc_apis/ocis_services_search_v0/","title":"ocis.services.search.v0","parent":"gRPC","content":" ocis/services/search/v0/search.proto IndexSpaceRequest IndexSpaceResponse SearchIndexRequest SearchIndexResponse SearchRequest SearchResponse IndexProvider SearchProvider Scalar Value Types ocis/services/search/v0/search.proto IndexSpaceRequest Field Type Label Description space_id string user_id string IndexSpaceResponse SearchIndexRequest Field Type Label Description page_size int32 Optional. The maximum number of entries to return in the response page_token string Optional. A pagination token returned from a previous call to Get\nthat indicates from where search should continue query string ref ocis.messages.search.v0.Reference SearchIndexResponse Field Type Label Description matches ocis.messages.search.v0.Match repeated next_page_token string Token to retrieve the next page of results, or empty if there are no\nmore results in the list total_matches int32 SearchRequest Field Type Label Description page_size int32 Optional. The maximum number of entries to return in the response page_token string Optional. A pagination token returned from a previous call to Get\nthat indicates from where search should continue query string ref ocis.messages.search.v0.Reference SearchResponse Field Type Label Description matches ocis.messages.search.v0.Match repeated next_page_token string Token to retrieve the next page of results, or empty if there are no\nmore results in the list total_matches int32 IndexProvider Method Name Request Type Response Type Description Search SearchIndexRequest SearchIndexResponse SearchProvider Method Name Request Type Response Type Description Search SearchRequest SearchResponse IndexSpace IndexSpaceRequest IndexSpaceResponse Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/services/search/v0/search.proto IndexSpaceRequest IndexSpaceResponse SearchIndexRequest SearchIndexResponse SearchRequest SearchResponse IndexProvider SearchProvider Scalar Value Types ocis/services/search/v0/search.proto IndexSpaceRequest Field Type Label Description space_id string user_id string IndexSpaceResponse SearchIndexRequest Field Type Label Description page_size int32 Optional. The maximum number of entries to return in the response page_token string Optional. A pagination token returned from a previous call to Get\nthat indicates from where search should continue query string ref ocis.messages.search.v0.Reference SearchIndexResponse Field Type Label Description matches ocis."},{"id":225,"href":"/apis/grpc_apis/ocis_services_settings_v0/","title":"ocis.services.settings.v0","parent":"gRPC","content":" ocis/services/settings/v0/settings.proto AddSettingToBundleRequest AddSettingToBundleResponse AssignRoleToUserRequest AssignRoleToUserResponse GetBundleRequest GetBundleResponse GetPermissionByIDRequest GetPermissionByIDResponse GetValueByUniqueIdentifiersRequest GetValueRequest GetValueResponse ListBundlesRequest ListBundlesResponse ListPermissionsByResourceRequest ListPermissionsByResourceResponse ListPermissionsRequest ListPermissionsResponse ListRoleAssignmentsFilteredRequest ListRoleAssignmentsRequest ListRoleAssignmentsResponse ListValuesRequest ListValuesResponse RemoveRoleFromUserRequest RemoveSettingFromBundleRequest SaveBundleRequest requests and responses for settings bundles SaveBundleResponse SaveValueRequest SaveValueResponse BundleService PermissionService RoleService ValueService Scalar Value Types ocis/services/settings/v0/settings.proto AddSettingToBundleRequest Field Type Label Description bundle_id string setting ocis.messages.settings.v0.Setting AddSettingToBundleResponse Field Type Label Description setting ocis.messages.settings.v0.Setting AssignRoleToUserRequest Field Type Label Description account_uuid string role_id string the role_id is a bundle_id internally AssignRoleToUserResponse Field Type Label Description assignment ocis.messages.settings.v0.UserRoleAssignment GetBundleRequest Field Type Label Description bundle_id string GetBundleResponse Field Type Label Description bundle ocis.messages.settings.v0.Bundle GetPermissionByIDRequest Field Type Label Description permission_id string GetPermissionByIDResponse Field Type Label Description permission ocis.messages.settings.v0.Permission GetValueByUniqueIdentifiersRequest Field Type Label Description account_uuid string setting_id string GetValueRequest Field Type Label Description id string GetValueResponse Field Type Label Description value ocis.messages.settings.v0.ValueWithIdentifier ListBundlesRequest Field Type Label Description bundle_ids string repeated ListBundlesResponse Field Type Label Description bundles ocis.messages.settings.v0.Bundle repeated ListPermissionsByResourceRequest Field Type Label Description resource ocis.messages.settings.v0.Resource ListPermissionsByResourceResponse Field Type Label Description permissions ocis.messages.settings.v0.Permission repeated ListPermissionsRequest Field Type Label Description account_uuid string ListPermissionsResponse Field Type Label Description permissions string repeated ListRoleAssignmentsFilteredRequest Field Type Label Description filters ocis.messages.settings.v0.UserRoleAssignmentFilter repeated ListRoleAssignmentsRequest Field Type Label Description account_uuid string ListRoleAssignmentsResponse Field Type Label Description assignments ocis.messages.settings.v0.UserRoleAssignment repeated ListValuesRequest Field Type Label Description bundle_id string account_uuid string ListValuesResponse Field Type Label Description values ocis.messages.settings.v0.ValueWithIdentifier repeated RemoveRoleFromUserRequest Field Type Label Description id string RemoveSettingFromBundleRequest Field Type Label Description bundle_id string setting_id string SaveBundleRequest requests and responses for settings bundles Field Type Label Description bundle ocis.messages.settings.v0.Bundle SaveBundleResponse Field Type Label Description bundle ocis.messages.settings.v0.Bundle SaveValueRequest Field Type Label Description value ocis.messages.settings.v0.Value SaveValueResponse Field Type Label Description value ocis.messages.settings.v0.ValueWithIdentifier BundleService Method Name Request Type Response Type Description SaveBundle SaveBundleRequest SaveBundleResponse GetBundle GetBundleRequest GetBundleResponse ListBundles ListBundlesRequest ListBundlesResponse AddSettingToBundle AddSettingToBundleRequest AddSettingToBundleResponse RemoveSettingFromBundle RemoveSettingFromBundleRequest .google.protobuf.Empty PermissionService Method Name Request Type Response Type Description ListPermissions ListPermissionsRequest ListPermissionsResponse ListPermissionsByResource ListPermissionsByResourceRequest ListPermissionsByResourceResponse GetPermissionByID GetPermissionByIDRequest GetPermissionByIDResponse RoleService Method Name Request Type Response Type Description ListRoles ListBundlesRequest ListBundlesResponse ListRoleAssignments ListRoleAssignmentsRequest ListRoleAssignmentsResponse ListRoleAssignmentsFiltered ListRoleAssignmentsFilteredRequest ListRoleAssignmentsResponse AssignRoleToUser AssignRoleToUserRequest AssignRoleToUserResponse RemoveRoleFromUser RemoveRoleFromUserRequest .google.protobuf.Empty ValueService Method Name Request Type Response Type Description SaveValue SaveValueRequest SaveValueResponse GetValue GetValueRequest GetValueResponse ListValues ListValuesRequest ListValuesResponse GetValueByUniqueIdentifiers GetValueByUniqueIdentifiersRequest GetValueResponse Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/services/settings/v0/settings.proto AddSettingToBundleRequest AddSettingToBundleResponse AssignRoleToUserRequest AssignRoleToUserResponse GetBundleRequest GetBundleResponse GetPermissionByIDRequest GetPermissionByIDResponse GetValueByUniqueIdentifiersRequest GetValueRequest GetValueResponse ListBundlesRequest ListBundlesResponse ListPermissionsByResourceRequest ListPermissionsByResourceResponse ListPermissionsRequest ListPermissionsResponse ListRoleAssignmentsFilteredRequest ListRoleAssignmentsRequest ListRoleAssignmentsResponse ListValuesRequest ListValuesResponse RemoveRoleFromUserRequest RemoveSettingFromBundleRequest SaveBundleRequest requests and responses for settings bundles SaveBundleResponse SaveValueRequest SaveValueResponse BundleService PermissionService RoleService ValueService Scalar Value Types ocis/services/settings/v0/settings.proto AddSettingToBundleRequest Field Type Label Description bundle_id string setting ocis.messages.settings.v0.Setting AddSettingToBundleResponse Field Type Label Description setting ocis.messages.settings.v0.Setting AssignRoleToUserRequest Field Type Label Description account_uuid string role_id string the role_id is a bundle_id internally AssignRoleToUserResponse Field Type Label Description assignment ocis."},{"id":226,"href":"/apis/grpc_apis/ocis_services_store_v0/","title":"ocis.services.store.v0","parent":"gRPC","content":" ocis/services/store/v0/store.proto DatabasesRequest DatabasesResponse DeleteRequest DeleteResponse ListRequest ListResponse ReadRequest ReadResponse TablesRequest TablesResponse WriteRequest WriteResponse Store Scalar Value Types ocis/services/store/v0/store.proto DatabasesRequest DatabasesResponse Field Type Label Description databases string repeated DeleteRequest Field Type Label Description key string options ocis.messages.store.v0.DeleteOptions DeleteResponse ListRequest Field Type Label Description options ocis.messages.store.v0.ListOptions ListResponse Field Type Label Description keys string repeated ReadRequest Field Type Label Description key string options ocis.messages.store.v0.ReadOptions ReadResponse Field Type Label Description records ocis.messages.store.v0.Record repeated TablesRequest Field Type Label Description database string TablesResponse Field Type Label Description tables string repeated WriteRequest Field Type Label Description record ocis.messages.store.v0.Record options ocis.messages.store.v0.WriteOptions WriteResponse Store Method Name Request Type Response Type Description Read ReadRequest ReadResponse Write WriteRequest WriteResponse Delete DeleteRequest DeleteResponse List ListRequest ListResponse stream Databases DatabasesRequest DatabasesResponse Tables TablesRequest TablesResponse Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/services/store/v0/store.proto DatabasesRequest DatabasesResponse DeleteRequest DeleteResponse ListRequest ListResponse ReadRequest ReadResponse TablesRequest TablesResponse WriteRequest WriteResponse Store Scalar Value Types ocis/services/store/v0/store.proto DatabasesRequest DatabasesResponse Field Type Label Description databases string repeated DeleteRequest Field Type Label Description key string options ocis.messages.store.v0.DeleteOptions DeleteResponse ListRequest Field Type Label Description options ocis.messages.store.v0.ListOptions ListResponse Field Type Label Description keys string repeated ReadRequest Field Type Label Description key string options ocis.messages.store.v0.ReadOptions ReadResponse Field Type Label Description records ocis.messages.store.v0.Record repeated TablesRequest Field Type Label Description database string TablesResponse Field Type Label Description tables string repeated WriteRequest Field Type Label Description record ocis."},{"id":227,"href":"/apis/grpc_apis/ocis_services_thumbnails_v0/","title":"ocis.services.thumbnails.v0","parent":"gRPC","content":" ocis/services/thumbnails/v0/thumbnails.proto GetThumbnailRequest GetThumbnailResponse ThumbnailService Scalar Value Types ocis/services/thumbnails/v0/thumbnails.proto GetThumbnailRequest A request to retrieve a thumbnail\nField Type Label Description filepath string The path to the source image thumbnail_type ocis.messages.thumbnails.v0.ThumbnailType The type to which the thumbnail should get encoded to. width int32 The width of the thumbnail height int32 The height of the thumbnail processor string Indicates which image processor to use webdav_source ocis.messages.thumbnails.v0.WebdavSource cs3_source ocis.messages.thumbnails.v0.CS3Source GetThumbnailResponse The service response\nField Type Label Description data_endpoint string The endpoint where the thumbnail can be downloaded. transfer_token string The transfer token to be able to download the thumbnail. mimetype string The mimetype of the thumbnail ThumbnailService A Service for handling thumbnail generation\nMethod Name Request Type Response Type Description GetThumbnail GetThumbnailRequest GetThumbnailResponse Generates the thumbnail and returns it. Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"ocis/services/thumbnails/v0/thumbnails.proto GetThumbnailRequest GetThumbnailResponse ThumbnailService Scalar Value Types ocis/services/thumbnails/v0/thumbnails.proto GetThumbnailRequest A request to retrieve a thumbnail\nField Type Label Description filepath string The path to the source image thumbnail_type ocis.messages.thumbnails.v0.ThumbnailType The type to which the thumbnail should get encoded to. width int32 The width of the thumbnail height int32 The height of the thumbnail processor string Indicates which image processor to use webdav_source ocis.messages.thumbnails.v0.WebdavSource cs3_source ocis.messages.thumbnails.v0.CS3Source GetThumbnailResponse The service response"},{"id":228,"href":"/clients/web/extension-system/extension-types/","title":"Extension Types","parent":"Extension system","content":"This section is a guide about the different predefined extension types of ownCloud Web. Please refer to the respective subpages to learn more about the individual extension types.\n","description":"This section is a guide about the different predefined extension types of ownCloud Web. Please refer to the respective subpages to learn more about the individual extension types."},{"id":229,"href":"/clients/web/development/","title":"Development","parent":"ownCloud Web","content":" This section is a guide about the development of ownCloud Web core, apps and extensions. This includes tooling, conventions and the repo structure.\nIt is of interest for you if you want to contribute to ownCloud Web or develop your own apps and extensions.\n","description":"This section is a guide about the development of ownCloud Web core, apps and extensions. This includes tooling, conventions and the repo structure.\nIt is of interest for you if you want to contribute to ownCloud Web or develop your own apps and extensions."},{"id":230,"href":"/services/settings/bundles/","title":"Settings Bundles","parent":"Settings","content":"A Settings Bundle is a collection of settings, uniquely identified by the key of the extension registering the bundle and the key of the bundle itself. Its purpose is to let oCIS services define settings and make them available to users. They are dynamically rendered into forms, available in the frontend.\nAs of now we support five different types of settings:\nboolean integer string single choice list of integers or strings multiple choice list of integers or strings Each Setting is uniquely identified by a key within the bundle. Some attributes depend on the chosen type of setting. Through the information provided with the attributes of the setting, the settings frontend dynamically renders form elements, allowing users to change their settings individually.\nExample { \u0026#34;identifier\u0026#34;: { \u0026#34;extension\u0026#34;: \u0026#34;ocis-accounts\u0026#34;, \u0026#34;bundleKey\u0026#34;: \u0026#34;profile\u0026#34; }, \u0026#34;displayName\u0026#34;: \u0026#34;Profile\u0026#34;, \u0026#34;settings\u0026#34;: [ { \u0026#34;settingKey\u0026#34;: \u0026#34;lastname\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Lastname\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Input for lastname\u0026#34;, \u0026#34;stringValue\u0026#34;: { \u0026#34;placeholder\u0026#34;: \u0026#34;Set lastname\u0026#34; } }, { \u0026#34;settingKey\u0026#34;: \u0026#34;age\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Age\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Input for age\u0026#34;, \u0026#34;intValue\u0026#34;: { \u0026#34;min\u0026#34;: \u0026#34;16\u0026#34;, \u0026#34;max\u0026#34;: \u0026#34;200\u0026#34;, \u0026#34;step\u0026#34;: \u0026#34;2\u0026#34;, \u0026#34;placeholder\u0026#34;: \u0026#34;Set age\u0026#34; } }, { \u0026#34;settingKey\u0026#34;: \u0026#34;timezone\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Timezone\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;User timezone\u0026#34;, \u0026#34;singleChoiceValue\u0026#34;: { \u0026#34;options\u0026#34;: [ { \u0026#34;stringValue\u0026#34;: \u0026#34;Europe/Berlin\u0026#34;, \u0026#34;displayValue\u0026#34;: \u0026#34;Europe/Berlin\u0026#34; }, { \u0026#34;stringValue\u0026#34;: \u0026#34;Asia/Kathmandu\u0026#34;, \u0026#34;displayValue\u0026#34;: \u0026#34;Asia/Kathmandu\u0026#34; } ] } } ] } ","description":"A Settings Bundle is a collection of settings, uniquely identified by the key of the extension registering the bundle and the key of the bundle itself. Its purpose is to let oCIS services define settings and make them available to users. They are dynamically rendered into forms, available in the frontend.\nAs of now we support five different types of settings:\nboolean integer string single choice list of integers or strings multiple choice list of integers or strings Each Setting is uniquely identified by a key within the bundle."},{"id":231,"href":"/clients/web/backend-ocis/","title":"Setup with oCIS","parent":"ownCloud Web","content":" Setting up Web Running Web Setting up oCIS Start oCIS Running tests Setting up Web Clone the repository Initally install all dependencies by running pnpm install Copy ./config/config.json.sample-ocis to ./config/config.json and adjust values if required Running Web Start bundling web with a watcher by running pnpm build:w Setting up oCIS Setup oCIS by following the setup instructions Start oCIS with local links to your bundled web frontend and config by running WEB_ASSET_CORE_PATH=../../web/dist WEB_UI_CONFIG_FILE=../../web/dist/config.json OCIS_INSECURE=true IDM_CREATE_DEMO_USERS=true ./bin/ocis server (and make sure to adjust paths as necessary) Start oCIS open https://localhost:9200 and accept the certificate when signing in, use one of the available demo users whenever code changes are made, you need to manually reload the browser page (no hot reload) Running tests For testing, please refer to the testing docs\n","description":"Setting up Web Running Web Setting up oCIS Start oCIS Running tests Setting up Web Clone the repository Initally install all dependencies by running pnpm install Copy ./config/config.json.sample-ocis to ./config/config.json and adjust values if required Running Web Start bundling web with a watcher by running pnpm build:w Setting up oCIS Setup oCIS by following the setup instructions Start oCIS with local links to your bundled web frontend and config by running WEB_ASSET_CORE_PATH=."},{"id":232,"href":"/extensions/ocis_hello/grpc/","title":"GRPC API","parent":"Hello (example extension)","content":" hello.proto GreetRequest GreetResponse Hello Scalar Value Types hello.proto GreetRequest Field Type Label Description name string GreetResponse Field Type Label Description message string Hello Method Name Request Type Response Type Description Greet GreetRequest GreetResponse Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long uint32 Uses variable-length encoding. uint32 int uint64 Uses variable-length encoding. uint64 long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long sfixed32 Always four bytes. int32 int sfixed64 Always eight bytes. int64 long bool bool boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String bytes May contain any arbitrary sequence of bytes. string ByteString ","description":"hello.proto GreetRequest GreetResponse Hello Scalar Value Types hello.proto GreetRequest Field Type Label Description name string GreetResponse Field Type Label Description message string Hello Method Name Request Type Response Type Description Greet GreetRequest GreetResponse Scalar Value Types .proto Type Notes C++ Java double double double float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int int64 Uses variable-length encoding."},{"id":233,"href":"/extensions/ocis_hello/running/","title":"Running","parent":"Hello (example extension)","content":"In order to use the Hello extension we need to configure and start oCIS first. After that we can run the Hello extension itself.\nConfigure and start oCIS You can either start oCIS from a binary or build it from source.\nNo matter which way you choose, we need to create a configuration file for ownCloud Web, so that the Hello extension will be loaded in the frontend. Therefore create a file web-config.json with the following contents:\n{ \u0026#34;server\u0026#34;: \u0026#34;https://localhost:9200\u0026#34;, \u0026#34;theme\u0026#34;: \u0026#34;https://localhost:9200/themes/owncloud/theme.json\u0026#34;, \u0026#34;openIdConnect\u0026#34;: { \u0026#34;metadata_url\u0026#34;: \u0026#34;https://localhost:9200/.well-known/openid-configuration\u0026#34;, \u0026#34;authority\u0026#34;: \u0026#34;https://localhost:9200\u0026#34;, \u0026#34;client_id\u0026#34;: \u0026#34;web\u0026#34;, \u0026#34;response_type\u0026#34;: \u0026#34;code\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;openid profile email\u0026#34; }, \u0026#34;apps\u0026#34;: [ \u0026#34;files\u0026#34;, \u0026#34;preview\u0026#34;, \u0026#34;pdf-viewer\u0026#34;, \u0026#34;search\u0026#34;, \u0026#34;text-editor\u0026#34;, \u0026#34;draw-io\u0026#34;, \u0026#34;external\u0026#34;, \u0026#34;admin-settings\u0026#34; ], \u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;hello\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/hello.js\u0026#34; } ], \u0026#34;options\u0026#34;: { \u0026#34;previewFileMimeTypes\u0026#34;: [ \u0026#34;image/gif\u0026#34;, \u0026#34;image/png\u0026#34;, \u0026#34;image/jpeg\u0026#34;, \u0026#34;text/plain\u0026#34;, \u0026#34;image/tiff\u0026#34;, \u0026#34;image/bmp\u0026#34;, \u0026#34;image/x-ms-bmp\u0026#34; ], \u0026#34;upload\u0026#34;: { \u0026#34;xhr\u0026#34;: { \u0026#34;timeout\u0026#34;: 60000 } }, \u0026#34;contextHelpersReadMore\u0026#34;: true } } Please note the the regististration of our Hello extension in the external_apps section. It will trigger ownCloud Web to load hello.js, the frontend bundle generated in the frontend build step.\nTo activate the config file we just created we need to set this variable with the path to it.\nexport WEB_UI_CONFIG=\u0026lt;path to web-config.json\u0026gt; The frontend bundle will be requested from the oCIS proxy and requests to our Hello extension\u0026rsquo;s API will also be passed to the oCIS proxy first. Therefore the oCIS proxy needs to be configured to forward these requests to our Hello extension. In the ocis config folder create a file called proxy.yaml with this content:\npolicies: - name: ocis routes: - endpoint: / service: com.owncloud.web.web unprotected: true - endpoint: /.well-known/webfinger service: com.owncloud.web.webfinger unprotected: true - endpoint: /.well-known/openid-configuration service: com.owncloud.web.idp unprotected: true - endpoint: /branding/logo service: com.owncloud.web.web - endpoint: /konnect/ service: com.owncloud.web.idp unprotected: true - endpoint: /signin/ service: com.owncloud.web.idp unprotected: true - endpoint: /archiver service: com.owncloud.web.frontend - endpoint: /ocs/v2.php/apps/notifications/api/v1/notifications service: com.owncloud.userlog.userlog - type: regex endpoint: /ocs/v[12].php/cloud/user/signing-key service: com.owncloud.web.ocs - type: regex endpoint: /ocs/v[12].php/config service: com.owncloud.web.frontend unprotected: true - endpoint: /ocs/ service: com.owncloud.web.frontend - type: query endpoint: /remote.php/?preview=1 service: com.owncloud.web.webdav - method: REPORT endpoint: /remote.php/dav/ service: com.owncloud.web.webdav - method: REPORT endpoint: /remote.php/webdav service: com.owncloud.web.webdav - method: REPORT endpoint: /dav/spaces service: com.owncloud.web.webdav - type: query endpoint: /dav/?preview=1 service: com.owncloud.web.webdav - type: query endpoint: /webdav/?preview=1 service: com.owncloud.web.webdav - endpoint: /remote.php/ service: com.owncloud.web.ocdav - endpoint: /dav/ service: com.owncloud.web.ocdav - endpoint: /webdav/ service: com.owncloud.web.ocdav - endpoint: /status service: com.owncloud.web.ocdav unprotected: true - endpoint: /status.php service: com.owncloud.web.ocdav unprotected: true - endpoint: /index.php/ service: com.owncloud.web.ocdav - endpoint: /apps/ service: com.owncloud.web.ocdav - endpoint: /data service: com.owncloud.web.frontend unprotected: true - endpoint: /app/list service: com.owncloud.web.frontend unprotected: true - endpoint: /app/ service: com.owncloud.web.frontend - endpoint: /graph/v1.0/invitations service: com.owncloud.graph.invitations - endpoint: /graph/ service: com.owncloud.graph.graph - endpoint: /api/v0/settings service: com.owncloud.web.settings - endpoint: /api/v0/greet backend: \u0026#34;http://localhost:9105\u0026#34; - endpoint: /hello.js backend: \u0026#34;http://localhost:9105\u0026#34; unprotected: true These routes are the default routes of the proxy plus extra routes for the hello extension. For details see the proxy documentation. In addition to all these we need to make sure the hello service can be registered to oCIS, for that set this variable.\nexport MICRO_REGISTRY=mdns And finally start the oCIS server:\nocis server Start the extension After oCIS is running, we can start the Hello extension.\nFor that just build ocis-hello binary.\ncd ocis-hello make build Then set the variables, so that the Hello extension can contact and authenticate to ocis. First we need the user id of the admin user, that id can be found in the ocis.yaml file (e.g admin_user_id: a92daa31-bddf-4dfd-9a3f-6b3289309107)\nexport HELLO_ADMIN_USER_ID=\u0026#39;\u0026lt;id of the admin user of ocis\u0026gt;\u0026#39; Second we need to set the same JWT secret as is used by ocis. If oCIS was started without any special configurations this value will be also found in the ocis.yaml file (e.g. jwt_secret: hlFNZU=r!FRduN5hVh$d32SKakf9P3j1)\nexport HELLO_JWT_SECRET=\u0026#39;\u0026lt;jwt secret\u0026gt;\u0026#39; Third the Hello extension needs to be configured to use the same registry as oCIS:\nexport MICRO_REGISTRY=mdns Finally we can run the service\n./bin/hello server ","description":"In order to use the Hello extension we need to configure and start oCIS first. After that we can run the Hello extension itself.\nConfigure and start oCIS You can either start oCIS from a binary or build it from source.\nNo matter which way you choose, we need to create a configuration file for ownCloud Web, so that the Hello extension will be loaded in the frontend. Therefore create a file web-config."},{"id":234,"href":"/extensions/ocis_hello/settings/","title":"Settings","parent":"Hello (example extension)","content":"oCIS provides an settings extension that other extensions can use to make settings accessible to users.\nIn case of the Hello extension administrator users are able to change the greeter message.\nSettings are stored and presented to the user by the oCIS settings extension. It also exposes endpoints for registering and manipulating so called settings bundles.\nThe settings defined through settings bundles can be changed by authenticated users in ownCloud Web, if they have enough permissions to edit them. As a result, your service only has to register a settings bundle and permissions for it and oCIS settings takes care of everything else. Your service can simply use the settings values that were set by users.\nIn this chapter we want to show you how to register a settings bundle, the settings permissions and how to use the respective values that were set by users. We do this by customizing the greeter phrase from our greeter service in the Hello extension.\nYou can find the source code, especially how it\u0026rsquo;s integrated into the service, in the following files:\npkg/service/v0/service.go for the requests pkg/command/server.go for the integration of registerSettingsBundles into the service start Register a settings bundle and set the permissions In order to register a settings bundle, you need to create a request message and then send it to the BundleService of oCIS settings through a gRPC call. The same applies for setting permissions on the setting bundles.\nCreate a bundle request request := \u0026amp;settings.SaveBundleRequest{ Bundle: \u0026amp;settings.Bundle{ Id: bundleIDGreeting, Name: \u0026#34;greeting\u0026#34;, DisplayName: \u0026#34;Greeting\u0026#34;, Extension: \u0026#34;ocis-hello\u0026#34;, Type: settings.Bundle_TYPE_DEFAULT, Resource: \u0026amp;settings.Resource{ Type: settings.Resource_TYPE_SYSTEM, }, Settings: []*settings.Setting{ { Id: settingIDGreeterPhrase, Name: \u0026#34;phrase\u0026#34;, DisplayName: \u0026#34;Phrase\u0026#34;, Description: \u0026#34;Phrase for replies on the greet request\u0026#34;, Resource: \u0026amp;settings.Resource{ Type: settings.Resource_TYPE_SYSTEM, }, Value: \u0026amp;settings.Setting_StringValue{ StringValue: \u0026amp;settings.String{ Required: true, Default: \u0026#34;Hello\u0026#34;, MaxLength: 15, }, }, }, }, }, The request holds only one field, which is a SettingsBundle. It consists of an Identifier, a DisplayName and a list of Settings.\nThe Extension and the ID of the bundle are required and have to be alphanumeric (- and _ are allowed as well). The ID has to stay stable - if you change it, existing settings will not be migrated to the new identifier. The DisplayName is required and may contain any UTF8 character. It will be shown in the settings user frontend in a generated form, so please try to be descriptive. You can change the DisplayName at any time. Settings is the list of settings you want to make available with this settings bundle. In this example, there is only one setting defined - a string setting for the phrase our greeter uses in the response. You can explore more types of settings in the settings package. All of them come with their own characteristics and validations. For the phrase setting we decided to set it to Required, so that it can\u0026rsquo;t be empty, and to set a MaxLength of 15 characters, so that the phrase is not too long. The ID of the setting is again particularly important, as this is used for referencing the setting in other requests. It has to fulfill the same rules as the other ID attributes. Please also take the time to set a Description, in order to provide accessibility in the generated forms as good as possible. Send bundle request to oCIS settings This request message can be sent to the BundleService of oCIS settings like this:\nsettings := settings.NewBundleService(\u0026#34;com.owncloud.api.settings\u0026#34;, mclient.DefaultClient) response, err := bundleService.SaveBundle(context.Background(), request) We run this request on every start of the Hello extension so that the settings service always has the most recent version of the settings bundle.\nCreate a permission settings request In order to grant admins access to the setting we need to create a AddSettingToBundleRequest.\npermissionRequests := []*settings.AddSettingToBundleRequest{ { BundleId: ssvc.BundleUUIDRoleAdmin, Setting: \u0026amp;settings.Setting{ Id: \u0026#34;d5f42c4b-e1b6-4b59-8eca-fc4b9e9f2320\u0026#34;, Resource: \u0026amp;settings.Resource{ Type: settings.Resource_TYPE_SETTING, Id: settingIDGreeterPhrase, }, Name: \u0026#34;phrase-admin-read\u0026#34;, Value: \u0026amp;settings.Setting_PermissionValue{ PermissionValue: \u0026amp;settings.Permission{ Operation: settings.Permission_OPERATION_READWRITE, Constraint: settings.Permission_CONSTRAINT_OWN, }, }, }, }, } Send permission settings request The AddSettingToBundleRequest then needs to be send to the settings service:\nresponse, err := bundleService.AddSettingToBundle(context.Background(), permissionRequests[i]) Use settings value We registered the greeter phrase setting for a reason: We want to allow authenticated administrator users to customize how users are greeted by the Hello extension. In order to do this, we need to ask oCIS settings on every request, what the greeter phrase of the authenticated user is.\nAccount UUID The settings request has one important prerequisite: As our service is stateless, we need to know the account UUID of the authenticated user the incoming POST request to our greeter service is coming from. As that POST request is coming through oCIS proxy, there is an HTTP header x-access-token that holds a JWT with the account UUID in it. We just have to dismantle the JWT to get the UUID. There is a middleware for that in ocis-pkg. You can look up the server configuration for that middleware in pkg/server/http/server.go. In essence, it dismantles the x-access-token, extracts the account UUID and makes it available in the context.\nIt can be subsequently retrieved from the context like this:\naccountID, ok := metadata.Get(ctx, middleware.AccountID) Create request With the account UUID we can build an Identifier for the request to oCIS settings as follows:\nrq := settings.GetValueByUniqueIdentifiersRequest{ AccountUuid: accountID, SettingId: settingIDGreeterPhrase, } response, err := s.vsClient.GetValueByUniqueIdentifiers(context.Background(), \u0026amp;rq) In order to get the setting we need to know which user (AccountUuid) is requesting the settings value and which setting he is requesting (SettingId).\nSend request This request message can be sent to the settings extension like this:\nvalueService := settings.NewValueService(\u0026#34;com.owncloud.api.settings\u0026#34;, mclient.DefaultClient) response, err := valueService.GetSettingsValue(ctx, request) The request gives us the default or customized greeting phrase, depending on wether it has already been changed by an administrator.\nConclusion You have learned how to register settings bundles, how to get the account UUID of the authenticated user and how to query the settings service for settings values.\n","description":"oCIS provides an settings extension that other extensions can use to make settings accessible to users.\nIn case of the Hello extension administrator users are able to change the greeter message.\nSettings are stored and presented to the user by the oCIS settings extension. It also exposes endpoints for registering and manipulating so called settings bundles.\nThe settings defined through settings bundles can be changed by authenticated users in ownCloud Web, if they have enough permissions to edit them."},{"id":235,"href":"/extensions/ocis_hello/testing/","title":"Testing","parent":"Hello (example extension)","content":"This repository provides a general guideline for creating tests for an oCIS extension. The tests can be written in various levels from unit, integration, and end-to-end. It is not essential to write tests on all these levels as it can be redundant in some cases. This repository provides a reference for all levels of tests.\nUnit tests Unit tests generally live inside *_test.go files in the /pkg directory. One such example in this extension is in /pkg/service/v0/service_test.go. Similarly the unit test for the protobuf generated code can also be written just like in /pkg/proto/hello.pb_test.go.\nIntegration tests There are mainly 2 types of integration tests, namely HTTP tests, and GRPC tests. These tests mostly live in /pkg/proto directory where all the protobuf definitions are specified. The examples for the HTTP integration tests are in /pkg/proto/hello.pb.web_test.go whereas the GRPC tests are in /pkg/proto/hello.pb.micro_test.go.\nEnd-to-End tests For extensions with an UI, we can also write end-to-end tests using the Nightwatch test framework. These tests live in /ui/tests directory. We can reuse already existing Gherkin steps from the ownCloud Web tests here.\nRunning the tests Unit and integration tests The unit and integration tests are run using the simple go test command. If you wish to run all the tests with the coverage you can just use make command.\nmake test You can also run a specific file with the go test command\ngo test \u0026lt;path to package or file\u0026gt; End-to-End tests Running end-to-end tests is a bit more complicated than unit and integration tests. First of all we will need a complete oCIS setup with the Hello extension running. Please refer to foo\nThen we need to set up the test infrastructure following the instructions form here\nNow we can run the tests. The tests will take several configuration variables which can be found here. Without configuration, most of the defaults will work. We just need make sure to set these values through env variable.\nexport WEB_PATH=\u0026lt;path to ownCloud Web directory\u0026gt; export OCIS_SKELETON_DIR=\u0026lt;path to the skeleton directory\u0026gt; export WEB_UI_CONFIG=\u0026lt;path to the config.json file used by web\u0026gt; While running oCIS we should always use a configuration file for ownCloud Web because our tests will read this file and sometimes even change it which cannot be done if you use environment variables or the default values.\nWith all this in place we can just run the tests with a simple make command. First go to the Hello repository\ncd \u0026lt;path to hello\u0026gt; Then run\nmake test-acceptance-webui To run just one feature you can run\nmake test-acceptance-webui \u0026lt;path-to-feature file\u0026gt;:\u0026lt;line-number\u0026gt; ","description":"This repository provides a general guideline for creating tests for an oCIS extension. The tests can be written in various levels from unit, integration, and end-to-end. It is not essential to write tests on all these levels as it can be redundant in some cases. This repository provides a reference for all levels of tests.\nUnit tests Unit tests generally live inside *_test.go files in the /pkg directory. One such example in this extension is in /pkg/service/v0/service_test."},{"id":236,"href":"/apis/http/graph/permissions/","title":"Permissions","parent":"LibreGraph","content":" Permissions API Example Permissions Creating Share Invitation / Link Create a link share POST /drives/{drive-id}/items/{item-id}/createLink Create a user/group share POST /drives/{drive-id}/items/{item-id}/invite Reading Permissions List the effective sharing permissions on a driveitem GET /drives/{drive-id}/items/{item-id}/permissions List Get sharing permission for a file or folder GET /drives/{drive-id}/items/{item-id}/permissions/{perm-id} Updating Permissions Updating sharing permission POST /drives/{drive-id}/items/{item-id}/permissions/{perm-id} Set password of permission POST /drives/{drive-id}/items/{item-id}/permissions/{perm-id}/setPassword Deleting permission DELETE /drives/{drive-id}/items/{item-id}/permissions/{perm-id} Permissions API The Permissions API is implementing a subset of the functionality of the MS Graph Permission resource.\nExample Permissions The JSON representation of a Drive, as handled by the Spaces API, looks like this:\n{ \u0026#34;@libre.graph.permissions.roles.allowedValues\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;b1e2218d-eef8-4d4c-b82d-0f1a1b48f3b5\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Allows reading the shared file or folder\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Viewer\u0026#34;, \u0026#34;@libre.graph.weight\u0026#34;: 1 }, { \u0026#34;id\u0026#34;: \u0026#34;fb6c3e19-e378-47e5-b277-9732f9de6e21\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Allows reading and writing the shared file or folder\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Editor\u0026#34;, \u0026#34;@libre.graph.weight\u0026#34;: 2 }, { \u0026#34;id\u0026#34;: \u0026#34;312c0871-5ef7-4b3a-85b6-0e4074c64049\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Allows managing a space\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Manager\u0026#34;, \u0026#34;@libre.graph.weight\u0026#34;: 3 }, { \u0026#34;id\u0026#34;: \u0026#34;4916f47e-66d5-49bb-9ac9-748ad00334b\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Allows creating new files\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;File Drop\u0026#34;, \u0026#34;@libre.graph.weight\u0026#34;: 4 } ], \u0026#34;@libre.graph.permissions.actions.allowedValues\u0026#34;: [ \u0026#34;libre.graph/driveItem/basic/read\u0026#34;, \u0026#34;libre.graph/driveItem/permissions/read\u0026#34;, \u0026#34;libre.graph/driveItem/upload/create\u0026#34;, \u0026#34;libre.graph/driveItem/standard/allTasks\u0026#34;, \u0026#34;libre.graph/driveItem/upload/create\u0026#34; ], \u0026#34;value\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;67445fde-a647-4dd4-b015-fc5dafd2821d\u0026#34;, \u0026#34;link\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;view\u0026#34;, \u0026#34;webUrl\u0026#34;: \u0026#34;https://cloud.example.org/s/fhGBMIkKFEHWysj\u0026#34; } }, { \u0026#34;id\u0026#34;: \u0026#34;34646ab6-be32-43c9-89e6-987e0c237e9b\u0026#34;, \u0026#34;roles\u0026#34;: [ \u0026#34;b1e2218d-eef8-4d4c-b82d-0f1a1b48f3b5\u0026#34; ], \u0026#34;grantedToV2\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34; } } ] }, { \u0026#34;id\u0026#34;: \u0026#34;81d5bad3-3eff-410a-a2ea-eda2d14d4474\u0026#34;, \u0026#34;roles\u0026#34;: [ \u0026#34;b1e2218d-eef8-4d4c-b82d-0f1a1b48f3b5\u0026#34; ], \u0026#34;grantedToV2\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34; } } ] }, { \u0026#34;id\u0026#34;: \u0026#34;b470677e-a7f5-4304-8ef5-f5056a21fff1\u0026#34;, \u0026#34;roles\u0026#34;: [ \u0026#34;b1e2218d-eef8-4d4c-b82d-0f1a1b48f3b5\u0026#34; ], \u0026#34;grantedToV2\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Marie Skłodowska Curie\u0026#34; } } ] }, { \u0026#34;id\u0026#34;: \u0026#34;453b02be-4ec2-4e7d-b576-09fc153de812\u0026#34;, \u0026#34;roles\u0026#34;: [ \u0026#34;fb6c3e19-e378-47e5-b277-9732f9de6e21\u0026#34; ], \u0026#34;grantedToV2\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34; } } ], \u0026#34;expirationDateTime\u0026#34;: \u0026#34;2018-07-15T14:00:00.000Z\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;86765c0d-3905-444a-9b07-76201f8cf7df\u0026#34;, \u0026#34;roles\u0026#34;: [ \u0026#34;312c0871-5ef7-4b3a-85b6-0e4074c64049\u0026#34; ], \u0026#34;grantedToV2\u0026#34;: [ { \u0026#34;group\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;167cbee2-0518-455a-bfb2-031fe0621e5d\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Philosophy Haters\u0026#34; } } ] }, { \u0026#34;id\u0026#34;: \u0026#34;c42b5cbd-2d65-42cf-b0b6-fb6d2b762256\u0026#34;, \u0026#34;grantedToV2\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34; } } ], \u0026#34;@libre.graph.permissions.actions\u0026#34;: [ \u0026#34;libre.graph/driveItem/basic/read\u0026#34;, \u0026#34;libre.graph/driveItem/path/update\u0026#34; ] } ] } Creating Share Invitation / Link Create a link share POST /drives/{drive-id}/items/{item-id}/createLink https://owncloud.dev/libre-graph-api/#/drives.permissions/CreateLink\nCreate a user/group share POST /drives/{drive-id}/items/{item-id}/invite https://owncloud.dev/libre-graph-api/#/drives.permissions/Invite\nReading Permissions List the effective sharing permissions on a driveitem GET /drives/{drive-id}/items/{item-id}/permissions https://owncloud.dev/libre-graph-api/#/drives.permissions/ListPermissions\nList Get sharing permission for a file or folder GET /drives/{drive-id}/items/{item-id}/permissions/{perm-id} https://owncloud.dev/libre-graph-api/#/drives.permissions/GetPermission\nUpdating Permissions Updating sharing permission POST /drives/{drive-id}/items/{item-id}/permissions/{perm-id} https://owncloud.dev/libre-graph-api/#/drives.permissions/UpdatePermission\nSet password of permission POST /drives/{drive-id}/items/{item-id}/permissions/{perm-id}/setPassword https://owncloud.dev/libre-graph-api/#/drives.permissions/SetPermissionPassword\nDeleting permission DELETE /drives/{drive-id}/items/{item-id}/permissions/{perm-id} https://owncloud.dev/libre-graph-api/#/drives.permissions/DeletePermission\n","description":"Permissions API Example Permissions Creating Share Invitation / Link Create a link share POST /drives/{drive-id}/items/{item-id}/createLink Create a user/group share POST /drives/{drive-id}/items/{item-id}/invite Reading Permissions List the effective sharing permissions on a driveitem GET /drives/{drive-id}/items/{item-id}/permissions List Get sharing permission for a file or folder GET /drives/{drive-id}/items/{item-id}/permissions/{perm-id} Updating Permissions Updating sharing permission POST /drives/{drive-id}/items/{item-id}/permissions/{perm-id} Set password of permission POST /drives/{drive-id}/items/{item-id}/permissions/{perm-id}/setPassword Deleting permission DELETE /drives/{drive-id}/items/{item-id}/permissions/{perm-id} Permissions API The Permissions API is implementing a subset of the functionality of the MS Graph Permission resource."},{"id":237,"href":"/services/settings/values/","title":"Settings Values","parent":"Settings","content":"A Settings Value is the value an authenticated user has chosen for a specific setting, defined in a settings bundle.\nIdentifying settings values A settings value is uniquely identified by four attributes. Three of them are coming from the definition of the setting within it\u0026rsquo;s settings bundle (see Settings Bundles for an example). The fourth identifies the user.\nextension: Key of the extension that registered the settings bundle, bundleKey: Key of the settings bundle, settingKey: Key of the setting as defined within the bundle, accountUuid: The UUID of the authenticated user who has saved the setting. When requests are going through ocis-proxy, the accountUuid attribute can be set to the static keyword me instead of using a real UUID. ocis-proxy will take care of minting the UUID of the authenticated user into a JWT, providing it in the HTTP header as x-access-token. That UUID is then used in this service, to replace me with the actual UUID of the authenticated user. Example of stored settings values { \u0026#34;values\u0026#34;: { \u0026#34;language\u0026#34;: { \u0026#34;identifier\u0026#34;: { \u0026#34;extension\u0026#34;: \u0026#34;ocis-accounts\u0026#34;, \u0026#34;bundleKey\u0026#34;: \u0026#34;profile\u0026#34;, \u0026#34;settingKey\u0026#34;: \u0026#34;language\u0026#34;, \u0026#34;accountUuid\u0026#34;: \u0026#34;5681371f-4a6e-43bc-8bb5-9c9237fa9c58\u0026#34; }, \u0026#34;listValue\u0026#34;: { \u0026#34;values\u0026#34;: [ { \u0026#34;stringValue\u0026#34;: \u0026#34;de\u0026#34; } ] } }, \u0026#34;timezone\u0026#34;: { \u0026#34;identifier\u0026#34;: { \u0026#34;extension\u0026#34;: \u0026#34;ocis-accounts\u0026#34;, \u0026#34;bundleKey\u0026#34;: \u0026#34;profile\u0026#34;, \u0026#34;settingKey\u0026#34;: \u0026#34;timezone\u0026#34;, \u0026#34;accountUuid\u0026#34;: \u0026#34;5681371f-4a6e-43bc-8bb5-9c9237fa9c58\u0026#34; }, \u0026#34;listValue\u0026#34;: { \u0026#34;values\u0026#34;: [ { \u0026#34;stringValue\u0026#34;: \u0026#34;Europe/Berlin\u0026#34; } ] } } } } gRPC endpoints Services can use gRPC endpoints of the ValueService to query and modify settings values. The gRPC endpoints require the same identifier attributes as described above, so for making a request to the ValueService you will have to make sure that the accountUuid of the authenticated user is available in your service at the time of the request.\n","description":"A Settings Value is the value an authenticated user has chosen for a specific setting, defined in a settings bundle.\nIdentifying settings values A settings value is uniquely identified by four attributes. Three of them are coming from the definition of the setting within it\u0026rsquo;s settings bundle (see Settings Bundles for an example). The fourth identifies the user.\nextension: Key of the extension that registered the settings bundle, bundleKey: Key of the settings bundle, settingKey: Key of the setting as defined within the bundle, accountUuid: The UUID of the authenticated user who has saved the setting."},{"id":238,"href":"/clients/web/testing/","title":"Tests","parent":"ownCloud Web","content":"Guides on running different kinds of tests in ownCloud Web.\n","description":"Guides on running different kinds of tests in ownCloud Web."},{"id":239,"href":"/clients/web/theming/","title":"Theming","parent":"ownCloud Web","content":" Introduction Ways of providing a theme Configuring a theme Common section Web Theme The \u0026ldquo;defaults\u0026rdquo; The \u0026ldquo;appBanner\u0026rdquo; options The \u0026ldquo;logo\u0026rdquo; options The \u0026ldquo;loginPage\u0026rdquo; options The \u0026ldquo;designTokens\u0026rdquo; options Breakpoints Colors Font sizes Font family Sizes Spacing Actual Themes Extendability Example theme Introduction By providing your own theme, you can customize the user experience for your own ownCloud installation. This is being achieved by providing a json file that contains text snippets (like brand name and slogan), paths to images (e.g. logos or favicon) and design tokens for various color, sizing and spacing parameters.\nThis page documents the setup and configuration options, and provides a template for you to get started.\nWays of providing a theme Generally, your theming configuration lives inside a .json file, e.g. theme.json. To load this file, it needs to be correctly referenced inside your config/config.json (example configurations can be found on GitHub).\nTo reference your theme, you have two options:\nUsing a URL, e.g. \u0026quot;theme\u0026quot;: \u0026quot;https://externalurl.example.com/theme-name/theme.json\u0026quot;,. To avoid CORS issues, please make sure that you host the URL on the same URL as your ownCloud web hosting. For development and testing purposes, you can store your theme.json inside packages/web-runtime/themes/{theme-name}/ and reference it in the config.json. However, this isn\u0026rsquo;t recommended for production use since your changes may get lost when updating oCIS or the web app in OC10. Hint: If no theme is provided, the loading of your custom theme fails or the theme can\u0026rsquo;t be parsed correctly, the standard ownCloud theme will be loaded as a fallback and an error with further information will be logged on the browser console.\nConfiguring a theme Inside your theme.json, there is a common key, which is explained in the next section, and a clients key: Here, you can find the available ownCloud clients - please note that the documentation below focuses on web and check the respective documentation for other clients for details on their themability.\nThe general top-level structure of a valid theme.json is outlined below:\n{ \u0026#34;common\u0026#34;: {}, \u0026#34;clients\u0026#34;: { \u0026#34;android\u0026#34;: {}, \u0026#34;desktop\u0026#34;: {}, \u0026#34;ios\u0026#34;: {}, \u0026#34;web\u0026#34;: {} } } Common section The common section provides a set of information that is designed to be available for all clients. It gets merged \u0026ldquo;down\u0026rdquo; to the final themes and aims to reduce duplication, but can be overwritten by more specific information inside both the clients\u0026rsquo; defaults and actual themes.\nThe structure of a valid common section is outlined below:\n\u0026#34;common\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;ownCloud\u0026#34;, \u0026#34;slogan\u0026#34;: \u0026#34;ownCloud – A safe home for all your data\u0026#34;, \u0026#34;logo\u0026#34;: \u0026#34;themes/owncloud/assets/logo.svg\u0026#34;, \u0026#34;urls\u0026#34;: { \u0026#34;accessDeniedHelp\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;imprint\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;privacy\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;shareRoles\u0026#34;: {} } All of the below parameters are required:\nname specifies the publicly visible name slogan specifies the publicly visible slogan logo specifies the logo in e.g. the top bar within the web UI accessDeniedHelp specifies the target URL for the access denied help link imprintUrl specifies the target URL for the imprint link privacyUrl specifies the target URL for the privacy link Web Theme The structure of a valid web client section is outlined below:\n{ \u0026#34;web\u0026#34;: { \u0026#34;defaults\u0026#34;: { \u0026#34;appBanner\u0026#34;: { // Please see below for details }, \u0026#34;common\u0026#34;: { // Please see top level \u0026#34;common\u0026#34; section for details }, \u0026#34;logo\u0026#34;: { // Please see below for details }, \u0026#34;loginPage\u0026#34;: { // Please see below for details }, \u0026#34;designTokens\u0026#34;: { // Please see below for details } }, \u0026#34;themes\u0026#34;: [ // Your custom web themes go here, see below for details ] } } The \u0026ldquo;defaults\u0026rdquo; Similar to the top level common section, this object contains information that shall be shared among the available themes and can/should be defined only once. The top level common section first gets merged into the defaults, which then get merged into the individual themes.\nThe \u0026ldquo;appBanner\u0026rdquo; options Configures a app banner that gets shown on mobile devices and suggests downloading the native client from the respective app store. Omitting the key disables the banner.\nExample structure:\n{ \u0026#34;appBanner\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;ownCloud\u0026#34;, \u0026#34;publisher\u0026#34;: \u0026#34;ownCloud GmbH\u0026#34;, \u0026#34;additionalInformation\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;ctaText\u0026#34;: \u0026#34;OPEN\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;themes/owncloud/assets/owncloud-app-icon.png\u0026#34;, \u0026#34;appScheme\u0026#34;: \u0026#34;owncloud\u0026#34; } } title is usually your app\u0026rsquo;s name as shown in the App Store or Google Play. publisher is the app developer\u0026rsquo;s name. additionalInformation can be used to specify pricing information, such as \u0026ldquo;FREE\u0026rdquo; or a catchphrase like \u0026ldquo;Don\u0026rsquo;t miss out on our awesome app!\u0026rdquo;. ctaText refers to the text in the call to action button on the right side. The icon directive may be used to specify your own app icon. icon links the icon to be displayed as a preview for the final app icon within the app banner appScheme is the first part of the URL that is used to tell the mobile OS which app to open, so using ownCloud will generate links such as owncloud://yourdomain.com/f/2b61b822.... The \u0026ldquo;logo\u0026rdquo; options Here, you can specify the images to be used in the \u0026quot;topbar\u0026quot;, for the \u0026quot;favicon\u0026quot; and on the \u0026quot;login\u0026quot; page. Various formats are supported and it\u0026rsquo;s up to you to decide which one fits your use case best.\n\u0026#34;logo\u0026#34;: { \u0026#34;topbar\u0026#34;: \u0026#34;themes/owncloud/assets/logo.svg\u0026#34;, \u0026#34;favicon\u0026#34;: \u0026#34;themes/owncloud/assets/favicon.jpg\u0026#34;, \u0026#34;login\u0026#34;: \u0026#34;themes/owncloud/assets/logo.svg\u0026#34; }, The \u0026ldquo;loginPage\u0026rdquo; options You can set the background image for the login page by providing an image file in the \u0026quot;backgroundImg\u0026quot; option.\n\u0026#34;loginPage\u0026#34;: { \u0026#34;backgroundImg\u0026#34;: \u0026#34;themes/owncloud/assets/loginBackground.jpg\u0026#34; }, The \u0026ldquo;designTokens\u0026rdquo; options To further customize your ownCloud instance, you can provide your own styles. To give you an idea of how a working design system looks like, feel free to head over to the ownCloud design tokens for inspiration.\nHint: All the variables are initialized using the ownCloud design tokens and then overwritten by your theme variables. Therefore, you don\u0026rsquo;t have to provide all the variables and can use the default ownCloud colors as a fallback.\nIn general, the theme loader looks for a designTokens key inside your theme configuration. Inside the designTokens, it expects to find a colorPalette, fontSizes and spacing collection. The structure is outlined below:\n\u0026#34;designTokens\u0026#34;: { \u0026#34;breakpoints\u0026#34;: { // Please see below for details }, \u0026#34;colorPalette\u0026#34;: { // Please see below for details }, \u0026#34;fontFamily\u0026#34;: \u0026#34;\u0026#34;, // Please see below for details \u0026#34;fontSizes\u0026#34;: { // Please see below for details }, \u0026#34;sizes\u0026#34;: { // Please see below for details }, \u0026#34;spacing\u0026#34;: { // Please see below for details } } Breakpoints If you\u0026rsquo;d like to set different breakpoints than the default ones in the ownCloud design system, you can set them using theming variables.\nBreakpoint variables get prepended with --oc-breakpoint-, so e.g. \u0026ldquo;large-default\u0026rdquo; creates the custom CSS property --oc-breakpoint-large-default.\n{ \u0026#34;breakpoints\u0026#34;: { \u0026#34;xsmall-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34; } } Colors For the color values, you can use any valid CSS color format, e.g. hex (#fff), rgb (rgb(255,255,255)) or color names (white).\nColor variables get prepended with --oc-color-, so e.g. \u0026ldquo;background-default\u0026rdquo; creates the custom CSS property --oc-color-background-default.\nAgain, you can use the ownCloud design tokens as a reference implementation.\n{ \u0026#34;colorPalette\u0026#34;: { \u0026#34;background-accentuate\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-highlight\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;border\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-bg\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-border\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-text-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-text-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-contrast\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-contrast\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-hover-outline\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-contrast\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-muted-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-gradient\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-gradient-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-contrast\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-contrast\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-contrast\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-inverse\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-muted\u0026#34;: \u0026#34;\u0026#34; } } Font sizes You can change the default, large and medium font sizes according to your needs. If you need more customization options regarding font sizes, please open an issue on GitHub with a detailed description.\nFont size variables get prepended with --oc-font-size-, so e.g. \u0026ldquo;default\u0026rdquo; creates the custom CSS property --oc-font-size-default.\n{ \u0026#34;fontSizes\u0026#34;: { \u0026#34;default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34; } } Font family You can change the font family according to your needs. The font family gets written into the --oc-font-family CSS variable.\n{ \u0026#34;fontFamily\u0026#34;: \u0026#34;\u0026#34; } Please note that you also need to make the font available as a font-face via CSS.\nSizes Use sizing variables to change various UI elements, such as icon and logo appearance, table row or checkbox sizes, according to your needs. If you need more customization options regarding sizes, please open an issue on GitHub with a detailed description.\nSize variables get prepended with --oc-size-, so e.g. \u0026ldquo;icon-default\u0026rdquo; creates the custom CSS property --oc-size-icon-default.\n{ \u0026#34;sizes\u0026#34;: { \u0026#34;form-check-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-table-row\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;icon-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-height-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-width-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;width-medium\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;tiles-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;tiles-resize-step\u0026#34;: \u0026#34;\u0026#34; } } Spacing Use the six spacing options (xsmall | small | medium | large | xlarge | xxlarge) to create a more (or less) condensed version of the user interface. If you need more customization options regarding sizes, please open an issue on GitHub with a detailed description.\nSpacing variables get prepended with --oc-space-, so e.g. \u0026ldquo;xlarge\u0026rdquo; creates the custom CSS property --oc-space-xlarge.\n{ \u0026#34;spacing\u0026#34;: { \u0026#34;xsmall\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xxlarge\u0026#34;: \u0026#34;\u0026#34; } } Actual Themes Apart from the defaults, you need to provide one or more themes in the themes key within the web-clients in your theme.json. As a reminder, the general structure should be:\n{ \u0026#34;common\u0026#34;: { ... }, \u0026#34;clients\u0026#34;: { ..., \u0026#34;web\u0026#34;: { \u0026#34;defaults\u0026#34;: { ... }, \u0026#34;themes\u0026#34;: [ { \u0026#34;isDark\u0026#34;: false, \u0026#34;name\u0026#34;: \u0026#34;Light Theme\u0026#34;, } ] } } } Again, both the global common section as well as the defaults will get merged into your themes, but locally provided information takes precedence.\nRequired information\nname for the visible name in the theme switcher and to save the current theme to localStorage isDark to provide the user agent with additional information Optional information\nappBanner see section above common see section above designTokens see section above logo see section above loginPage see section above Extendability If you define different key-value pairs inside any of the objects (breakpoints, colorPalette, fontSizes, sizes, spacing) in \u0026quot;designTokens\u0026quot;, they will get loaded and initialized as CSS custom properties but don\u0026rsquo;t necessarily take any effect in the user interface. This gives you an opportunity to, for example, customize extensions from within the theme in the web runtime (and not the extension itself).\nExample theme A full template for your custom theme is provided below, and you can use the instructions above to set it up according to your needs:\n{ \u0026#34;common\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;ownCloud\u0026#34;, \u0026#34;slogan\u0026#34;: \u0026#34;ownCloud – A safe home for all your data\u0026#34;, \u0026#34;logo\u0026#34;: \u0026#34;themes/owncloud/assets/logo.svg\u0026#34;, \u0026#34;urls\u0026#34;: { \u0026#34;accessDeniedHelp\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;imprint\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;privacy\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;shareRoles\u0026#34;: { \u0026#34;b1e2218d-eef8-4d4c-b82d-0f1a1b48f3b5\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;UnifiedRoleViewer\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;eye\u0026#34; }, \u0026#34;a8d5fe5e-96e3-418d-825b-534dbdf22b99\u0026#34;: { \u0026#34;label\u0026#34;: \u0026#34;UnifiedRoleSpaceViewer\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;eye\u0026#34; }, \u0026#34;2d00ce52-1fc2-4dbc-8b95-a73b73395f5a\u0026#34;: { \u0026#34;label\u0026#34;: \u0026#34;UnifiedRoleFileEditor\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;pencil\u0026#34; }, \u0026#34;fb6c3e19-e378-47e5-b277-9732f9de6e21\u0026#34;: { \u0026#34;label\u0026#34;: \u0026#34;UnifiedRoleEditor\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;pencil\u0026#34; }, \u0026#34;58c63c02-1d89-4572-916a-870abc5a1b7d\u0026#34;: { \u0026#34;label\u0026#34;: \u0026#34;UnifiedRoleSpaceEditor\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;pencil\u0026#34; }, \u0026#34;312c0871-5ef7-4b3a-85b6-0e4074c64049\u0026#34;: { \u0026#34;label\u0026#34;: \u0026#34;UnifiedRoleManager\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;user-star\u0026#34; }, \u0026#34;1c996275-f1c9-4e71-abdf-a42f6495e960\u0026#34;: { \u0026#34;label\u0026#34;: \u0026#34;UnifiedRoleUploader\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;pencil\u0026#34; }, \u0026#34;aa97fe03-7980-45ac-9e50-b325749fd7e6\u0026#34;: { \u0026#34;label\u0026#34;: \u0026#34;UnifiedRoleSecureView\u0026#34;, \u0026#34;iconName\u0026#34;: \u0026#34;shield\u0026#34; } } }, \u0026#34;clients\u0026#34;: { \u0026#34;android\u0026#34;: {}, \u0026#34;desktop\u0026#34;: {}, \u0026#34;ios\u0026#34;: {}, \u0026#34;web\u0026#34;: { \u0026#34;defaults\u0026#34;: { \u0026#34;logo\u0026#34;: { \u0026#34;topbar\u0026#34;: \u0026#34;themes/owncloud/assets/logo.svg\u0026#34;, \u0026#34;favicon\u0026#34;: \u0026#34;themes/owncloud/assets/favicon.jpg\u0026#34;, \u0026#34;login\u0026#34;: \u0026#34;themes/owncloud/assets/logo.svg\u0026#34; }, \u0026#34;loginPage\u0026#34;: { \u0026#34;backgroundImg\u0026#34;: \u0026#34;themes/owncloud/assets/loginBackground.jpg\u0026#34; }, \u0026#34;designTokens\u0026#34;: { \u0026#34;breakpoints\u0026#34;: { \u0026#34;xsmall-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;fontSizes\u0026#34;: { \u0026#34;default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;sizes\u0026#34;: { \u0026#34;form-check-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-table-row\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;icon-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-height-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-width-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;width-medium\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;tiles-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;tiles-resize-step\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;spacing\u0026#34;: { \u0026#34;xsmall\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xxlarge\u0026#34;: \u0026#34;\u0026#34; } } }, \u0026#34;themes\u0026#34;: [ { \u0026#34;isDark\u0026#34;: false, \u0026#34;name\u0026#34;: \u0026#34;Light Theme\u0026#34;, \u0026#34;designTokens\u0026#34;: { \u0026#34;colorPalette\u0026#34;: { \u0026#34;background-accentuate\u0026#34;: \u0026#34;rgba(255, 255, 5, 0.1)\u0026#34;, \u0026#34;background-default\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;background-highlight\u0026#34;: \u0026#34;#edf3fa\u0026#34;, \u0026#34;background-muted\u0026#34;: \u0026#34;#f8f8f8\u0026#34;, \u0026#34;background-secondary\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;background-hover\u0026#34;: \u0026#34;rgb(236, 236, 236)\u0026#34;, \u0026#34;color-components-apptopbar-background\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;color-components-apptopbar-border\u0026#34;: \u0026#34;#ceddee\u0026#34;, \u0026#34;border\u0026#34;: \u0026#34;#ecebee\u0026#34;, \u0026#34;input-bg\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;input-border\u0026#34;: \u0026#34;#ceddee\u0026#34;, \u0026#34;input-text-default\u0026#34;: \u0026#34;#041e42\u0026#34;, \u0026#34;input-text-muted\u0026#34;: \u0026#34;#4c5f79\u0026#34;, \u0026#34;swatch-brand-default\u0026#34;: \u0026#34;#041e42\u0026#34;, \u0026#34;swatch-brand-hover\u0026#34;: \u0026#34;#223959\u0026#34;, \u0026#34;swatch-brand-contrast\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;swatch-danger-contrast\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;swatch-danger-default\u0026#34;: \u0026#34;rgb(197, 48, 48)\u0026#34;, \u0026#34;swatch-danger-hover\u0026#34;: \u0026#34;#b12b2b\u0026#34;, \u0026#34;swatch-danger-muted\u0026#34;: \u0026#34;rgb(204, 117, 117)\u0026#34;, \u0026#34;swatch-inverse-default\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;swatch-inverse-hover\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;swatch-inverse-muted\u0026#34;: \u0026#34;#bfbfbf\u0026#34;, \u0026#34;swatch-passive-default\u0026#34;: \u0026#34;#4c5f79\u0026#34;, \u0026#34;swatch-passive-hover\u0026#34;: \u0026#34;#43536b\u0026#34;, \u0026#34;swatch-passive-hover-outline\u0026#34;: \u0026#34;#f7fafd\u0026#34;, \u0026#34;swatch-passive-muted\u0026#34;: \u0026#34;#283e5d\u0026#34;, \u0026#34;swatch-passive-contrast\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;swatch-primary-default\u0026#34;: \u0026#34;#4a76ac\u0026#34;, \u0026#34;swatch-primary-hover\u0026#34;: \u0026#34;#80a7d7\u0026#34;, \u0026#34;swatch-primary-muted\u0026#34;: \u0026#34;#2c588e\u0026#34;, \u0026#34;swatch-primary-muted-hover\u0026#34;: \u0026#34;rgb(36, 75, 119)\u0026#34;, \u0026#34;swatch-primary-gradient\u0026#34;: \u0026#34;#4e85c8\u0026#34;, \u0026#34;swatch-primary-gradient-hover\u0026#34;: \u0026#34;rgb(59, 118, 194)\u0026#34;, \u0026#34;swatch-primary-contrast\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;swatch-success-default\u0026#34;: \u0026#34;rgb(3, 84, 63)\u0026#34;, \u0026#34;swatch-success-hover\u0026#34;: \u0026#34;#023b2c\u0026#34;, \u0026#34;swatch-success-muted\u0026#34;: \u0026#34;rgb(83, 150, 10)\u0026#34;, \u0026#34;swatch-success-contrast\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;swatch-warning-default\u0026#34;: \u0026#34;rgb(183, 76, 27)\u0026#34;, \u0026#34;swatch-warning-hover\u0026#34;: \u0026#34;#a04318\u0026#34;, \u0026#34;swatch-warning-muted\u0026#34;: \u0026#34;rgba(183, 76, 27, .5)\u0026#34;, \u0026#34;swatch-warning-contrast\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;text-default\u0026#34;: \u0026#34;#041e42\u0026#34;, \u0026#34;text-inverse\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;text-muted\u0026#34;: \u0026#34;#4c5f79\u0026#34;, \u0026#34;icon-folder\u0026#34;: \u0026#34;#4d7eaf\u0026#34;, \u0026#34;icon-archive\u0026#34;: \u0026#34;#fbbe54\u0026#34;, \u0026#34;icon-image\u0026#34;: \u0026#34;#ee6b3b\u0026#34;, \u0026#34;icon-spreadsheet\u0026#34;: \u0026#34;#15c286\u0026#34;, \u0026#34;icon-document\u0026#34;: \u0026#34;#3b44a6\u0026#34;, \u0026#34;icon-video\u0026#34;: \u0026#34;#045459\u0026#34;, \u0026#34;icon-audio\u0026#34;: \u0026#34;#700460\u0026#34;, \u0026#34;icon-presentation\u0026#34;: \u0026#34;#ee6b3b\u0026#34;, \u0026#34;icon-pdf\u0026#34;: \u0026#34;#ec0d47\u0026#34; } } }, { \u0026#34;isDark\u0026#34;: true, \u0026#34;name\u0026#34;: \u0026#34;Dark Theme\u0026#34;, \u0026#34;designTokens\u0026#34;: { \u0026#34;colorPalette\u0026#34;: { \u0026#34;background-accentuate\u0026#34;: \u0026#34;#696969\u0026#34;, \u0026#34;background-default\u0026#34;: \u0026#34;#292929\u0026#34;, \u0026#34;background-highlight\u0026#34;: \u0026#34;#383838\u0026#34;, \u0026#34;background-muted\u0026#34;: \u0026#34;#383838\u0026#34;, \u0026#34;background-secondary\u0026#34;: \u0026#34;#4f4f4f\u0026#34;, \u0026#34;background-hover\u0026#34;: \u0026#34;#383838\u0026#34;, \u0026#34;color-components-apptopbar-background\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;color-components-apptopbar-border\u0026#34;: \u0026#34;#ceddee\u0026#34;, \u0026#34;border\u0026#34;: \u0026#34;#383838\u0026#34;, \u0026#34;input-bg\u0026#34;: \u0026#34;#4f4f4f\u0026#34;, \u0026#34;input-border\u0026#34;: \u0026#34;#696969\u0026#34;, \u0026#34;input-text-default\u0026#34;: \u0026#34;#dadcdf\u0026#34;, \u0026#34;input-text-muted\u0026#34;: \u0026#34;#bdbfc3\u0026#34;, \u0026#34;swatch-brand-default\u0026#34;: \u0026#34;#212121\u0026#34;, \u0026#34;swatch-brand-hover\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;swatch-brand-contrast\u0026#34;: \u0026#34;#dadcdf\u0026#34;, \u0026#34;swatch-inverse-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-muted\u0026#34;: \u0026#34;#696969\u0026#34;, \u0026#34;swatch-passive-default\u0026#34;: \u0026#34;#c2c2c2\u0026#34;, \u0026#34;swatch-passive-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-hover-outline\u0026#34;: \u0026#34;#3B3B3B\u0026#34;, \u0026#34;swatch-passive-muted\u0026#34;: \u0026#34;#bdbfc3\u0026#34;, \u0026#34;swatch-passive-contrast\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;swatch-primary-default\u0026#34;: \u0026#34;#73b0f2\u0026#34;, \u0026#34;swatch-primary-hover\u0026#34;: \u0026#34;#7bafef\u0026#34;, \u0026#34;swatch-primary-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-muted-hover\u0026#34;: \u0026#34;#2282f7\u0026#34;, \u0026#34;swatch-primary-gradient\u0026#34;: \u0026#34;#4e85c8\u0026#34;, \u0026#34;swatch-primary-gradient-hover\u0026#34;: \u0026#34;#76a1d5\u0026#34;, \u0026#34;swatch-primary-contrast\u0026#34;: \u0026#34;#dadcdf\u0026#34;, \u0026#34;swatch-success-background\u0026#34;: \u0026#34;rgba(0, 188, 140, 0)\u0026#34;, \u0026#34;swatch-success-default\u0026#34;: \u0026#34;rgb(0, 188, 140)\u0026#34;, \u0026#34;swatch-success-hover\u0026#34;: \u0026#34;#00f0b4\u0026#34;, \u0026#34;swatch-success-muted\u0026#34;: \u0026#34;rgba(0, 188, 140, .5)\u0026#34;, \u0026#34;swatch-success-contrast\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;swatch-warning-background\u0026#34;: \u0026#34;rgba(0,0,0,0)\u0026#34;, \u0026#34;swatch-warning-default\u0026#34;: \u0026#34;rgb(232, 191, 73)\u0026#34;, \u0026#34;swatch-warning-hover\u0026#34;: \u0026#34;#eed077\u0026#34;, \u0026#34;swatch-warning-muted\u0026#34;: \u0026#34;rgba(232, 178, 19, .5)\u0026#34;, \u0026#34;swatch-danger-default\u0026#34;: \u0026#34;rgb(255, 72, 53)\u0026#34;, \u0026#34;swatch-danger-hover\u0026#34;: \u0026#34;#ff7566\u0026#34;, \u0026#34;swatch-danger-muted\u0026#34;: \u0026#34;rgba(255, 72, 53, .5)\u0026#34;, \u0026#34;swatch-danger-contrast\u0026#34;: \u0026#34;#dadcdf\u0026#34;, \u0026#34;swatch-warning-contrast\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;text-default\u0026#34;: \u0026#34;#dadcdf\u0026#34;, \u0026#34;text-inverse\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;text-muted\u0026#34;: \u0026#34;#c2c2c2\u0026#34;, \u0026#34;icon-folder\u0026#34;: \u0026#34;rgb(44, 101, 255)\u0026#34;, \u0026#34;icon-archive\u0026#34;: \u0026#34;rgb(255, 207, 1)\u0026#34;, \u0026#34;icon-image\u0026#34;: \u0026#34;rgb(255, 111, 0)\u0026#34;, \u0026#34;icon-spreadsheet\u0026#34;: \u0026#34;rgb(0, 182, 87)\u0026#34;, \u0026#34;icon-document\u0026#34;: \u0026#34;rgb(44, 101, 255)\u0026#34;, \u0026#34;icon-video\u0026#34;: \u0026#34;rgb(0, 187, 219)\u0026#34;, \u0026#34;icon-audio\u0026#34;: \u0026#34;rgb(208, 67, 236)\u0026#34;, \u0026#34;icon-presentation\u0026#34;: \u0026#34;rgb(255, 64, 6)\u0026#34;, \u0026#34;icon-pdf\u0026#34;: \u0026#34;rgb(225, 5, 14)\u0026#34; } } } ] } } } ","description":"Introduction Ways of providing a theme Configuring a theme Common section Web Theme The \u0026ldquo;defaults\u0026rdquo; The \u0026ldquo;appBanner\u0026rdquo; options The \u0026ldquo;logo\u0026rdquo; options The \u0026ldquo;loginPage\u0026rdquo; options The \u0026ldquo;designTokens\u0026rdquo; options Breakpoints Colors Font sizes Font family Sizes Spacing Actual Themes Extendability Example theme Introduction By providing your own theme, you can customize the user experience for your own ownCloud installation. This is being achieved by providing a json file that contains text snippets (like brand name and slogan), paths to images (e."},{"id":240,"href":"/ocis/development/tracing/","title":"Tracing","parent":"Development","content":" By default, we use Jaeger for request tracing within oCIS. You can follow these steps to get started:\nStart Jaeger by using the all-in-one docker image: docker run -d --name jaeger \\ -e COLLECTOR_ZIPKIN_HTTP_PORT=9411 \\ -p 5775:5775/udp \\ -p 6831:6831/udp \\ -p 6832:6832/udp \\ -p 5778:5778 \\ -p 16686:16686 \\ -p 14268:14268 \\ -p 14250:14250 \\ -p 9411:9411 \\ jaegertracing/all-in-one:1.17 Every single oCIS service has its own environment variables for enabling and configuring tracing. You can enable and configure tracing on each service individually. For example, enable tracing in Reva when starting the oCIS single binary like this: REVA_TRACING_ENABLED=true \\ REVA_TRACING_ENDPOINT=localhost:6831 \\ REVA_TRACING_COLLECTOR=http://localhost:14268/api/traces \\ ./bin/ocis server Enabling and configuring tracing on oCIS itself will forward the configuration to all services: OCIS_TRACING_ENABLED=true \\ OCIS_TRACING_ENDPOINT=localhost:6831 \\ OCIS_TRACING_COLLECTOR=http://localhost:14268/api/traces \\ ./bin/ocis server If you want to set individual tracing configuration for each service, make sure to set OCIS_TRACING_ENABLED=false. Make the actual request that you want to trace. Open up the Jaeger UI to analyze request traces. For more information on Jaeger, please refer to their Documentation.\n","description":"By default, we use Jaeger for request tracing within oCIS. You can follow these steps to get started:\nStart Jaeger by using the all-in-one docker image: docker run -d --name jaeger \\ -e COLLECTOR_ZIPKIN_HTTP_PORT=9411 \\ -p 5775:5775/udp \\ -p 6831:6831/udp \\ -p 6832:6832/udp \\ -p 5778:5778 \\ -p 16686:16686 \\ -p 14268:14268 \\ -p 14250:14250 \\ -p 9411:9411 \\ jaegertracing/all-in-one:1.17 Every single oCIS service has its own environment variables for enabling and configuring tracing."},{"id":241,"href":"/clients/web/deployments/","title":"Deployments","parent":"ownCloud Web","content":"Showcases of different scenarios of deploying ownCloud Web.\n","description":"Showcases of different scenarios of deploying ownCloud Web."},{"id":242,"href":"/clients/web/testing/e2e-testing-standards/","title":"End-to-End (E2E) Test Standards","parent":"Tests","content":" Introduction Folder Structure: Test Structure - Arrange, Act, Assert: Page Object Model (POM) Waiting: Selectors Naming Conventions Files and folders Variables Booleans Page Objects / Classes Locators Function names Gherkin Best Practices: Do\u0026rsquo;s and Don\u0026rsquo;ts for Effective Features \u0026amp; Scenarios Writing Features Writing Scenarios Broad Gherkin Guidelines Introduction In ownCloud, we use Playwright for webUI test automation. We benefit from lower barriers to entry, readability, and usability when test standards are consistent across repositories. For example:\nReusability: Enhances reusability by making it easier to reuse functions, locators, shared steps, and other test code. Finding the necessary components and functionalities will be simple for someone working on a test resulting in reduced duplication and the requirement for rework after the initiation of a code review.\nFacilitates reviews: Code can be examined more quickly. Since you can quickly determine what the test code is doing, it eases the mental strain of code review.\nFaster onboarding: By following naming conventions, new contributors are onboarded more rapidly and feel comfortable enough to contribute to the codebase.\nHere are the test standards and guidelines we adhere to when creating Playwright tests at ownCloud.\nFolder Structure: tests/:\ne2e/: Main folder containing all (end-to-end) E2E test-related files.\ncucumber/: Main folder containing all Cucumber(BDD) test-related files.\nfeatures/: Contains Gherkin feature files.\n\u0026lt;test-suite-folder\u0026gt;/: Collection house for \u0026ldquo;related\u0026rdquo; feature files.\n\u0026lt;aFeatureFile\u0026gt;.feature: A feature file. steps/: Holds the step definition files for mapping Gherkin steps to code.\n\u0026lt;stepDefinition\u0026gt;.ts: Step definitions for each feature. hooks/: Cucumber hooks for setting up and tearing down test environments.\nhooks.ts: Contains Before, After, and other lifecycle hooks. support/: Playwright (Test implementation)\napi/: Contains API-related test files and configurations.\n\u0026lt;api-folder\u0026gt;/ : Specific API tests for a particular service. objects/: Contains the Page Object classes.\n\u0026lt;specific-page-object-folder\u0026gt;/: Collection house for related page objects for each webpage or component.\n\u0026lt;individualPageObject\u0026gt;.ts: Page Object for each webpage or component. utils/: Utility functions and common helpers.\nhelpers.ts: Common utility functions (e.g., date formatting, data generation). test-data/: Static test data files or folders for upload.\nfilesForUpload/: Static test data files for upload. config/: Configuration files for Playwright and other tools.\nplaywright.config.ts: Playwright configuration. reports/: Generated test reports (e.g., HTML, JSON).\nscreenshots/: Captured screenshots during test execution.\nvideos/: Recorded videos of test runs.\nTest Structure - Arrange, Act, Assert: We can follow the AAA (Arrange, Act, Assert) pattern when structuring the tests. In most cases, the Arrange step can be included in a Before block(hook). Consider including comments defining each section to ease readability.\n// arrange, set up the initial conditions for the test // create a property await createProperty() // act, perform the action that you want to test // raise a charge // this could involve calling methods or functions defined in your page objects await raiseCharge() // assert, verify that the action had the expected outcome // confirm charge has been raised expect(charge).toBe(\u0026#39;raised\u0026#39;) Page Object Model (POM) Every page should possess one POM file to enhance maintainability and scalability of our tests. It should include all the selectors and functions which are needed to interact with the UI page or component(s).\nAll interactions should be done using the page objects, no selectors in your tests.\nAll assertions should be in your test, no assertion in the POM\nDO 👍\n// POM file \u0026#39;./pageOobjects/foo/\u0026#39; // add all locators and functions related to the page. // allowing all tests to reuse import {expect, Locator, Page} from \u0026#39;@playwright/test\u0026#39;; export class FooPage { readonly errorMessage: Locator; constructor(page: Page) { this.page = page; this.errorMessage = page.locator(\u0026#39;.error-message\u0026#39;); } } // test file \u0026#39;./steps/foo.ts\u0026#39; import {FooPage} from \u0026#39;./pageObjects/foo\u0026#39;; let fooPage: FooPage; Then( \u0026#39;error message should be visible\u0026#39;, async function ({page}) { const fooPage = new FooPage({page}); await expect(fooPage.errorMessage).toBeVisible(); } ) DO NOT ⚔️\n// test file \u0026#39;./steps/foo.ts\u0026#39; // include locators directly in test import { Locator, Page } from \u0026#39;@playwright/test\u0026#39;; Then( \u0026#39;error message should be visible\u0026#39;, async function ({page}) { await expect(page.locator(\u0026#39;.error-message\u0026#39;)).toBeVisible(); } ) Waiting: Playwright uses auto-waiting, so we avoid artificial waiting, the exception being if it is really necessary.\nDO NOT ⚔️\nawait page.waitForTimeout(5000) This can cause flaky tests as we can rarely be certain the amount of wait time is enough. It can also unnecessarily increase the test run time. Instead, we can try:\nDO 👍\nawait page.goto(fooBarURL, { waitUntil: \u0026#39;domcontentloaded\u0026#39; }); DO 👍\nconst element = page.locator(\u0026#34;some-locator-path\u0026#34;); element.waitFor({ visible: true }); DO 👍\nawait fooPage.buttonFoo.click(); await expect(fooPage.titlePage).toBeVisible(); Selectors Avoid selectors tied to implementation and page structure.\nInstead, we can prioritize the below, based on testing-library guiding principles\ngetByRole (this aids accessibility, reflects how users and assistive technology perceive the page)\ngetByText\ngetByTestId (add them when needed)\nDO NOT ⚔️\npage.locator(\u0026#39;.opt-u \u0026gt; div \u0026gt; .summary \u0026gt; div:nth-child(4) \u0026gt; div\u0026#39;) DO 👍\npage.locator(\u0026#39;#foo-button\u0026#39;); page.getByText(\u0026#39;OK\u0026#39;); Naming Conventions Files and folders Files: Declare in camelCase Folders: Declare in kebab-case Variables Declare in camelCase.\nBooleans Start with ‘is’, ‘has’, ‘are’, ‘have’. This helps spot that this is a boolean while skimming the code. Still declared in camelCase.\nlet isTurnedOn = false Page Objects / Classes Declare in PascalCase.\nUse descriptive naming, which can help the reader quickly identify what page or page component this is covering. Use as much context as needed from your product to make the name meaningful.\nDO NOT ⚔️\nexport class newModal DO 👍\nexport class AddWorksOrderModal Locators Use descriptive naming, which can help the reader quickly identify what element the locator is targeting.\nAs an example, you can use a naming structure that contains “action / name of element” + “type of element”.\nDefining type of element - These are your basic HTML element types, they’ll be defined and named in the design system, or as a team you can align on a consistent naming of the elements. Example: checkbox, tickbox, button, tooltip\nDefining action / name - Think about what action this element will perform when interacted with. Or any existing name/text of the element\nDO 👍\n// This element is a submit button for the user registration form const submitButton = await page.locator(\u0026#34;\u0026lt;locator-path\u0026gt;\u0026#34;); DO 👍\n// This element is a button for uploading a profile picture const uploadProfilePictureButton = await page.locator(\u0026#34;\u0026lt;locator-path\u0026gt;\u0026#34;); Function names Always start function names with a “verb”, followed by the “component context” that the function is interacting with i.e. what entity it is having an effect on.\nDO 👍\ngetWorksOrder() printTransactions() deleteProperty() Gherkin Best Practices: Do\u0026rsquo;s and Don\u0026rsquo;ts for Effective Features \u0026amp; Scenarios Writing Features DO 👍\nBe Descriptive: Use clear and descriptive language that accurately reflects the functionality. Keep It Concise: Avoid overly long titles or descriptions. Aim for brevity while maintaining clarity. Use Active Voice: Write in an active voice to make it clear who is performing the action. Contextual Information: If applicable, provide context about the user role or the scenario to clarify who benefits from the feature. DO NOT ⚔️\nAvoid Vague Titles: Titles like \u0026ldquo;Test Feature\u0026rdquo; or \u0026ldquo;Feature 1\u0026rdquo; do not provide meaningful information. Neglect User Perspective: Failing to mention the user role can make it unclear who the feature is intended for. Example of a well-written feature:\nFeature: Password Management for Registered Users As a registered user I want to set a new password So that I can secure my account Writing Scenarios Use Clear and Descriptive Scenario Titles: Ensure that each scenario title clearly conveys the action being tested and the expected outcome. Scenario: User successfully registers with valid details Use Clear Given/When/Then Steps: Clearly define the context, action, and expected outcome(success or error messages if any). Given the user is on the registration page When the user enters valid details Then the user should see a confirmation message \u0026#34;Registration successful! Welcome to our platform.\u0026#34; Use \u0026ldquo;tries to\u0026rdquo; for Negation: This syntax is effective for scenarios where an action is expected to fail. Scenario: User tries to log in with incorrect credentials Given the user is on the registration page When the user tries to log in with username \u0026#34;Alice\u0026#34; and password \u0026#34;wrongPassword\u0026#34; Then the user should see an error message \u0026#34;\u0026#34;\u0026#34; Incorrect username or password. \u0026#34;\u0026#34;\u0026#34; Broad Gherkin Guidelines This ownCloud developer manual provides comprehensive guidelines and best practices for writing acceptance tests using the Gherkin syntax, a widely adopted language for defining test scenarios in a human-readable format. The manual outlines the specific syntax and structure required when crafting feature files and scenarios to ensure consistency and maintainability within the ownCloud testing framework.\n","description":"Introduction Folder Structure: Test Structure - Arrange, Act, Assert: Page Object Model (POM) Waiting: Selectors Naming Conventions Files and folders Variables Booleans Page Objects / Classes Locators Function names Gherkin Best Practices: Do\u0026rsquo;s and Don\u0026rsquo;ts for Effective Features \u0026amp; Scenarios Writing Features Writing Scenarios Broad Gherkin Guidelines Introduction In ownCloud, we use Playwright for webUI test automation. We benefit from lower barriers to entry, readability, and usability when test standards are consistent across repositories."},{"id":243,"href":"/clients/web/extension-system/extension-types/app-menu-items/","title":"Application menu item extensions","parent":"Extension Types","content":" Extension Type AppMenuItem Configuration Example Extension Type AppMenuItem This extension type allows apps to register links to internal or external pages within the application switcher menu on the top left.\nConfiguration The Interface for an AppMenuItemExtension looks like so:\ninterface AppMenuItemExtension { id: string type: \u0026#39;appMenuItem\u0026#39; extensionPointIds?: string[] label: () =\u0026gt; string color?: string handler?: () =\u0026gt; void icon?: string path?: string priority?: number url?: string } For id, type, and extensionPointIds, please see extension base section in the top level docs.\nA handler will result in a \u0026lt;button\u0026gt; element. This is necessary when an action should be performed when clicking the menu item (e.g. opening a file editor).\nA path will result in an \u0026lt;a\u0026gt; element that links to an internal page via the vue router. That means the given path needs to exist within the application.\nA url will result in an \u0026lt;a\u0026gt; element that links to an external page. External pages always open in a new tab or window.\nAt least one of these properties has to be provided when registering an extension. If you define more than one, the priority order is handler \u0026gt; path \u0026gt; url.\npriority specifies the order of the menu items. 50 is a good number to start with, then go up/down based on where the item should be placed. Defaults to the highest possible number, so the item will most likely end up at the bottom of the list if you don\u0026rsquo;t specify a priority. Leave it empty if unsure what to pick.\nExample The following example shows how an app creates an extension that registers an app menu item, linking to an internal page. All helper types and composables are being provided via the web-pkg package.\nexport default defineWebApplication({ setup() { const { $gettext } = useGettext() const appId = \u0026#39;my-cool-app\u0026#39; const menuItems = computed\u0026lt;AppMenuItemExtension[]\u0026gt;(() =\u0026gt; [ { id: \u0026#39;com.github.owncloud.web.my-cool-app.menu-item\u0026#39;, type: \u0026#39;appMenuItem\u0026#39;, label: () =\u0026gt; $gettext(\u0026#39;My cool app\u0026#39;), path: urlJoin(appId), icon: \u0026#39;star\u0026#39;, color: \u0026#39;#0D856F\u0026#39;, priority: 60 } ]) return { appInfo: { name: $gettext(\u0026#39;My cool app\u0026#39;), id: appId }, extensions: menuItems } } }) ","description":"Extension Type AppMenuItem Configuration Example Extension Type AppMenuItem This extension type allows apps to register links to internal or external pages within the application switcher menu on the top left.\nConfiguration The Interface for an AppMenuItemExtension looks like so:\ninterface AppMenuItemExtension { id: string type: \u0026#39;appMenuItem\u0026#39; extensionPointIds?: string[] label: () =\u0026gt; string color?: string handler?: () =\u0026gt; void icon?: string path?: string priority?: number url?: string } For id, type, and extensionPointIds, please see extension base section in the top level docs."},{"id":244,"href":"/clients/web/extension-system/viewer-editor-apps/","title":"Viewer and editor apps","parent":"Extension system","content":" Viewer and editor apps Basic app structure App setup Viewer and editor apps ownCloud Web allows developers to implement apps for viewing and editing specific file types. For instance, the built-in preview app serves as the default application for opening media files like images, videos, or audio.\nThis section will guide you through the process of implementing such an app within ownCloud Web.\nBasic app structure An app is essentially a distinct package that must be specified as an external application in the Web configuration.\nThe structure of an app is quite simple and straightforward. Consider, for example, the pdf-viewer app. It consists of a package.json file, a src directory containing all the source code, and a l10n directory for translations. Optionally, you may also include a tests directory if your application requires testing.\nTo learn more about apps in general, please refer to the Web app docs.\nApp setup Inside the src folder you will need an index.ts file that sets up the app so it can be registered by the Web runtime. It follows the basic structure as described in the apps section, so it may look like this:\nimport { AppWrapperRoute, defineWebApplication, AppMenuItemExtension } from \u0026#39;@ownclouders/web-pkg\u0026#39; import translations from \u0026#39;../l10n/translations.json\u0026#39; import { useGettext } from \u0026#39;vue3-gettext\u0026#39; import { computed } from \u0026#39;vue\u0026#39; // This is the base component of your app. import App from \u0026#39;./App.vue\u0026#39; export default defineWebApplication({ setup() { // The ID of your app. const appId = \u0026#39;advanced-pdf-viewer\u0026#39; const { $gettext } = useGettext() // This creates a route under which your app can be opened. // Later, this route will be bound to one or more file extensions. const routes = [ { name: \u0026#39;advanced-pdf-viewer\u0026#39;, path: \u0026#39;/:driveAliasAndItem(.*)?\u0026#39;, component: AppWrapperRoute(App, { applicationId: appId }), meta: { authContext: \u0026#39;hybrid\u0026#39;, title: $gettext(\u0026#39;Advanced PDF Viewer\u0026#39;), patchCleanPath: true } } ] // if you want your app to be present in the app menu on the top left. const menuItems = computed\u0026lt;AppMenuItemExtension[]\u0026gt;(() =\u0026gt; [ { label: () =\u0026gt; $gettext(\u0026#39;Advanced PDF Viewer\u0026#39;), type: \u0026#39;appMenuItem\u0026#39;, handler: () =\u0026gt; { // do stuff... } } ]) return { appInfo: { name: \u0026#39;Advanced PDF Viewer\u0026#39;, id: appId, defaultExtension: \u0026#39;pdf\u0026#39;, extensions: [ // This makes sure all files with the \u0026#34;pdf\u0026#34; extension will be routed to your app when being opened. // See the `ApplicationFileExtension` interface down below for a list of all possible properties. { extension: \u0026#39;pdf\u0026#39;, routeName: \u0026#39;advanced-pdf-viewer\u0026#39;, // Add this if you want your app to be present in the \u0026#34;New\u0026#34; file menu. newFileMenu: { menuTitle() { return $gettext(\u0026#39;PDF document\u0026#39;) } } } ] }, routes, translations, extensions: menuItems } } }) Here is the interface defining the extensions property of the appInfo object.\ninterface ApplicationFileExtension { app?: string extension?: string createFileHandler?: (arg: { fileName: string space: SpaceResource currentFolder: Resource }) =\u0026gt; Promise\u0026lt;Resource\u0026gt; hasPriority?: boolean label?: string name?: string icon?: string mimeType?: string newFileMenu?: { menuTitle: () =\u0026gt; string } routeName?: string } ","description":"Viewer and editor apps Basic app structure App setup Viewer and editor apps ownCloud Web allows developers to implement apps for viewing and editing specific file types. For instance, the built-in preview app serves as the default application for opening media files like images, videos, or audio.\nThis section will guide you through the process of implementing such an app within ownCloud Web.\nBasic app structure An app is essentially a distinct package that must be specified as an external application in the Web configuration."},{"id":245,"href":"/clients/web/extension-system/extension-types/custom-components/","title":"Custom component extensions","parent":"Extension Types","content":" Extension Type CustomComponent Configuration Example Extension Type CustomComponent CustomComponent extensions need to define one or multiple extensionPointIds as render target. A CustomComponentTarget component for this very extension point needs to be mounted in the current view.\nConfiguration To define a custom component extension, you implement the CustomComponentExtension interface. Here\u0026rsquo;s what it looks like:\ninterface CustomComponentExtension { id: string type: \u0026#39;customComponent\u0026#39; extensionPointIds?: string[] content: Slot | Component } For id, type, and extensionPointIds, please see extension base section in the top level docs.\nThe content property specifies a render function or a Component for the target extension point.\nExample A simple example for a custom component extension could be a NyanCat progress bar component, being targeted at the global-progress-bar extension point as render target.\nconst extension = { id: \u0026#39;com.github.owncloud.web.app.progress-bars.nyan-cat\u0026#39;, type: \u0026#39;customComponent\u0026#39;, extensionPointIds: [\u0026#39;app.runtime.global-progress-bar\u0026#39;], content: (slots) =\u0026gt; [h(NyanCat, slots)], userPreference: { optionLabel: $gettext(\u0026#39;Nyan Cat progress bar\u0026#39;) } } The content property in this example can also be defined as content: NyanCat.\n","description":"Extension Type CustomComponent Configuration Example Extension Type CustomComponent CustomComponent extensions need to define one or multiple extensionPointIds as render target. A CustomComponentTarget component for this very extension point needs to be mounted in the current view.\nConfiguration To define a custom component extension, you implement the CustomComponentExtension interface. Here\u0026rsquo;s what it looks like:\ninterface CustomComponentExtension { id: string type: \u0026#39;customComponent\u0026#39; extensionPointIds?: string[] content: Slot | Component } For id, type, and extensionPointIds, please see extension base section in the top level docs."},{"id":246,"href":"/clients/web/extension-system/extension-types/actions/","title":"Action extensions","parent":"Extension Types","content":" Action extension type Configuration Action Example Action extension type Actions are one of the possible extension types. Registered actions get rendered in various places across the UI, depending on their scope and targets.\nConfiguration This is what the ActionExtension interface looks like:\ninterface ActionExtension { id: string type: \u0026#39;action\u0026#39; extensionPointIds?: string[] action: Action // Please check the Action section below } For id, type, and extensionPointIds, please see extension base section in top level docs.\nAction The most important configuration options are:\nicon - The icon to be displayed, can be picked from https://owncloud.design/#/Design%20Tokens/IconList name - The name of the action (not displayed in the UI) label - The text to be displayed route - The string/route to navigate to. The nav item will be a \u0026lt;router-link\u0026gt; tag. href - The URL to navigate to. The nav item will be a \u0026lt;a\u0026gt;tag. handler - The action to perform upon click. The nav item will be a \u0026lt;button\u0026gt; tag. isVisible - Determines whether the action is displayed to the user Please check the Action type for a full list of configuration options.\nExample The following example shows how an action extension for downloading files could look like. Note that the extension is wrapped inside a Vue composable so it can easily be reused. All helper types and composables are being provided via the web-pkg package.\nexport const useDownloadFilesExtension = () =\u0026gt; { const { $gettext } = useGettext() const extension = computed\u0026lt;ActionExtension\u0026gt;(() =\u0026gt; ({ id: \u0026#39;com.github.owncloud.web.files.download-action\u0026#39;, scopes: [\u0026#39;resource\u0026#39;], type: \u0026#39;action\u0026#39;, action: { name: \u0026#39;download-files\u0026#39;, icon: \u0026#39;download\u0026#39;, class: \u0026#39;oc-files-actions-download-files\u0026#39;, label: () =\u0026gt; $gettext(\u0026#39;Download\u0026#39;), isVisible: ({ space, resources }) =\u0026gt; { if (resources.length === 0) { return false } return true }, handler: ({ space, resources }) =\u0026gt; { console.log(\u0026#39;Triggering download...\u0026#39;) } } })) return { extension } } The extension could then be registered in any app like so:\nexport default defineWebApplication({ setup() { const { extension } = useFileActionDownloadFiles() return { appInfo: { name: $gettext(\u0026#39;Download app\u0026#39;), id: \u0026#39;download-app\u0026#39; }, extensions: computed(() =\u0026gt; [unref(extension)]) } } }) ","description":"Action extension type Configuration Action Example Action extension type Actions are one of the possible extension types. Registered actions get rendered in various places across the UI, depending on their scope and targets.\nConfiguration This is what the ActionExtension interface looks like:\ninterface ActionExtension { id: string type: \u0026#39;action\u0026#39; extensionPointIds?: string[] action: Action // Please check the Action section below } For id, type, and extensionPointIds, please see extension base section in top level docs."},{"id":247,"href":"/clients/web/extension-system/","title":"Extension system","parent":"ownCloud Web","content":" Concepts and Building Blocks Distinction between Apps and Extensions Examples Apps Extensions Extension Registry Extension Types Extension Base Configuration Extension Points User Preferences for Extensions Helpful packages Concepts and Building Blocks ownCloud Web can be extended through various entry points with custom apps and extensions.\nDistinction between Apps and Extensions An Application in the context of ownCloud Web is an artifact which can be installed in an ownCloud Infinite Scale instance. It serves two main purposes:\nIt makes the full app viewport (everything below the top bar) available to the application developer for any custom application code. This includes the ability to define views with routes, navigation items for the left sidebar, and more. Through the extensions key in the application interface you can register extensions of any extension type. Those extensions are then available in standardized extension points. Additionally, they can be queried from the extension registry for your own purposes. Both parts are optional. This means that an application can be a file editor without any custom extensions, or even contain no custom application code at all and only host extensions to be registered in the extension registry, or a combination of both.\nExamples You can find open source examples for apps and extensions in our curated list of ownCloud apps and extensions. Feel free to contribute or just be inspired for your own apps or extensions.\nApps To get started, define a src/index.ts. Below is the most basic example of its content:\n// Install \u0026#39;@ownclouders/web-pkg\u0026#39; as a devDependency first (only relevant for types and autocompletion, dependency is already provided by ownCloud Web at runtime). import { AppWrapperRoute, ApplicationFileExtension, defineWebApplication } from \u0026#39;@ownclouders/web-pkg\u0026#39; export default defineWebApplication({ setup({ applicationConfig }) { // Here, you have access to the full injection context, meaning you can use all composables that we provide via web-pkg // Needs to be unique within all installed applications in any ownCloud web instance // Should be short, unique and expressive as it is used as prefix on all routes within your application const appId = \u0026#39;your-extension\u0026#39; // See extensions section below const extensions = [ ... ] // See details below const navItems = [ ... ] // See details below const routes = [ ... ] return { appInfo: { name: $gettext(\u0026#39;Your application name\u0026#39;), id: appId, icon: \u0026#39;aliens\u0026#39;, // See https://owncloud.design/#/Design%20Tokens/IconList for available options }, extensions, navItems, routes } } }) By defining an application via defineWebApplication you can provide the following:\nappInfo - the application metadata, which is used to make the application available via the app switcher and the app registry. navItems - the statically defined navigation items for the left sidebar. Only gets rendered when more than 1 navigation item exists at runtime. Additional dynamic navigation items can be registered via the extension registry. routes - the routes to the different views of your application. May be referenced within the navItems. Authentication requirements can be defined per item. extensions - the extensions to be registered in the extension registry. For more details see the Extensions section below. If you want to learn how to implement an app for viewing and editing specific file types, please consult the relevant documentation for detailed instructions and guidance.\nTo learn how to integrate an app into ownCloud Web, please refer to the \u0026ldquo;Web Apps\u0026rdquo; section of the Web service docs (\u0026ldquo;Services\u0026rdquo; \u0026gt; \u0026ldquo;Web\u0026rdquo;).\nExtensions In contrast to applications, extensions usually have a rather small scope and dedicated functionality.\nExtension Registry The globally available extension registry provided by the ownCloud Web runtime can be used to both register and query extensions. All extensions which are being made available via an app get registered in the extension registry automatically. In your custom application code you can then query any of the available extensions by providing an extensionPoint entity. Throughout the ownCloud Web platform and most prominently also in the files app we have defined some extension points which automatically use certain extensions, see the Extension Points section below.\nExtension Types For building an extension you can choose from the types predefined by the ownCloud Web extension system. See the full list of available extension types below.\nActionExtension (type action) - An extension that can register Action items which then get shown in various places (e.g. context menus, batch actions), depending on the extension points referenced in the extension respectively. Most commonly used for file and folder actions (e.g. copy, rename, delete, etc.). For details, please refer to the action docs. SearchExtension (type search) - An extension that can register additional search providers. For details, please refer to the search docs. SidebarNavExtension (type sidebarNav) - An extension that can register additional navigation items for the left sidebar. These can be scoped to specific apps, and programmatically enabled/disabled. For details, please refer to the sidebar nav docs. SidebarPanelExtension, (type sidebarPanel) - An extension that can register panels for the right sidebar. For details, please refer to the sidebar panel docs. FolderViewExtension (type folderView) - An extension that can register additional ways of displaying the content of a folder (resources like spaces, folders or files) to the user. For details, please refer to the folder view docs. CustomComponentExtension (type customComponent) - An extension that can register a custom component for a render target. For details, please refer to the custom component docs You\u0026rsquo;re free to introduce your own extension types within your application code and use the extension registry to query the available ones. However, if you have the impression that an important extension type is missing and would be beneficial for the platform, please reach out to us by opening a GitHub issue.\nExtension Base Configuration Any extension is required to define at least an id and a type in order to fulfill the generic Extension interface.\nThe id is supposed to be unique throughout the ownCloud Web ecosystem. In order to keep ids readable for humans we didn\u0026rsquo;t want to enforce uniqueness through e.g. uuids. Instead, we chose to use dot-formatted namespaces like e.g. com.github.owncloud.web.files.search. We\u0026rsquo;d like to encourage you to follow the same format for your own extensions.\nFor the type you can choose from the ones listed above or define a custom one.\nIn addition, you can also pass optional extensionPointIds to further limit the usage of an extension. With the right click context menu and the batch actions being two different extension points, this could mean that a file action extension is only allowed in the context menu, but not in the batch actions. You can find predefined extension point ids in the extension points section below.\nExtension Points There are standardized components and places where extensions are being used automatically. The following ones are currently provided by the ownCloud Web runtime or the files app. If you decide to develop an extension which fulfills the type and registers itself for the extensionPointId of the respective extension point, your extension will be used automatically.\nLeft Sidebar for Navigation. ExtensionPointId app.${appName}.navItems (dynamically created for each app). Mounts extensions of type sidebarNav. Global top bar Center area. ExtensionPointId app.runtime.header.center. Mounts extensions of type customComponent. Progress bar for the global loading state. ExtensionPointId app.runtime.global-progress-bar. Mounts a single extensions of type customComponent. If multiple exist, the user can choose via the account page. Files app Right sidebar. ExtensionPointId app.files.sidebar. Mounts extensions of type sidebarPanel. Used in any file(s) context (files app, file viewer apps, file editor apps). Folder views for regular folders. ExtensionPointId app.files.folder-views.folder. Mounts extensions of type folderView. Folder views for the project spaces overview. ExtensionPointId app.files.folder-views.project-spaces. Mounts extensions of type folderView. Folder views for the favorites page. ExtensionPointId app.files.folder-views.favorites. Mounts extensions of type folderView. Right click context menu. ExtensionPointId global.files.context-actions. Mounts extensions of type action. Batch actions in the app bar above file lists. ExtensionPointId global.files.batch-actions. Mounts extensions of type action. Default actions (left click) on a file. ExtensionPointId global.files.default-actions. Mounts extensions of type action. Upload menu. ExtensionPointId app.files.upload-menu. Mounts extensions of type action. Quick actions. ExtensionPointId app.files.quick-actions. Mounts extensions of type action. Global search providers. ExtensionPointId app.search.providers. Utilizes extensions of type search as search engines for the search input in the global top bar. User Preferences for Extensions To allow users to configure extensions, extension points can define user preferences. User preferences are defined as an object on the extension point configuration. Whenever an extension point declares to accept user preferences, it will get listed with a dropdown on the Preferences page (reachable via top right user menu). The user can then select one out of all the extensions which have been registered for this extension point.\nHelpful packages We currently offer the following packages that can be integrated into your app, providing useful utilities and types.\nweb-client - This package serves as an abstraction layer between the server APIs and an app or extension. It converts raw API data into objects with helpful types and utilities. For details, please refer to the package\u0026rsquo;s README.md. web-pkg - This package provides utilities, most importantly a variety of components and composables, that can be useful when developing apps and extensions. For details, please refer to the package\u0026rsquo;s README.md. ","description":"Concepts and Building Blocks Distinction between Apps and Extensions Examples Apps Extensions Extension Registry Extension Types Extension Base Configuration Extension Points User Preferences for Extensions Helpful packages Concepts and Building Blocks ownCloud Web can be extended through various entry points with custom apps and extensions.\nDistinction between Apps and Extensions An Application in the context of ownCloud Web is an artifact which can be installed in an ownCloud Infinite Scale instance."},{"id":248,"href":"/clients/web/extension-system/extension-types/folder-view/","title":"Folder View extensions","parent":"Extension Types","content":" Folder view extension type The folder view is one of the possible extension types. Registered folder view can be used to render multiple resources (folders, files, spaces) in the UI.\nConfiguration This is what the FolderViewExtension interface looks like:\ninterface FolderViewExtension { id: string type: \u0026#39;folderView\u0026#39; extensionPointIds?: string[] folderView: FolderView // See FolderView section below } For id, type, and extensionPointIds, please see extension base section in top level docs.\nFolderView For the folderView object, you have the following configuration options:\nname - The name of the action (not displayed in the UI) label - The text to be displayed to the user when switching between different FolderView options icon - Object, expecting an icon name and a corresponding IconFillType, see https://owncloud.design/#/Design%20Tokens/IconList for available options isScrollable - Optional boolean, determines whether the user can scroll inside the component or it statically fills the viewport component - The Vue component to render the resources. It should expect a prop of type Resource[] componentAttrs - Optional additional configuration for the component mentioned above Example The following example shows how an extension for a custom folder view could look like. Note that the extension is wrapped inside a Vue composable so it can easily be reused. All helper types and composables are being provided via the web-pkg package.\nexport const useCustomFolderViewExtension = () =\u0026gt; { const { $gettext } = useGettext() const extension = computed\u0026lt;FolderViewExtension\u0026gt;(() =\u0026gt; ({ id: \u0026#39;com.github.owncloud.web.files.folder-view.custom\u0026#39;, type: \u0026#39;folderView\u0026#39;, scopes: [\u0026#39;resource\u0026#39;, \u0026#39;space\u0026#39;, \u0026#39;favorite\u0026#39;], folderView: { name: \u0026#39;custom-table\u0026#39;, label: $gettext(\u0026#39;Switch to custom folder view\u0026#39;), icon: { name: \u0026#39;menu-line\u0026#39;, fillType: \u0026#39;none\u0026#39; }, component: YourCustomFolderViewComponent } })) return { extension } } The extension could then be registered in any app like so:\nexport default defineWebApplication({ setup() { const { extension } = useCustomFolderViewExtension() return { appInfo: { name: $gettext(\u0026#39;Custom folder view app\u0026#39;), id: \u0026#39;custom-folder-view-app\u0026#39; }, extensions: computed(() =\u0026gt; [unref(extension)]) } } }) ","description":"Folder view extension type The folder view is one of the possible extension types. Registered folder view can be used to render multiple resources (folders, files, spaces) in the UI.\nConfiguration This is what the FolderViewExtension interface looks like:\ninterface FolderViewExtension { id: string type: \u0026#39;folderView\u0026#39; extensionPointIds?: string[] folderView: FolderView // See FolderView section below } For id, type, and extensionPointIds, please see extension base section in top level docs."},{"id":249,"href":"/clients/web/extension-system/extension-types/left-sidebar-menu-item/","title":"Left sidebar menu item extensions","parent":"Extension Types","content":" Left sidebar menu item extension type Configuration AppNavigationItem Example Left sidebar menu item extension type One possible extension type is left sidebar menu items. Registered left sidebar menu items get rendered in the left sidebar, as long as there is more than one available.\nConfiguration To define a left sidebar menu item, you implement the SidebarNavExtension interface. It looks like this:\ninterface SidebarNavExtension { id: string type: \u0026#39;sidebarNav\u0026#39; extensionPointIds?: string[] navItem: AppNavigationItem // Please check the AppNavigationItem section below } } For id, type, and extensionPointIds, please see extension base section in top level docs.\nAppNavigationItem The most important configuration options are:\nicon - The icon to be displayed, can be picked from https://owncloud.design/#/Design%20Tokens/IconList name - The text to be displayed route - The string/route to navigate to, if the nav item should be a \u0026lt;router-link\u0026gt; (Mutually exclusive with handler) handler - The action to perform upon click, if the nav item should be a \u0026lt;button\u0026gt; (Mutually exclusive with route) Please check the AppNavigationItem type for a full list of configuration options.\nExample The following example shows an extension that adds a left sidebar nav item inside the files app, linking to a custom page. Note that the extension is wrapped inside a Vue composable so it can easily be reused. All helper types and composables are being provided via the web-pkg package.\nexport const useCustomPageExtension = () =\u0026gt; { const { $gettext } = useGettext() const extension = computed\u0026lt;SidebarNavExtension\u0026gt;(() =\u0026gt; ({ id: \u0026#39;com.github.owncloud.web.files.left-nav.custom-page\u0026#39;, scopes: [\u0026#39;app.files\u0026#39;], type: \u0026#39;sidebarNav\u0026#39;, action: { name: $gettext(\u0026#39;Custom page\u0026#39;), icon: \u0026#39;world\u0026#39;, priority: 100, isActive: () =\u0026gt; true, isVisible: () =\u0026gt; true, route: { path: \u0026#39;/files/custom-page\u0026#39; }, activeFor: [{ path: \u0026#39;/files/custom-page\u0026#39; }] } })) return { extension } } The extension could then be registered in any app like so:\nexport default defineWebApplication({ setup() { const { extension } = useCustomPageExtension() return { appInfo: { name: $gettext(\u0026#39;Custom page app\u0026#39;), id: \u0026#39;custom-page-app\u0026#39; }, routes: { path: \u0026#39;/files/custom-page\u0026#39;, name: \u0026#39;files-custom-page\u0026#39;, component: CustomPageComponent, meta: { title: $gettext(\u0026#39;Custom Page\u0026#39;) } }, extensions: computed(() =\u0026gt; [unref(extension)]) } } }) ","description":"Left sidebar menu item extension type Configuration AppNavigationItem Example Left sidebar menu item extension type One possible extension type is left sidebar menu items. Registered left sidebar menu items get rendered in the left sidebar, as long as there is more than one available.\nConfiguration To define a left sidebar menu item, you implement the SidebarNavExtension interface. It looks like this:\ninterface SidebarNavExtension { id: string type: \u0026#39;sidebarNav\u0026#39; extensionPointIds?: string[] navItem: AppNavigationItem // Please check the AppNavigationItem section below } } For id, type, and extensionPointIds, please see extension base section in top level docs."},{"id":250,"href":"/clients/web/extension-system/extension-types/right-sidebar-panels/","title":"Right sidebar panel extensions","parent":"Extension Types","content":" Extension Type SideBarPanel Configuration SideBarPanelContext SideBarPanel Extension Point FileSideBar Example Extension Type SideBarPanel The right sidebar is supposed to show information and make context specific actions available for single or multiple selected items.\nIt is structured in a hierarchical way:\nPanels which are defined as root panels get rendered as immediate members of the right sidebar. Panels which are defined as non-root panels receive a navigation item below the root panels so that users can navigate into the respective sub panel. Configuration To define a right sidebar panel extension, you implement the SidebarPanelExtension interface. It can be found below:\ninterface SidebarPanelExtension\u0026lt;R extends Item, P extends Item, T extends Item\u0026gt; { id: string type: \u0026#39;sidebarPanel\u0026#39; extensionPointIds?: string[] panel: SideBarPanel\u0026lt;R, P, T\u0026gt; // Please check the SideBarPanel section below } For id, type, and extensionPointIds, please see extension base section in the top level docs.\nThe panel object configures the actual sidebar panel. It consists of different properties and functions, where all the functions get called with a SideBarPanelContext entity from the integrating extension points.\nSideBarPanelContext interface SideBarPanelContext\u0026lt;R extends Item, P extends Item, T extends Item\u0026gt; { root?: R parent?: P items?: T[] } items - The most important member of the panel context, which denotes all selected items. That can mean all selected files in a files listing, all selected users in a user listing, the individual current file in a file editor. parent - The immediate parent of the selected items. For example, if the user selects a file in a file listing, the parent is the parent folder, or if being in a root of a space, the space itself. Can be null for non-hierarchical contexts, e.g. a user listing. root - The uppermost parent of the selected items. For example, if the user selects a file in a file listing, the root is always the space in which the selected files reside. Can be null for non-hierarchical contexts, e.g. a user listing. SideBarPanel interface SideBarPanel\u0026lt;R extends Item, P extends Item, T extends Item\u0026gt; { name: string icon: string iconFillType?: IconFillType title(context: SideBarPanelContext\u0026lt;R, P, T\u0026gt;): string isVisible(context: SideBarPanelContext\u0026lt;R, P, T\u0026gt;): boolean component: Component componentAttrs?(context: SideBarPanelContext\u0026lt;R, P, T\u0026gt;): any isRoot?(context: SideBarPanelContext\u0026lt;R, P, T\u0026gt;): boolean } name - A human readable id for the panel. icon, iconFillType and title - Properties which are used to render the panel itself or right sidebar navigation items for navigating into that panel. isVisible - Determines if the panel is available for the given panel context. component - Provides a component that renders the actual sidebar panel. componentAttrs - Defines additional props for the component with the given panel context. isRoot - Determines if the panel is a root panel for the given panel context. Extension Point FileSideBar In the context of files (e.g. file listing, text editor for a single file, etc.) we have a dedicated component FileSideBar which can be toggled (shown/hidden) with a button in the top bar. The component queries all extensions of the type sideBarPanel from the extension registry that also fulfill the scope resource. By registering an custom extension of type sideBarPanel and scope resource, your extension will automatically become available in all environments that display the FileSideBar (i.e. any file viewer, file editor, file listing).\nExample The following example shows how a sidebar panel for displaying exif data for a resource could look like. Note that the extension is wrapped inside a Vue composable so it can easily be reused. All helper types and composables are being provided via the web-pkg and the web-client packages.\nexport const useExifDataPanelExtension = () =\u0026gt; { const { $gettext } = useGettext() const extension = computed\u0026lt;SidebarPanelExtension\u0026lt;SpaceResource, Resource, Resource\u0026gt;\u0026gt;(() =\u0026gt; ({ id: \u0026#39;com.github.owncloud.web.files.sidebar-panel.exif-data\u0026#39;, type: \u0026#39;sidebarPanel\u0026#39;, scopes: [\u0026#39;resource\u0026#39;], panel: { name: \u0026#39;exif-data\u0026#39;, icon: \u0026#39;image\u0026#39;, title: () =\u0026gt; $gettext(\u0026#39;EXIF data\u0026#39;), component: ExifDataPanelComponent, isRoot: () =\u0026gt; true, isVisible: ({ items }) =\u0026gt; { if (items?.length !== 1) { return false } return true } } })) return { extension } } The extension can then be registered in any app like so:\nexport default defineWebApplication({ setup() { const { extension } = useExifDataPanelExtension() return { appInfo: { name: $gettext(\u0026#39;Exif panel app\u0026#39;), id: \u0026#39;exif-panel-app\u0026#39; }, extensions: computed(() =\u0026gt; [unref(extension)]) } } }) ","description":"Extension Type SideBarPanel Configuration SideBarPanelContext SideBarPanel Extension Point FileSideBar Example Extension Type SideBarPanel The right sidebar is supposed to show information and make context specific actions available for single or multiple selected items.\nIt is structured in a hierarchical way:\nPanels which are defined as root panels get rendered as immediate members of the right sidebar. Panels which are defined as non-root panels receive a navigation item below the root panels so that users can navigate into the respective sub panel."},{"id":251,"href":"/clients/web/extension-system/extension-types/search/","title":"Search extensions","parent":"Extension Types","content":" Search extensions Configuration ListSearch PreviewSearch Example Search extensions One possible extension type is search. Registered search extensions are available when using the search field in the topbar. A search extension can consist of a list and a preview search. The result of a preview search is shown below the search input field while the list search result is\nConfiguration An example of a search extension configuration can be found below:\ninterface SearchExtension { id: string type: \u0026#39;search\u0026#39; extensionPointIds?: string[] searchProvider: { id: string available: boolean displayName?: string previewSearch?: SearchPreview // See SearchPreview section below listSearch?: SearchList // See SearchList section below } } For id, type, and extensionPointIds, please see extension base section in top level docs.\nThe searchProvider object configures the actual provider. It consist of the following:\nid - Since your extension has an id and can only have one searchProvider, you can reuse the same value available - Can be used to programmatically disable/enable any searchProvider, e.g. by dynamically checking backend capabilities displayName - Optional, used to add a small hint to indicate the connection between search providers and their corresponding results previewSearch - See below listSearch - See below ListSearch The listSearch object consists of:\ncomponent - Vue component that can render the values from the SearchResult below search(term: string) - Function that exectues the search, based on a given term. The term is formatted in KQL. Please note that the returned values needs to be formatted to fit either SearchResource or GenericSearchResultItem type PreviewSearch The previewSearch object extends the listSearch with one additional attribute:\navailable - Indicates whether a preview underneath the search bar is available for this search provider Example The following example shows how a search extension that queries a Solr search engine could look like. Note that the extension is wrapped inside a Vue composable so it can easily be reused. All helper types and composables are being provided via the web-pkg and the web-client packages.\nexport const useSolrSearchExtension = () =\u0026gt; { const { $gettext } = useGettext() const previewSearch: SearchPreview = { component: SolarSearchComponent, // see the next example snippet available: () =\u0026gt; true, search: (term) =\u0026gt; { // actual search implementation console.log(\u0026#39;Querying solr search engine...\u0026#39;) } } const searchProvider: SearchProvider = { id: \u0026#39;solr-search\u0026#39;, available: true, displayName: \u0026#39;Solr Search\u0026#39;, previewSearch } const extension = computed\u0026lt;SearchExtension\u0026gt;(() =\u0026gt; ({ id: \u0026#39;com.github.owncloud.web.solr-search\u0026#39;, type: \u0026#39;search\u0026#39;, searchProvider })) return { extension } } The search component for the preview search container may look like this:\n\u0026lt;template\u0026gt; \u0026lt;resource-list-item :resource=\u0026#34;resource\u0026#34; /\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script lang=\u0026#34;ts\u0026#34;\u0026gt; import { computed, defineComponent, PropType } from \u0026#39;vue\u0026#39; import { Resource } from \u0026#39;@ownclouders/web-client\u0026#39; import { SearchResultValue, ResourceListItem } from \u0026#39;@ownclouders/web-pkg\u0026#39; export default defineComponent({ name: \u0026#39;SolarSearchComponent\u0026#39;, components: { ResourceListItem }, props: { searchResult: { type: Object as PropType\u0026lt;SearchResultValue\u0026gt;, default: () =\u0026gt; ({}) } }, setup(props) { const resource = computed\u0026lt;Resource\u0026gt;(() =\u0026gt; props.searchResult.data) return { resource } } }) \u0026lt;/script\u0026gt; The extension can then be registered in any app like so:\nexport default defineWebApplication({ setup() { const { extension } = useSolrSearchExtension() return { appInfo: { name: $gettext(\u0026#39;Solr search app\u0026#39;), id: \u0026#39;solrs-search-app\u0026#39; }, extensions: computed(() =\u0026gt; [unref(extension)]) } } }) ","description":"Search extensions Configuration ListSearch PreviewSearch Example Search extensions One possible extension type is search. Registered search extensions are available when using the search field in the topbar. A search extension can consist of a list and a preview search. The result of a preview search is shown below the search input field while the list search result is\nConfiguration An example of a search extension configuration can be found below:"},{"id":252,"href":"/clients/web/embed-mode/","title":"Embed Mode","parent":"ownCloud Web","content":" Getting started Communication Target origin Events Example Location picker Example File picker Example Delegate authentication Configuration Events Opening Embed mode Updating the token The ownCloud Web can be consumed by another application in a stripped down version called \u0026ldquo;Embed mode\u0026rdquo;. This mode is supposed to be used in the context of selecting or sharing resources. If you\u0026rsquo;re looking for even more minimalistic approach, you can take a look at the File picker.\nGetting started To integrate ownCloud Web into your application, add an iframe element pointing to your ownCloud Web deployed instance with additional query parameter embed=true.\n\u0026lt;iframe src=\u0026#34;\u0026lt;web-url\u0026gt;?embed=true\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; Communication To establish seamless cross-origin communication between the embedded instance and the parent application, our approach involves emitting events using the postMessage method. These events can be conveniently captured by utilizing the standard window.addEventListener('message', listener) pattern.\nTarget origin By default, the postMessage method does not specify the targetOrigin parameter. However, it is recommended best practice to explicitly pass in the URI of the iframe origin (not the parent application). To enhance security, you can specify this value by modifying the config option options.embed.messagesOrigin.\nEvents To maintain uniformity and ease of handling, each event encapsulates the same structure within its payload: { name: string, data: any }.\nName Data Description owncloud-embed:select Resource[] Gets emitted when user selects resources or location via the select action owncloud-embed:share string[] Gets emitted when user selects resources and shares them via the \u0026ldquo;Share links\u0026rdquo; action owncloud-embed:cancel null Gets emitted when user attempts to close the embedded instance via \u0026ldquo;Cancel\u0026rdquo; action Example \u0026lt;iframe src=\u0026#34;https://my-owncloud-web-instance?embed=true\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;script\u0026gt; function selectEventHandler(event) { if (event.data?.name !== \u0026#39;owncloud-embed:select\u0026#39;) { return } const resources = event.data.data doSomethingWithSelectedResources(resources) } window.addEventListener(\u0026#39;message\u0026#39;, selectEventHandler) \u0026lt;/script\u0026gt; Location picker By default, the Embed mode allows users to select resources. In certain cases (e.g. uploading a file), this needs to be changed to allow selecting a location. This can be achieved by running the embed mode with additional parameter embed-target=location. With this parameter, resource selection is disabled and the selected resources array always includes the current folder as the only item. In special scenarios you also want the user to set a file name, this can be achieved by adding the embed-choose-file-name=true parameter, or if you also want to set a default file name, you can use embed-choose-file-name-suggestion=my file.text.\nExample \u0026lt;iframe src=\u0026#34;https://my-owncloud-web-instance?embed=true\u0026amp;embed-target=location\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;script\u0026gt; function selectEventHandler(event) { if (event.data?.name !== \u0026#39;owncloud-embed:select\u0026#39;) { return } const resources = event.data.data[0] doSomethingWithSelectedResources(resources) } window.addEventListener(\u0026#39;message\u0026#39;, selectEventHandler) \u0026lt;/script\u0026gt; File picker The File Picker mode in ownCloud Web is designed for embedding an interface that allows users to pick a single file. This mode can be configured to restrict the file types that users can select. To enable the File Picker mode, you need to include the embed-target=file query parameter in the iframe URL. Furthermore, you can specify allowed file types using the embed-file-types parameter. The file types can be specified using file extensions, MIME types, or a combination of both. If the embed-file-types parameter is not provided, all file types will be selectable by default.\nExample \u0026lt;iframe src=\u0026#34;https://my-owncloud-web-instance?embed=true\u0026amp;embed-target=file\u0026amp;embed-file-types=txt,image/png\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;script\u0026gt; function selectEventHandler(event) { if (event.data?.name !== \u0026#39;owncloud-embed:file-pick\u0026#39;) { return } const file = event.data.data doSomethingWithPickedFile(file) } window.addEventListener(\u0026#39;message\u0026#39;, selectEventHandler) \u0026lt;/script\u0026gt; Delegate authentication If you already have a valid access_token that can be used to call the API from within the Embed mode and do not want to force the user to authenticate again, you can delegate the authentication. Delegating authentication will disable internal login form in ownCloud Web and will instead use events to obtain the token and update it.\nConfiguration To allow authentication delegation, you need to set the config option options.embed.delegateAuthentication to true. This can be achieved via query parameter embed-delegate-authentication=true. Because we are using the postMessage method to communicate across different origins, it is best practice to verify that the event originated from a known origin and not from some malicious site. We highly recommend to allow this check in production environments. You can enable it by setting the config option options.embed.delegateAuthenticationOrigin via query parameter embed-delegate-authentication-origin=my-origin. The value of this parameter will be compared against the MessageEvent.origin value and if they do not match, the token will be rejected.\nEvents Opening Embed mode As already mentioned, we\u0026rsquo;re using the postMessage method to allow communication between the Embed mode and the parent application. When the Embed mode is opened for the first time, the user gets redirected to the /web-oidc-callback page where a message with payload { name: 'owncloud-embed:request-token', data: undefined } is sent to request the access_token from the parent application. The parent application should set an event listener before opening the Embed mode and once received, it should send a message with payload { name: 'owncloud-embed:update-token', data: { access_token: '\u0026lt;bearer-token\u0026gt;' } }. Once the Embed mode receives this message, it will save the token in the application state and will automatically authenticate the user.\nWhen passing the token in the message payload, use only the token itself without Bearer string as that will be added automatically in the Embed mode. To save unnecessary duplication of messages with only different names, the name in the message payload above is exactly the same for both the initial authentication and subsequent token updates after renewal. Updating the token When authentication is delegated, the automatic renewal of the token inside of ownCloud Web is disabled. In order to update the token, a listener is created which awaits a message with payload { name: 'owncloud-embed:update-token', data: { access_token: '\u0026lt;bearer-token\u0026gt;' } }. The token will then be replaced inside of the Embed mode automatically.\n","description":"Getting started Communication Target origin Events Example Location picker Example File picker Example Delegate authentication Configuration Events Opening Embed mode Updating the token The ownCloud Web can be consumed by another application in a stripped down version called \u0026ldquo;Embed mode\u0026rdquo;. This mode is supposed to be used in the context of selecting or sharing resources. If you\u0026rsquo;re looking for even more minimalistic approach, you can take a look at the File picker."},{"id":253,"href":"/clients/web/testing/testing/","title":"Running tests","parent":"Tests","content":" Introduction Unit Tests Unit Test File Structure E2E Tests (Playwright) Preparation Prepare \u0026amp; Start Web Run E2E Tests Options Lint E2E Test Code Analyze the Test Report E2E Tests on oCIS With Keycloak Run oCIS With Keycloak Run E2E Tests Introduction In order to allow us to make changes quickly, often and with a high level of confidence, we heavily rely on tests within the web repository.\nAll the steps below require you to have the web repo cloned locally and dependencies installed. This can be achieved by running\n$ git clone https://github.com/owncloud/web.git $ cd web $ pnpm install Unit Tests We have a steadily growing coverage of unit tests. You can run them locally via\n$ pnpm test:unit You can also specify which tests to run by giving a path param, like so: pnpm test:unit packages/\u0026lt;app-name\u0026gt;/tests/unit/path/to/test.spec.js.\nUnit Test File Structure Our unit tests spec files follow a simple structure:\nfixtures and mocks at the top helper functions at the bottom tests in between We usually organize tests with nested describe blocks. If you would like to get feedback from the core team about the structure, scope and goals of your unit tests before actually writing some, we invite you to make a pull request with only describe blocks and nested it.todo(\u0026quot;put your test description here\u0026quot;) lines.\nE2E Tests (Playwright) Our end-to-end test suite is built upon the Playwright Framework, which makes it easy to write tests, debug them and have them run cross-browser with minimal overhead.\nPreparation Please make sure you have installed all dependencies and started the server(s) as described in tooling.\nPrepare \u0026amp; Start Web Bundle the web frontend with the following command:\n$ pnpm build:w Our compose setup automatically mounts it into an oCIS backend, respectively. Web also gets recompiled on changes.\nRun E2E Tests The following command will run all available e2e tests:\n$ pnpm test:e2e:cucumber \u0026#39;tests/e2e/cucumber/**/*.feature\u0026#39; Options To run a particular test, simply add the feature file and line number to the test command, e.g. pnpm test:e2e:cucumber tests/e2e/cucumber/features/smoke/admin-settings/users.feature:84\nVarious options are available via ENV variables, e.g.\nBASIC_AUTH=true use basic authorization for api requests. RETRY=n to retry failures n times SLOW_MO=n to slow the execution time by n milliseconds TIMEOUT=n to set tests to timeout after n milliseconds HEADLESS=bool to open the browser while the tests run (defaults to true =\u0026gt; headless mode) BROWSER=name to run tests against a specific browser. Defaults to chromium, available are chromium, firefox, webkit, chromium ADMIN_PASSWORD to set administrator password. By default, the admin password is used in the test For debugging reasons, you may want to record a video or traces of your test run. Again, you can use the following ENV variables in your command:\nREPORT_DIR=another/path to set a directory for your recorded files (defaults to \u0026ldquo;reports\u0026rdquo;) REPORT_VIDEO=true to record a video of the test run REPORT_HAR=true to save request information from the test run REPORT_TRACING=true to record traces from the test run To then open e.g. the tracing from the REPORT_DIR, run\n$ npx playwright show-trace path/to/file.zip Lint E2E Test Code Run the following command to find out the lint issues early in the test codes:\n$ pnpm lint And to fix the lint problems run the following command:\n$ pnpm lint --fix If the lint problems are not fixed by --fix option, we have to manually fix the code.\nAnalyze the Test Report The cucumber library is used as the test runner for e2e tests. The report generator script lives inside the tests/e2e/cucumber/report folder. If you want to create a report after the tests are done, run the command:\nnode tests/e2e/cucumber/report --report-input=tests/e2e/cucumber/report/report.json By default, the report gets generated to reports/e2e/cucumber/releaseReport/cucumber_report.html. The location can be changed by adding the --report-location flag.\nTo see all available options run\nnode tests/e2e/cucumber/report --help E2E Tests on oCIS With Keycloak We can run some of the e2e tests on oCIS setup with Keycloak as an external idp. To run tests against locally, please follow the steps below:\nRun oCIS With Keycloak There\u0026rsquo;s a documentation to serve oCIS with Keycloak. Please follow each step to run oCIS with Keycloak.\nRun E2E Tests KEYCLOAK=true \\ BASE_URL_OCIS=ocis.owncloud.test \\ pnpm run test:e2e:cucumber tests/e2e/cucumber/features/journeys Following environment variables come in use while running e2e tests on oCIS with Keycloak:\nBASE_URL_OCIS sets oCIS url (e.g.: ocis.owncloud.test) KEYCLOAK_HOST sets Keycloak url (e.g.: keycloak.owncloud.test) KEYCLOAK=true runs the tests with Keycloak KEYCLOAK_REALM sets oCIS realm name used on Keycloak ","description":"Introduction Unit Tests Unit Test File Structure E2E Tests (Playwright) Preparation Prepare \u0026amp; Start Web Run E2E Tests Options Lint E2E Test Code Analyze the Test Report E2E Tests on oCIS With Keycloak Run oCIS With Keycloak Run E2E Tests Introduction In order to allow us to make changes quickly, often and with a high level of confidence, we heavily rely on tests within the web repository.\nAll the steps below require you to have the web repo cloned locally and dependencies installed."},{"id":254,"href":"/apis/http/graph/role/","title":"Role","parent":"LibreGraph","content":" Role API Role Management List roleDefinitions GET /v1beta1/roleManagement/permissions/roleDefinitions Get unifiedRoleDefinition GET /drives/{drive-id}/items/{item-id}/permissions/{perm-id} Role Assignment Get appRoleAssignments of a user GET /v1.0/users/{user-id}/appRoleAssignments Grant an appRoleAssignment to a user POST /v1.0/users/{user-id}/appRoleAssignments Delete the appRoleAssignment from a user DELETE /v1.0/users/{user-id}/appRoleAssignments/{appRoleAssignment-id} Role API The Roles API is implementing a subset of the functionality of the MS Graph Role Management.\nRole Management List roleDefinitions GET /v1beta1/roleManagement/permissions/roleDefinitions https://owncloud.dev/libre-graph-api/#/roleManagement/ListPermissionRoleDefinitions\nGet unifiedRoleDefinition GET /drives/{drive-id}/items/{item-id}/permissions/{perm-id} https://owncloud.dev/libre-graph-api/#/roleManagement/GetPermissionRoleDefinition\nRole Assignment Get appRoleAssignments of a user GET /v1.0/users/{user-id}/appRoleAssignments https://owncloud.dev/libre-graph-api/#/user.appRoleAssignment/user.ListAppRoleAssignments\nGrant an appRoleAssignment to a user POST /v1.0/users/{user-id}/appRoleAssignments https://owncloud.dev/libre-graph-api/#/user.appRoleAssignment/user.CreateAppRoleAssignments\nDelete the appRoleAssignment from a user DELETE /v1.0/users/{user-id}/appRoleAssignments/{appRoleAssignment-id} https://owncloud.dev/libre-graph-api/#/user.appRoleAssignment/user.DeleteAppRoleAssignments\n","description":"Role API Role Management List roleDefinitions GET /v1beta1/roleManagement/permissions/roleDefinitions Get unifiedRoleDefinition GET /drives/{drive-id}/items/{item-id}/permissions/{perm-id} Role Assignment Get appRoleAssignments of a user GET /v1.0/users/{user-id}/appRoleAssignments Grant an appRoleAssignment to a user POST /v1.0/users/{user-id}/appRoleAssignments Delete the appRoleAssignment from a user DELETE /v1.0/users/{user-id}/appRoleAssignments/{appRoleAssignment-id} Role API The Roles API is implementing a subset of the functionality of the MS Graph Role Management.\nRole Management List roleDefinitions GET /v1beta1/roleManagement/permissions/roleDefinitions https://owncloud.dev/libre-graph-api/#/roleManagement/ListPermissionRoleDefinitions\nGet unifiedRoleDefinition GET /drives/{drive-id}/items/{item-id}/permissions/{perm-id} https://owncloud.dev/libre-graph-api/#/roleManagement/GetPermissionRoleDefinition\nRole Assignment Get appRoleAssignments of a user GET /v1."},{"id":255,"href":"/services/settings/glossary/","title":"Glossary","parent":"Settings","content":"In the context of this extension and oCIS in general, we are using the following terminology.\nConfiguration System configuration e.g. service host names and ports Changes need to be propagated to other services Typically modified on the CLI Settings Application level settings e.g. default language Can be modified at runtime without restarting the service Preferences User settings Subset of \u0026ldquo;Settings\u0026rdquo; e.g. preferred language of a user Settings Bundle Collection of related settings Registered by an oCIS extension Settings Value Manifestation of a setting for a specific user E.g. used for customization (at runtime) in ocis-web Can be queried and modified by other oCIS services ","description":"In the context of this extension and oCIS in general, we are using the following terminology.\nConfiguration System configuration e.g. service host names and ports Changes need to be propagated to other services Typically modified on the CLI Settings Application level settings e.g. default language Can be modified at runtime without restarting the service Preferences User settings Subset of \u0026ldquo;Settings\u0026rdquo; e.g. preferred language of a user Settings Bundle Collection of related settings Registered by an oCIS extension Settings Value Manifestation of a setting for a specific user E."},{"id":256,"href":"/ocis/deployment/ubernauten/","title":"Installing ownCloud Infinite Scale at Ubernauten","parent":"Deployment","content":" Uberspace and ownCloud Infinite Scale in 50 seconds Three Steps to your Infinite UberSpace Service Management with Supervisord Updating ownCloud Infinite Scale Wiping and Clean Restart from Scratch Troubleshooting Uberspace and ownCloud Infinite Scale in 50 seconds This howto shows how to set up ownCloud Infinite Scale for a quick test. For convenience, we will use the free service from the Ubernauten \u0026ndash; Join us here: Uberspace Registration Page. They offer free of charge (for the first month) web hosting.\nIn this documentation, we are assuming you already have an account there and it is configured for SSH access. This guide is using \u0026ldquo;ocis.uber.space\u0026rdquo; as a domain at Uberspace, version 4.0.3 of Infinite Scale and the local user \u0026ldquo;owncloud\u0026rdquo;. Make sure you adapt the example code and scripts mentioned in this page to your needs Both username and domain will be set when you sign in to Uberspace.\nInstalling ownCloud Infinite Scale on Ubernauten is pretty straigt-forward, you can do it in three steps that take less than a minute: Here\u0026rsquo;s a short video that shows how fast the whole process actually is - thanks to Infinite Scale\u0026rsquo;s cloud native architecture. ownCloud Infinite Scale in 50 seconds\nThree Steps to your Infinite UberSpace Download the Infinite Scale binary and make it executable curl https://download.owncloud.com/ocis/ocis/stable/4.0.3/ocis-4.0.3-linux-amd64 --output ocis chmod +x ocis Set some environment variables related to Uberspace (Make sure you fill in YOUR domain!) uberspace web backend set / --http --port 9200 export OCIS_URL=https://ocis.uber.space export PROXY_TLS=false export PROXY_HTTP_ADDR=0.0.0.0:9200 export PROXY_LOG_LEVEL=debug Start the ocis binary, first with the parameter init for initial configuration. This will also give you your unique login password for the user admin. Once finished, call ocis start: ./ocis init ./ocis server Wait a few seconds, now you can visit the url of your uberspace server and login:\nTo make it easier (and faster), here\u0026rsquo;s the commands in a script called ocis.install:\n#!/bin/bash # This file is named ocis.install # It downloads ocis, configures the environment varibles and starts # ownCloud Infinite Scale on a ubernauten account. You can run it in your home directory curl https://download.owncloud.com/ocis/ocis/stable/4.0.3/ocis-4.0.3-linux-amd64 --output ocis chmod +x ocis uberspace web backend set / --http --port 9200 export OCIS_URL=https://ocis.uber.space export PROXY_TLS=false export PROXY_HTTP_ADDR=0.0.0.0:9200 export PROXY_LOG_LEVEL=debug ./ocis init ./ocis server Service Management with Supervisord If you want ocis to run continuously, you need to configure supervisord (http://supervisord.org) which is the tool Uberspace is using for service management.\nYou can start and stop services with supervisorctl, it will (re)read configuration files it finds in your home directory, under etc/services.d/, in .ini files. The content of these files is very simple, you only have to enter three lines, here is the example for Infinite Scale in /home/owncloud/etc/services.d/ocis.ini.\n[program:ocis] command=\u0026#34;/home/owncloud/ocis.start\u0026#34; startsecs=60 ocis.start is a script that combines all of the commands above except for the download of the ocis binary. It looks like this:\n#!/bin/bash # This file is named ocis.start. # It sets environment variables needed for uber.space needed for Infinite Scale /usr/bin/uberspace web backend set / --http --port 9200 \u0026amp; export OCIS_URL=https://ocis.uber.space export PROXY_TLS=false export PROXY_HTTP_ADDR=0.0.0.0:9200 export PROXY_LOG_LEVEL=debug /home/owncloud/ocis server There are four supervisorctl commands that you will find useful (many more can be found in its documentation). You can use supervisorctl status to check which services managed by supervisorctl are running, a supervisorctl reread will be necessary after you changed the ini files, an update is applying changes, and supervisorctl stop will stop a running service:\n[owncloud@ocis ~]$ supervisorctl status ocis RUNNING pid 9813, uptime 0:01:40 [owncloud@ocis ~]$ supervisorctl reread No config updates to processes [owncloud@ocis ~]$ supervisorctl update You can find all information on Supervisord and supervisorctl on its website: Running Supervisord.\nUpdating ownCloud Infinite Scale Updating the ocis binary is simple: When a new version comes to life, just download the new ocis binary from the download server, replacing the old ocis executable on your uberspace server.\nMake a backup of your data and make sure you have read and understood the release notes of your new version , especially the \u0026ldquo;breaking changes\u0026rdquo; section before starting the binary.\nDon\u0026rsquo;t worry, you can always go back to the older version you had installed, there\u0026rsquo;s a long list of older versions available for download.\nMind that if you want to re-configure, re-install or start a new version of ocis, make sure you have stopped supervisorctl from restarting ocis. Enter supervisorctl stop ocis, followed by a killall -9 ocis to make sure no ocis version is still running.\nWiping and Clean Restart from Scratch This little script is removing your ocis installation (and all of your data!), replacing it with a new, clean ocis installation. Be careful and only use it for testing purposes. Specify your desired ocis version in the curl command.\n#!/bin/bash # This file is named ocis.reinstall # It deletes the old ocis installation, fetches a new binary and starts ocis. rm -rf .ocis curl https://download.owncloud.com/ocis/ocis/stable/4.0.3/ocis-4.0.3-linux-amd64 --output ocis chmod +x ocis uberspace web backend set / --http --port 9200 export OCIS_URL=https://ocis.uber.space export PROXY_TLS=false export PROXY_HTTP_ADDR=0.0.0.0:9200 export PROXY_LOG_LEVEL=debug ./ocis init ./ocis server Troubleshooting SSL/TLS Certificates: Every Uberspace comes with its own HTTPS certificate via Let\u0026rsquo;s Encrypt. See the Uberspace - HTTPS documentation for more details.\nError message about jwt_secret: If you get the following error message, then you probably forgot to run the ocis init command. If ocis server find an configuration hasn\u0026rsquo;t been set up, it will complain like this:\n[owncloud@ocis ~]$ ./ocis server The jwt_secret has not been set properly in your config for ocis. Make sure your /home/mfeilner/.ocis/config config contains the proper values (e.g. by running ocis init or setting it manually in the config/corresponding environment variable). ","description":"Uberspace and ownCloud Infinite Scale in 50 seconds Three Steps to your Infinite UberSpace Service Management with Supervisord Updating ownCloud Infinite Scale Wiping and Clean Restart from Scratch Troubleshooting Uberspace and ownCloud Infinite Scale in 50 seconds This howto shows how to set up ownCloud Infinite Scale for a quick test. For convenience, we will use the free service from the Ubernauten \u0026ndash; Join us here: Uberspace Registration Page. They offer free of charge (for the first month) web hosting."},{"id":257,"href":"/ocis/deployment/preparing_server/","title":"Preparing a server","parent":"Deployment","content":" Example for Hetzner Cloud Example for Hetzner Cloud create server on Hetzner Cloud. Set labels \u0026ldquo;owner\u0026rdquo; and \u0026ldquo;for\u0026rdquo;. Example for hcloud cli: hcloud server create --type cx21 --image ubuntu-20.04 --ssh-key admin --name ocis-server --label owner=admin --label for=testing\nConfigure DNS A-records for needed domains pointing on the servers ip address, for example in CloudFlare\nAccess server via ssh as root\nCreate a new user\n$ adduser --disabled-password --gecos \u0026quot;\u0026quot; admin\nAdd user to sudo group\n$ usermod -aG sudo admin\nInstall docker\napt update apt install docker.io Add user to docker group\nusermod -aG docker admin\nInstall docker-compose via\ncurl -L \u0026quot;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\u0026quot; -o /usr/local/bin/docker-compose\n(docker compose version 1.27.4 as of today)\nMake docker-compose executable\nchmod +x /usr/local/bin/docker-compose\nAdd users pub key to\nmkdir /home/admin/.ssh echo \u0026#34;\u0026lt;pubkey\u0026gt;\u0026#34; \u0026gt;\u0026gt; /home/admin/.ssh/authorized_keys chown admin:admin -R /home/admin/.ssh Secure ssh daemon by editing /etc/ssh/sshd_config\nPermitRootLogin no ChallengeResponseAuthentication no PasswordAuthentication no UsePAM no restart sshd server to apply settings systemctl restart sshd\nLogin as the user you created\n","description":"Example for Hetzner Cloud Example for Hetzner Cloud create server on Hetzner Cloud. Set labels \u0026ldquo;owner\u0026rdquo; and \u0026ldquo;for\u0026rdquo;. Example for hcloud cli: hcloud server create --type cx21 --image ubuntu-20.04 --ssh-key admin --name ocis-server --label owner=admin --label for=testing\nConfigure DNS A-records for needed domains pointing on the servers ip address, for example in CloudFlare\nAccess server via ssh as root\nCreate a new user\n$ adduser --disabled-password --gecos \u0026quot;\u0026quot; admin"},{"id":258,"href":"/ocis/license/","title":"License","parent":"oCIS - ownCloud Infinite Scale","content":"The source code of the project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.\nStable, supported binary builds of ownCloud Infinite Scale that will be distributed by ownCloud GmbH are covered by a non OSS Freemium License EULA. This protects additional efforts that ownCloud GmbH is putting into these builds.\nSince the source code of Infinite Scale is available under free licenses, the free usage can, should and will not be limited in general.\n","description":"The source code of the project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.\nStable, supported binary builds of ownCloud Infinite Scale that will be distributed by ownCloud GmbH are covered by a non OSS Freemium License EULA. This protects additional efforts that ownCloud GmbH is putting into these builds.\nSince the source code of Infinite Scale is available under free licenses, the free usage can, should and will not be limited in general."},{"id":259,"href":"/","title":"ownCloud","parent":"","content":" Admin Documentation Developer Documentation We love open source Join the oCIS Community Admin Documentation Before you start reading, if you are interested in:\nlearning ocis from an admin perspective, different deployment scenarios, deployment examples, detailed settings and more we would recommend to continue with the ownCloud Admin Documentation for Infinite Scale.\nDeveloper Documentation Welcome to our developer documentation. Here you find documentation with focus for developers:\noCIS server oCIS Services Clients like: ownCloud Web - the new web frontend for oCIS and ownCloud ownCloud Android app ownCloud iOS app ownCloud Desktop Syncing Client Integrations We love open source The oCIS server is Apache v2 licensed. The lower storage layer of oCIS is defined by the CS3 APIs and implemented in the REVA project. Our goal is to develop the CS3 APIs to an open standard and collaborate on the open source REVA reference implementation for CS3 APIs.\nYou can also find all client sources on GitHub.\nJoin the oCIS Community The server repository on GitHub is a good entry point to the oCIS project. In addition to that there are also ownCloud projects for clients for iOS, Android, the major Desktop platforms and ownCloud Web.\nTo chat about development, join our public chat\nIf you want to help and improve ownCloud or oCIS, start coding or open issues on GitHub in the related repository.\nWe are very happy to hear your feedback and ideas!\n","description":"Admin Documentation Developer Documentation We love open source Join the oCIS Community Admin Documentation Before you start reading, if you are interested in:\nlearning ocis from an admin perspective, different deployment scenarios, deployment examples, detailed settings and more we would recommend to continue with the ownCloud Admin Documentation for Infinite Scale.\nDeveloper Documentation Welcome to our developer documentation. Here you find documentation with focus for developers:\noCIS server oCIS Services Clients like: ownCloud Web - the new web frontend for oCIS and ownCloud ownCloud Android app ownCloud iOS app ownCloud Desktop Syncing Client Integrations We love open source The oCIS server is Apache v2 licensed."},{"id":260,"href":"/apis/","title":"APIs","parent":"ownCloud","content":" gRPC ocis.messages.eventhistory.v0 ocis.messages.policies.v0 ocis.messages.search.v0 ocis.messages.settings.v0 ocis.messages.store.v0 ocis.messages.thumbnails.v0 ocis.services.eventhistory.v0 ocis.services.policies.v0 ocis.services.search.v0 ocis.services.settings.v0 ocis.services.store.v0 ocis.services.thumbnails.v0 Http LibreGraph Spaces Users Groups Permissions Role WebDAV Resumable Upload Authorization Infinite Scale provides a large set of different application programming interfaces (APIs). Infinite Scale is built by microservices. That means many calls to \u0026ldquo;functions\u0026rdquo; in the code are remote calls.\nBasically we have two different API \u0026ldquo;universes\u0026rdquo;: HTTP and gRPC.\nFor inter-service-communication we are using mostly gRPC calls because it has some advantages. In the future, clients may decide to use gRPC directly to make use of these advantages.\nHTTP HTTP APIs are mostly used for client \u0026lt;-\u0026gt; server communication. Modern applications are embracing a RESTful software architecture style. REST APIs are using the HTTP protocol to transfer data between clients and servers. All our clients talk to the Server using HTTP APIs. This has legacy reasons and is well-supported across many platforms and technologies. Infinite Scale uses an HTTP API gateway to route client requests to the correct service.\nOpenAPI It is best practise to define APIs and their behavior by a spec. We are using the OpenAPI standard for all new APIs. The OpenAPI Specification, previously known as the Swagger Specification, is a specification for a machine-readable interface definition language for describing, producing, consuming and visualizing RESTful web services. Previously part of the Swagger framework, it became a separate project in 2016, overseen by the OpenAPI Initiative, an open-source collaboration project of the Linux Foundation. Swagger and some other tools can generate code, documentation and test cases from interface files.\nRFC Some APIs have become a de facto standard and are additionally covered by an RFC.\ngRPC In gRPC, a client application can directly call methods on a server application on a different machine as if it was a local object. This makes it easier to create distributed applications based on microservices. In gRPC we can define a service and specify the methods that can be called remotely. A gRPC client has a stub that provides the same methods and types as the server. Infinite Scale uses a gRPC API Gateway to route the requests to the correct service.\nProtobuf gRPC APIs are typically defined by Protocol buffers. The different client and server stubs are created from *.proto files by code generation tools.\nVersioning There are different standards for API versioning: Through URL, through request parameter, through custom header and through content negotiation. Ocis uses the versioning by URL concept although this creates a big code footprint. The versioning follows SemVer. We update the major version number when breaking changes are needed. Clients can decide which major version they use through the request URL. The specific implementation is documented on each API.\n","description":"gRPC ocis.messages.eventhistory.v0 ocis.messages.policies.v0 ocis.messages.search.v0 ocis.messages.settings.v0 ocis.messages.store.v0 ocis.messages.thumbnails.v0 ocis.services.eventhistory.v0 ocis.services.policies.v0 ocis.services.search.v0 ocis.services.settings.v0 ocis.services.store.v0 ocis.services.thumbnails.v0 Http LibreGraph Spaces Users Groups Permissions Role WebDAV Resumable Upload Authorization Infinite Scale provides a large set of different application programming interfaces (APIs). Infinite Scale is built by microservices. That means many calls to \u0026ldquo;functions\u0026rdquo; in the code are remote calls.\nBasically we have two different API \u0026ldquo;universes\u0026rdquo;: HTTP and gRPC.\nFor inter-service-communication we are using mostly gRPC calls because it has some advantages."},{"id":261,"href":"/apis/grpc_apis/","title":"gRPC","parent":"APIs","content":" ocis.messages.eventhistory.v0 ocis.messages.policies.v0 ocis.messages.search.v0 ocis.messages.settings.v0 ocis.messages.store.v0 ocis.messages.thumbnails.v0 ocis.services.eventhistory.v0 ocis.services.policies.v0 ocis.services.search.v0 ocis.services.settings.v0 ocis.services.store.v0 ocis.services.thumbnails.v0 Remote Procedure Calls gRPC is a modern open source high performance Remote Procedure Call (RPC) framework that can run in any environment. It can efficiently connect services in and across data centers with pluggable support for load balancing, tracing, health checking and authentication. It is also applicable in last mile of distributed computing to connect devices, mobile applications and browsers to backend services.\nAdvantages of gRPC Performance gRPC uses http/2 by default and is faster than REST. When using protocol buffers for encoding, the information comes on and off the wire much faster than JSON. Latency is an important factor in distributed systems. JSON encoding creates a noticeable factor of latency. For distributed systems and high data loads, gRPC can actually make an important difference. Other than that, gRPC supports multiple calls via the same channel and the connections are bidirectional. A single connection can transmit requests and responses at the same time. gRPC keeps connections open to reuse the same connection again which prevents latency and saves bandwidth. Robustness gRPC empowers better relationships between clients and servers. The rules of communication are strictly enforced. That is not the case in REST calls, where the client and the server can send and receive anything they like and hopefully the other end understands what to do with it. In gRPC, to make changes to the communication, both client and server need to change accordingly. This prevents mistakes specially in microservice architectures. Debuggability gRPC requests are re-using the same context and can be tracked or traced across multiple service boundaries. This helps to identify slow calls and see what is causing delays. It is possible to cancel requests which cancels them on all involved services. Microservices gRPC has been evolving and has become the best option for communication between microservices because of its unmatched performance and its polyglot nature. One of the biggest strengths of microservices is the freedom of programming languages and technologies. By using gRPC we can leverage all the advantages of strictly enforced communication standards combined with freedom of choice between different programming languages - whichever would fit best. http/2 protocol buffers reusable connections multi language support CS3 APIs The CS3 APIs connect storages and application providers.\nThe CS3 APIs follow Google and Uber API design guidelines, specially on error handling and naming convention. You can read more about these guidelines at https://cloud.google.com/apis/design/ and https://github.com/uber/prototool/blob/dev/style/README.md.\nThe CS3 APIs use Protocol Buffers version 3 (proto3) as their Interface Definition Language (IDL) to define the API interface and the structure of the payload messages.\n","description":"ocis.messages.eventhistory.v0 ocis.messages.policies.v0 ocis.messages.search.v0 ocis.messages.settings.v0 ocis.messages.store.v0 ocis.messages.thumbnails.v0 ocis.services.eventhistory.v0 ocis.services.policies.v0 ocis.services.search.v0 ocis.services.settings.v0 ocis.services.store.v0 ocis.services.thumbnails.v0 Remote Procedure Calls gRPC is a modern open source high performance Remote Procedure Call (RPC) framework that can run in any environment. It can efficiently connect services in and across data centers with pluggable support for load balancing, tracing, health checking and authentication. It is also applicable in last mile of distributed computing to connect devices, mobile applications and browsers to backend services."},{"id":262,"href":"/ocis/release_roadmap/","title":"Release Life Cycle","parent":"oCIS - ownCloud Infinite Scale","content":" Dates Release Types Documentation Updating and Overlap Support Versioning Scheme This page is designed to provide clarity and transparency regarding the scheduling, nature, and support of our releases, ensuring you have all the information you need to stay updated and manage your deployments effectively. Find here an overview of our plans for future enhancements and features: owncloud.com/roadmap\nDates Release Date Type Version Notes Support 22.09.2025 Production - - - 01.09.2025 Rolling - - - 11.08.2025 Rolling - - - 21.07.2025 Rolling - - - 30.06.2025 Rolling - - - 09.06.2025 Rolling - - - 19.05.2025 Rolling - - - 28.04.2025 Rolling - - - 17.03.2025 Production - - - 24.02.2025 Rolling - - - 03.02.2025 Rolling - - - 13.01.2025 Rolling - - - 02.12.2024 Rolling - - - 11.11.2024 Production - - - 14.11.2024 Production Infinite Scale 5 (5.0.9) Release Notes Active Support 24.10.2024 Rolling Infinite Scale 6 (6.6.1) Release Notes - 22.10.2024 Rolling Infinite Scale 6 (6.6.0) Release Notes - 01.10.2024 Rolling Infinite Scale 6 (6.5.0) Release Notes - 30.09.2024 Production Infinite Scale 5 (5.0.8) Release Notes Active Support 12.09.2024 Rolling Infinite Scale 6 (6.4.0) Release Notes - 04.09.2024 Production Infinite Scale 5 (5.0.7) Release Notes Active Support 19.08.2024 Rolling Infinite Scale 6 (6.3.0) Release Notes - 30.07.2024 Rolling Infinite Scale 6 (6.2.0) Release Notes - 08.07.2024 Rolling Infinite Scale 6 (6.1.0) Release Notes - 19.06.2024 Rolling Infinite Scale 6 (6.0.0) Release Notes - 17.07.2024 Production Infinite Scale 5 (5.0.6) Release Notes Active Support 22.05.2024 Production Infinite Scale 5 (5.0.5) Release Notes Active Support 14.05.2024 Production Infinite Scale 5 (5.0.4) Release Notes Active Support 02.05.2024 Production Infinite Scale 5 (5.0.3) Release Notes Active Support 17.04.2024 Production Infinite Scale 5 (5.0.2) Release Notes Active Support 11.04.2024 Production Infinite Scale 5 (5.0.1) Release Notes Active Support 18.03.2024 Production Infinite Scale 5 (5.0.0) Release Notes Active Support 27.03.2024 Production Infinite Scale 4 (4.0.7) Release Notes Discontinued 07.02.2024 Production Infinite Scale 4 (4.0.6) Release Notes Discontinued 21.12.2023 Production Infinite Scale 4 (4.0.5) Release Notes Discontinued 07.12.2023 Production Infinite Scale 4 (4.0.4) Release Notes Discontinued 24.11.2023 Production Infinite Scale 4 (4.0.3) Release Notes Discontinued 06.10.2023 Production Infinite Scale 4 (4.0.2) Release Notes Discontinued 01.09.2023 Production Infinite Scale 4 (4.0.1) Release Notes Discontinued 25.08.2023 Production Infinite Scale 4 (4.0.0) Release Notes Discontinued 07.06.2023 Production Infinite Scale 3 (3.0.0) Release Notes Discontinued 30.11.2022 Production Infinite Scale 2 (2.0.0) Release Notes Discontinued 04.04.2022 Beta Infinite Scale 1 (1.9.0) Release Notes Discontinued 04.04.2022 Beta Infinite Scale 1 (1.8.0) Release Notes Discontinued 04.04.2022 Beta Infinite Scale 1 (1.7.0) Release Notes Discontinued 04.04.2022 Beta Infinite Scale 1 (1.6.0) Release Notes Discontinued 04.04.2022 Beta Infinite Scale 1 (1.5.0) Release Notes Discontinued 04.04.2022 Beta Infinite Scale 1 (1.4.0) Release Notes Discontinued 04.04.2022 Beta Infinite Scale 1 (1.3.0) Release Notes Discontinued 13.04.2022 Beta Infinite Scale 1 (1.20.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.2.0) Release Notes Discontinued 05.04.2022 Tech Preview Infinite Scale 1 (1.19.1) Release Notes Discontinued 05.04.2022 Tech Preview Infinite Scale 1 (1.19.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.18.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.17.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.16.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.15.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.14.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.13.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.12.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.11.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.10.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.1.0) Release Notes Discontinued 04.04.2022 Tech Preview Infinite Scale 1 (1.0.06) Release Notes Discontinued Please find the daily release here: https://download.owncloud.com/ocis/ocis/daily/.\nRelease Types ownCloud Infinite Scale is released in three different release types: Production, Rolling and Daily. Each of them is targeted to a specific use case and audience group:\nStable and tested release, suitable for critical data. Slow cycle, but most stable with slow feature additions. Patch releases are provided for critical- and security-bugs as defined by ownCloud support regulations. Rolling Chances are high that some manual testing has happened, yet not structured. Features are mostly completed. An upgrade path from the previous rolling release is provided and tested. Great release to use with non critical data. Critical bugs are guaranteed to be fixed with the next rolling release. Mainly for test use cases. As the releases are done completely unattended, only the automatic test suite has tested the release. Manual testing was only applied by chance. Based on ownClouds strong test suite the daily releases are pretty stable, but the risk of unfinished changes is high. For example, if a feature requires three commits, and only one was committed, the daily is cut anyway. Type Production Rolling Daily Frequency About every 6 month Every 3 weeks Daily Audience Everyone Early adopters Developers Risk Low (known) risk Low-medium risk High (unknown) risk Support Commercially supported Company support on special agreement with ownCloud Community support Documentation Official Moving documentation Moving documentation, engineering output Updates Patch releases based on last stable Rolling every three weeks None Update path Incremental: from previous production to new production, from last rolling before a production release from previous rolling to new rolling Clean slate Downgrade No No No Service-level agreement (SLA) Yes No No Overlapping support Yes No No Documentation Production will come with released documentation that is specific for the release. It will remain valid throughout the whole livetime of the release. If patches require documentation changes, addendums will be delivered.\nDaily and Rolling have access to the documentation as it moves forward in the development process along with the product which will be available on ownClouds web site. There wont be specific releases. Changelog entries, PR comments and similar engineering output can complement the information.\nUpdating and Overlap Production provides a guaranteed upgrade path from the last Production release, as well as from the previous Rolling release before the new Production. For that, support from ownCloud is required. Upgrades between two Production releases are only supported to tested patch releases provided by ownCloud. In an upgrade process, all released patch releases have to be installed in the correct sequence.\nRolling is guaranteed to upgrade from the last rolling release or from the previous daily before the new Rolling release. If a critical bug is found in a rolling release, it is guaranteed to be fixed in the next Rolling. There are no backports to the Rolling. In critical cases, an upgrade to a daily release in between has to be done at own risk.\nDaily does not come with any guaranteed update path. Chances are good that updates will go smooth, but that might have hickups in cases where the upgrade code is not finalized in time.\nOnly production gives a reasonable overlap time between releases, for example if version 9 was released, version 8 will still receive a patch release for critical bugs for a reasonable time frame. That time frame will be announced separately and will be aligned with customer needs.\nSupport ownCloud only offers commercial support for Production. Rolling might be considered for customer installations in the sales process but always requires an individual agreement between all parties.\nDaily and Rolling are supported on best effort provided by community and ownCloud staff. There is no SLA and no guarantee for attention.\nAs ownCloud understands that the effort taken to report a problem is significant and results benefit all users in the community and ownCloud customers, there are resources available to respectfully work on community issues.\nPlease consider the Contribution guidelines for this.\nVersioning Scheme We adhere to Semantic Versioning (SemVer) to ensure clarity and predictability in each of our releases. Learn how Semantic Versioning works on https://semver.org/.\n","description":"Dates Release Types Documentation Updating and Overlap Support Versioning Scheme This page is designed to provide clarity and transparency regarding the scheduling, nature, and support of our releases, ensuring you have all the information you need to stay updated and manage your deployments effectively. Find here an overview of our plans for future enhancements and features: owncloud.com/roadmap\nDates Release Date Type Version Notes Support 22.09.2025 Production - - - 01."},{"id":263,"href":"/apis/http/","title":"Http","parent":"APIs","content":"The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. HTTP is the foundation of data communication for the World Wide Web, where hypertext documents include hyperlinks to other resources that the user can easily access, for example by a mouse click or by tapping the screen in a web browser.\nDevelopment of HTTP was initiated by Tim Berners-Lee at CERN in 1989 and summarized in a simple document describing the behavior of a client and a server using the first HTTP protocol version that was named 0.9. That first version of HTTP protocol soon evolved into a more elaborated version that was the first draft toward a far future version 1.0\n","description":"The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. HTTP is the foundation of data communication for the World Wide Web, where hypertext documents include hyperlinks to other resources that the user can easily access, for example by a mouse click or by tapping the screen in a web browser.\nDevelopment of HTTP was initiated by Tim Berners-Lee at CERN in 1989 and summarized in a simple document describing the behavior of a client and a server using the first HTTP protocol version that was named 0."},{"id":264,"href":"/ocis/release_notes/","title":"Release Notes","parent":"oCIS - ownCloud Infinite Scale","content":"The Infinite Scale Release Notes have been moved and are published with the ownCloud Documentation.\n","description":"The Infinite Scale Release Notes have been moved and are published with the ownCloud Documentation."},{"id":265,"href":"/integration/","title":"Integrations","parent":"ownCloud","content":"","description":""},{"id":266,"href":"/ocis/getting-started/demo-users/","title":"Demo Users","parent":"Getting Started","content":"oCIS has the option to create demo users during the first startup. These enable you to do quick testing and developing.\nTo create the demo users, run the initial setup step with an additional environment variable. IDM_CREATE_DEMO_USERS=true ./bin/ocis server will generate the demo users listed in the table below. By default, it only generates the admin and one user for IDP and Reva respectively. Following users are available in the demo set:\nusername password email role groups admin admin or the one generated by ocis init admin@example.org admin users einstein relativity einstein@example.org user users, philosophy-haters, physics-lovers, sailing-lovers, violin-haters marie radioactivity marie@example.org user users, physics-lovers, polonium-lovers, radium-lovers moss vista moss@example.org space admin users richard superfluidity richard@example.org user users, philosophy-haters, physics-lovers, quantum-lovers katherine gemini katherine@example.org space admin users, sailing-lovers, physics-lovers, quantum-lovers You may also want to run oCIS with only your custom users by deleting the demo users.\n","description":"oCIS has the option to create demo users during the first startup. These enable you to do quick testing and developing.\nTo create the demo users, run the initial setup step with an additional environment variable. IDM_CREATE_DEMO_USERS=true ./bin/ocis server will generate the demo users listed in the table below. By default, it only generates the admin and one user for IDP and Reva respectively. Following users are available in the demo set:"},{"id":267,"href":"/ocis/getting-started/","title":"Getting Started","parent":"oCIS - ownCloud Infinite Scale","content":" oCIS online demo Run oCIS Binaries Docker Usage Login to ownCloud Web Basic Management Commands oCIS online demo We have an oCIS demo instance running on ocis.owncloud.com where you can get a first impression of it.\nWe also have some more variations of oCIS running and continuously deployed to reflect different scenarios in that oCIS might be used.\nRun oCIS We are distributing oCIS as binaries and Docker images.\nThe examples in this document assume that oCIS is accessed from the same host as it is running on (localhost). If you would like to access oCIS remotely please refer to the Basic Remote Setup section. Especially to the notes about setting the PROXY_HTTP_ADDR and OCIS_URL environment variables. You can find more deployment examples in the deployment section.\nBinaries You can find the latest official release of oCIS at our download mirror or on GitHub. The latest build from the master branch can be found at our download mirrors daily section. Pre-Releases are available at our download mirrors testing section.\nTo run oCIS as binary you need to download it first and then run the following commands. For this example, assuming version 2.0.0-beta.5 of oCIS running on a Linux AMD64 host:\n# download curl https://download.owncloud.com/ocis/ocis/testing/2.0.0-beta.5/ocis-2.0.0-beta.5-linux-amd64 --output ocis # make binary executable chmod +x ocis # initialize a minimal oCIS configuration ./ocis init # run with demo users IDM_CREATE_DEMO_USERS=true ./ocis server The default primary storage location is ~/.ocis or /var/lib/ocis depending on the packaging format and your operating system user. You can change that value by configuration.\nWhen you\u0026rsquo;re using oCIS with self-signed certificates, you need to answer the question for certificate checking with \u0026ldquo;yes\u0026rdquo; or set the environment variable OCIS_INSECURE=true, in order to make oCIS work. oCIS by default relies on Multicast DNS (mDNS), usually via avahi-daemon. If your system has a firewall, make sure mDNS is allowed in your active zone. Open Files on macOS The start command ./ocis server starts a runtime which runs all oCIS services in one process. On MacOS we have very low limits for open files. oCIS needs more than the default 256. Please raise the limit to 1024 by typing ulimit -n 1024 within the same cli session where you start ocis from. Docker Docker images for oCIS are available on Docker Hub.\nThe latest tag always reflects the current master branch.\ndocker pull owncloud/ocis docker run --rm -it -v ocis-config:/etc/ocis owncloud/ocis init docker run --rm -p 9200:9200 -v ocis-config:/etc/ocis -v ocis-data:/var/lib/ocis -e IDM_CREATE_DEMO_USERS=true owncloud/ocis When you\u0026rsquo;re using oCIS with self-signed certificates, you need to set the environment variable OCIS_INSECURE=true, in order to make oCIS work. When you\u0026rsquo;re creating the demo users by setting IDM_CREATE_DEMO_USERS=true, you need to be sure that this instance is not used in production because the passwords are public. We are using named volumes for the oCIS configuration and oCIS data in the above example (-v ocis-config:/etc/ocis -v ocis-data:/var/lib/ocis). You could instead also use host bind-mounts instead, eg. -v /some/host/dir:/var/lib/ocis.\nYou cannot use bind mounts on MacOS, since extended attributes are not supported (owncloud/ocis#182, moby/moby#1070).\nUsage Login to ownCloud Web Open https://localhost:9200 and login using one of the demo accounts.\nBasic Management Commands The oCIS single binary contains multiple extensions and the ocis command helps you to manage them. You already used ocis server to run all available extensions in the Run oCIS section. We now will show you some more management commands, which you may also explore by typing ocis --help or going to the docs.\nTo initialize the oCIS configuration:\nocis init To start oCIS server:\nocis server The list command prints all running oCIS services. ocis list\nThe version command prints the version of your installed oCIS. ocis --version\nThe health command is used to execute a health check, if the exit code equals zero the service should be up and running, if the exit code is greater than zero the service is not in a healthy state. Generally this command is used within our Docker containers, it could also be used within Kubernetes.\nocis health --help ","description":"oCIS online demo Run oCIS Binaries Docker Usage Login to ownCloud Web Basic Management Commands oCIS online demo We have an oCIS demo instance running on ocis.owncloud.com where you can get a first impression of it.\nWe also have some more variations of oCIS running and continuously deployed to reflect different scenarios in that oCIS might be used.\nRun oCIS We are distributing oCIS as binaries and Docker images."},{"id":268,"href":"/extensions/","title":"Extensions","parent":"ownCloud","content":"","description":""},{"id":269,"href":"/extensions/ocis_hello/","title":"Hello (example extension)","parent":"Extensions","content":"When getting started with the oCIS development developers need to learn about the building blocks of oCIS extensions. Without guidance or orientation of the why and what of an extension they may start feeling lost. The ocis-hello repository serves as a blueprint for oCIS extensions. It allows developers to get started with oCIS extension development by looking at the code, configuration and documentation.\ngraph TD subgraph ow[ocis-web] owh[ocis-web-hello] end owh ---|\"greet()\"| ows[ocis-hello-server] ocis-hello provides a simple hello world example with\na protobuf based greeter API a grpc service implementing the API a vue.js frontend using the API configuration options for admins It can be integrated into ownCloud Web as documented in the custom apps docs.\n","description":"When getting started with the oCIS development developers need to learn about the building blocks of oCIS extensions. Without guidance or orientation of the why and what of an extension they may start feeling lost. The ocis-hello repository serves as a blueprint for oCIS extensions. It allows developers to get started with oCIS extension development by looking at the code, configuration and documentation.\ngraph TD subgraph ow[ocis-web] owh[ocis-web-hello] end owh ---|\""},{"id":270,"href":"/extensions/ocis_hello/configuration/","title":"Configuration","parent":"Hello (example extension)","content":"","description":""},{"id":271,"href":"/services/_includes/","title":"Includes","parent":"Services","content":"","description":""},{"id":272,"href":"/services/_includes/activitylog_configvars/","title":"Activitylog Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDACTIVITYLOG_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEACTIVITYLOG_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTACTIVITYLOG_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORACTIVITYLOG_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELACTIVITYLOG_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYACTIVITYLOG_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORACTIVITYLOG_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEACTIVITYLOG_LOG_FILE string The path to the log file. Activates logging to this file if set. ACTIVITYLOG_DEBUG_ADDR string 127.0.0.1:9197 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. ACTIVITYLOG_DEBUG_TOKEN string Token to secure the metrics endpoint. ACTIVITYLOG_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. ACTIVITYLOG_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_PERSISTENT_STOREACTIVITYLOG_STORE string nats-js-kv The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESACTIVITYLOG_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. ACTIVITYLOG_STORE_DATABASE string activitylog The database name the configured store should use. ACTIVITYLOG_STORE_TABLE string The database table the store should use. OCIS_PERSISTENT_STORE_TTLACTIVITYLOG_STORE_TTL Duration 0s Time to live for events in the store. See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEACTIVITYLOG_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDACTIVITYLOG_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata ACTIVITYLOG_HTTP_ADDR string 127.0.0.1:9195 The bind address of the HTTP service. ACTIVITYLOG_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSACTIVITYLOG_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSACTIVITYLOG_CORS_ALLOW_METHODS []string [GET] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSACTIVITYLOG_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Ocs-Apirequest] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSACTIVITYLOG_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_JWT_SECRETACTIVITYLOG_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_TRANSLATION_PATHACTIVITYLOG_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. OCIS_DEFAULT_LANGUAGE string en The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_SERVICE_ACCOUNT_IDACTIVITYLOG_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETACTIVITYLOG_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDACTIVITYLOG_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEACTIVITYLOG_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTACTIVITYLOG_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORACTIVITYLOG_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELACTIVITYLOG_LOG_LEVEL string The log level."},{"id":273,"href":"/services/_includes/antivirus_configvars/","title":"Antivirus Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_LOG_LEVELANTIVIRUS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYANTIVIRUS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORANTIVIRUS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEANTIVIRUS_LOG_FILE string The path to the log file. Activates logging to this file if set. ANTIVIRUS_DEBUG_ADDR string 127.0.0.1:9277 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. ANTIVIRUS_DEBUG_TOKEN string Token to secure the metrics endpoint. ANTIVIRUS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. ANTIVIRUS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_TRACING_ENABLEDANTIVIRUS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEANTIVIRUS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTANTIVIRUS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORANTIVIRUS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. ANTIVIRUS_INFECTED_FILE_HANDLING string delete Defines the behaviour when a virus has been found. Supported options are: \u0026lsquo;delete\u0026rsquo;, \u0026lsquo;continue\u0026rsquo; and \u0026lsquo;abort \u0026lsquo;. Delete will delete the file. Continue will mark the file as infected but continues further processing. Abort will keep the file in the uploads folder for further admin inspection and will not move it to its final destination. OCIS_EVENTS_ENDPOINTANTIVIRUS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERANTIVIRUS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREANTIVIRUS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEANTIVIRUS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided ANTIVIRUS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSANTIVIRUS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEANTIVIRUS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDANTIVIRUS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. ANTIVIRUS_WORKERS int 10 The number of concurrent go routines that fetch events from the event queue. ANTIVIRUS_SCANNER_TYPE string clamav The antivirus scanner to use. Supported values are \u0026lsquo;clamav\u0026rsquo; and \u0026lsquo;icap\u0026rsquo;. ANTIVIRUS_CLAMAV_SOCKET string /run/clamav/clamd.ctl The socket clamav is running on. Note the default value is an example which needs adaption according your OS. ANTIVIRUS_ICAP_SCAN_TIMEOUT Duration 5m0s Scan timeout for the ICAP client. Defaults to \u0026lsquo;5m\u0026rsquo; (5 minutes). See the Environment Variable Types description for more details. ANTIVIRUS_ICAP_URL string icap://127.0.0.1:1344 URL of the ICAP server. ANTIVIRUS_ICAP_SERVICE string avscan The name of the ICAP service. ANTIVIRUS_MAX_SCAN_SIZE string The maximum scan size the virus scanner can handle. Only this many bytes of a file will be scanned. 0 means unlimited and is the default. Usable common abbreviations: [KB, KiB, MB, MiB, GB, GiB, TB, TiB, PB, PiB, EB, EiB], example: 2GB. ANTIVIRUS_DEBUG_SCAN_OUTCOME string A predefined outcome for virus scanning, FOR DEBUG PURPOSES ONLY! (example values: \u0026lsquo;found,infected\u0026rsquo;) ","description":"Environment Variables Name Type Default Value Description OCIS_LOG_LEVELANTIVIRUS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYANTIVIRUS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORANTIVIRUS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEANTIVIRUS_LOG_FILE string The path to the log file. Activates logging to this file if set. ANTIVIRUS_DEBUG_ADDR string 127.0.0.1:9277 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed."},{"id":274,"href":"/services/_includes/app-provider_configvars/","title":"App Provider Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description APP_PROVIDER_SERVICE_NAME string app-provider The name of the service. This needs to be changed when using more than one app provider. Each app provider configured needs to be identified by a unique service name. Possible examples are: \u0026lsquo;app-provider-collabora\u0026rsquo;, \u0026lsquo;app-provider-onlyoffice\u0026rsquo;, \u0026lsquo;app-provider-office365\u0026rsquo;. OCIS_TRACING_ENABLEDAPP_PROVIDER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAPP_PROVIDER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAPP_PROVIDER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAPP_PROVIDER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAPP_PROVIDER_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAPP_PROVIDER_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAPP_PROVIDER_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAPP_PROVIDER_LOG_FILE string The path to the log file. Activates logging to this file if set. APP_PROVIDER_DEBUG_ADDR string 127.0.0.1:9165 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. APP_PROVIDER_DEBUG_TOKEN string Token to secure the metrics endpoint APP_PROVIDER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling APP_PROVIDER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory. APP_PROVIDER_GRPC_ADDR string 127.0.0.1:9164 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAPP_PROVIDER_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. OCIS_JWT_SECRETAPP_PROVIDER_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. APP_PROVIDER_EXTERNAL_ADDR string com.owncloud.api.app-provider Address of the app provider, where the GATEWAY service can reach it. APP_PROVIDER_DRIVER string Driver, the APP PROVIDER services uses. Only \u0026lsquo;wopi\u0026rsquo; is supported as of now. APP_PROVIDER_WOPI_APP_API_KEY string API key for the wopi app. APP_PROVIDER_WOPI_APP_DESKTOP_ONLY bool false Offer this app only on desktop. APP_PROVIDER_WOPI_APP_ICON_URI string URI to an app icon to be used by clients. APP_PROVIDER_WOPI_APP_INTERNAL_URL string Internal URL to the app, like in your DMZ. APP_PROVIDER_WOPI_APP_NAME string Human readable app name. APP_PROVIDER_WOPI_APP_URL string URL for end users to access the app. APP_PROVIDER_WOPI_DISABLE_CHATOCIS_WOPI_DISABLE_CHAT bool false Disable the chat functionality of the office app. APP_PROVIDER_WOPI_INSECURE bool false Disable TLS certificate validation for requests to the WOPI server and the web office application. Do not set this in production environments. APP_PROVIDER_WOPI_WOPI_SERVER_IOP_SECRET string Shared secret of the CS3org WOPI server. APP_PROVIDER_WOPI_WOPI_SERVER_EXTERNAL_URL string External url of the CS3org WOPI server. OCIS_URLAPP_PROVIDER_WOPI_FOLDER_URL_BASE_URL string https://localhost:9200/ Base url to navigate back from the app to the containing folder in the file list. APP_PROVIDER_WOPI_FOLDER_URL_PATH_TEMPLATE string /f/{{.ResourceID}} Path template to navigate back from the app to the containing folder in the file list. Supported template variables are {{.ResourceInfo.ResourceID}}, {{.ResourceInfo.Mtime.Seconds}}, {{.ResourceInfo.Name}}, {{.ResourceInfo.Path}}, {{.ResourceInfo.Type}}, {{.ResourceInfo.Id.SpaceId}}, {{.ResourceInfo.Id.StorageId}}, {{.ResourceInfo.Id.OpaqueId}}, {{.ResourceInfo.MimeType}} ","description":"Environment Variables Name Type Default Value Description APP_PROVIDER_SERVICE_NAME string app-provider The name of the service. This needs to be changed when using more than one app provider. Each app provider configured needs to be identified by a unique service name. Possible examples are: \u0026lsquo;app-provider-collabora\u0026rsquo;, \u0026lsquo;app-provider-onlyoffice\u0026rsquo;, \u0026lsquo;app-provider-office365\u0026rsquo;. OCIS_TRACING_ENABLEDAPP_PROVIDER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAPP_PROVIDER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now."},{"id":275,"href":"/services/_includes/app-registry_configvars/","title":"App Registry Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAPP_REGISTRY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAPP_REGISTRY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAPP_REGISTRY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAPP_REGISTRY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAPP_REGISTRY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAPP_REGISTRY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAPP_REGISTRY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAPP_REGISTRY_LOG_FILE string The path to the log file. Activates logging to this file if set. APP_REGISTRY_DEBUG_ADDR string 127.0.0.1:9243 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. APP_REGISTRY_DEBUG_TOKEN string Token to secure the metrics endpoint. APP_REGISTRY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. APP_REGISTRY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. APP_REGISTRY_GRPC_ADDR string 127.0.0.1:9242 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAPP_REGISTRY_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAPP_REGISTRY_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAPP_REGISTRY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAPP_REGISTRY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAPP_REGISTRY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAPP_REGISTRY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAPP_REGISTRY_LOG_LEVEL string The log level."},{"id":276,"href":"/services/_includes/audit_configvars/","title":"Audit Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUDIT_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUDIT_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUDIT_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUDIT_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUDIT_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUDIT_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUDIT_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUDIT_LOG_FILE string The path to the log file. Activates logging to this file if set. AUDIT_DEBUG_ADDR string 127.0.0.1:9229 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUDIT_DEBUG_TOKEN string Token to secure the metrics endpoint. AUDIT_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUDIT_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_EVENTS_ENDPOINTAUDIT_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERAUDIT_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREAUDIT_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEAUDIT_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided AUDIT_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSAUDIT_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEAUDIT_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDAUDIT_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. AUDIT_LOG_TO_CONSOLE bool true Logs to stdout if set to \u0026rsquo;true\u0026rsquo;. Independent of the LOG_TO_FILE option. AUDIT_LOG_TO_FILE bool false Logs to file if set to \u0026rsquo;true\u0026rsquo;. Independent of the LOG_TO_CONSOLE option. AUDIT_FILEPATH string Filepath of the logfile. Mandatory if LOG_TO_FILE is set to \u0026rsquo;true\u0026rsquo;. AUDIT_FORMAT string json Log format. Supported values are \u0026rsquo;\u0026rsquo; (empty) and \u0026lsquo;json\u0026rsquo;. Using \u0026lsquo;json\u0026rsquo; is advised, \u0026rsquo;\u0026rsquo; (empty) renders the \u0026lsquo;minimal\u0026rsquo; format. See the text description for more details. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUDIT_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUDIT_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUDIT_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUDIT_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUDIT_LOG_LEVEL string The log level."},{"id":277,"href":"/services/_includes/auth-app_configvars/","title":"Auth App Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_APP_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_APP_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_APP_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_APP_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_APP_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_APP_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_APP_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_APP_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_APP_DEBUG_ADDR string 127.0.0.1:9245 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_APP_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_APP_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_APP_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory. AUTH_APP_GRPC_ADDR string 127.0.0.1:9246 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_APP_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. AUTH_APP_HTTP_ADDR string 127.0.0.1:9247 The bind address of the HTTP service. AUTH_APP_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSAUTH_APP_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSAUTH_APP_CORS_ALLOW_METHODS []string [GET POST DELETE] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSAUTH_APP_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Ocs-Apirequest] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSAUTH_APP_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_JWT_SECRETAUTH_APP_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_APP_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the access token. This reduces the token size, especially when users are members of a large number of groups. OCIS_MACHINE_AUTH_API_KEYAUTH_APP_MACHINE_AUTH_API_KEY string The machine auth API key used to validate internal requests necessary to access resources from other services. AUTH_APP_ENABLE_IMPERSONATION bool false Allows admins to create app tokens for other users. Used for migration. Do NOT use in productive deployments. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_APP_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_APP_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_APP_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_APP_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_APP_LOG_LEVEL string The log level."},{"id":278,"href":"/services/_includes/auth-basic_configvars/","title":"Auth Basic Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_BASIC_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_BASIC_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_BASIC_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_BASIC_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_BASIC_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_BASIC_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_BASIC_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_BASIC_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_BASIC_DEBUG_ADDR string 127.0.0.1:9147 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_BASIC_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_BASIC_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_BASIC_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory. AUTH_BASIC_GRPC_ADDR string 127.0.0.1:9146 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_BASIC_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_BASIC_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_BASIC_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups. AUTH_BASIC_AUTH_MANAGER string ldap The authentication manager to check if credentials are valid. Supported value is \u0026rsquo;ldap\u0026rsquo;. OCIS_LDAP_URIAUTH_BASIC_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo; OCIS_LDAP_CACERTAUTH_BASIC_LDAP_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. OCIS_LDAP_INSECUREAUTH_BASIC_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. OCIS_LDAP_BIND_DNAUTH_BASIC_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDAUTH_BASIC_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. OCIS_LDAP_USER_BASE_DNAUTH_BASIC_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_GROUP_BASE_DNAUTH_BASIC_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups. OCIS_LDAP_USER_SCOPEAUTH_BASIC_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_GROUP_SCOPEAUTH_BASIC_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_USER_FILTERAUTH_BASIC_LDAP_USER_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_GROUP_FILTERAUTH_BASIC_LDAP_GROUP_FILTER string LDAP filter to add to the default filters for group searches. OCIS_LDAP_USER_OBJECTCLASSAUTH_BASIC_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;). OCIS_LDAP_GROUP_OBJECTCLASSAUTH_BASIC_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;). LDAP_LOGIN_ATTRIBUTESAUTH_BASIC_LDAP_LOGIN_ATTRIBUTES []string [uid] A list of user object attributes that can be used for login. See the Environment Variable Types description for more details. OCIS_URLOCIS_OIDC_ISSUERAUTH_BASIC_IDP_URL string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. OCIS_LDAP_DISABLE_USER_MECHANISMAUTH_BASIC_DISABLE_USER_MECHANISM string attribute An option to control the behavior for disabling users. Valid options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed. OCIS_LDAP_DISABLED_USERS_GROUP_DNAUTH_BASIC_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_IDAUTH_BASIC_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique ID for users. This should be a stable globally unique ID like a UUID. OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGAUTH_BASIC_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user IDs. OCIS_LDAP_USER_SCHEMA_MAILAUTH_BASIC_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users. OCIS_LDAP_USER_SCHEMA_DISPLAYNAMEAUTH_BASIC_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users. OCIS_LDAP_USER_SCHEMA_USERNAMEAUTH_BASIC_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users. OCIS_LDAP_USER_ENABLED_ATTRIBUTEAUTH_BASIC_LDAP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_GROUP_SCHEMA_IDAUTH_BASIC_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for groups. This should be a stable globally unique id (e.g. a UUID). OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGAUTH_BASIC_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group IDs. OCIS_LDAP_GROUP_SCHEMA_MAILAUTH_BASIC_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty). OCIS_LDAP_GROUP_SCHEMA_DISPLAYNAMEAUTH_BASIC_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute). OCIS_LDAP_GROUP_SCHEMA_GROUPNAMEAUTH_BASIC_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups. OCIS_LDAP_GROUP_SCHEMA_MEMBERAUTH_BASIC_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members. AUTH_BASIC_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database. AUTH_BASIC_OWNCLOUDSQL_DB_PASSWORD string Password for the database user. AUTH_BASIC_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server. AUTH_BASIC_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection. AUTH_BASIC_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database. AUTH_BASIC_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. AUTH_BASIC_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided. AUTH_BASIC_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames AUTH_BASIC_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user ID\u0026rsquo;s. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_BASIC_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_BASIC_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_BASIC_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_BASIC_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_BASIC_LOG_LEVEL string The log level."},{"id":279,"href":"/services/_includes/auth-bearer_configvars/","title":"Auth Bearer Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_BEARER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_BEARER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_BEARER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_BEARER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_BEARER_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_BEARER_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_BEARER_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_BEARER_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_BEARER_DEBUG_ADDR string 127.0.0.1:9149 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_BEARER_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_BEARER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_BEARER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. AUTH_BEARER_GRPC_ADDR string 127.0.0.1:9148 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_BEARER_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_BEARER_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_BEARER_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups. OCIS_URLOCIS_OIDC_ISSUERAUTH_BEARER_OIDC_ISSUER string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP. OCIS_INSECUREAUTH_BEARER_OIDC_INSECURE bool false Allow insecure connections to the OIDC issuer. AUTH_BEARER_OIDC_ID_CLAIM string preferred_username Name of the claim, which holds the user identifier. AUTH_BEARER_OIDC_UID_CLAIM string Name of the claim, which holds the UID. AUTH_BEARER_OIDC_GID_CLAIM string Name of the claim, which holds the GID. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_BEARER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_BEARER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_BEARER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_BEARER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_BEARER_LOG_LEVEL string The log level."},{"id":280,"href":"/services/_includes/auth-machine_configvars/","title":"Auth Machine Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_MACHINE_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_MACHINE_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_MACHINE_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_MACHINE_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_MACHINE_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_MACHINE_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_MACHINE_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_MACHINE_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_MACHINE_DEBUG_ADDR string 127.0.0.1:9167 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_MACHINE_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_MACHINE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_MACHINE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. AUTH_MACHINE_GRPC_ADDR string 127.0.0.1:9166 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_MACHINE_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_MACHINE_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. AUTH_MACHINE_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups. OCIS_MACHINE_AUTH_API_KEYAUTH_MACHINE_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_MACHINE_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_MACHINE_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_MACHINE_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_MACHINE_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_MACHINE_LOG_LEVEL string The log level."},{"id":281,"href":"/services/_includes/auth-service_configvars/","title":"Auth Service Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_SERVICE_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_SERVICE_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_SERVICE_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_SERVICE_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_SERVICE_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYAUTH_SERVICE_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORAUTH_SERVICE_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEAUTH_SERVICE_LOG_FILE string The path to the log file. Activates logging to this file if set. AUTH_SERVICE_DEBUG_ADDR string 127.0.0.1:9198 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_SERVICE_DEBUG_TOKEN string Token to secure the metrics endpoint. AUTH_SERVICE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. AUTH_SERVICE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. AUTH_SERVICE_GRPC_ADDR string 127.0.0.1:9199 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLAUTH_SERVICE_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETAUTH_SERVICE_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_SERVICE_ACCOUNT_IDAUTH_SERVICE_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETAUTH_SERVICE_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDAUTH_SERVICE_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEAUTH_SERVICE_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTAUTH_SERVICE_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORAUTH_SERVICE_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELAUTH_SERVICE_LOG_LEVEL string The log level."},{"id":282,"href":"/services/_includes/clientlog_configvars/","title":"Clientlog Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDCLIENTLOG_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPECLIENTLOG_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTCLIENTLOG_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORCLIENTLOG_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELCLIENTLOG_USERLOG_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYCLIENTLOG_USERLOG_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORCLIENTLOG_USERLOG_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILECLIENTLOG_USERLOG_LOG_FILE string The path to the log file. Activates logging to this file if set. CLIENTLOG_DEBUG_ADDR string 127.0.0.1:9260 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. CLIENTLOG_DEBUG_TOKEN string Token to secure the metrics endpoint. CLIENTLOG_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. CLIENTLOG_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_JWT_SECRETCLIENTLOG_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAYCLIENTLOG_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_EVENTS_ENDPOINTCLIENTLOG_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERCLIENTLOG_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURECLIENTLOG_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATECLIENTLOG_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSCLIENTLOG_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMECLIENTLOG_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDCLIENTLOG_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_SERVICE_ACCOUNT_IDCLIENTLOG_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETCLIENTLOG_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDCLIENTLOG_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPECLIENTLOG_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTCLIENTLOG_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORCLIENTLOG_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELCLIENTLOG_USERLOG_LOG_LEVEL string The log level."},{"id":283,"href":"/services/_includes/collaboration_configvars/","title":"Collaboration Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description COLLABORATION_APP_NAME string Collabora The name of the app which is shown to the user. You can chose freely but you are limited to a single word without special characters or whitespaces. We recommend to use pascalCase like \u0026lsquo;CollaboraOnline\u0026rsquo;. COLLABORATION_APP_PRODUCT string Collabora The WebOffice app, either Collabora, OnlyOffice, Microsoft365 or MicrosoftOfficeOnline. COLLABORATION_APP_DESCRIPTION string Open office documents with Collabora App description COLLABORATION_APP_ICON string image-edit Icon for the app COLLABORATION_APP_ADDR string https://127.0.0.1:9980 The URL where the WOPI app is located, such as https://127.0.0.1:8080. COLLABORATION_APP_INSECURE bool false Skip TLS certificate verification when connecting to the WOPI app COLLABORATION_APP_PROOF_DISABLE bool false Disable the proof keys verification COLLABORATION_APP_PROOF_DURATION string 12h Duration for the proof keys to be cached in memory, using time.ParseDuration format. If the duration can\u0026rsquo;t be parsed, we\u0026rsquo;ll use the default 12h as duration COLLABORATION_APP_LICENSE_CHECK_ENABLE bool false Enable license checking to edit files. Needs to be enabled when using Microsoft365 with the business flow. OCIS_PERSISTENT_STORECOLLABORATION_STORE string nats-js-kv The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESCOLLABORATION_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. COLLABORATION_STORE_DATABASE string collaboration The database name the configured store should use. COLLABORATION_STORE_TABLE string The database table the store should use. OCIS_PERSISTENT_STORE_TTLCOLLABORATION_STORE_TTL Duration 30m0s Time to live for events in the store. Defaults to \u0026lsquo;30m\u0026rsquo; (30 minutes). See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMECOLLABORATION_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDCOLLABORATION_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_JWT_SECRETCOLLABORATION_JWT_SECRET string The secret to mint and validate jwt tokens. COLLABORATION_GRPC_ADDR string 127.0.0.1:9301 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLCOLLABORATION_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. COLLABORATION_HTTP_ADDR string 127.0.0.1:9300 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. COLLABORATION_WOPI_SRC string https://localhost:9300 The WOPI source base URL containing schema, host and port. Set this to the schema and domain where the collaboration service is reachable for the wopi app, such as https://office.owncloud.test. COLLABORATION_WOPI_SECRET string Used to mint and verify WOPI JWT tokens and encrypt and decrypt the REVA JWT token embedded in the WOPI JWT token. COLLABORATION_WOPI_DISABLE_CHATOCIS_WOPI_DISABLE_CHAT bool false Disable chat in the office web frontend. This feature applies to OnlyOffice and Microsoft. COLLABORATION_WOPI_PROXY_URL string The URL to the ownCloud Office365 WOPI proxy. Optional. To use this feature, you need an office365 proxy subscription. If you become part of the Microsoft CSP program (https://learn.microsoft.com/en-us/partner-center/enroll/csp-overview), you can use WebOffice without a proxy. COLLABORATION_WOPI_PROXY_SECRET string Optional, the secret to authenticate against the ownCloud Office365 WOPI proxy. This secret can be obtained from ownCloud via the office365 proxy subscription. COLLABORATION_WOPI_SHORTTOKENS bool false Use short access tokens for WOPI access. This is useful for office packages, like Microsoft Office Online, which have URL length restrictions. If enabled, a persistent store must be configured. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata. COLLABORATION_CS3API_DATAGATEWAY_INSECURE bool false Connect to the CS3API data gateway insecurely. OCIS_TRACING_ENABLEDCOLLABORATION_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPECOLLABORATION_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTCOLLABORATION_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORCOLLABORATION_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELCOLLABORATION_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYCOLLABORATION_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORCOLLABORATION_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILECOLLABORATION_LOG_FILE string The path to the log file. Activates logging to this file if set. COLLABORATION_DEBUG_ADDR string 127.0.0.1:9304 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. COLLABORATION_DEBUG_TOKEN string Token to secure the metrics endpoint. COLLABORATION_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. COLLABORATION_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. ","description":"Environment Variables Name Type Default Value Description COLLABORATION_APP_NAME string Collabora The name of the app which is shown to the user. You can chose freely but you are limited to a single word without special characters or whitespaces. We recommend to use pascalCase like \u0026lsquo;CollaboraOnline\u0026rsquo;. COLLABORATION_APP_PRODUCT string Collabora The WebOffice app, either Collabora, OnlyOffice, Microsoft365 or MicrosoftOfficeOnline. COLLABORATION_APP_DESCRIPTION string Open office documents with Collabora App description COLLABORATION_APP_ICON string image-edit Icon for the app COLLABORATION_APP_ADDR string https://127."},{"id":284,"href":"/services/_includes/eventhistory_configvars/","title":"Eventhistory Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDEVENTHISTORY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEEVENTHISTORY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTEVENTHISTORY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOREVENTHISTORY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELEVENTHISTORY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYEVENTHISTORY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOREVENTHISTORY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEEVENTHISTORY_LOG_FILE string The path to the log file. Activates logging to this file if set. EVENTHISTORY_DEBUG_ADDR string 127.0.0.1:9270 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. EVENTHISTORY_DEBUG_TOKEN string Token to secure the metrics endpoint. EVENTHISTORY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. EVENTHISTORY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. EVENTHISTORY_GRPC_ADDR string 127.0.0.1:9274 The bind address of the GRPC service. OCIS_EVENTS_ENDPOINTEVENTHISTORY_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTEREVENTHISTORY_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREEVENTHISTORY_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEEVENTHISTORY_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. Will be seen as empty if NOTIFICATIONS_EVENTS_TLS_INSECURE is provided. OCIS_EVENTS_ENABLE_TLSEVENTHISTORY_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEEVENTHISTORY_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDEVENTHISTORY_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_PERSISTENT_STOREEVENTHISTORY_STORE string nats-js-kv The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESEVENTHISTORY_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. EVENTHISTORY_STORE_DATABASE string eventhistory The database name the configured store should use. EVENTHISTORY_STORE_TABLE string The database table the store should use. OCIS_PERSISTENT_STORE_TTLEVENTHISTORY_STORE_TTL Duration 336h0m0s Time to live for events in the store. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks). See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEEVENTHISTORY_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDEVENTHISTORY_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDEVENTHISTORY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEEVENTHISTORY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTEVENTHISTORY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOREVENTHISTORY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELEVENTHISTORY_LOG_LEVEL string The log level."},{"id":285,"href":"/services/_includes/frontend_configvars/","title":"Frontend Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDFRONTEND_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEFRONTEND_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTFRONTEND_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORFRONTEND_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELFRONTEND_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYFRONTEND_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORFRONTEND_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEFRONTEND_LOG_FILE string The path to the log file. Activates logging to this file if set. FRONTEND_DEBUG_ADDR string 127.0.0.1:9141 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. FRONTEND_DEBUG_TOKEN string Token to secure the metrics endpoint. FRONTEND_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. FRONTEND_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. FRONTEND_HTTP_ADDR string 127.0.0.1:9140 The bind address of the HTTP service. FRONTEND_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. FRONTEND_HTTP_PREFIX string The Path prefix where the frontend can be accessed (defaults to /). OCIS_CORS_ALLOW_ORIGINSFRONTEND_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSFRONTEND_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT POST PATCH DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSFRONTEND_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSFRONTEND_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_TRANSFER_SECRET string Transfer secret for signing file up- and download requests. OCIS_JWT_SECRETFRONTEND_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_MACHINE_AUTH_API_KEYFRONTEND_MACHINE_AUTH_API_KEY string The machine auth API key used to validate internal requests necessary to access resources from other services. FRONTEND_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. FRONTEND_ENABLE_FAVORITES bool false Enables the support for favorites in the clients. OCIS_SPACES_MAX_QUOTAFRONTEND_MAX_QUOTA uint64 0 Set the global max quota value in bytes. A value of 0 equals unlimited. The value is provided via capabilities. FRONTEND_UPLOAD_MAX_CHUNK_SIZE int 10000000 Sets the max chunk sizes in bytes for uploads via the clients. FRONTEND_UPLOAD_HTTP_METHOD_OVERRIDE string Advise TUS to replace PATCH requests by POST requests. FRONTEND_DEFAULT_UPLOAD_PROTOCOL string tus The default upload protocol to use in clients. Currently only \u0026rsquo;tus\u0026rsquo; is available. See the developer API documentation for more details about TUS. OCIS_ENABLE_OCMFRONTEND_ENABLE_FEDERATED_SHARING_INCOMING bool false Changing this value is NOT supported. Enables support for incoming federated sharing for clients. The backend behaviour is not changed. OCIS_ENABLE_OCMFRONTEND_ENABLE_FEDERATED_SHARING_OUTGOING bool false Changing this value is NOT supported. Enables support for outgoing federated sharing for clients. The backend behaviour is not changed. FRONTEND_SEARCH_MIN_LENGTH int 3 Minimum number of characters to enter before a client should start a search for Share receivers. This setting can be used to customize the user experience if e.g too many results are displayed. OCIS_EDITIONFRONTEND_EDITION string Community Edition of oCIS. Used for branding purposes. OCIS_DISABLE_SSEFRONTEND_DISABLE_SSE bool false When set to true, clients are informed that the Server-Sent Events endpoint is not accessible. FRONTEND_DEFAULT_LINK_PERMISSIONS int 1 Defines the default permissions a link is being created with. Possible values are 0 (= internal link, for instance members only) and 1 (= public link with viewer permissions). Defaults to 1. OCIS_URLFRONTEND_PUBLIC_URL string https://localhost:9200 The public facing URL of the oCIS frontend. OCIS_MAX_CONCURRENCYFRONTEND_MAX_CONCURRENCY int 1 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. OCIS_INSECUREFRONTEND_APP_HANDLER_INSECURE bool false Allow insecure connections to the frontend. FRONTEND_APP_HANDLER_SECURE_VIEW_APP_ADDR string com.owncloud.api.collaboration Service name or address of the app provider to use for secure view. Should match the service name or address of the registered CS3 app provider. FRONTEND_ARCHIVER_MAX_NUM_FILES int64 10000 Max number of files that can be packed into an archive. FRONTEND_ARCHIVER_MAX_SIZE int64 1073741824 Max size in bytes of the zip archive the archiver can create. OCIS_INSECUREFRONTEND_ARCHIVER_INSECURE bool false Allow insecure connections to the archiver. FRONTEND_DATA_GATEWAY_PREFIX string data Path prefix for the data gateway. FRONTEND_OCS_PREFIX string ocs URL path prefix for the OCS service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;. FRONTEND_OCS_SHARE_PREFIX string /Shares Path prefix for shares as part of an ocis resource. Note that the path must start with \u0026lsquo;/\u0026rsquo;. FRONTEND_OCS_PERSONAL_NAMESPACE string /users/{{.Id.OpaqueId}} Home namespace identifier. FRONTEND_OCS_ADDITIONAL_INFO_ATTRIBUTE string {{.Mail}} Additional information attribute for the user like {{.Mail}}. OCIS_CACHE_STOREFRONTEND_OCS_STAT_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESFRONTEND_OCS_STAT_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-stat The database name the configured store should use. FRONTEND_OCS_STAT_CACHE_TABLE string The database table the store should use. OCIS_CACHE_TTLFRONTEND_OCS_STAT_CACHE_TTL Duration 5m0s Default time to live for user info in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEFRONTEND_OCS_STAT_CACHE_DISABLE_PERSISTENCE bool false Disable persistence of the cache. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. Defaults to false. OCIS_CACHE_AUTH_USERNAMEFRONTEND_OCS_STAT_CACHE_AUTH_USERNAME string The username to use for authentication. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. OCIS_CACHE_AUTH_PASSWORDFRONTEND_OCS_STAT_CACHE_AUTH_PASSWORD string The password to use for authentication. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. FRONTEND_OCS_ENABLE_DENIALS bool false EXPERIMENTAL: enable the feature to deny access on folders. OCIS_ENABLE_OCMFRONTEND_OCS_LIST_OCM_SHARES bool true Include OCM shares when listing shares. See the OCM service documentation for more details. OCIS_ENABLE_OCMFRONTEND_OCS_INCLUDE_OCM_SHAREES bool false Include OCM sharees when listing sharees. OCIS_SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORDFRONTEND_OCS_PUBLIC_SHARE_MUST_HAVE_PASSWORD bool true Set this to true if you want to enforce passwords on all public shares. OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORDFRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD bool false Set this to true if you want to enforce passwords for writable shares. Only effective if the setting for \u0026lsquo;passwords on all public shares\u0026rsquo; is set to false. OCIS_SHOW_USER_EMAIL_IN_RESULTS bool false Include user email addresses in responses. If absent or set to false emails will be omitted from results. Please note that admin users can always see all email addresses. FRONTEND_CHECKSUMS_SUPPORTED_TYPES []string [sha1 md5 adler32] A list of checksum types that indicate to clients which hashes the server can use to verify upload integrity. Supported types are \u0026lsquo;sha1\u0026rsquo;, \u0026lsquo;md5\u0026rsquo; and \u0026lsquo;adler32\u0026rsquo;. See the Environment Variable Types description for more details. FRONTEND_CHECKSUMS_PREFERRED_UPLOAD_TYPE string sha1 The supported checksum type for uploads that indicates to clients supporting multiple hash algorithms which one is preferred by the server. Must be one out of the defined list of SUPPORTED_TYPES. FRONTEND_READONLY_USER_ATTRIBUTES []string [] A list of user attributes to indicate as read-only. Supported values: \u0026lsquo;user.onPremisesSamAccountName\u0026rsquo; (username), \u0026lsquo;user.displayName\u0026rsquo;, \u0026lsquo;user.mail\u0026rsquo;, \u0026lsquo;user.passwordProfile\u0026rsquo; (password), \u0026lsquo;user.appRoleAssignments\u0026rsquo; (role), \u0026lsquo;user.memberOf\u0026rsquo; (groups), \u0026lsquo;user.accountEnabled\u0026rsquo; (login allowed), \u0026lsquo;drive.quota\u0026rsquo; (quota). See the Environment Variable Types description for more details. OCIS_LDAP_SERVER_WRITE_ENABLEDFRONTEND_LDAP_SERVER_WRITE_ENABLED bool true Allow creating, modifying and deleting LDAP users via the GRAPH API. This can only be set to \u0026rsquo;true\u0026rsquo; when keeping default settings for the LDAP user and group attribute types (the \u0026lsquo;OCIS_LDAP_USER_SCHEMA_* and \u0026lsquo;OCIS_LDAP_GROUP_SCHEMA_* variables). FRONTEND_FULL_TEXT_SEARCH_ENABLED bool false Set to true to signal the web client that full-text search is enabled. OCIS_EVENTS_ENDPOINTFRONTEND_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERFRONTEND_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREFRONTEND_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. FRONTEND_EVENTS_TLS_ROOT_CA_CERTIFICATEOCS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSFRONTEND_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEFRONTEND_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDFRONTEND_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. FRONTEND_AUTO_ACCEPT_SHARES bool true Defines if shares should be auto accepted by default. Users can change this setting individually in their profile. OCIS_SERVICE_ACCOUNT_IDFRONTEND_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETFRONTEND_SERVICE_ACCOUNT_SECRET string The service account secret. OCIS_PASSWORD_POLICY_DISABLEDFRONTEND_PASSWORD_POLICY_DISABLED bool false Disable the password policy. Defaults to false if not set. OCIS_PASSWORD_POLICY_MIN_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_CHARACTERS int 8 Define the minimum password length. Defaults to 8 if not set. OCIS_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS int 1 Define the minimum number of uppercase letters. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS int 1 Define the minimum number of lowercase letters. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_DIGITSFRONTEND_PASSWORD_POLICY_MIN_DIGITS int 1 Define the minimum number of digits. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERSFRONTEND_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS int 1 Define the minimum number of characters from the special characters list to be present. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_BANNED_PASSWORDS_LISTFRONTEND_PASSWORD_POLICY_BANNED_PASSWORDS_LIST string Path to the \u0026lsquo;banned passwords list\u0026rsquo; file. This only impacts public link password validation. See the documentation for more details. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDFRONTEND_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEFRONTEND_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTFRONTEND_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORFRONTEND_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELFRONTEND_LOG_LEVEL string The log level."},{"id":286,"href":"/services/_includes/gateway_configvars/","title":"Gateway Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGATEWAY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGATEWAY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGATEWAY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGATEWAY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGATEWAY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYGATEWAY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORGATEWAY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEGATEWAY_LOG_FILE string The path to the log file. Activates logging to this file if set. GATEWAY_DEBUG_ADDR string 127.0.0.1:9143 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. GATEWAY_DEBUG_TOKEN string Token to secure the metrics endpoint. GATEWAY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. GATEWAY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_GATEWAY_GRPC_ADDRGATEWAY_GRPC_ADDR string 127.0.0.1:9142 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLGATEWAY_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETGATEWAY_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. GATEWAY_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. GATEWAY_COMMIT_SHARE_TO_STORAGE_GRANT bool true Commit shares to storage grants. This grants access to shared resources for the share receiver directly on the storage. GATEWAY_SHARE_FOLDER_NAME string Shares Name of the share folder in users\u0026rsquo; home space. GATEWAY_DISABLE_HOME_CREATION_ON_LOGIN bool true Disable creation of the home space on login. OCIS_TRANSFER_SECRET string The storage transfer secret. GATEWAY_TRANSFER_EXPIRES int 86400 Expiry for the gateway tokens. OCIS_CACHE_STOREGATEWAY_PROVIDER_CACHE_STORE string noop The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESGATEWAY_PROVIDER_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-providers The database name the configured store should use. OCIS_CACHE_TTLGATEWAY_PROVIDER_CACHE_TTL Duration 5m0s Default time to live for user info in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEGATEWAY_PROVIDER_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the provider cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEGATEWAY_PROVIDER_CACHE_AUTH_USERNAME string The username to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDGATEWAY_PROVIDER_CACHE_AUTH_PASSWORD string The password to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_STOREGATEWAY_CREATE_HOME_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESGATEWAY_CREATE_HOME_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-createhome The database name the configured store should use. OCIS_CACHE_TTLGATEWAY_CREATE_HOME_CACHE_TTL Duration 5m0s Default time to live for user info in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEGATEWAY_CREATE_HOME_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the create home cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEGATEWAY_CREATE_HOME_CACHE_AUTH_USERNAME string The username to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDGATEWAY_CREATE_HOME_CACHE_AUTH_PASSWORD string The password to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_URLGATEWAY_FRONTEND_PUBLIC_URL string https://localhost:9200 The public facing URL of the oCIS frontend. GATEWAY_USERS_ENDPOINT string com.owncloud.api.users The endpoint of the users service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_GROUPS_ENDPOINT string com.owncloud.api.groups The endpoint of the groups service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_PERMISSIONS_ENDPOINT string com.owncloud.api.settings The endpoint of the permissions service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_SHARING_ENDPOINT string com.owncloud.api.sharing The endpoint of the shares service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_APP_ENDPOINT string com.owncloud.api.auth-app The endpoint of the auth-app service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_BASIC_ENDPOINT string com.owncloud.api.auth-basic The endpoint of the auth-basic service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_BEARER_ENDPOINT string The endpoint of the auth-bearer service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_MACHINE_ENDPOINT string com.owncloud.api.auth-machine The endpoint of the auth-machine service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_AUTH_SERVICE_ENDPOINT string com.owncloud.api.auth-service The endpoint of the auth-service service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_PUBLIC_LINK_ENDPOINT string com.owncloud.api.storage-publiclink The endpoint of the storage-publiclink service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_USERS_ENDPOINT string com.owncloud.api.storage-users The endpoint of the storage-users service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_SHARES_ENDPOINT string com.owncloud.api.storage-shares The endpoint of the storage-shares service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_APP_REGISTRY_ENDPOINT string com.owncloud.api.app-registry The endpoint of the app-registry service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_OCM_ENDPOINT string com.owncloud.api.ocm The endpoint of the ocm service. Can take a service name or a gRPC URI with the dns, kubernetes or unix protocol. GATEWAY_STORAGE_REGISTRY_DRIVER string spaces The driver name of the storage registry to use. GATEWAY_STORAGE_REGISTRY_RULES []string [] The rules for the storage registry. See the Environment Variable Types description for more details. GATEWAY_STORAGE_REGISTRY_CONFIG_JSON string Additional configuration for the storage registry in json format. GATEWAY_STORAGE_USERS_MOUNT_ID string Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGATEWAY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGATEWAY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGATEWAY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGATEWAY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGATEWAY_LOG_LEVEL string The log level."},{"id":287,"href":"/services/_includes/graph_configvars/","title":"Graph Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGRAPH_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGRAPH_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGRAPH_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGRAPH_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGRAPH_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYGRAPH_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORGRAPH_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEGRAPH_LOG_FILE string The path to the log file. Activates logging to this file if set. OCIS_CACHE_STOREGRAPH_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESGRAPH_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. GRAPH_CACHE_STORE_DATABASE string cache-roles The database name the configured store should use. GRAPH_CACHE_STORE_TABLE string The database table the store should use. OCIS_CACHE_TTLGRAPH_CACHE_TTL Duration 336h0m0s Time to live for cache records in the graph. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks). See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEGRAPH_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEGRAPH_CACHE_AUTH_USERNAME string The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDGRAPH_CACHE_AUTH_PASSWORD string The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. GRAPH_DEBUG_ADDR string 127.0.0.1:9124 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. GRAPH_DEBUG_TOKEN string Token to secure the metrics endpoint. GRAPH_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. GRAPH_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. GRAPH_HTTP_ADDR string 127.0.0.1:9120 The bind address of the HTTP service. GRAPH_HTTP_ROOT string /graph Subdirectory that serves as the root for this HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. GRAPH_HTTP_API_TOKEN string An optional API bearer token OCIS_CORS_ALLOW_ORIGINSGRAPH_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSGRAPH_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSGRAPH_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Purge Restore] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSGRAPH_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. GRAPH_GROUP_MEMBERS_PATCH_LIMIT int 20 The amount of group members allowed to be added with a single patch request. GRAPH_USERNAME_MATCH string default Apply restrictions to usernames. Supported values are \u0026lsquo;default\u0026rsquo; and \u0026rsquo;none\u0026rsquo;. When set to \u0026lsquo;default\u0026rsquo;, user names must not start with a number and are restricted to ASCII characters. When set to \u0026rsquo;none\u0026rsquo;, no restrictions are applied. The default value is \u0026lsquo;default\u0026rsquo;. GRAPH_ASSIGN_DEFAULT_USER_ROLE bool true Whether to assign newly created users the default role \u0026lsquo;User\u0026rsquo;. Set this to \u0026lsquo;false\u0026rsquo; if you want to assign roles manually, or if the role assignment should happen at first login. Set this to \u0026rsquo;true\u0026rsquo; (the default) to assign the role \u0026lsquo;User\u0026rsquo; when creating a new user. GRAPH_IDENTITY_SEARCH_MIN_LENGTH int 3 The minimum length the search term needs to have for unprivileged users when searching for users or groups. OCIS_SHOW_USER_EMAIL_IN_RESULTS bool false Include user email addresses in responses. If absent or set to false emails will be omitted from results. Please note that admin users can always see all email addresses. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_JWT_SECRETGRAPH_JWT_SECRET string The secret to mint and validate jwt tokens. GRAPH_APPLICATION_ID string The ocis application ID shown in the graph. All app roles are tied to this ID. GRAPH_APPLICATION_DISPLAYNAME string ownCloud Infinite Scale The ocis application name. OCIS_URLGRAPH_SPACES_WEBDAV_BASE string https://localhost:9200 The public facing URL of WebDAV. GRAPH_SPACES_WEBDAV_PATH string /dav/spaces/ The WebDAV sub-path for spaces. GRAPH_SPACES_DEFAULT_QUOTA string 1000000000 The default quota in bytes. GRAPH_SPACES_EXTENDED_SPACE_PROPERTIES_CACHE_TTL int 60000000000 Max TTL in seconds for the spaces property cache. GRAPH_SPACES_USERS_CACHE_TTL int 60000000000 Max TTL in seconds for the spaces users cache. GRAPH_SPACES_GROUPS_CACHE_TTL int 60000000000 Max TTL in seconds for the spaces groups cache. GRAPH_SPACES_STORAGE_USERS_ADDRESS string com.owncloud.api.storage-users The address of the storage-users service. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_TRANSLATION_PATHGRAPH_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. GRAPH_IDENTITY_BACKEND string ldap The user identity backend to use. Supported backend types are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;cs3\u0026rsquo;. OCIS_LDAP_URIGRAPH_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo; OCIS_LDAP_CACERTGRAPH_LDAP_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. OCIS_LDAP_INSECUREGRAPH_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. OCIS_LDAP_BIND_DNGRAPH_LDAP_BIND_DN string uid=libregraph,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDGRAPH_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. GRAPH_LDAP_SERVER_UUID bool false If set to true, rely on the LDAP Server to generate a unique ID for users and groups, like when using \u0026rsquo;entryUUID\u0026rsquo; as the user ID attribute. GRAPH_LDAP_SERVER_USE_PASSWORD_MODIFY_EXOP bool true Use the \u0026lsquo;Password Modify Extended Operation\u0026rsquo; for updating user passwords. OCIS_LDAP_SERVER_WRITE_ENABLEDGRAPH_LDAP_SERVER_WRITE_ENABLED bool true Allow creating, modifying and deleting LDAP users via the GRAPH API. This can only be set to \u0026rsquo;true\u0026rsquo; when keeping default settings for the LDAP user and group attribute types (the \u0026lsquo;OCIS_LDAP_USER_SCHEMA_* and \u0026lsquo;OCIS_LDAP_GROUP_SCHEMA_* variables). GRAPH_LDAP_REFINT_ENABLED bool false Signals that the server has the refint plugin enabled, which makes some actions not needed. OCIS_LDAP_USER_BASE_DNGRAPH_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_USER_SCOPEGRAPH_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_USER_FILTERGRAPH_LDAP_USER_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_USER_OBJECTCLASSGRAPH_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;). OCIS_LDAP_USER_SCHEMA_MAILGRAPH_LDAP_USER_EMAIL_ATTRIBUTE string mail LDAP Attribute to use for the email address of users. OCIS_LDAP_USER_SCHEMA_DISPLAYNAMELDAP_USER_SCHEMA_DISPLAY_NAMEGRAPH_LDAP_USER_DISPLAYNAME_ATTRIBUTE string displayName LDAP Attribute to use for the display name of users. OCIS_LDAP_USER_SCHEMA_USERNAMEGRAPH_LDAP_USER_NAME_ATTRIBUTE string uid LDAP Attribute to use for username of users. OCIS_LDAP_USER_SCHEMA_IDGRAPH_LDAP_USER_UID_ATTRIBUTE string owncloudUUID LDAP Attribute to use as the unique ID for users. This should be a stable globally unique ID like a UUID. OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGGRAPH_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user ID\u0026rsquo;s. OCIS_LDAP_USER_SCHEMA_USER_TYPEGRAPH_LDAP_USER_TYPE_ATTRIBUTE string ownCloudUserType LDAP Attribute to distinguish between \u0026lsquo;Member\u0026rsquo; and \u0026lsquo;Guest\u0026rsquo; users. Default is \u0026lsquo;ownCloudUserType\u0026rsquo;. OCIS_LDAP_USER_ENABLED_ATTRIBUTEGRAPH_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP Attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_DISABLE_USER_MECHANISMGRAPH_DISABLE_USER_MECHANISM string attribute An option to control the behavior for disabling users. Supported options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed. Default is \u0026lsquo;attribute\u0026rsquo;. OCIS_LDAP_DISABLED_USERS_GROUP_DNGRAPH_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;. OCIS_LDAP_GROUP_BASE_DNGRAPH_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups. GRAPH_LDAP_GROUP_CREATE_BASE_DN string ou=groups,o=libregraph-idm Parent DN under which new groups are created. This DN needs to be subordinate to the \u0026lsquo;GRAPH_LDAP_GROUP_BASE_DN\u0026rsquo;. This setting is only relevant when \u0026lsquo;GRAPH_LDAP_SERVER_WRITE_ENABLED\u0026rsquo; is \u0026rsquo;true\u0026rsquo;. It defaults to the value of \u0026lsquo;GRAPH_LDAP_GROUP_BASE_DN\u0026rsquo;. All groups outside of this subtree are treated as readonly groups and cannot be updated. OCIS_LDAP_GROUP_SCOPEGRAPH_LDAP_GROUP_SEARCH_SCOPE string sub LDAP search scope to use when looking up groups. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_GROUP_FILTERGRAPH_LDAP_GROUP_FILTER string LDAP filter to add to the default filters for group searches. OCIS_LDAP_GROUP_OBJECTCLASSGRAPH_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;). OCIS_LDAP_GROUP_SCHEMA_GROUPNAMEGRAPH_LDAP_GROUP_NAME_ATTRIBUTE string cn LDAP Attribute to use for the name of groups. OCIS_LDAP_GROUP_SCHEMA_MEMBERGRAPH_LDAP_GROUP_MEMBER_ATTRIBUTE string member LDAP Attribute that is used for group members. OCIS_LDAP_GROUP_SCHEMA_IDGRAPH_LDAP_GROUP_ID_ATTRIBUTE string owncloudUUID LDAP Attribute to use as the unique id for groups. This should be a stable globally unique ID like a UUID. OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGGRAPH_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s. GRAPH_LDAP_EDUCATION_RESOURCES_ENABLED bool false Enable LDAP support for managing education related resources. GRAPH_LDAP_SCHOOL_BASE_DN string Search base DN for looking up LDAP schools. GRAPH_LDAP_SCHOOL_SEARCH_SCOPE string LDAP search scope to use when looking up schools. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. GRAPH_LDAP_SCHOOL_FILTER string LDAP filter to add to the default filters for school searches. GRAPH_LDAP_SCHOOL_OBJECTCLASS string The object class to use for schools in the default school search filter. GRAPH_LDAP_SCHOOL_NAME_ATTRIBUTE string LDAP Attribute to use for the name of a school. GRAPH_LDAP_SCHOOL_NUMBER_ATTRIBUTE string LDAP Attribute to use for the number of a school. GRAPH_LDAP_SCHOOL_ID_ATTRIBUTE string LDAP Attribute to use as the unique id for schools. This should be a stable globally unique ID like a UUID. GRAPH_LDAP_SCHOOL_TERMINATION_MIN_GRACE_DAYS int 0 When setting a \u0026rsquo;terminationDate\u0026rsquo; for a school, require the date to be at least this number of days in the future. OCIS_ENABLE_OCMGRAPH_INCLUDE_OCM_SHAREES bool false Include OCM sharees when listing users. OCIS_EVENTS_ENDPOINTGRAPH_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Set to a empty string to disable emitting events. OCIS_EVENTS_CLUSTERGRAPH_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_INSECUREGRAPH_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEGRAPH_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided GRAPH_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSGRAPH_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEGRAPH_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDGRAPH_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. GRAPH_AVAILABLE_ROLES []string [b1e2218d-eef8-4d4c-b82d-0f1a1b48f3b5 a8d5fe5e-96e3-418d-825b-534dbdf22b99 fb6c3e19-e378-47e5-b277-9732f9de6e21 58c63c02-1d89-4572-916a-870abc5a1b7d 2d00ce52-1fc2-4dbc-8b95-a73b73395f5a 1c996275-f1c9-4e71-abdf-a42f6495e960 312c0871-5ef7-4b3a-85b6-0e4074c64049] A comma separated list of roles that are available for assignment. OCIS_MAX_CONCURRENCYGRAPH_MAX_CONCURRENCY int 20 The maximum number of concurrent requests the service will handle. OCIS_KEYCLOAK_BASE_PATHGRAPH_KEYCLOAK_BASE_PATH string The URL to access keycloak. OCIS_KEYCLOAK_CLIENT_IDGRAPH_KEYCLOAK_CLIENT_ID string The client id to authenticate with keycloak. OCIS_KEYCLOAK_CLIENT_SECRETGRAPH_KEYCLOAK_CLIENT_SECRET string The client secret to use in authentication. OCIS_KEYCLOAK_CLIENT_REALMGRAPH_KEYCLOAK_CLIENT_REALM string The realm the client is defined in. OCIS_KEYCLOAK_USER_REALMGRAPH_KEYCLOAK_USER_REALM string The realm users are defined. OCIS_KEYCLOAK_INSECURE_SKIP_VERIFYGRAPH_KEYCLOAK_INSECURE_SKIP_VERIFY bool false Disable TLS certificate validation for Keycloak connections. Do not set this in production environments. OCIS_SERVICE_ACCOUNT_IDGRAPH_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETGRAPH_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGRAPH_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGRAPH_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGRAPH_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGRAPH_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGRAPH_LOG_LEVEL string The log level."},{"id":288,"href":"/services/_includes/groups_configvars/","title":"Groups Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGROUPS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGROUPS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGROUPS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGROUPS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGROUPS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYGROUPS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORGROUPS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEGROUPS_LOG_FILE string The path to the log file. Activates logging to this file if set. GROUPS_DEBUG_ADDR string 127.0.0.1:9161 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. GROUPS_DEBUG_TOKEN string Token to secure the metrics endpoint. GROUPS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. GROUPS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. GROUPS_GRPC_ADDR string 127.0.0.1:9160 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLGROUPS_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETGROUPS_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. GROUPS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. GROUPS_DRIVER string ldap The driver which should be used by the groups service. Supported values are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;. OCIS_LDAP_URIGROUPS_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo; OCIS_LDAP_CACERTGROUPS_LDAP_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. OCIS_LDAP_INSECUREGROUPS_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. OCIS_LDAP_BIND_DNGROUPS_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDGROUPS_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. OCIS_LDAP_USER_BASE_DNGROUPS_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_GROUP_BASE_DNGROUPS_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups. OCIS_LDAP_USER_SCOPEGROUPS_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_GROUP_SCOPEGROUPS_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. LDAP_GROUP_SUBSTRING_FILTER_TYPEGROUPS_LDAP_GROUP_SUBSTRING_FILTER_TYPE string any Type of substring search filter to use for substring searches for groups. Supported values are \u0026lsquo;initial\u0026rsquo;, \u0026lsquo;final\u0026rsquo; and \u0026lsquo;any\u0026rsquo;. The value \u0026lsquo;initial\u0026rsquo; is used for doing prefix only searches, \u0026lsquo;final\u0026rsquo; for doing suffix only searches or \u0026lsquo;any\u0026rsquo; for doing full substring searches OCIS_LDAP_USER_FILTERGROUPS_LDAP_USER_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_GROUP_FILTERGROUPS_LDAP_GROUP_FILTER string LDAP filter to add to the default filters for group searches. OCIS_LDAP_USER_OBJECTCLASSGROUPS_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;). OCIS_LDAP_GROUP_OBJECTCLASSGROUPS_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;). OCIS_URLOCIS_OIDC_ISSUERGROUPS_IDP_URL string https://localhost:9200 The identity provider value to set in the group IDs of the CS3 group objects for groups returned by this group provider. OCIS_LDAP_USER_SCHEMA_IDGROUPS_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for users. This should be a stable globally unique id like a UUID. OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGGROUPS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user ID\u0026rsquo;s. OCIS_LDAP_USER_SCHEMA_MAILGROUPS_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users. OCIS_LDAP_USER_SCHEMA_DISPLAYNAMEGROUPS_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users. OCIS_LDAP_USER_SCHEMA_USERNAMEGROUPS_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users. OCIS_LDAP_GROUP_SCHEMA_IDGROUPS_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for groups. This should be a stable globally unique ID like a UUID. OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGGROUPS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s. OCIS_LDAP_GROUP_SCHEMA_MAILGROUPS_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty). OCIS_LDAP_GROUP_SCHEMA_DISPLAYNAMEGROUPS_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute). OCIS_LDAP_GROUP_SCHEMA_GROUPNAMEGROUPS_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups. OCIS_LDAP_GROUP_SCHEMA_MEMBERGROUPS_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members. GROUPS_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database. GROUPS_OWNCLOUDSQL_DB_PASSWORD string Password for the database user. GROUPS_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server. GROUPS_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection. GROUPS_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database. GROUPS_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. GROUPS_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided. GROUPS_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames. GROUPS_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user IDs. GROUPS_OWNCLOUDSQL_ENABLE_MEDIAL_SEARCH bool false Allow \u0026lsquo;medial search\u0026rsquo; when searching for users instead of just doing a prefix search. This allows finding \u0026lsquo;Alice\u0026rsquo; when searching for \u0026rsquo;lic\u0026rsquo;. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDGROUPS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEGROUPS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTGROUPS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORGROUPS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELGROUPS_LOG_LEVEL string The log level."},{"id":289,"href":"/services/_includes/idm_configvars/","title":"Idm Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDIDM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEIDM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTIDM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORIDM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELIDM_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYIDM_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORIDM_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEIDM_LOG_FILE string The path to the log file. Activates logging to this file if set. IDM_DEBUG_ADDR string 127.0.0.1:9239 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. IDM_DEBUG_TOKEN string Token to secure the metrics endpoint. IDM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. IDM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. IDM_LDAPS_ADDR string 127.0.0.1:9235 Listen address for the LDAPS listener (ip-addr:port). IDM_LDAPS_CERT string /var/lib/ocis/idm/ldap.crt File name of the TLS server certificate for the LDAPS listener. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. IDM_LDAPS_KEY string /var/lib/ocis/idm/ldap.key File name for the TLS certificate key for the server certificate. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. IDM_DATABASE_PATH string /var/lib/ocis/idm/ocis.boltdb Full path to the IDM backend database. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. IDM_CREATE_DEMO_USERS bool false Flag to enable or disable the creation of the demo users. OCIS_URLOCIS_OIDC_ISSUER string https://localhost:9200 The OIDC issuer URL to assign to the demo users. IDM_ADMIN_PASSWORD string Password to set for the oCIS \u0026lsquo;admin\u0026rsquo; user. Either cleartext or an argon2id hash. IDM_SVC_PASSWORD string Password to set for the \u0026lsquo;idm\u0026rsquo; service user. Either cleartext or an argon2id hash. IDM_REVASVC_PASSWORD string Password to set for the \u0026lsquo;reva\u0026rsquo; service user. Either cleartext or an argon2id hash. IDM_IDPSVC_PASSWORD string Password to set for the \u0026lsquo;idp\u0026rsquo; service user. Either cleartext or an argon2id hash. OCIS_ADMIN_USER_IDIDM_ADMIN_USER_ID string ID of the user that should receive admin privileges. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDIDM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEIDM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTIDM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORIDM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELIDM_LOG_LEVEL string The log level."},{"id":290,"href":"/services/_includes/idp_configvars/","title":"Idp Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description IDP_PASSWORD_RESET_URI string The URI where a user can reset their password. OCIS_TRACING_ENABLEDIDP_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEIDP_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTIDP_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORIDP_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELIDP_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYIDP_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORIDP_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEIDP_LOG_FILE string The path to the log file. Activates logging to this file if set. IDP_DEBUG_ADDR string 127.0.0.1:9134 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. IDP_DEBUG_TOKEN string Token to secure the metrics endpoint. IDP_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. IDP_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. IDP_HTTP_ADDR string 127.0.0.1:9130 The bind address of the HTTP service. IDP_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. IDP_TRANSPORT_TLS_CERT string /var/lib/ocis/idp/server.crt Path/File name of the TLS server certificate (in PEM format) for the IDP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. IDP_TRANSPORT_TLS_KEY string /var/lib/ocis/idp/server.key Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the IDP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. IDP_TLS bool false Disable or Enable HTTPS for the communication between the Proxy service and the IDP service. If set to \u0026rsquo;true\u0026rsquo;, the key and cert files need to be configured and present. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_MACHINE_AUTH_API_KEYIDP_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. IDP_ASSET_PATH string Serve IDP assets from a path on the filesystem instead of the builtin assets. IDP_LOGIN_BACKGROUND_URL string Configure an alternative URL to the background image for the login page. OCIS_URLOCIS_OIDC_ISSUERIDP_ISS string https://localhost:9200 The OIDC issuer URL to use. IDP_IDENTITY_MANAGER string ldap The identity manager implementation to use. Supported identity managers are \u0026rsquo;ldap\u0026rsquo;, \u0026lsquo;cs3\u0026rsquo;, \u0026rsquo;libregraph\u0026rsquo; and \u0026lsquo;guest\u0026rsquo;. IDP_URI_BASE_PATH string IDP uri base path (defaults to \u0026lsquo;\u0026rsquo;). IDP_SIGN_IN_URI string IDP sign-in url. IDP_SIGN_OUT_URI string IDP sign-out url. IDP_ENDPOINT_URI string URL of the IDP endpoint. OCIS_LDAP_INSECUREIDP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. IDP_ALLOW_CLIENT_GUESTS bool false Allow guest clients to access oCIS. IDP_ALLOW_DYNAMIC_CLIENT_REGISTRATION bool false Allow dynamic client registration. IDP_ENCRYPTION_SECRET_FILE string /var/lib/ocis/idp/encryption.key Path to the encryption secret file, if unset, a new certificate will be autogenerated upon each restart, thus invalidating all existing sessions. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. IDP_SIGNING_KID string private-key Value of the KID (Key ID) field which is used in created tokens to uniquely identify the signing-private-key. IDP_SIGNING_METHOD string PS256 Signing method of IDP requests like \u0026lsquo;PS256\u0026rsquo; IDP_SIGNING_PRIVATE_KEY_FILES []string [/var/lib/ocis/idp/private-key.pem] A list of private key files for signing IDP requests. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. See the Environment Variable Types description for more details. IDP_VALIDATION_KEYS_PATH string Path to validation keys for IDP requests. IDP_ACCESS_TOKEN_EXPIRATION uint64 300 \u0026lsquo;Access token lifespan in seconds (time before an access token is expired).\u0026rsquo; IDP_ID_TOKEN_EXPIRATION uint64 300 ID token lifespan in seconds (time before an ID token is expired). IDP_REFRESH_TOKEN_EXPIRATION uint64 2592000 Refresh token lifespan in seconds (time before an refresh token is expired). This also limits the duration of an idle offline session. IDP_DYNAMIC_CLIENT_SECRET_DURATION uint64 0 Lifespan in seconds of a dynamically registered OIDC client. OCIS_LDAP_URIIDP_LDAP_URI string ldaps://localhost:9235 Url of the LDAP service to use as IDP. OCIS_LDAP_CACERTIDP_LDAP_TLS_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idp. OCIS_LDAP_BIND_DNIDP_LDAP_BIND_DN string uid=idp,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDIDP_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. OCIS_LDAP_USER_BASE_DNIDP_LDAP_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_USER_SCOPEIDP_LDAP_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. IDP_LDAP_LOGIN_ATTRIBUTE string uid LDAP User attribute to use for login like \u0026lsquo;uid\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_MAILIDP_LDAP_EMAIL_ATTRIBUTE string mail LDAP User email attribute like \u0026lsquo;mail\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_USERNAMEIDP_LDAP_NAME_ATTRIBUTE string displayName LDAP User name attribute like \u0026lsquo;displayName\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_IDIDP_LDAP_UUID_ATTRIBUTE string ownCloudUUID LDAP User UUID attribute like \u0026lsquo;uid\u0026rsquo;. IDP_LDAP_UUID_ATTRIBUTE_TYPE string text LDAP User uuid attribute type like \u0026rsquo;text\u0026rsquo;. OCIS_LDAP_USER_ENABLED_ATTRIBUTEIDP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP Attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_USER_FILTERIDP_LDAP_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_USER_OBJECTCLASSIDP_LDAP_OBJECTCLASS string inetOrgPerson LDAP User ObjectClass like \u0026lsquo;inetOrgPerson\u0026rsquo;. ","description":"Environment Variables Name Type Default Value Description IDP_PASSWORD_RESET_URI string The URI where a user can reset their password. OCIS_TRACING_ENABLEDIDP_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEIDP_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTIDP_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORIDP_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces."},{"id":291,"href":"/services/_includes/invitations_configvars/","title":"Invitations Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDINVITATIONS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEINVITATIONS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTINVITATIONS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORINVITATIONS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELINVITATIONS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYINVITATIONS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORINVITATIONS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEINVITATIONS_LOG_FILE string The path to the log file. Activates logging to this file if set. INVITATIONS_DEBUG_ADDR string 127.0.0.1:9269 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. INVITATIONS_DEBUG_TOKEN string Token to secure the metrics endpoint. INVITATIONS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. INVITATIONS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. INVITATIONS_HTTP_ADDR string 127.0.0.1:9265 The bind address of the HTTP service. INVITATIONS_HTTP_ROOT string /graph/v1.0 Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSINVITATIONS_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSINVITATIONS_CORS_ALLOW_METHODS []string [] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSINVITATIONS_CORS_ALLOW_HEADERS []string [] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSINVITATIONS_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_KEYCLOAK_BASE_PATHINVITATIONS_KEYCLOAK_BASE_PATH string The URL to access keycloak. OCIS_KEYCLOAK_CLIENT_IDINVITATIONS_KEYCLOAK_CLIENT_ID string The client ID to authenticate with keycloak. OCIS_KEYCLOAK_CLIENT_SECRETINVITATIONS_KEYCLOAK_CLIENT_SECRET string The client secret to use in authentication. OCIS_KEYCLOAK_CLIENT_REALMINVITATIONS_KEYCLOAK_CLIENT_REALM string The realm the client is defined in. OCIS_KEYCLOAK_USER_REALMINVITATIONS_KEYCLOAK_USER_REALM string The realm users are defined. OCIS_KEYCLOAK_INSECURE_SKIP_VERIFYINVITATIONS_KEYCLOAK_INSECURE_SKIP_VERIFY bool false Disable TLS certificate validation for Keycloak connections. Do not set this in production environments. OCIS_JWT_SECRETINVITATIONS_JWT_SECRET string The secret to mint and validate jwt tokens. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDINVITATIONS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEINVITATIONS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTINVITATIONS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORINVITATIONS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELINVITATIONS_LOG_LEVEL string The log level."},{"id":292,"href":"/services/_includes/nats_configvars/","title":"Nats Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDNATS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPENATS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTNATS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORNATS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELNATS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYNATS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORNATS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILENATS_LOG_FILE string The path to the log file. Activates logging to this file if set. NATS_DEBUG_ADDR string 127.0.0.1:9234 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. NATS_DEBUG_TOKEN string Token to secure the metrics endpoint. NATS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. NATS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. NATS_NATS_HOST string 127.0.0.1 Bind address. NATS_NATS_PORT int 9233 Bind port. NATS_NATS_CLUSTER_ID string ocis-cluster ID of the NATS cluster. NATS_NATS_STORE_DIR string /var/lib/ocis/nats The directory where the filesystem storage will store NATS JetStream data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/nats. NATS_TLS_CERT string /var/lib/ocis/nats/tls.crt Path/File name of the TLS server certificate (in PEM format) for the NATS listener. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/nats. NATS_TLS_KEY string /var/lib/ocis/nats/tls.key Path/File name for the TLS certificate key (in PEM format) for the NATS listener. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/nats. OCIS_INSECURENATS_TLS_SKIP_VERIFY_CLIENT_CERT bool false Whether the NATS server should skip the client certificate verification during the TLS handshake. OCIS_EVENTS_ENABLE_TLSNATS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDNATS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPENATS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTNATS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORNATS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELNATS_LOG_LEVEL string The log level."},{"id":293,"href":"/services/_includes/notifications_configvars/","title":"Notifications Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDNOTIFICATIONS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPENOTIFICATIONS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTNOTIFICATIONS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORNOTIFICATIONS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELNOTIFICATIONS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYNOTIFICATIONS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORNOTIFICATIONS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILENOTIFICATIONS_LOG_FILE string The path to the log file. Activates logging to this file if set. NOTIFICATIONS_DEBUG_ADDR string 127.0.0.1:9174 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. NOTIFICATIONS_DEBUG_TOKEN string Token to secure the metrics endpoint. NOTIFICATIONS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. NOTIFICATIONS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_URLNOTIFICATIONS_WEB_UI_URL string https://localhost:9200 The public facing URL of the oCIS Web UI, used e.g. when sending notification eMails NOTIFICATIONS_SMTP_HOST string SMTP host to connect to. NOTIFICATIONS_SMTP_PORT int 0 Port of the SMTP host to connect to. NOTIFICATIONS_SMTP_SENDER string Sender address of emails that will be sent (e.g. \u0026lsquo;ownCloud noreply@example.com\u0026rsquo;. NOTIFICATIONS_SMTP_USERNAME string Username for the SMTP host to connect to. NOTIFICATIONS_SMTP_PASSWORD string Password for the SMTP host to connect to. NOTIFICATIONS_SMTP_INSECURE bool false Allow insecure connections to the SMTP server. NOTIFICATIONS_SMTP_AUTHENTICATION string Authentication method for the SMTP communication. Possible values are \u0026rsquo;login\u0026rsquo;, \u0026lsquo;plain\u0026rsquo;, \u0026lsquo;crammd5\u0026rsquo;, \u0026rsquo;none\u0026rsquo; or \u0026lsquo;auto\u0026rsquo;. If set to \u0026lsquo;auto\u0026rsquo; or unset, the authentication method is automatically negotiated with the server. NOTIFICATIONS_SMTP_ENCRYPTION string none Encryption method for the SMTP communication. Possible values are \u0026lsquo;starttls\u0026rsquo;, \u0026lsquo;ssltls\u0026rsquo; and \u0026rsquo;none\u0026rsquo;. OCIS_EVENTS_ENDPOINTNOTIFICATIONS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERNOTIFICATIONS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURENOTIFICATIONS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATENOTIFICATIONS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSNOTIFICATIONS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMENOTIFICATIONS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDNOTIFICATIONS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EMAIL_TEMPLATE_PATHNOTIFICATIONS_EMAIL_TEMPLATE_PATH string Path to Email notification templates overriding embedded ones. OCIS_TRANSLATION_PATHNOTIFICATIONS_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_SERVICE_ACCOUNT_IDNOTIFICATIONS_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETNOTIFICATIONS_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDNOTIFICATIONS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPENOTIFICATIONS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTNOTIFICATIONS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORNOTIFICATIONS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELNOTIFICATIONS_LOG_LEVEL string The log level."},{"id":294,"href":"/services/_includes/ocdav_configvars/","title":"Ocdav Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCDAV_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCDAV_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCDAV_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCDAV_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCDAV_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYOCDAV_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOROCDAV_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEOCDAV_LOG_FILE string The path to the log file. Activates logging to this file if set. OCDAV_DEBUG_ADDR string 127.0.0.1:9163 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. OCDAV_DEBUG_TOKEN string Token to secure the metrics endpoint. OCDAV_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. OCDAV_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCDAV_HTTP_ADDR string 127.0.0.1:9350 The bind address of the HTTP service. OCDAV_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCDAV_HTTP_PREFIX string A URL path prefix for the handler. OCIS_CORS_ALLOW_ORIGINSOCDAV_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSOCDAV_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT POST DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSOCDAV_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSOCDAV_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_JWT_SECRETOCDAV_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCDAV_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. OCDAV_WEBDAV_NAMESPACE string /users/{{.Id.OpaqueId}} Jail requests to /dav/webdav into this CS3 namespace. Supports template layouting with CS3 User properties. OCDAV_FILES_NAMESPACE string /users/{{.Id.OpaqueId}} Jail requests to /dav/files/{username} into this CS3 namespace. Supports template layouting with CS3 User properties. OCDAV_SHARES_NAMESPACE string /Shares The human readable path for the share jail. Relative to a users personal space root. Upcased intentionally. OCDAV_OCM_NAMESPACE string /public The human readable path prefix for the ocm shares. OCIS_URLOCDAV_PUBLIC_URL string https://localhost:9200 URL where oCIS is reachable for users. OCIS_INSECUREOCDAV_INSECURE bool false Allow insecure connections to the GATEWAY service. OCDAV_GATEWAY_REQUEST_TIMEOUT int64 84300 Request timeout in seconds for requests from the oCDAV service to the GATEWAY service. OCIS_MACHINE_AUTH_API_KEYOCDAV_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. OCIS_EDITIONOCDAV_EDITION string Community Edition of oCIS. Used for branding purposes. OCDAV_ALLOW_PROPFIND_DEPTH_INFINITY bool false Allow the use of depth infinity in PROPFINDS. When enabled, a propfind will traverse through all subfolders. If many subfolders are expected, depth infinity can cause heavy server load and/or delayed response times. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCDAV_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCDAV_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCDAV_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCDAV_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCDAV_LOG_LEVEL string The log level."},{"id":295,"href":"/services/_includes/ocm_configvars/","title":"Ocm Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCM_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYOCM_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOROCM_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEOCM_LOG_FILE string The path to the log file. Activates logging to this file if set. OCM_DEBUG_ADDR string 127.0.0.1:9281 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. OCM_DEBUG_TOKEN string Token to secure the metrics endpoint. OCM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. OCM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCM_HTTP_ADDR string 127.0.0.1:9280 The bind address of the HTTP service. OCM_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCM_HTTP_PREFIX string The path prefix where OCM can be accessed (defaults to /). OCIS_CORS_ALLOW_ORIGINSOCM_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSOCM_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT POST DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSOCM_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSOCM_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCM_GRPC_ADDR string 127.0.0.1:9282 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLOCM_GRPC_PROTOCOL string The transport protocol of the GRPC service. OCIS_SERVICE_ACCOUNT_IDOCM_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETOCM_SERVICE_ACCOUNT_SECRET string The service account secret. OCIS_EVENTS_ENDPOINTOCM_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTEROCM_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREOCM_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEOCM_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided OCM_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSOCM_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEOCM_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDOCM_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_JWT_SECRETOCM_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCM_OCMD_PREFIX string ocm URL path prefix for the OCMD service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;. OCM_OCMD_EXPOSE_RECIPIENT_DISPLAY_NAME bool false Expose the display name of OCM share recipients. OCM_SCIENCEMESH_PREFIX string sciencemesh URL path prefix for the ScienceMesh service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;. OCM_MESH_DIRECTORY_URL string URL of the mesh directory service. OCM_OCM_INVITE_MANAGER_DRIVER string json Driver to be used to persist OCM invites. Supported value is only \u0026lsquo;json\u0026rsquo;. OCM_OCM_INVITE_MANAGER_JSON_FILE string /var/lib/ocis/storage/ocm/ocminvites.json Path to the JSON file where OCM invite data will be stored. This file is maintained by the instance and must not be changed manually. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/ocm. OCM_OCM_INVITE_MANAGER_TOKEN_EXPIRATION Duration 24h0m0s Expiry duration for invite tokens. OCM_OCM_INVITE_MANAGER_TIMEOUT Duration 30s Timeout specifies a time limit for requests made to OCM endpoints. OCM_OCM_INVITE_MANAGER_INSECURE bool false Disable TLS certificate validation for the OCM connections. Do not set this in production environments. SHARING_OCM_PROVIDER_AUTHORIZER_DRIVER string json Driver to be used to persist ocm invites. Supported value is only \u0026lsquo;json\u0026rsquo;. OCM_OCM_PROVIDER_AUTHORIZER_PROVIDERS_FILE string /etc/ocis/ocmproviders.json Path to the JSON file where ocm invite data will be stored. Defaults to $OCIS_CONFIG_DIR/ocmproviders.json. OCM_OCM_SHARE_PROVIDER_DRIVER string json Driver to be used for the OCM share provider. Supported value is only \u0026lsquo;json\u0026rsquo;. OCM_OCM_SHAREPROVIDER_JSON_FILE string /var/lib/ocis/storage/ocm/ocmshares.json Path to the JSON file where OCM share data will be stored. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. OCM_OCM_SHARE_PROVIDER_INSECURE bool false Disable TLS certificate validation for the OCM connections. Do not set this in production environments. OCM_WEBAPP_TEMPLATE string Template for the webapp url. OCM_OCM_CORE_DRIVER string json Driver to be used for the OCM core. Supported value is only \u0026lsquo;json\u0026rsquo;. OCM_OCM_CORE_JSON_FILE string /var/lib/ocis/storage/ocm/ocmshares.json Path to the JSON file where OCM share data will be stored. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. OCM_OCM_STORAGE_PROVIDER_INSECURE bool false Disable TLS certificate validation for the OCM connections. Do not set this in production environments. OCM_OCM_STORAGE_PROVIDER_STORAGE_ROOT string /var/lib/ocis/storage/ocm Directory where the ocm storage provider persists its data like tus upload info files. OCM_OCM_STORAGE_DATA_SERVER_URL string http://localhost:9280/data URL of the data server, needs to be reachable by the data gateway provided by the frontend service or the user if directly exposed. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCM_LOG_LEVEL string The log level."},{"id":296,"href":"/services/_includes/ocs_configvars/","title":"Ocs Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYOCS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLOROCS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEOCS_LOG_FILE string The path to the log file. Activates logging to this file if set. OCS_DEBUG_ADDR string 127.0.0.1:9114 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. OCS_DEBUG_TOKEN string Token to secure the metrics endpoint. OCS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. OCS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCS_HTTP_ADDR string 127.0.0.1:9110 The bind address of the HTTP service. OCS_HTTP_ROOT string /ocs Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSOCS_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSOCS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSOCS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSOCS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_CACHE_STOREOCS_PRESIGNEDURL_SIGNING_KEYS_STORE string nats-js-kv The type of the signing key store. Supported values are: \u0026lsquo;redis-sentinel\u0026rsquo; and \u0026rsquo;nats-js-kv\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_TTLOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_TTL Duration 12h0m0s Default time to live for signing keys. See the Environment Variable Types description for more details. OCIS_CACHE_AUTH_USERNAMEOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDOCS_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_JWT_SECRETOCS_JWT_SECRET string The secret to mint and validate jwt tokens. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDOCS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEOCS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTOCS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTOROCS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELOCS_LOG_LEVEL string The log level."},{"id":297,"href":"/services/_includes/policies_configvars/","title":"Policies Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description POLICIES_GRPC_ADDR string 127.0.0.1:9125 The bind address of the GRPC service. POLICIES_DEBUG_ADDR string 127.0.0.1:9129 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. POLICIES_DEBUG_TOKEN string Token to secure the metrics endpoint. POLICIES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. POLICIES_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_EVENTS_ENDPOINTPOLICIES_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERPOLICIES_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREPOLICIES_EVENTS_TLS_INSECURE bool false Whether the server should skip the client certificate verification during the TLS handshake. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEPOLICIES_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided POLICIES_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSPOLICIES_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEPOLICIES_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDPOLICIES_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_LOG_LEVELPOLICIES_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYPOLICIES_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORPOLICIES_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEPOLICIES_LOG_FILE string The path to the log file. Activates logging to this file if set. POLICIES_ENGINE_TIMEOUT Duration 10s Sets the timeout the rego expression evaluation can take. Rules default to deny if the timeout was reached. See the Environment Variable Types description for more details. POLICIES_ENGINE_MIMES string Sets the mimes file path which maps mimetypes to associated file extensions. See the text description for details. POLICIES_POSTPROCESSING_QUERY string Defines the \u0026lsquo;Complete Rules\u0026rsquo; variable defined in the rego rule set this step uses for its evaluation. Defaults to deny if the variable was not found. OCIS_TRACING_ENABLEDPOLICIES_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPOLICIES_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPOLICIES_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPOLICIES_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. ","description":"Environment Variables Name Type Default Value Description POLICIES_GRPC_ADDR string 127.0.0.1:9125 The bind address of the GRPC service. POLICIES_DEBUG_ADDR string 127.0.0.1:9129 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. POLICIES_DEBUG_TOKEN string Token to secure the metrics endpoint. POLICIES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. POLICIES_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces."},{"id":298,"href":"/services/_includes/postprocessing_configvars/","title":"Postprocessing Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDPOSTPROCESSING_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPOSTPROCESSING_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPOSTPROCESSING_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPOSTPROCESSING_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELPOSTPROCESSING_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYPOSTPROCESSING_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORPOSTPROCESSING_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEPOSTPROCESSING_LOG_FILE string The path to the log file. Activates logging to this file if set. POSTPROCESSING_DEBUG_ADDR string 127.0.0.1:9255 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. POSTPROCESSING_DEBUG_TOKEN string Token to secure the metrics endpoint. POSTPROCESSING_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. POSTPROCESSING_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_PERSISTENT_STOREPOSTPROCESSING_STORE string nats-js-kv The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESPOSTPROCESSING_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. POSTPROCESSING_STORE_DATABASE string postprocessing The database name the configured store should use. POSTPROCESSING_STORE_TABLE string The database table the store should use. OCIS_PERSISTENT_STORE_TTLPOSTPROCESSING_STORE_TTL Duration 0s Time to live for events in the store. See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEPOSTPROCESSING_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDPOSTPROCESSING_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_EVENTS_ENDPOINTPOSTPROCESSING_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERPOSTPROCESSING_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREPOSTPROCESSING_EVENTS_TLS_INSECURE bool false Whether the ocis server should skip the client certificate verification during the TLS handshake. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEPOSTPROCESSING_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided POSTPROCESSING_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSPOSTPROCESSING_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEPOSTPROCESSING_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDPOSTPROCESSING_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. POSTPROCESSING_WORKERS int 3 The number of concurrent go routines that fetch events from the event queue. POSTPROCESSING_STEPS []string [] A list of postprocessing steps processed in order of their appearance. Currently supported values by the system are: \u0026lsquo;virusscan\u0026rsquo;, \u0026lsquo;policies\u0026rsquo; and \u0026lsquo;delay\u0026rsquo;. Custom steps are allowed. See the documentation for instructions. See the Environment Variable Types description for more details. POSTPROCESSING_DELAY Duration 0s After uploading a file but before making it available for download, a delay step can be added. Intended for developing purposes only. If a duration is set but the keyword \u0026lsquo;delay\u0026rsquo; is not explicitely added to \u0026lsquo;POSTPROCESSING_STEPS\u0026rsquo;, the delay step will be processed as last step. In such a case, a log entry will be written on service startup to remind the admin about that situation. See the Environment Variable Types description for more details. POSTPROCESSING_RETRY_BACKOFF_DURATION Duration 5s The base for the exponential backoff duration before retrying a failed postprocessing step. See the Environment Variable Types description for more details. POSTPROCESSING_MAX_RETRIES int 14 The maximum number of retries for a failed postprocessing step. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDPOSTPROCESSING_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPOSTPROCESSING_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPOSTPROCESSING_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPOSTPROCESSING_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELPOSTPROCESSING_LOG_LEVEL string The log level."},{"id":299,"href":"/services/_includes/proxy_configvars/","title":"Proxy Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDPROXY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPROXY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPROXY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPROXY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELPROXY_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYPROXY_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORPROXY_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEPROXY_LOG_FILE string The path to the log file. Activates logging to this file if set. PROXY_DEBUG_ADDR string 127.0.0.1:9205 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. PROXY_DEBUG_TOKEN string Token to secure the metrics endpoint. PROXY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. PROXY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. PROXY_HTTP_ADDR string 0.0.0.0:9200 The bind address of the HTTP service. PROXY_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. PROXY_TRANSPORT_TLS_CERT string /var/lib/ocis/proxy/server.crt Path/File name of the TLS server certificate (in PEM format) for the external http services. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/proxy. PROXY_TRANSPORT_TLS_KEY string /var/lib/ocis/proxy/server.key Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the external http services. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/proxy. PROXY_TLS bool true Enable/Disable HTTPS for external HTTP services. Must be set to \u0026rsquo;true\u0026rsquo; if the built-in IDP service an no reverse proxy is used. See the text description for details. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_URLOCIS_OIDC_ISSUERPROXY_OIDC_ISSUER string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP. OCIS_INSECUREPROXY_OIDC_INSECURE bool false Disable TLS certificate validation for connections to the IDP. Note that this is not recommended for production environments. PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD string jwt Sets how OIDC access tokens should be verified. Possible values are \u0026rsquo;none\u0026rsquo; and \u0026lsquo;jwt\u0026rsquo;. When using \u0026rsquo;none\u0026rsquo;, no special validation apart from using it for accessing the IPD\u0026rsquo;s userinfo endpoint will be done. When using \u0026lsquo;jwt\u0026rsquo;, it tries to parse the access token as a jwt token and verifies the signature using the keys published on the IDP\u0026rsquo;s \u0026lsquo;jwks_uri\u0026rsquo;. PROXY_OIDC_SKIP_USER_INFO bool false Do not look up user claims at the userinfo endpoint and directly read them from the access token. Incompatible with \u0026lsquo;PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD=none\u0026rsquo;. OCIS_CACHE_STOREPROXY_OIDC_USERINFO_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESPROXY_OIDC_USERINFO_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string cache-userinfo The database name the configured store should use. PROXY_OIDC_USERINFO_CACHE_TABLE string The database table the store should use. OCIS_CACHE_TTLPROXY_OIDC_USERINFO_CACHE_TTL Duration 10s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEPROXY_OIDC_USERINFO_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMEPROXY_OIDC_USERINFO_CACHE_AUTH_USERNAME string The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDPROXY_OIDC_USERINFO_CACHE_AUTH_PASSWORD string The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. PROXY_OIDC_JWKS_REFRESH_INTERVAL uint64 60 The interval for refreshing the JWKS (JSON Web Key Set) in minutes in the background via a new HTTP request to the IDP. PROXY_OIDC_JWKS_REFRESH_TIMEOUT uint64 10 The timeout in seconds for an outgoing JWKS request. PROXY_OIDC_JWKS_REFRESH_RATE_LIMIT uint64 60 Limits the rate in seconds at which refresh requests are performed for unknown keys. This is used to prevent malicious clients from imposing high network load on the IDP via ocis. PROXY_OIDC_JWKS_REFRESH_UNKNOWN_KID bool true If set to \u0026rsquo;true\u0026rsquo;, the JWKS refresh request will occur every time an unknown KEY ID (KID) is seen. Always set a \u0026lsquo;refresh_limit\u0026rsquo; when enabling this. PROXY_OIDC_REWRITE_WELLKNOWN bool false Enables rewriting the /.well-known/openid-configuration to the configured OIDC issuer. Needed by the Desktop Client, Android Client and iOS Client to discover the OIDC provider. OCIS_SERVICE_ACCOUNT_IDPROXY_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETPROXY_SERVICE_ACCOUNT_SECRET string The service account secret. PROXY_ROLE_ASSIGNMENT_DRIVER string default The mechanism that should be used to assign roles to user upon login. Supported values: \u0026lsquo;default\u0026rsquo; or \u0026lsquo;oidc\u0026rsquo;. \u0026lsquo;default\u0026rsquo; will assign the role \u0026lsquo;user\u0026rsquo; to users which don\u0026rsquo;t have a role assigned at the time they login. \u0026lsquo;oidc\u0026rsquo; will assign the role based on the value of a claim (configured via PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM) from the users OIDC claims. PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM string roles The OIDC claim used to create the users role assignment. PROXY_ENABLE_PRESIGNEDURLS bool true Allow OCS to get a signing key to sign requests. OCIS_CACHE_STOREPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE string nats-js-kv The type of the signing key store. Supported values are: \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo; and \u0026lsquo;ocisstoreservice\u0026rsquo; (deprecated). See the text description for details. OCIS_CACHE_STORE_NODESPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_TTLPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_TTL Duration 12h0m0s Default time to live for signing keys. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCEPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_DISABLE_PERSISTENCE bool true Disables persistence of the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to true. OCIS_CACHE_AUTH_USERNAMEPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDPROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. PROXY_ACCOUNT_BACKEND_TYPE string cs3 Account backend the PROXY service should use. Currently only \u0026lsquo;cs3\u0026rsquo; is possible here. PROXY_USER_OIDC_CLAIM string preferred_username The name of an OpenID Connect claim that is used for resolving users with the account backend. The value of the claim must hold a per user unique, stable and non re-assignable identifier. The availability of claims depends on your Identity Provider. There are common claims available for most Identity providers like \u0026rsquo;email\u0026rsquo; or \u0026lsquo;preferred_username\u0026rsquo; but you can also add your own claim. PROXY_USER_CS3_CLAIM string username The name of a CS3 user attribute (claim) that should be mapped to the \u0026lsquo;user_oidc_claim\u0026rsquo;. Supported values are \u0026lsquo;username\u0026rsquo;, \u0026lsquo;mail\u0026rsquo; and \u0026lsquo;userid\u0026rsquo;. OCIS_MACHINE_AUTH_API_KEYPROXY_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary to access resources from other services. PROXY_AUTOPROVISION_ACCOUNTS bool false Set this to \u0026rsquo;true\u0026rsquo; to automatically provision users that do not yet exist in the users service on-demand upon first sign-in. To use this a write-enabled libregraph user backend needs to be setup an running. PROXY_AUTOPROVISION_CLAIM_USERNAME string preferred_username The name of the OIDC claim that holds the username. PROXY_AUTOPROVISION_CLAIM_EMAIL string email The name of the OIDC claim that holds the email. PROXY_AUTOPROVISION_CLAIM_DISPLAYNAME string name The name of the OIDC claim that holds the display name. PROXY_AUTOPROVISION_CLAIM_GROUPS string groups The name of the OIDC claim that holds the groups. PROXY_ENABLE_BASIC_AUTH bool false Set this to true to enable \u0026lsquo;basic authentication\u0026rsquo; (username/password). PROXY_INSECURE_BACKENDS bool false Disable TLS certificate validation for all HTTP backend connections. PROXY_HTTPS_CACERT string Path/File for the root CA certificate used to validate the server’s TLS certificate for https enabled backend services. PROXY_ENABLE_APP_AUTH bool false Allow app authentication. This can be used to authenticate 3rd party applications. Note that auth-app service must be running for this feature to work. PROXY_POLICIES_QUERY string Defines the \u0026lsquo;Complete Rules\u0026rsquo; variable defined in the rego rule set this step uses for its evaluation. Rules default to deny if the variable was not found. PROXY_CSP_CONFIG_FILE_LOCATION string The location of the CSP configuration file. OCIS_EVENTS_ENDPOINTPROXY_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Set to a empty string to disable emitting events. OCIS_EVENTS_CLUSTERPROXY_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_INSECUREPROXY_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEPROXY_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided PROXY_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSPROXY_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEPROXY_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDPROXY_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDPROXY_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEPROXY_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTPROXY_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORPROXY_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELPROXY_LOG_LEVEL string The log level."},{"id":300,"href":"/services/_includes/search_configvars/","title":"Search Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSEARCH_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESEARCH_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSEARCH_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSEARCH_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSEARCH_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSEARCH_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSEARCH_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESEARCH_LOG_FILE string The path to the log file. Activates logging to this file if set. SEARCH_DEBUG_ADDR string 127.0.0.1:9224 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SEARCH_DEBUG_TOKEN string Token to secure the metrics endpoint. SEARCH_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. SEARCH_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. SEARCH_GRPC_ADDR string 127.0.0.1:9220 The bind address of the GRPC service. OCIS_JWT_SECRETSEARCH_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_EVENTS_ENDPOINTSEARCH_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERSEARCH_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_ASYNC_UPLOADSSEARCH_EVENTS_ASYNC_UPLOADS bool true Enable asynchronous file uploads. SEARCH_EVENTS_NUM_CONSUMERS int 0 The amount of concurrent event consumers to start. Event consumers are used for searching files. Multiple consumers increase parallelisation, but will also increase CPU and memory demands. The default value is 0. SEARCH_EVENTS_REINDEX_DEBOUNCE_DURATION int 1000 The duration in milliseconds the reindex debouncer waits before triggering a reindex of a space that was modified. OCIS_INSECURESEARCH_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATESEARCH_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SEARCH_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSSEARCH_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMESEARCH_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDSEARCH_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. SEARCH_ENGINE_TYPE string bleve Defines which search engine to use. Defaults to \u0026lsquo;bleve\u0026rsquo;. Supported values are: \u0026lsquo;bleve\u0026rsquo;. SEARCH_ENGINE_BLEVE_DATA_PATH string /var/lib/ocis/search The directory where the filesystem will store search data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/search. SEARCH_EXTRACTOR_TYPE string basic Defines the content extraction engine. Defaults to \u0026lsquo;basic\u0026rsquo;. Supported values are: \u0026lsquo;basic\u0026rsquo; and \u0026rsquo;tika\u0026rsquo;. OCIS_INSECURESEARCH_EXTRACTOR_CS3SOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the CS3 source. SEARCH_EXTRACTOR_TIKA_TIKA_URL string http://127.0.0.1:9998 URL of the tika server. SEARCH_EXTRACTOR_TIKA_CLEAN_STOP_WORDS bool true Defines if stop words should be cleaned or not. See the documentation for more details. SEARCH_CONTENT_EXTRACTION_SIZE_LIMIT uint64 20971520 Maximum file size in bytes that is allowed for content extraction. OCIS_SERVICE_ACCOUNT_IDSEARCH_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETSEARCH_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSEARCH_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESEARCH_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSEARCH_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSEARCH_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSEARCH_LOG_LEVEL string The log level."},{"id":301,"href":"/services/_includes/settings_configvars/","title":"Settings Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSETTINGS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESETTINGS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSETTINGS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSETTINGS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSETTINGS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSETTINGS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSETTINGS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESETTINGS_LOG_FILE string The path to the log file. Activates logging to this file if set. SETTINGS_DEBUG_ADDR string 127.0.0.1:9194 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SETTINGS_DEBUG_TOKEN string Token to secure the metrics endpoint. SETTINGS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. SETTINGS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. SETTINGS_HTTP_ADDR string 127.0.0.1:9190 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. SETTINGS_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSSETTINGS_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSSETTINGS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSSETTINGS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSSETTINGS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. SETTINGS_GRPC_ADDR string 127.0.0.1:9191 The bind address of the GRPC service. SETTINGS_STORAGE_GATEWAY_GRPC_ADDRSTORAGE_GATEWAY_GRPC_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. SETTINGS_STORAGE_GRPC_ADDRSTORAGE_GRPC_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSETTINGS_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSETTINGS_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. OCIS_CACHE_STORESETTINGS_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSETTINGS_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string settings-cache The database name the configured store should use. SETTINGS_FILE_CACHE_TABLE string settings_files The database table the store should use for the file cache. SETTINGS_DIRECTORY_CACHE_TABLE string settings_dirs The database table the store should use for the directory cache. OCIS_CACHE_TTLSETTINGS_CACHE_TTL Duration 10m0s Default time to live for entries in the cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESETTINGS_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESETTINGS_CACHE_AUTH_USERNAME string The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSETTINGS_CACHE_AUTH_PASSWORD string The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. SETTINGS_BUNDLES_PATH string The path to a JSON file with a list of bundles. If not defined, the default bundles will be loaded. OCIS_ADMIN_USER_IDSETTINGS_ADMIN_USER_ID string ID of the user that should receive admin privileges. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand. OCIS_JWT_SECRETSETTINGS_JWT_SECRET string The secret to mint and validate jwt tokens. SETTINGS_SETUP_DEFAULT_ASSIGNMENTSIDM_CREATE_DEMO_USERS bool false The default role assignments the demo users should be setup. SETTINGS_SERVICE_ACCOUNT_IDSOCIS_SERVICE_ACCOUNT_ID []string [service-user-id] The list of all service account IDs. These will be assigned the hidden \u0026lsquo;service-account\u0026rsquo; role. Note: When using \u0026lsquo;OCIS_SERVICE_ACCOUNT_ID\u0026rsquo; this will contain only one value while \u0026lsquo;SETTINGS_SERVICE_ACCOUNT_IDS\u0026rsquo; can have multiple. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details about service accounts. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSETTINGS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESETTINGS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSETTINGS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSETTINGS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSETTINGS_LOG_LEVEL string The log level."},{"id":302,"href":"/services/_includes/sharing_configvars/","title":"Sharing Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSHARING_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESHARING_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSHARING_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSHARING_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSHARING_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSHARING_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSHARING_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESHARING_LOG_FILE string The path to the log file. Activates logging to this file if set. SHARING_DEBUG_ADDR string 127.0.0.1:9151 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SHARING_DEBUG_TOKEN string Token to secure the metrics endpoint. SHARING_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. SHARING_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. SHARING_GRPC_ADDR string 127.0.0.1:9150 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSHARING_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETSHARING_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_EVENTS_ENDPOINTSHARING_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERSHARING_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURESHARING_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATESHARING_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SHARING_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSSHARING_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMESHARING_EVENTS_AUTH_USERNAME string Username for the events broker. OCIS_EVENTS_AUTH_PASSWORDSHARING_EVENTS_AUTH_PASSWORD string Password for the events broker. SHARING_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. SHARING_USER_DRIVER string jsoncs3 Driver to be used to persist shares. Supported values are \u0026lsquo;jsoncs3\u0026rsquo;, \u0026lsquo;json\u0026rsquo;, \u0026lsquo;cs3\u0026rsquo; (deprecated) and \u0026lsquo;owncloudsql\u0026rsquo;. SHARING_USER_JSONCS3_PROVIDER_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSHARING_USER_JSONCS3_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSHARING_USER_JSONCS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEYSHARING_USER_JSONCS3_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. SHARING_USER_JSONCS3_CACHE_TTL int 0 TTL for the internal caches in seconds. OCIS_MAX_CONCURRENCYSHARING_USER_JSONCS3_MAX_CONCURRENCY int 1 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. SHARING_USER_JSON_FILE string /var/lib/ocis/storage/shares.json Path to the JSON file where shares will be persisted. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. SHARING_USER_CS3_PROVIDER_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSHARING_USER_CS3_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSHARING_USER_CS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEYSHARING_USER_CS3_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. SHARING_USER_OWNCLOUDSQL_DB_USERNAME string owncloud Username for the database. SHARING_USER_OWNCLOUDSQL_DB_PASSWORD string Password for the database. SHARING_USER_OWNCLOUDSQL_DB_HOST string mysql Hostname or IP of the database server. SHARING_USER_OWNCLOUDSQL_DB_PORT int 3306 Port that the database server is listening on. SHARING_USER_OWNCLOUDSQL_DB_NAME string owncloud Name of the database to be used. SHARING_USER_OWNCLOUDSQL_USER_STORAGE_MOUNT_ID string Mount ID of the ownCloudSQL users storage for mapping ownCloud 10 shares. SHARING_PUBLIC_DRIVER string jsoncs3 Driver to be used to persist public shares. Supported values are \u0026lsquo;jsoncs3\u0026rsquo;, \u0026lsquo;json\u0026rsquo; and \u0026lsquo;cs3\u0026rsquo; (deprecated). SHARING_PUBLIC_JSON_FILE string /var/lib/ocis/storage/publicshares.json Path to the JSON file where public share meta-data will be stored. This JSON file contains the information about public shares that have been created. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. SHARING_PUBLIC_JSONCS3_PROVIDER_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSHARING_PUBLIC_JSONCS3_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSHARING_PUBLIC_JSONCS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEYSHARING_PUBLIC_JSONCS3_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. SHARING_PUBLIC_CS3_PROVIDER_ADDR string com.owncloud.api.storage-system GRPC address of the STORAGE-SYSTEM service. OCIS_SYSTEM_USER_IDSHARING_PUBLIC_CS3_SYSTEM_USER_ID string ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_IDPSHARING_PUBLIC_CS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user. OCIS_SYSTEM_USER_API_KEYSHARING_PUBLIC_CS3_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORDSHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD bool false Set this to true if you want to enforce passwords on Uploader, Editor or Contributor shares. If not using the global OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD, you must define the FRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD (deprecated) in the frontend service. OCIS_SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORDSHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORD bool true Set this to true if you want to enforce passwords on all public shares. OCIS_PASSWORD_POLICY_DISABLEDSHARING_PASSWORD_POLICY_DISABLED bool false Disable the password policy. Defaults to false if not set. OCIS_PASSWORD_POLICY_MIN_CHARACTERSSHARING_PASSWORD_POLICY_MIN_CHARACTERS int 8 Define the minimum password length. Defaults to 8 if not set. OCIS_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERSSHARING_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS int 1 Define the minimum number of uppercase letters. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERSSHARING_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS int 1 Define the minimum number of lowercase letters. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_DIGITSSHARING_PASSWORD_POLICY_MIN_DIGITS int 1 Define the minimum number of digits. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERSSHARING_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS int 1 Define the minimum number of characters from the special characters list to be present. Defaults to 1 if not set. OCIS_PASSWORD_POLICY_BANNED_PASSWORDS_LISTSHARING_PASSWORD_POLICY_BANNED_PASSWORDS_LIST string Path to the \u0026lsquo;banned passwords list\u0026rsquo; file. This only impacts public link password validation. See the documentation for more details. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSHARING_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESHARING_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSHARING_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSHARING_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSHARING_LOG_LEVEL string The log level."},{"id":303,"href":"/services/_includes/sse_configvars/","title":"Sse Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_LOG_LEVELSSE_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSSE_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSSE_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESSE_LOG_FILE string The path to the log file. Activates logging to this file if set. SSE_DEBUG_ADDR string 127.0.0.1:9139 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SSE_DEBUG_TOKEN string Token to secure the metrics endpoint. SSE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. SSE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_TRACING_ENABLEDSSE_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESSE_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSSE_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSSE_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. SSE_KEEPALIVE_INTERVAL Duration 0s To prevent intermediate proxies from closing the SSE connection, send periodic SSE comments to keep it open. OCIS_EVENTS_ENDPOINTSSE_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERSSE_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURESSE_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATESSE_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SSE_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSSSE_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMESSE_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDSSE_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. SSE_HTTP_ADDR string 127.0.0.1:9135 The bind address of the HTTP service. SSE_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSSSE_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSSSE_CORS_ALLOW_METHODS []string [GET] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSSSE_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Ocs-Apirequest] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSSSE_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_JWT_SECRETSSE_JWT_SECRET string The secret to mint and validate jwt tokens. ","description":"Environment Variables Name Type Default Value Description OCIS_LOG_LEVELSSE_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSSE_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSSE_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESSE_LOG_FILE string The path to the log file. Activates logging to this file if set. SSE_DEBUG_ADDR string 127.0.0.1:9139 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed."},{"id":304,"href":"/services/_includes/storage-publiclink_configvars/","title":"Storage Publiclink Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSTORAGE_PUBLICLINK_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_PUBLICLINK_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_PUBLICLINK_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_PUBLICLINK_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_PUBLICLINK_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSTORAGE_PUBLICLINK_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSTORAGE_PUBLICLINK_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESTORAGE_PUBLICLINK_LOG_FILE string The path to the log file. Activates logging to this file if set. STORAGE_PUBLICLINK_DEBUG_ADDR string 127.0.0.1:9179 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. STORAGE_PUBLICLINK_DEBUG_TOKEN string Token to secure the metrics endpoint. STORAGE_PUBLICLINK_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. STORAGE_PUBLICLINK_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. STORAGE_PUBLICLINK_GRPC_ADDR string 127.0.0.1:9178 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSTORAGE_PUBLICLINK_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETSTORAGE_PUBLICLINK_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. STORAGE_PUBLICLINK_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. STORAGE_PUBLICLINK_STORAGE_PROVIDER_MOUNT_ID string 7993447f-687f-490d-875c-ac95e89a62a4 Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSTORAGE_PUBLICLINK_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_PUBLICLINK_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_PUBLICLINK_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_PUBLICLINK_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_PUBLICLINK_LOG_LEVEL string The log level."},{"id":305,"href":"/services/_includes/storage-shares_configvars/","title":"Storage Shares Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSTORAGE_SHARES_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_SHARES_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_SHARES_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_SHARES_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_SHARES_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSTORAGE_SHARES_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSTORAGE_SHARES_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESTORAGE_SHARES_LOG_FILE string The path to the log file. Activates logging to this file if set. STORAGE_SHARES_DEBUG_ADDR string 127.0.0.1:9156 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. STORAGE_SHARES_DEBUG_TOKEN string Token to secure the metrics endpoint. STORAGE_SHARES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. STORAGE_SHARES_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. STORAGE_SHARES_GRPC_ADDR string 127.0.0.1:9154 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSTORAGE_SHARES_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service. OCIS_JWT_SECRETSTORAGE_SHARES_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. STORAGE_SHARES_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. STORAGE_SHARES_MOUNT_ID string 7639e57c-4433-4a12-8201-722fd0009154 Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format. STORAGE_SHARES_READ_ONLY bool false Set this storage to be read-only. STORAGE_SHARES_USER_SHARE_PROVIDER_ENDPOINT string com.owncloud.api.sharing GRPC endpoint of the SHARING service. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSTORAGE_SHARES_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_SHARES_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_SHARES_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_SHARES_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_SHARES_LOG_LEVEL string The log level."},{"id":306,"href":"/services/_includes/storage-system_configvars/","title":"Storage System Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSTORAGE_SYSTEM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_SYSTEM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_SYSTEM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_SYSTEM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_SYSTEM_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSTORAGE_SYSTEM_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSTORAGE_SYSTEM_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESTORAGE_SYSTEM_LOG_FILE string The path to the log file. Activates logging to this file if set. STORAGE_SYSTEM_DEBUG_ADDR string 127.0.0.1:9217 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. STORAGE_SYSTEM_DEBUG_TOKEN string Token to secure the metrics endpoint STORAGE_SYSTEM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling STORAGE_SYSTEM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. STORAGE_SYSTEM_GRPC_ADDR string 127.0.0.1:9215 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSTORAGE_SYSTEM_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. STORAGE_SYSTEM_HTTP_ADDR string 127.0.0.1:9216 The bind address of the HTTP service. STORAGE_SYSTEM_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCIS_JWT_SECRETSTORAGE_SYSTEM_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. OCIS_SYSTEM_USER_ID string ID of the oCIS storage-system system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format. OCIS_SYSTEM_USER_API_KEY string API key for the STORAGE-SYSTEM system user. STORAGE_SYSTEM_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. OCIS_CACHE_STORESTORAGE_SYSTEM_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSTORAGE_SYSTEM_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string storage-system The database name the configured store should use. OCIS_CACHE_TTLSTORAGE_SYSTEM_CACHE_TTL Duration 24m0s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESTORAGE_SYSTEM_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESTORAGE_SYSTEM_CACHE_AUTH_USERNAME string Username for the configured store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSTORAGE_SYSTEM_CACHE_AUTH_PASSWORD string Password for the configured store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. STORAGE_SYSTEM_DRIVER string ocis The driver which should be used by the service. STORAGE_SYSTEM_OCIS_ROOT string /var/lib/ocis/storage/metadata Path for the directory where the STORAGE-SYSTEM service stores it\u0026rsquo;s persistent data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage. STORAGE_SYSTEM_OCIS_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used. STORAGE_SYSTEM_OCIS_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used. STORAGE_SYSTEM_DATA_SERVER_URL string http://localhost:9216/data URL of the data server, needs to be reachable by other services using this service. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDSTORAGE_SYSTEM_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_SYSTEM_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_SYSTEM_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_SYSTEM_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_SYSTEM_LOG_LEVEL string The log level."},{"id":307,"href":"/services/_includes/storage-users_configvars/","title":"Storage Users Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description STORAGE_USERS_SERVICE_NAME string storage-users Service name to use. Change this when starting an additional storage provider with a custom configuration to prevent it from colliding with the default \u0026lsquo;storage-users\u0026rsquo; service. OCIS_TRACING_ENABLEDSTORAGE_USERS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_USERS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_USERS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORSTORAGE_USERS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELSTORAGE_USERS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYSTORAGE_USERS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORSTORAGE_USERS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILESTORAGE_USERS_LOG_FILE string The path to the log file. Activates logging to this file if set. STORAGE_USERS_DEBUG_ADDR string 127.0.0.1:9159 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. STORAGE_USERS_DEBUG_TOKEN string Token to secure the metrics endpoint. STORAGE_USERS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. STORAGE_USERS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. STORAGE_USERS_GRPC_ADDR string 127.0.0.1:9157 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLSTORAGE_USERS_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. STORAGE_USERS_HTTP_ADDR string 127.0.0.1:9158 The bind address of the HTTP service. STORAGE_USERS_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service. OCIS_CORS_ALLOW_ORIGINSSTORAGE_USERS_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSSTORAGE_USERS_CORS_ALLOW_METHODS []string [POST HEAD PATCH OPTIONS GET DELETE] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSSTORAGE_USERS_CORS_ALLOW_HEADERS []string [Authorization Origin X-Requested-With X-Request-Id X-HTTP-Method-Override Content-Type Upload-Length Upload-Offset Tus-Resumable Upload-Metadata Upload-Defer-Length Upload-Concat Upload-Incomplete Upload-Draft-Interop-Version] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSSTORAGE_USERS_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_CORS_EXPOSE_HEADERSSTORAGE_USERS_CORS_EXPOSE_HEADERS []string [Upload-Offset Location Upload-Length Tus-Version Tus-Resumable Tus-Max-Size Tus-Extension Upload-Metadata Upload-Defer-Length Upload-Concat Upload-Incomplete Upload-Draft-Interop-Version] A list of exposed CORS headers. See following chapter for more details: Access-Control-Expose-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers. See the Environment Variable Types description for more details. OCIS_CORS_MAX_AGESTORAGE_USERS_CORS_MAX_AGE uint 86400 The max cache duration of preflight headers. See following chapter for more details: Access-Control-Max-Age at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age. See the Environment Variable Types description for more details. OCIS_JWT_SECRETSTORAGE_USERS_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. STORAGE_USERS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. STORAGE_USERS_GRACEFUL_SHUTDOWN_TIMEOUT int 30 The number of seconds to wait for the \u0026lsquo;storage-users\u0026rsquo; service to shutdown cleanly before exiting with an error that gets logged. Note: This setting is only applicable when running the \u0026lsquo;storage-users\u0026rsquo; service as a standalone service. See the text description for more details. STORAGE_USERS_DRIVER string ocis The storage driver which should be used by the service. Defaults to \u0026lsquo;ocis\u0026rsquo;, Supported values are: \u0026lsquo;ocis\u0026rsquo;, \u0026lsquo;s3ng\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;. The \u0026lsquo;ocis\u0026rsquo; driver stores all data (blob and meta data) in an POSIX compliant volume. The \u0026lsquo;s3ng\u0026rsquo; driver stores metadata in a POSIX compliant volume and uploads blobs to the s3 bucket. OCIS_DECOMPOSEDFS_PROPAGATORSTORAGE_USERS_OCIS_PROPAGATOR string sync The propagator used for decomposedfs. At the moment, only \u0026lsquo;sync\u0026rsquo; is fully supported, \u0026lsquo;async\u0026rsquo; is available as an experimental option. STORAGE_USERS_ASYNC_PROPAGATOR_PROPAGATION_DELAY Duration 0s The delay between a change made to a tree and the propagation start on treesize and treetime. Multiple propagations are computed to a single one. See the Environment Variable Types description for more details. STORAGE_USERS_OCIS_ROOT string /var/lib/ocis/storage/users The directory where the filesystem storage will store blobs and metadata. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/users. STORAGE_USERS_OCIS_USER_LAYOUT string {{.Id.OpaqueId}} Template string for the user storage layout in the user directory. STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_OCIS_PERMISSIONS_ENDPOINT string com.owncloud.api.settings Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;. STORAGE_USERS_OCIS_PERSONAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.User.Username | lower}} Template string to construct personal space aliases. STORAGE_USERS_OCIS_PERSONAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the personal space roots. STORAGE_USERS_OCIS_GENERAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.SpaceName | replace \u0026quot; \u0026quot; \u0026quot;-\u0026quot; | lower}} Template string to construct general space aliases. STORAGE_USERS_OCIS_GENERAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the projects space roots. STORAGE_USERS_OCIS_SHARE_FOLDER string /Shares Name of the folder jailing all shares. STORAGE_USERS_OCIS_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value will be used. STORAGE_USERS_OCIS_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value will be used. OCIS_MAX_CONCURRENCYSTORAGE_USERS_OCIS_MAX_CONCURRENCY int 5 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. OCIS_ASYNC_UPLOADS bool true Enable asynchronous file uploads. OCIS_SPACES_MAX_QUOTASTORAGE_USERS_OCIS_MAX_QUOTA uint64 0 Set a global max quota for spaces in bytes. A value of 0 equals unlimited. If not using the global OCIS_SPACES_MAX_QUOTA, you must define the FRONTEND_MAX_QUOTA in the frontend service. OCIS_DISABLE_VERSIONING bool false Disables versioning of files. When set to true, new uploads with the same filename will overwrite existing files instead of creating a new version. OCIS_DECOMPOSEDFS_PROPAGATORSTORAGE_USERS_S3NG_PROPAGATOR string sync The propagator used for decomposedfs. At the moment, only \u0026lsquo;sync\u0026rsquo; is fully supported, \u0026lsquo;async\u0026rsquo; is available as an experimental option. STORAGE_USERS_ASYNC_PROPAGATOR_PROPAGATION_DELAY Duration 0s The delay between a change made to a tree and the propagation start on treesize and treetime. Multiple propagations are computed to a single one. See the Environment Variable Types description for more details. STORAGE_USERS_S3NG_ROOT string /var/lib/ocis/storage/users The directory where the filesystem storage will store metadata for blobs. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/users. STORAGE_USERS_S3NG_USER_LAYOUT string {{.Id.OpaqueId}} Template string for the user storage layout in the user directory. STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_S3NG_PERMISSIONS_ENDPOINT string com.owncloud.api.settings Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;. STORAGE_USERS_S3NG_REGION string default Region of the S3 bucket. STORAGE_USERS_S3NG_ACCESS_KEY string Access key for the S3 bucket. STORAGE_USERS_S3NG_SECRET_KEY string Secret key for the S3 bucket. STORAGE_USERS_S3NG_ENDPOINT string Endpoint for the S3 bucket. STORAGE_USERS_S3NG_BUCKET string Name of the S3 bucket. STORAGE_USERS_S3NG_PUT_OBJECT_DISABLE_CONTENT_SHA256 bool false Disable sending content sha256 when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_DISABLE_MULTIPART bool true Disable multipart uploads when copying objects to S3 STORAGE_USERS_S3NG_PUT_OBJECT_SEND_CONTENT_MD5 bool true Send a Content-MD5 header when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_CONCURRENT_STREAM_PARTS bool true Always precreate parts when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_NUM_THREADS uint 4 Number of concurrent uploads to use when copying objects to S3. STORAGE_USERS_S3NG_PUT_OBJECT_PART_SIZE uint64 0 Part size for concurrent uploads to S3. STORAGE_USERS_S3NG_PERSONAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.User.Username | lower}} Template string to construct personal space aliases. STORAGE_USERS_S3NG_PERSONAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the personal space roots. STORAGE_USERS_S3NG_GENERAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.SpaceName | replace \u0026quot; \u0026quot; \u0026quot;-\u0026quot; | lower}} Template string to construct general space aliases. STORAGE_USERS_S3NG_GENERAL_SPACE_PATH_TEMPLATE string Template string to construct the paths of the projects space roots. STORAGE_USERS_S3NG_SHARE_FOLDER string /Shares Name of the folder jailing all shares. STORAGE_USERS_S3NG_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used. STORAGE_USERS_S3NG_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used. OCIS_MAX_CONCURRENCYSTORAGE_USERS_S3NG_MAX_CONCURRENCY int 5 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value of 100 will be used. OCIS_DISABLE_VERSIONING bool false Disables versioning of files. When set to true, new uploads with the same filename will overwrite existing files instead of creating a new version. STORAGE_USERS_OWNCLOUDSQL_DATADIR string /var/lib/ocis/storage/owncloud The directory where the filesystem storage will store SQL migration data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/owncloud. STORAGE_USERS_OWNCLOUDSQL_SHARE_FOLDER string /Shares Name of the folder jailing all shares. STORAGE_USERS_OWNCLOUDSQL_LAYOUT string {{.Username}} Path layout to use to navigate into a users folder in an owncloud data directory STORAGE_USERS_OWNCLOUDSQL_UPLOADINFO_DIR string /var/lib/ocis/storage/uploadinfo The directory where the filesystem will store uploads temporarily. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/uploadinfo. STORAGE_USERS_OWNCLOUDSQL_DB_USERNAME string owncloud Username for the database. STORAGE_USERS_OWNCLOUDSQL_DB_PASSWORD string owncloud Password for the database. STORAGE_USERS_OWNCLOUDSQL_DB_HOST string Hostname or IP of the database server. STORAGE_USERS_OWNCLOUDSQL_DB_PORT int 3306 Port that the database server is listening on. STORAGE_USERS_OWNCLOUDSQL_DB_NAME string owncloud Name of the database to be used. STORAGE_USERS_OWNCLOUDSQL_USERS_PROVIDER_ENDPOINT string com.owncloud.api.users Endpoint of the users provider. STORAGE_USERS_POSIX_ROOT string /var/lib/ocis/storage/users The directory where the filesystem storage will store its data. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/storage/users. STORAGE_USERS_POSIX_PERSONAL_SPACE_PATH_TEMPLATE string users/{{.User.Username}} Template string to construct the paths of the personal space roots. STORAGE_USERS_POSIX_GENERAL_SPACE_PATH_TEMPLATE string projects/{{.SpaceId}} Template string to construct the paths of the projects space roots. STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_POSIX_PERMISSIONS_ENDPOINT string com.owncloud.api.settings Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo;, \u0026lsquo;posix\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;. OCIS_ASYNC_UPLOADS bool true Enable asynchronous file uploads. STORAGE_USERS_POSIX_SCAN_DEBOUNCE_DELAY Duration 1s The time in milliseconds to wait before scanning the filesystem for changes after a change has been detected. STORAGE_USERS_POSIX_USE_SPACE_GROUPS bool false Use space groups to manage permissions on spaces. STORAGE_USERS_POSIX_WATCH_TYPE string Type of the watcher to use for getting notified about changes to the filesystem. Currently available options are \u0026lsquo;inotifywait\u0026rsquo; (default), \u0026lsquo;gpfswatchfolder\u0026rsquo; and \u0026lsquo;gpfsfileauditlogging\u0026rsquo;. STORAGE_USERS_POSIX_WATCH_PATH string Path to the watch directory/file. Only applies to the \u0026lsquo;gpfsfileauditlogging\u0026rsquo; and \u0026lsquo;inotifywait\u0026rsquo; watcher, in which case it is the path of the file audit log file/base directory to watch. STORAGE_USERS_POSIX_WATCH_FOLDER_KAFKA_BROKERS string Comma-separated list of kafka brokers to read the watchfolder events from. STORAGE_USERS_DATA_SERVER_URL string http://localhost:9158/data URL of the data server, needs to be reachable by the data gateway provided by the frontend service or the user if directly exposed. STORAGE_USERS_DATA_GATEWAY_URL string https://localhost:9200/data URL of the data gateway server STORAGE_USERS_TRANSFER_EXPIRES int64 86400 The time after which the token for upload postprocessing expires OCIS_EVENTS_ENDPOINTSTORAGE_USERS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERSTORAGE_USERS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURESTORAGE_USERS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATESTORAGE_USERS_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided STORAGE_USERS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSSTORAGE_USERS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. STORAGE_USERS_EVENTS_NUM_CONSUMERS int 0 The amount of concurrent event consumers to start. Event consumers are used for post-processing files. Multiple consumers increase parallelisation, but will also increase CPU and memory demands. The setting has no effect when the OCIS_ASYNC_UPLOADS is set to false. The default and minimum value is 1. OCIS_EVENTS_AUTH_USERNAMESTORAGE_USERS_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDSTORAGE_USERS_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_CACHE_STORESTORAGE_USERS_FILEMETADATA_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSTORAGE_USERS_FILEMETADATA_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string storage-users The database name the configured store should use. OCIS_CACHE_TTLSTORAGE_USERS_FILEMETADATA_CACHE_TTL Duration 24m0s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESTORAGE_USERS_FILEMETADATA_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESTORAGE_USERS_FILEMETADATA_CACHE_AUTH_USERNAME string The username to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSTORAGE_USERS_FILEMETADATA_CACHE_AUTH_PASSWORD string The password to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_STORESTORAGE_USERS_ID_CACHE_STORE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODESSTORAGE_USERS_ID_CACHE_STORE_NODES []string [127.0.0.1:9233] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_DATABASE string ids-storage-users The database name the configured store should use. OCIS_CACHE_TTLSTORAGE_USERS_ID_CACHE_TTL Duration 24m0s Default time to live for user info in the user info cache. Only applied when access tokens have no expiration. Defaults to 300s which is derived from the underlaying package though not explicitly set as default. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCESTORAGE_USERS_ID_CACHE_DISABLE_PERSISTENCE bool false Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAMESTORAGE_USERS_ID_CACHE_AUTH_USERNAME string The username to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORDSTORAGE_USERS_ID_CACHE_AUTH_PASSWORD string The password to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. STORAGE_USERS_MOUNT_ID string Mount ID of this storage. STORAGE_USERS_EXPOSE_DATA_SERVER bool false Exposes the data server directly to users and bypasses the data gateway. Ensure that the data server address is reachable by users. STORAGE_USERS_READ_ONLY bool false Set this storage to be read-only. STORAGE_USERS_UPLOAD_EXPIRATION int64 86400 Duration in seconds after which uploads will expire. Note that when setting this to a low number, uploads could be cancelled before they are finished and return a 403 to the user. OCIS_ADMIN_USER_IDSTORAGE_USERS_PURGE_TRASH_BIN_USER_ID string ID of the user who collects all necessary information for deletion. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand. STORAGE_USERS_PURGE_TRASH_BIN_PERSONAL_DELETE_BEFORE Duration 720h0m0s Specifies the period of time in which items that have been in the personal trash-bin for longer than this value should be deleted. A value of 0 means no automatic deletion. See the Environment Variable Types description for more details. STORAGE_USERS_PURGE_TRASH_BIN_PROJECT_DELETE_BEFORE Duration 720h0m0s Specifies the period of time in which items that have been in the project trash-bin for longer than this value should be deleted. A value of 0 means no automatic deletion. See the Environment Variable Types description for more details. OCIS_SERVICE_ACCOUNT_IDSTORAGE_USERS_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETSTORAGE_USERS_SERVICE_ACCOUNT_SECRET string The service account secret. OCIS_GATEWAY_GRPC_ADDRSTORAGE_USERS_GATEWAY_GRPC_ADDR string 127.0.0.1:9142 The bind address of the gateway GRPC address. OCIS_MACHINE_AUTH_API_KEYSTORAGE_USERS_MACHINE_AUTH_API_KEY string Machine auth API key used to validate internal requests necessary for the access to resources from other services. STORAGE_USERS_CLI_MAX_ATTEMPTS_RENAME_FILE int 0 The maximum number of attempts to rename a file when a user restores a file to an existing destination with the same name. The minimum value is 100. ","description":"Environment Variables Name Type Default Value Description STORAGE_USERS_SERVICE_NAME string storage-users Service name to use. Change this when starting an additional storage provider with a custom configuration to prevent it from colliding with the default \u0026lsquo;storage-users\u0026rsquo; service. OCIS_TRACING_ENABLEDSTORAGE_USERS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPESTORAGE_USERS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTSTORAGE_USERS_TRACING_ENDPOINT string The endpoint of the tracing agent."},{"id":308,"href":"/services/_includes/thumbnails_configvars/","title":"Thumbnails Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDTHUMBNAILS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPETHUMBNAILS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTTHUMBNAILS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORTHUMBNAILS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELTHUMBNAILS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYTHUMBNAILS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORTHUMBNAILS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILETHUMBNAILS_LOG_FILE string The path to the log file. Activates logging to this file if set. THUMBNAILS_DEBUG_ADDR string 127.0.0.1:9189 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. THUMBNAILS_DEBUG_TOKEN string Token to secure the metrics endpoint. THUMBNAILS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. THUMBNAILS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. THUMBNAILS_GRPC_ADDR string 127.0.0.1:9185 The bind address of the GRPC service. THUMBNAILS_MAX_CONCURRENT_REQUESTS int 0 Number of maximum concurrent thumbnail requests. Default is 0 which is unlimited. THUMBNAILS_HTTP_ADDR string 127.0.0.1:9186 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. THUMBNAILS_HTTP_ROOT string /thumbnails Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSTHUMBNAILS_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSTHUMBNAILS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSTHUMBNAILS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSTHUMBNAILS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. THUMBNAILS_RESOLUTIONS []string [16x16 32x32 64x64 128x128 1080x1920 1920x1080 2160x3840 3840x2160 4320x7680 7680x4320] The supported list of target resolutions in the format WidthxHeight like 32x32. You can define any resolution as required. See the Environment Variable Types description for more details. THUMBNAILS_FILESYSTEMSTORAGE_ROOT string /var/lib/ocis/thumbnails The directory where the filesystem storage will store the thumbnails. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/thumbnails. OCIS_INSECURETHUMBNAILS_WEBDAVSOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the webdav source. OCIS_INSECURETHUMBNAILS_CS3SOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the CS3 source. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata THUMBNAILS_TXT_FONTMAP_FILE string The path to a font file for txt thumbnails. THUMBNAILS_TRANSFER_TOKEN string The secret to sign JWT to download the actual thumbnail file. THUMBNAILS_DATA_ENDPOINT string http://127.0.0.1:9186/thumbnails/data The HTTP endpoint where the actual thumbnail file can be downloaded. THUMBNAILS_MAX_INPUT_WIDTH int 7680 The maximum width of an input image which is being processed. THUMBNAILS_MAX_INPUT_HEIGHT int 7680 The maximum height of an input image which is being processed. THUMBNAILS_MAX_INPUT_IMAGE_FILE_SIZE string 50MB The maximum file size of an input image which is being processed. Usable common abbreviations: [KB, KiB, MB, MiB, GB, GiB, TB, TiB, PB, PiB, EB, EiB], example: 2GB. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDTHUMBNAILS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPETHUMBNAILS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTTHUMBNAILS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORTHUMBNAILS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELTHUMBNAILS_LOG_LEVEL string The log level."},{"id":309,"href":"/services/_includes/userlog_configvars/","title":"Userlog Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDUSERLOG_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEUSERLOG_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTUSERLOG_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORUSERLOG_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELUSERLOG_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYUSERLOG_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORUSERLOG_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEUSERLOG_LOG_FILE string The path to the log file. Activates logging to this file if set. USERLOG_DEBUG_ADDR string 127.0.0.1:9214 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. USERLOG_DEBUG_TOKEN string Token to secure the metrics endpoint. USERLOG_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. USERLOG_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. USERLOG_HTTP_ADDR string 127.0.0.1:9210 The bind address of the HTTP service. USERLOG_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSUSERLOG_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSUSERLOG_CORS_ALLOW_METHODS []string [GET] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSUSERLOG_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Ocs-Apirequest] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSUSERLOG_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_JWT_SECRETUSERLOG_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_TRANSLATION_PATHUSERLOG_TRANSLATION_PATH string (optional) Set this to a path with custom translations to overwrite the builtin translations. Note that file and folder naming rules apply, see the documentation for more details. OCIS_DEFAULT_LANGUAGE string The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_EVENTS_ENDPOINTUSERLOG_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTERUSERLOG_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECUREUSERLOG_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATEUSERLOG_EVENTS_TLS_ROOT_CA_CERTIFICATE string The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLSUSERLOG_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAMEUSERLOG_EVENTS_AUTH_USERNAME string The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORDUSERLOG_EVENTS_AUTH_PASSWORD string The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_MAX_CONCURRENCYUSERLOG_MAX_CONCURRENCY int 1 Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system. Values of 0 or below will be ignored and the default value will be used. OCIS_PERSISTENT_STOREUSERLOG_STORE string memory The type of the store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details. OCIS_PERSISTENT_STORE_NODESUSERLOG_STORE_NODES []string [] A list of nodes to access the configured store. This has no effect when \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. USERLOG_STORE_DATABASE string userlog The database name the configured store should use. USERLOG_STORE_TABLE string events The database table the store should use. OCIS_PERSISTENT_STORE_TTLUSERLOG_STORE_TTL Duration 336h0m0s Time to live for events in the store. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks). See the Environment Variable Types description for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAMEUSERLOG_STORE_AUTH_USERNAME string The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORDUSERLOG_STORE_AUTH_PASSWORD string The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_DISABLE_SSE,USERLOG_DISABLE_SSE bool false Disables server-sent events (sse). When disabled, clients will no longer receive sse notifications. USERLOG_GLOBAL_NOTIFICATIONS_SECRET string The secret to secure the global notifications endpoint. Only system admins and users knowing that secret can call the global notifications POST/DELETE endpoints. OCIS_SERVICE_ACCOUNT_IDUSERLOG_SERVICE_ACCOUNT_ID string The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRETUSERLOG_SERVICE_ACCOUNT_SECRET string The service account secret. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDUSERLOG_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEUSERLOG_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTUSERLOG_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORUSERLOG_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELUSERLOG_LOG_LEVEL string The log level."},{"id":310,"href":"/services/_includes/users_configvars/","title":"Users Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDUSERS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEUSERS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTUSERS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORUSERS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELUSERS_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYUSERS_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORUSERS_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEUSERS_LOG_FILE string The path to the log file. Activates logging to this file if set. USERS_DEBUG_ADDR string 127.0.0.1:9145 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. USERS_DEBUG_TOKEN string Token to secure the metrics endpoint. USERS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. USERS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. USERS_GRPC_ADDR string 127.0.0.1:9144 The bind address of the GRPC service. OCIS_GRPC_PROTOCOLUSERS_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service. OCIS_JWT_SECRETUSERS_JWT_SECRET string The secret to mint and validate jwt tokens. OCIS_REVA_GATEWAY string com.owncloud.api.gateway The CS3 gateway endpoint. OCIS_GRPC_CLIENT_TLS_MODE string TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_GRPC_CLIENT_TLS_CACERT string Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services. USERS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token. USERS_DRIVER string ldap The driver which should be used by the users service. Supported values are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;. OCIS_LDAP_URIUSERS_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo; OCIS_LDAP_CACERTUSERS_LDAP_CACERT string /var/lib/ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/idm. OCIS_LDAP_INSECUREUSERS_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments. OCIS_LDAP_BIND_DNUSERS_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server. OCIS_LDAP_BIND_PASSWORDUSERS_LDAP_BIND_PASSWORD string Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. OCIS_LDAP_USER_BASE_DNUSERS_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users. OCIS_LDAP_GROUP_BASE_DNUSERS_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups. OCIS_LDAP_USER_SCOPEUSERS_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. OCIS_LDAP_GROUP_SCOPEUSERS_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;. LDAP_USER_SUBSTRING_FILTER_TYPEUSERS_LDAP_USER_SUBSTRING_FILTER_TYPE string any Type of substring search filter to use for substring searches for users. Possible values: \u0026lsquo;initial\u0026rsquo; for doing prefix only searches, \u0026lsquo;final\u0026rsquo; for doing suffix only searches or \u0026lsquo;any\u0026rsquo; for doing full substring searches OCIS_LDAP_USER_FILTERUSERS_LDAP_USER_FILTER string LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;. OCIS_LDAP_GROUP_FILTERUSERS_LDAP_GROUP_FILTER string LDAP filter to add to the default filters for group searches. OCIS_LDAP_USER_OBJECTCLASSUSERS_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter like \u0026lsquo;inetOrgPerson\u0026rsquo;. OCIS_LDAP_GROUP_OBJECTCLASSUSERS_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter like \u0026lsquo;groupOfNames\u0026rsquo;. OCIS_URLOCIS_OIDC_ISSUERUSERS_IDP_URL string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. OCIS_LDAP_DISABLE_USER_MECHANISMUSERS_LDAP_DISABLE_USER_MECHANISM string attribute An option to control the behavior for disabling users. Valid options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed. OCIS_LDAP_USER_SCHEMA_USER_TYPEUSERS_LDAP_USER_TYPE_ATTRIBUTE string ownCloudUserType LDAP Attribute to distinguish between \u0026lsquo;Member\u0026rsquo; and \u0026lsquo;Guest\u0026rsquo; users. Default is \u0026lsquo;ownCloudUserType\u0026rsquo;. OCIS_LDAP_DISABLED_USERS_GROUP_DNUSERS_LDAP_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;. OCIS_LDAP_USER_SCHEMA_IDUSERS_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique ID for users. This should be a stable globally unique ID like a UUID. OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGUSERS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user ID\u0026rsquo;s. OCIS_LDAP_USER_SCHEMA_MAILUSERS_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users. OCIS_LDAP_USER_SCHEMA_DISPLAYNAMEUSERS_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users. OCIS_LDAP_USER_SCHEMA_USERNAMEUSERS_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users. OCIS_LDAP_USER_ENABLED_ATTRIBUTEUSERS_LDAP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP attribute to use as a flag telling if the user is enabled or disabled. OCIS_LDAP_GROUP_SCHEMA_IDUSERS_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique ID for groups. This should be a stable globally unique ID like a UUID. OCIS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGUSERS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s. OCIS_LDAP_GROUP_SCHEMA_MAILUSERS_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty). OCIS_LDAP_GROUP_SCHEMA_DISPLAYNAMEUSERS_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute). OCIS_LDAP_GROUP_SCHEMA_GROUPNAMEUSERS_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups. OCIS_LDAP_GROUP_SCHEMA_MEMBERUSERS_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members. USERS_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database. USERS_OWNCLOUDSQL_DB_PASSWORD string secret Password for the database user. USERS_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server. USERS_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection. USERS_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database. USERS_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider. USERS_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided. USERS_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames USERS_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user IDs. USERS_OWNCLOUDSQL_ENABLE_MEDIAL_SEARCH bool false Allow \u0026lsquo;medial search\u0026rsquo; when searching for users instead of just doing a prefix search. This allows finding \u0026lsquo;Alice\u0026rsquo; when searching for \u0026rsquo;lic\u0026rsquo;. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDUSERS_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEUSERS_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTUSERS_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORUSERS_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELUSERS_LOG_LEVEL string The log level."},{"id":311,"href":"/services/_includes/web_configvars/","title":"Web Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEB_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEB_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEB_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEB_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEB_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYWEB_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORWEB_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEWEB_LOG_FILE string The path to the log file. Activates logging to this file if set. WEB_DEBUG_ADDR string 127.0.0.1:9104 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. WEB_DEBUG_TOKEN string Token to secure the metrics endpoint. WEB_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. WEB_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. WEB_HTTP_ADDR string 127.0.0.1:9100 The bind address of the HTTP service. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. WEB_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. WEB_CACHE_TTL int 604800 Cache policy in seconds for ownCloud Web assets. OCIS_CORS_ALLOW_ORIGINSWEB_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSWEB_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT PATCH POST DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSWEB_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSWEB_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS. See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. WEB_ASSET_CORE_PATH string /var/lib/ocis/web/assets/core Serve ownCloud Web assets from a path on the filesystem instead of the builtin assets. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/web/assets/core OCIS_ASSET_THEMES_PATHWEB_ASSET_THEMES_PATH string /var/lib/ocis/web/assets/themes Serve ownCloud themes from a path on the filesystem instead of the builtin assets. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/web/assets/themes WEB_ASSET_APPS_PATH string /var/lib/ocis/web/assets/apps Serve ownCloud Web apps assets from a path on the filesystem instead of the builtin assets. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH/web/assets/apps WEB_UI_CONFIG_FILE string Read the ownCloud Web json based configuration from this path/file. The config file takes precedence over WEB_OPTION_xxx environment variables. See the text description for more details. OCIS_URLWEB_UI_THEME_SERVER string https://localhost:9200 Base URL to load themes from. Will be prepended to the theme path. WEB_UI_THEME_PATH string /themes/owncloud/theme.json Path to the theme json file. Will be appended to the URL of the theme server. OCIS_URLWEB_UI_CONFIG_SERVER string https://localhost:9200 URL, where the oCIS APIs are reachable for ownCloud Web. WEB_OIDC_METADATA_URL string https://localhost:9200/.well-known/openid-configuration URL for the OIDC well-known configuration endpoint. Defaults to the oCIS API URL + \u0026lsquo;/.well-known/openid-configuration\u0026rsquo;. OCIS_URLOCIS_OIDC_ISSUERWEB_OIDC_AUTHORITY string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP. OCIS_OIDC_CLIENT_IDWEB_OIDC_CLIENT_ID string web The OIDC client ID which ownCloud Web uses. This client needs to be set up in your IDP. Note that this setting has no effect when using the builtin IDP. WEB_OIDC_RESPONSE_TYPE string code The OIDC response type to use for authentication. WEB_OIDC_SCOPE string openid profile email OIDC scopes to request during authentication to authorize access to user details. Defaults to \u0026lsquo;openid profile email\u0026rsquo;. Values are separated by blank. More example values but not limited to are \u0026lsquo;address\u0026rsquo; or \u0026lsquo;phone\u0026rsquo; etc. WEB_OIDC_POST_LOGOUT_REDIRECT_URI string This value needs to point to a valid and reachable web page. The web client will trigger a redirect to that page directly after the logout action. The default value is empty and redirects to the login page. WEB_OPTION_OPEN_APPS_IN_TAB bool false Configures whether apps and extensions should generally open in a new tab. Defaults to false. WEB_OPTION_DISABLE_FEEDBACK_LINK bool false Set this option to \u0026rsquo;true\u0026rsquo; to disable the feedback link in the top bar. Keeping it enabled by setting the value to \u0026lsquo;false\u0026rsquo; or with the absence of the option, allows ownCloud to get feedback from your user base through a dedicated survey website. WEB_OPTION_RUNNING_ON_EOS bool false Set this option to \u0026rsquo;true\u0026rsquo; if running on an EOS storage backend (https://eos-web.web.cern.ch/eos-web/) to enable its specific features. Defaults to \u0026lsquo;false\u0026rsquo;. WEB_OPTION_CONTEXTHELPERS_READ_MORE bool true Specifies whether the \u0026lsquo;Read more\u0026rsquo; link should be displayed or not. WEB_OPTION_LOGOUT_URL string Adds a link to the user\u0026rsquo;s profile page to point him to an external page, where he can manage his session and devices. This is helpful when an external IdP is used. This option is disabled by default. WEB_OPTION_LOGIN_URL string Specifies the target URL to the login page. This is helpful when an external IdP is used. This option is disabled by default. Example URL like: https://www.myidp.com/login. WEB_OPTION_TOKEN_STORAGE_LOCAL bool true Specifies whether the access token will be stored in the local storage when set to \u0026rsquo;true\u0026rsquo; or in the session storage when set to \u0026lsquo;false\u0026rsquo;. If stored in the local storage, login state will be persisted across multiple browser tabs, means no additional logins are required. WEB_OPTION_DISABLED_EXTENSIONS []string [] A list to disable specific Web extensions identified by their ID. The ID can e.g. be taken from the \u0026lsquo;index.ts\u0026rsquo; file of the web extension. Example: \u0026lsquo;com.github.owncloud.web.files.search,com.github.owncloud.web.files.print\u0026rsquo;. See the Environment Variable Types description for more details. WEB_OPTION_EMBED_ENABLED string Defines whether Web should be running in \u0026rsquo;embed\u0026rsquo; mode. Setting this to \u0026rsquo;true\u0026rsquo; will enable a stripped down version of Web with reduced functionality used to integrate Web into other applications like via iFrame. Setting it to \u0026lsquo;false\u0026rsquo; or not setting it (default) will run Web as usual with all functionality enabled. See the text description for more details. WEB_OPTION_EMBED_TARGET string Defines how Web is being integrated when running in \u0026rsquo;embed\u0026rsquo; mode. Currently, the only supported options are \u0026rsquo;\u0026rsquo; (empty) and \u0026rsquo;location\u0026rsquo;. With \u0026rsquo;\u0026rsquo; which is the default, Web will run regular as defined via the \u0026rsquo;embed.enabled\u0026rsquo; config option. With \u0026rsquo;location\u0026rsquo;, Web will run embedded as location picker. Resource selection will be disabled and the selected resources array always includes the current folder as the only item. See the text description for more details. WEB_OPTION_EMBED_MESSAGES_ORIGIN string Defines a URL under which Web can be integrated via iFrame in \u0026rsquo;embed\u0026rsquo; mode. Note that setting this is mandatory when running Web in \u0026rsquo;embed\u0026rsquo; mode. Use \u0026lsquo;*\u0026rsquo; as value to allow running the iFrame under any URL, although this is not recommended for security reasons. See the text description for more details. WEB_OPTION_EMBED_DELEGATE_AUTHENTICATION bool false Defines whether Web should require authentication to be done by the parent application when running in \u0026rsquo;embed\u0026rsquo; mode. If set to \u0026rsquo;true\u0026rsquo; Web will not try to authenticate the user on its own but will require an access token coming from the parent application. Defaults to being unset. WEB_OPTION_EMBED_DELEGATE_AUTHENTICATION_ORIGIN string Defines the host to validate the message event origin against when running Web in \u0026rsquo;embed\u0026rsquo; mode with delegated authentication. Defaults to event message origin validation being omitted, which is only recommended for development setups. WEB_OPTION_USER_LIST_REQUIRES_FILTER bool false Defines whether one or more filters must be set in order to list users in the Web admin settings. Set this option to \u0026rsquo;true\u0026rsquo; if running in an environment with a lot of users and listing all users could slow down performance. Defaults to \u0026lsquo;false\u0026rsquo;. WEB_OPTION_CONCURRENT_REQUESTS_RESOURCE_BATCH_ACTIONS int 0 Defines the maximum number of concurrent requests per file/folder/space batch action. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SSE int 0 Defines the maximum number of concurrent requests in SSE event handlers. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SHARES_CREATE int 0 Defines the maximum number of concurrent requests per sharing invite batch. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SHARES_LIST int 0 Defines the maximum number of concurrent requests when loading individual share information inside listings. Defaults to 2. OCIS_JWT_SECRETWEB_JWT_SECRET string The secret to mint and validate jwt tokens. WEB_GATEWAY_GRPC_ADDR string com.owncloud.api.gateway The bind address of the GRPC service. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEB_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEB_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEB_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEB_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEB_LOG_LEVEL string The log level."},{"id":312,"href":"/services/_includes/webdav_configvars/","title":"Webdav Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEBDAV_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEBDAV_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEBDAV_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEBDAV_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEBDAV_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYWEBDAV_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORWEBDAV_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEWEBDAV_LOG_FILE string The path to the log file. Activates logging to this file if set. WEBDAV_DEBUG_ADDR string 127.0.0.1:9119 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. WEBDAV_DEBUG_TOKEN string Token to secure the metrics endpoint. WEBDAV_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. WEBDAV_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. WEBDAV_HTTP_ADDR string 127.0.0.1:9115 The bind address of the HTTP service. WEBDAV_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSWEBDAV_CORS_ALLOW_ORIGINS []string [*] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSWEBDAV_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSWEBDAV_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With X-Request-Id Cache-Control] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSWEBDAV_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. OCIS_DISABLE_PREVIEWSWEBDAV_DISABLE_PREVIEWS bool false Set this option to \u0026rsquo;true\u0026rsquo; to disable rendering of thumbnails triggered via webdav access. Note that when disabled, all access to preview related webdav paths will return a 404. OCIS_URLOCIS_PUBLIC_URL string https://127.0.0.1:9200 URL, where oCIS is reachable for users. WEBDAV_WEBDAV_NAMESPACE string /users/{{.Id.OpaqueId}} CS3 path layout to use when forwarding /webdav requests OCIS_REVA_GATEWAY string com.owncloud.api.gateway CS3 gateway used to look up user metadata OCIS_REVA_GATEWAY_TLS_MODE string TLS mode for grpc connection to the CS3 gateway endpoint. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows using transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server certificate verification. OCIS_REVA_GATEWAY_TLS_CACERT string The root CA certificate used to validate the gateway\u0026rsquo;s TLS certificate. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEBDAV_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEBDAV_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEBDAV_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEBDAV_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEBDAV_LOG_LEVEL string The log level."},{"id":313,"href":"/services/_includes/webfinger_configvars/","title":"Webfinger Configvars","parent":"Includes","content":" Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEBFINGER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEBFINGER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEBFINGER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEBFINGER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEBFINGER_LOG_LEVEL string The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;. OCIS_LOG_PRETTYWEBFINGER_LOG_PRETTY bool false Activates pretty log output. OCIS_LOG_COLORWEBFINGER_LOG_COLOR bool false Activates colorized log output. OCIS_LOG_FILEWEBFINGER_LOG_FILE string The path to the log file. Activates logging to this file if set. WEBFINGER_DEBUG_ADDR string 127.0.0.1:9279 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. WEBFINGER_DEBUG_TOKEN string Token to secure the metrics endpoint. WEBFINGER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling. WEBFINGER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces. WEBFINGER_HTTP_ADDR string 127.0.0.1:9275 The bind address of the HTTP service. WEBFINGER_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service. OCIS_CORS_ALLOW_ORIGINSWEBFINGER_CORS_ALLOW_ORIGINS []string [https://localhost:9200] A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODSWEBFINGER_CORS_ALLOW_METHODS []string [] A list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERSWEBFINGER_CORS_ALLOW_HEADERS []string [] A list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALSWEBFINGER_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true. OCIS_HTTP_TLS_CERTIFICATE string Path/File name of the TLS server certificate (in PEM format) for the http services. OCIS_HTTP_TLS_KEY string Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services. WEBFINGER_RELATIONS []string [http://openid.net/specs/connect/1.0/issuer http://webfinger.owncloud/rel/server-instance] A list of relation URIs or registered relation types to add to webfinger responses. See the Environment Variable Types description for more details. OCIS_URLOCIS_OIDC_ISSUERWEBFINGER_OIDC_ISSUER string https://localhost:9200 The identity provider href for the openid-discovery relation. OCIS_URLWEBFINGER_OWNCLOUD_SERVER_INSTANCE_URL string https://localhost:9200 The URL for the legacy ownCloud server instance relation (not to be confused with the product ownCloud Server). It defaults to the OCIS_URL but can be overridden to support some reverse proxy corner cases. To shard the deployment, multiple instances can be configured in the configuration file. OCIS_INSECUREWEBFINGER_INSECURE bool false Allow insecure connections to the WEBFINGER service. ","description":"Environment Variables Name Type Default Value Description OCIS_TRACING_ENABLEDWEBFINGER_TRACING_ENABLED bool false Activates tracing. OCIS_TRACING_TYPEWEBFINGER_TRACING_TYPE string The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now. OCIS_TRACING_ENDPOINTWEBFINGER_TRACING_ENDPOINT string The endpoint of the tracing agent. OCIS_TRACING_COLLECTORWEBFINGER_TRACING_COLLECTOR string The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. OCIS_LOG_LEVELWEBFINGER_LOG_LEVEL string The log level."},{"id":314,"href":"/services/general-info/env-var-deltas/4.0.0-5.0.0-added/","title":"4.0.0 5.0.0 Added","parent":"General Information","content":" Added Variables between oCIS 4.0.0 and oCIS 5.0.0 File Variable Description Default ocis-pkg/shared/shared_types.go OCIS_CACHE_DISABLE_PERSISTENCE Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. false ocis-pkg/registry/registry.go MICRO_REGISTRY (important change) The Go micro registry type to use. Supported types are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo; (default) and \u0026lsquo;kubernetes\u0026rsquo;. Note that \u0026rsquo;nats\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;consul\u0026rsquo; and \u0026lsquo;mdns\u0026rsquo; are deprecated and will be removed in a later version. Only change on supervision of ownCloud Support. nats-js-kv ocis-pkg/natsjsregistry/registry.go MICRO_REGISTRY_AUTH_USERNAME Optional when using nats to authenticate with the nats cluster. MICRO_REGISTRY_AUTH_PASSWORD Optional when using nats to authenticate with the nats cluster. services/antivirus/pkg/config/config.go OCIS_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. ANTIVIRUS_ICAP_SCAN_TIMEOUT Scan timeout for the ICAP client. Defaults to \u0026lsquo;5m\u0026rsquo; (5 minutes). See the Environment Variable Types description for more details. 5m0s services/audit/pkg/config/config.go OCIS_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. services/auth-service/pkg/config/config.go OCIS_LOG_LEVEL;AUTH_SERVICE_LOG_LEVEL The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;.\u0026quot; OCIS_LOG_PRETTY;AUTH_SERVICE_LOG_PRETTY Activates pretty log output. OCIS_LOG_COLOR;AUTH_SERVICE_LOG_COLOR Activates colorized log output. OCIS_LOG_FILE;AUTH_SERVICE_LOG_FILE The path to the log file. Activates logging to this file if set. AUTH_SERVICE_DEBUG_ADDR Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. AUTH_SERVICE_DEBUG_PPROF Enables pprof, which can be used for profiling. AUTH_SERVICE_DEBUG_TOKEN Enables pprof, which can be used for profiling. AUTH_SERVICE_DEBUG_ZPAGES Enables zpages, which can be used for collecting and viewing in-memory traces. AUTH_SERVICE_GRPC_ADDR The bind address of the GRPC service. AUTH_SERVICE_GRPC_PROTOCOL The transport protocol of the GRPC service. OCIS_SERVICE_ACCOUNT_ID;AUTH_SERVICE_SERVICE_ACCOUNT_ID The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRET;AUTH_SERVICE_SERVICE_ACCOUNT_SECRET The service account secret. services/auth-service/pkg/config/reva.go OCIS_JWT_SECRET;AUTH_SERVICE_JWT_SECRET The secret to mint and validate jwt tokens. services/auth-service/pkg/config/tracing.go OCIS_TRACING_ENABLED;AUTH_SERVICE_TRACING_ENABLED Activates tracing. OCIS_TRACING_TYPE;AUTH_SERVICE_TRACING_TYPE The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now.\u0026quot;` OCIS_TRACING_ENDPOINT;AUTH_SERVICE_TRACING_ENDPOINT The endpoint of the tracing agent. OCIS_TRACING_COLLECTOR;AUTH_SERVICE_TRACING_COLLECTOR The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. services/clientlog/pkg/config/config.go OCIS_REVA_GATEWAY;CLIENTLOG_REVA_GATEWAY CS3 gateway used to look up user metadata OCIS_EVENTS_ENDPOINT;CLIENTLOG_EVENTS_ENDPOINT The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTER;CLIENTLOG_EVENTS_CLUSTER The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURE;CLIENTLOG_EVENTS_TLS_INSECURE Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATE;CLIENTLOG_EVENTS_TLS_ROOT_CA_CERTIFICATE The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLS;CLIENTLOG_EVENTS_ENABLE_TLS Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services.. OCIS_EVENTS_AUTH_USERNAME;CLIENTLOG_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services.. OCIS_EVENTS_AUTH_PASSWORD;CLIENTLOG_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services.. OCIS_JWT_SECRET;CLIENTLOG_JWT_SECRET The secret to mint and validate jwt tokens. OCIS_SERVICE_ACCOUNT_ID;CLIENTLOG_SERVICE_ACCOUNT_ID The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRET;CLIENTLOG_SERVICE_ACCOUNT_SECRET The service account secret. services/clientlog/pkg/config/debug.go CLIENTLOG_DEBUG_ADDR Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. CLIENTLOG_DEBUG_TOKEN Token to secure the metrics endpoint. CLIENTLOG_DEBUG_PPROF Enables pprof, which can be used for profiling. CLIENTLOG_DEBUG_ZPAGES Enables zpages, which can be used for collecting and viewing in-memory traces. services/clientlog/pkg/config/log.go OCIS_LOG_LEVEL;CLIENTLOG_USERLOG_LOG_LEVEL The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;.\u0026quot; OCIS_LOG_PRETTY;CLIENTLOG_USERLOG_LOG_PRETTY Activates pretty log output. OCIS_LOG_COLOR;CLIENTLOG_USERLOG_LOG_COLOR Activates colorized log output. OCIS_LOG_FILE;CLIENTLOG_USERLOG_LOG_FILE The path to the log file. Activates logging to this file if set. services/clientlog/pkg/config/tracing.go OCIS_TRACING_ENABLED;CLIENTLOG_TRACING_ENABLED Activates tracing. OCIS_TRACING_TYPE;CLIENTLOG_TRACING_TYPE The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now.\u0026quot;` OCIS_TRACING_ENDPOINT;CLIENTLOG_TRACING_ENDPOINT The endpoint of the tracing agent. OCIS_TRACING_COLLECTOR;CLIENTLOG_TRACING_COLLECTOR The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. services/eventhistory/pkg/config/config.go OCIS_PERSISTENT_STORE_AUTH_USERNAME;EVENTHISTORY_STORE_AUTH_USERNAME The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORD;EVENTHISTORY_STORE_AUTH_PASSWORD The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_EVENTS_AUTH_USERNAME;EVENTHISTORY_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD;EVENTHISTORY_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. services/frontend/pkg/config/config.go OCIS_ENABLE_RESHARING Changing this value is NOT supported. Enables the support for resharing in the clients. FRONTEND_DEFAULT_LINK_PERMISSIONS Defines the default permissions a link is being created with. Possible values are 0 (= internal link, for instance members only) and 1 (= public link with viewer permissions). Defaults to 1. FRONTEND_AUTO_ACCEPT_SHARES Defines if shares should be auto accepted by default. Users can change this setting individually in their profile. true OCIS_CACHE_DISABLE_PERSISTENCE;FRONTEND_OCS_STAT_CACHE_DISABLE_PERSISTENCE Disable persistence of the cache. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. Defaults to false. false OCIS_CACHE_AUTH_USERNAME;FRONTEND_OCS_STAT_CACHE_AUTH_USERNAME The username to use for authentication. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. OCIS_CACHE_AUTH_PASSWORD;FRONTEND_OCS_STAT_CACHE_AUTH_PASSWORD The password to use for authentication. Only applies when using the \u0026rsquo;nats-js-kv\u0026rsquo; store type. FRONTEND_OCS_LIST_OCM_SHARES Include OCM shares when listing shares. See the OCM service documentation for more details. OCIS_SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORD;FRONTEND_OCS_PUBLIC_SHARE_MUST_HAVE_PASSWORD Set this to true if you want to enforce passwords on all public shares. OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD;FRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD Set this to true if you want to enforce passwords on Uploader, Editor or Contributor shares. FRONTEND_OCS_INCLUDE_OCM_SHAREES Include OCM sharees when listing sharees. OCIS_EVENTS_ENDPOINT;FRONTEND_EVENTS_ENDPOINT The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTER;FRONTEND_EVENTS_CLUSTER The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURE;FRONTEND_EVENTS_TLS_INSECURE Whether to verify the server TLS certificates. FRONTEND_EVENTS_TLS_ROOT_CA_CERTIFICATE;OCS_EVENTS_TLS_ROOT_CA_CERTIFICATE The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLS;FRONTEND_EVENTS_ENABLE_TLS Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_USERNAME;FRONTEND_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services.. OCIS_EVENTS_AUTH_PASSWORD;FRONTEND_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services.. OCIS_SERVICE_ACCOUNT_ID;FRONTEND_SERVICE_ACCOUNT_ID The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRET;FRONTEND_SERVICE_ACCOUNT_SECRET The service account secret. OCIS_PASSWORD_POLICY_DISABLED;FRONTEND_PASSWORD_POLICY_DISABLED Disable the password policy. Defaults to false if not set. OCIS_PASSWORD_POLICY_MIN_CHARACTERS;FRONTEND_PASSWORD_POLICY_MIN_CHARACTERS Define the minimum password length. Defaults to 0 if not set. 0 OCIS_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS;FRONTEND_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS Define the minimum number of lowercase characters. Defaults to 0 if not set. 0 OCIS_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS;FRONTEND_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS Define the minimum number of uppercase characters. Defaults to 0 if not set. 0 OCIS_PASSWORD_POLICY_MIN_DIGITS;FRONTEND_PASSWORD_POLICY_MIN_DIGITS Define the minimum number of digits. Defaults to 0 if not set. 0 OCIS_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS;FRONTEND_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS Define the minimum number of special characters. Defaults to 0 if not set. 0 OCIS_PASSWORD_POLICY_BANNED_PASSWORDS_LIST;FRONTEND_PASSWORD_POLICY_BANNED_PASSWORDS_LIST Path to the \u0026lsquo;banned passwords list\u0026rsquo; file. See the documentation for more details. services/gateway/pkg/config/config.go OCIS_CACHE_DISABLE_PERSISTENCE;GATEWAY_STAT_CACHE_DISABLE_PERSISTENCE Disables persistence of the stat cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. false OCIS_CACHE_DISABLE_PERSISTENCE;GATEWAY_PROVIDER_CACHE_DISABLE_PERSISTENCE Disables persistence of the provider cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. false OCIS_CACHE_AUTH_USERNAME;GATEWAY_PROVIDER_CACHE_AUTH_USERNAME The username to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORD;GATEWAY_PROVIDER_CACHE_AUTH_PASSWORD The password to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_DISABLE_PERSISTENCE;GATEWAY_CREATE_HOME_CACHE_DISABLE_PERSISTENCE Disables persistence of the create home cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAME;GATEWAY_CREATE_HOME_CACHE_AUTH_USERNAME The username to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. false OCIS_CACHE_AUTH_PASSWORD;GATEWAY_CREATE_HOME_CACHE_AUTH_PASSWORD The password to use for authentication. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. services/graph/pkg/config/cache.go OCIS_CACHE_DISABLE_PERSISTENCE;GRAPH_CACHE_DISABLE_PERSISTENCE Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. false OCIS_CACHE_AUTH_USERNAME;GRAPH_CACHE_AUTH_USERNAME The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORD;GRAPH_CACHE_AUTH_PASSWORD The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. services/graph/pkg/config/config.go GRAPH_IDENTITY_SEARCH_MIN_LENGTH The minimum length the search term needs to have for unprivileged users when searching for users or groups. OCIS_EVENTS_AUTH_USERNAME;GRAPH_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD;GRAPH_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_SERVICE_ACCOUNT_ID;GRAPH_SERVICE_ACCOUNT_ID The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRET;GRAPH_SERVICE_ACCOUNT_SECRET The service account secret. OCIS_ENABLE_RESHARING;GRAPH_ENABLE_RESHARING Changing this value is NOT supported. Enables the support for resharing in the clients. services/idp/pkg/config/config.go IDP_LOGIN_BACKGROUND_URL Configure an alternative URL to the background image for the login page. services/notifications/pkg/config/config.go OCIS_DEFAULT_LANGUAGE The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_EVENTS_AUTH_USERNAME;NOTIFICATIONS_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD;NOTIFICATIONS_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_SERVICE_ACCOUNT_ID;NOTIFICATIONS_SERVICE_ACCOUNT_ID The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRET;NOTIFICATIONS_SERVICE_ACCOUNT_SECRET The service account secret. services/ocdav/pkg/config/config.go OCDAV_OCM_NAMESPACE The human readable path prefix for the ocm shares. services/ocm/pkg/config/config.go SHARING_OCM_PROVIDER_AUTHORIZER_DRIVER Driver to be used to persist ocm invites. Supported value is only \u0026lsquo;json\u0026rsquo;. json OCM_HTTP_ADDR The bind address of the HTTP service. OCM_HTTP_PROTOCOL The transport protocol of the HTTP service. OCM_HTTP_PREFIX The path prefix where OCM can be accessed (defaults to /). OCIS_SERVICE_ACCOUNT_ID;OCM_SERVICE_ACCOUNT_ID The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRET;OCM_SERVICE_ACCOUNT_SECRET The service account secret. OCIS_CORS_ALLOW_ORIGINS;OCM_CORS_ALLOW_ORIGINS A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODS;OCM_CORS_ALLOW_METHODS A list of allowed CORS methods. See following chapter for more details: Access-Control-Allow-Methods at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERS;OCM_CORS_ALLOW_HEADERS A list of allowed CORS headers. See following chapter for more details: Access-Control-Allow-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALS;OCM_CORS_ALLOW_CREDENTIALS Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. OCM_GRPC_ADDR The bind address of the GRPC service. OCM_GRPC_PROTOCOL The transport protocol of the GRPC service. OCM_SCIENCEMESH_PREFIX URL path prefix for the ScienceMesh service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;. OCM_MESH_DIRECTORY_URL URL of the mesh directory service. OCM_OCMD_PREFIX URL path prefix for the OCMd service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;. OCM_OCMD_EXPOSE_RECIPIENT_DISPLAY_NAME Expose the display name of OCM share recipients. OCM_OCM_INVITE_MANAGER_DRIVER Driver to be used to persist ocm invites. Supported value is only \u0026lsquo;json\u0026rsquo;. json OCM_OCM_INVITE_MANAGER_INSECURE Disable TLS certificate validation for the OCM connections. Do not set this in production environments. OCM_OCM_INVITE_MANAGER_JSON_FILE Path to the JSON file where OCM invite data will be stored. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH:/storage. OCM_OCM_PROVIDER_AUTHORIZER_PROVIDERS_FILE Path to the JSON file where ocm invite data will be stored. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH:/storage. OCM_OCM_PROVIDER_AUTHORIZER_VERIFY_REQUEST_HOSTNAME Verify the hostname of the request against the hostname of the OCM provider. OCM_OCM_CORE_DRIVER Driver to be used to persist ocm shares. Supported value is only \u0026lsquo;json\u0026rsquo;. json OCM_OCM_STORAGE_PROVIDER_INSECURE Disable TLS certificate validation for the OCM connections. Do not set this in production environments. OCM_OCM_STORAGE_PROVIDER_STORAGE_ROOT Directory where the ocm storage provider persists its data like tus upload info files. OCM_OCM_CORE_JSON_FILE Path to the JSON file where OCM share data will be stored. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH:/storage. OCM_OCM_SHARE_PROVIDER_DRIVER Driver to be used to persist ocm shares. Supported value is only \u0026lsquo;json\u0026rsquo;. json OCM_OCM_SHARE_PROVIDER_INSECURE Disable TLS certificate validation for the OCM connections. Do not set this in production environments. OCM_WEBAPP_TEMPLATE Template for the webapp url. OCM_OCM_SHAREPROVIDER_JSON_FILE Path to the JSON file where OCM share data will be stored. If not defined, the root directory derives from $OCIS_BASE_DATA_PATH:/storage. services/ocm/pkg/config/debug.go OCM_DEBUG_ADDR Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. OCM_DEBUG_TOKEN Token to secure the metrics endpoint. OCM_DEBUG_PPROF Enables pprof, which can be used for profiling. OCM_DEBUG_ZPAGES Enables zpages, which can be used for collecting and viewing in-memory traces. services/ocm/pkg/config/log.go OCIS_LOG_LEVEL;OCM_LOG_LEVEL The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;.\u0026quot; OCIS_LOG_PRETTY;OCM_LOG_PRETTY Activates pretty log output. OCIS_LOG_COLOR;OCM_LOG_COLOR Activates colorized log output. OCIS_LOG_FILE;OCM_LOG_FILE The path to the log file. Activates logging to this file if set. services/ocm/pkg/config/tracing.go OCIS_TRACING_ENABLED;OCM_TRACING_ENABLED Activates tracing. OCIS_TRACING_TYPE;OCM_TRACING_TYPE The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now.\u0026quot;` OCIS_TRACING_ENDPOINT;OCM_TRACING_ENDPOINT The endpoint of the tracing agent. OCIS_TRACING_COLLECTOR;OCM_TRACING_COLLECTOR The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. services/ocs/pkg/config/config.go OCIS_CACHE_STORE;OCS_PRESIGNEDURL_SIGNING_KEYS_STORE The type of the signing key store. Supported values are: \u0026lsquo;redis-sentinel\u0026rsquo; and \u0026rsquo;nats-js-kv\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODES;OCS_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES A list of nodes to access the configured store. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_TTL;OCS_PRESIGNEDURL_SIGNING_KEYS_STORE_TTL Default time to live for signing keys. See the Environment Variable Types description for more details. OCIS_CACHE_AUTH_USERNAME;OCS_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_USERNAME The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORD;OCS_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_PASSWORD The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. services/policies/pkg/config/config.go OCIS_EVENTS_AUTH_USERNAME;POLICIES_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD;POLICIES_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. services/policies/pkg/config/tracing.go OCIS_TRACING_ENABLED;POLICIES_TRACING_ENABLED Activates tracing. OCIS_TRACING_TYPE;POLICIES_TRACING_TYPE The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now.\u0026quot;` OCIS_TRACING_ENDPOINT;POLICIES_TRACING_ENDPOINT The endpoint of the tracing agent. OCIS_TRACING_COLLECTOR;POLICIES_TRACING_COLLECTOR The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. services/postprocessing/pkg/config/config.go POSTPROCESSING_RETRY_BACKOFF_DURATION The base for the exponential backoff duration before retrying a failed postprocessing step. See the Environment Variable Types description for more details. POSTPROCESSING_MAX_RETRIES The maximum number of retries for a failed postprocessing step. OCIS_EVENTS_AUTH_USERNAME;POSTPROCESSING_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD;POSTPROCESSING_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_PERSISTENT_STORE_AUTH_USERNAME;POSTPROCESSING_STORE_AUTH_USERNAME The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORD;POSTPROCESSING_STORE_AUTH_PASSWORD The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. services/postprocessing/pkg/config/tracing.go OCIS_TRACING_ENABLED;POSTPROCESSING_TRACING_ENABLED Activates tracing. OCIS_TRACING_TYPE;POSTPROCESSING_TRACING_TYPE The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now.\u0026quot;` OCIS_TRACING_ENDPOINT;POSTPROCESSING_TRACING_ENDPOINT The endpoint of the tracing agent. OCIS_TRACING_COLLECTOR;POSTPROCESSING_TRACING_COLLECTOR The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. services/proxy/pkg/config/config.go OCIS_CACHE_AUTH_USERNAME;PROXY_OIDC_USERINFO_CACHE_AUTH_USERNAME The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORD;PROXY_OIDC_USERINFO_CACHE_AUTH_PASSWORD The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_STORE;PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE The type of the signing key store. Supported values are: \u0026lsquo;redis-sentinel\u0026rsquo; and \u0026rsquo;nats-js-kv\u0026rsquo;. See the text description for details. OCIS_CACHE_STORE_NODES;PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_NODES A list of nodes to access the configured store. Note that the behaviour how nodes are used is dependent on the library of the configured store. See the Environment Variable Types description for more details. OCIS_CACHE_TTL;PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_TTL Default time to live for signing keys. See the Environment Variable Types description for more details. OCIS_CACHE_DISABLE_PERSISTENCE;PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_DISABLE_PERSISTENCE Disables persistence of the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to true. OCIS_CACHE_AUTH_USERNAME;PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_USERNAME The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORD;PROXY_PRESIGNEDURL_SIGNING_KEYS_STORE_AUTH_PASSWORD The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_SERVICE_ACCOUNT_ID;PROXY_SERVICE_ACCOUNT_ID The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRET;PROXY_SERVICE_ACCOUNT_SECRET The service account secret. services/search/pkg/config/config.go OCIS_SERVICE_ACCOUNT_ID;SEARCH_SERVICE_ACCOUNT_ID The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRET;SEARCH_SERVICE_ACCOUNT_SECRET The service account secret. services/search/pkg/config/content.go SEARCH_EXTRACTOR_TIKA_CLEAN_STOP_WORDS Defines if stop words should be cleaned or not. See the documentation for more details. services/search/pkg/config/search.go OCIS_EVENTS_AUTH_USERNAME;SEARCH_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD;SEARCH_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. services/settings/pkg/config/config.go SETTINGS_SERVICE_ACCOUNT_IDS;OCIS_SERVICE_ACCOUNT_ID The list of all service account IDs. These will be assigned the hidden \u0026lsquo;service-account\u0026rsquo; role. Note: When using \u0026lsquo;OCIS_SERVICE_ACCOUNT_ID\u0026rsquo; this will contain only one value while \u0026lsquo;SETTINGS_SERVICE_ACCOUNT_IDS\u0026rsquo; can have multiple. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details about service accounts. OCIS_DEFAULT_LANGUAGE The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_CACHE_DISABLE_PERSISTENCE;SETTINGS_CACHE_DISABLE_PERSISTENCE Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. OCIS_CACHE_AUTH_USERNAME;SETTINGS_CACHE_AUTH_USERNAME The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORD;SETTINGS_CACHE_AUTH_PASSWORD The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_EVENTS_AUTH_USERNAME;SETTINGS_EVENTS_AUTH_USERNAME The username to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_EVENTS_AUTH_PASSWORD;SETTINGS_EVENTS_AUTH_PASSWORD The password to authenticate with the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. services/sharing/pkg/config/config.go OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD;SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD Set this to true if you want to enforce passwords on Uploader, Editor or Contributor shares. If not using the global OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD, you must define the FRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD in the frontend service. OCIS_SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORD;SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORD Set this to true if you want to enforce passwords on all public shares. OCIS_EVENTS_AUTH_USERNAME;SHARING_EVENTS_AUTH_USERNAME Username for the events broker. OCIS_EVENTS_AUTH_PASSWORD;SHARING_EVENTS_AUTH_PASSWORD Password for the events broker. OCIS_PASSWORD_POLICY_DISABLED;SHARING_PASSWORD_POLICY_DISABLED Disable the password policy. Defaults to false if not set. OCIS_PASSWORD_POLICY_MIN_CHARACTERS;SHARING_PASSWORD_POLICY_MIN_CHARACTERS Define the minimum password length. Defaults to 0 if not set. 0 OCIS_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS;SHARING_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS Define the minimum number of lowercase characters. Defaults to 0 if not set. 0 OCIS_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS;SHARING_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS Define the minimum number of uppercase characters. Defaults to 0 if not set. 0 OCIS_PASSWORD_POLICY_MIN_DIGITS;SHARING_PASSWORD_POLICY_MIN_DIGITS Define the minimum number of digits. Defaults to 0 if not set. 0 OCIS_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS;SHARING_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS Define the minimum number of special characters. Defaults to 0 if not set. 0 OCIS_PASSWORD_POLICY_BANNED_PASSWORDS_LIST;SHARING_PASSWORD_POLICY_BANNED_PASSWORDS_LIST Path to the \u0026lsquo;banned passwords list\u0026rsquo; file. See the documentation for more details. services/sse/pkg/config/config.go OCIS_LOG_LEVEL;SSE_LOG_LEVEL The log level. Valid values are: \u0026lsquo;panic\u0026rsquo;, \u0026lsquo;fatal\u0026rsquo;, \u0026rsquo;error\u0026rsquo;, \u0026lsquo;warn\u0026rsquo;, \u0026lsquo;info\u0026rsquo;, \u0026lsquo;debug\u0026rsquo;, \u0026rsquo;trace\u0026rsquo;.\u0026quot; OCIS_LOG_PRETTY;SSE_LOG_PRETTY Activates pretty log output. OCIS_LOG_COLOR;SSE_LOG_COLOR Activates colorized log output. OCIS_LOG_FILE;SSE_LOG_FILE The path to the log file. Activates logging to this file if set. SSE_DEBUG_ADDR Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed. SSE_DEBUG_TOKEN Token to secure the metrics endpoint. SSE_DEBUG_PPROF Enables pprof, which can be used for profiling. SSE_DEBUG_ZPAGES Enables zpages, which can be used for collecting and viewing in-memory traces. OCIS_EVENTS_ENDPOINT;SSE_EVENTS_ENDPOINT The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. OCIS_EVENTS_CLUSTER;SSE_EVENTS_CLUSTER The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system. OCIS_INSECURE;SSE_EVENTS_TLS_INSECURE Whether to verify the server TLS certificates. OCIS_EVENTS_TLS_ROOT_CA_CERTIFICATE;SSE_EVENTS_TLS_ROOT_CA_CERTIFICATE The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false. OCIS_EVENTS_ENABLE_TLS;SSE_EVENTS_ENABLE_TLS Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services.. OCIS_EVENTS_AUTH_USERNAME;SSE_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services.. OCIS_EVENTS_AUTH_PASSWORD;SSE_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services.. OCIS_CORS_ALLOW_ORIGINS;SSE_CORS_ALLOW_ORIGINS A list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_METHODS;SSE_CORS_ALLOW_METHODS A list of allowed CORS methods. See following chapter for more details: Access-Control-Allow-Methods at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_HEADERS;SSE_CORS_ALLOW_HEADERS A list of allowed CORS headers. See following chapter for more details: Access-Control-Allow-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers. See the Environment Variable Types description for more details. OCIS_CORS_ALLOW_CREDENTIALS;SSE_CORS_ALLOW_CREDENTIALS Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials. SSE_HTTP_ADDR The bind address of the HTTP service. SSE_HTTP_ROOT The root path of the HTTP service. OCIS_JWT_SECRET;SSE_JWT_SECRET The secret to mint and validate jwt tokens. services/sse/pkg/config/tracing.go OCIS_TRACING_ENABLED;SSE_TRACING_ENABLED Activates tracing. OCIS_TRACING_TYPE;SSE_TRACING_TYPE The type of tracing. Defaults to \u0026lsquo;\u0026rsquo;, which is the same as \u0026lsquo;jaeger\u0026rsquo;. Allowed tracing types are \u0026lsquo;jaeger\u0026rsquo; and \u0026rsquo;\u0026rsquo; as of now.\u0026quot;` OCIS_TRACING_ENDPOINT;SSE_TRACING_ENDPOINT The endpoint of the tracing agent. OCIS_TRACING_COLLECTOR;SSE_TRACING_COLLECTOR The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset. services/storage-system/pkg/config/config.go OCIS_CACHE_DISABLE_PERSISTENCE;STORAGE_SYSTEM_CACHE_DISABLE_PERSISTENCE Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. false OCIS_CACHE_AUTH_USERNAME;STORAGE_SYSTEM_CACHE_AUTH_USERNAME Username for the configured store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORD;STORAGE_SYSTEM_CACHE_AUTH_PASSWORD TPassword for the configured store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. services/storage-users/pkg/config/config.go OCIS_GATEWAY_GRPC_ADDR;STORAGE_USERS_GATEWAY_GRPC_ADDR The bind address of the gateway GRPC address. OCIS_MACHINE_AUTH_API_KEY;STORAGE_USERS_MACHINE_AUTH_API_KEY Machine auth API key used to validate internal requests necessary for the access to resources from other services. STORAGE_USERS_CLI_MAX_ATTEMPTS_RENAME_FILE The maximum number of attempts to rename a file when a user restores a file to an existing destination with the same name. The minimum value is 100. OCIS_EVENTS_AUTH_USERNAME;STORAGE_USERS_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD;STORAGE_USERS_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_CACHE_DISABLE_PERSISTENCE;STORAGE_USERS_STAT_CACHE_DISABLE_PERSISTENCE Disables persistence of the stat cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. false OCIS_CACHE_DISABLE_PERSISTENCE;STORAGE_USERS_FILEMETADATA_CACHE_DISABLE_PERSISTENCE Disables persistence of the file metadata cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. false OCIS_CACHE_AUTH_USERNAME;STORAGE_USERS_FILEMETADATA_CACHE_AUTH_USERNAME The username to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_AUTH_PASSWORD;STORAGE_USERS_FILEMETADATA_CACHE_AUTH_PASSWORD The password to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_CACHE_DISABLE_PERSISTENCE;STORAGE_USERS_ID_CACHE_DISABLE_PERSISTENCE Disables persistence of the id cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. Defaults to false. false OCIS_CACHE_AUTH_USERNAME;STORAGE_USERS_ID_CACHE_AUTH_USERNAME The username to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured OCIS_CACHE_AUTH_PASSWORD;STORAGE_USERS_ID_CACHE_AUTH_PASSWORD The password to authenticate with the cache store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_SERVICE_ACCOUNT_ID;STORAGE_USERS_SERVICE_ACCOUNT_ID The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRET;STORAGE_USERS_SERVICE_ACCOUNT_SECRET The service account secret. services/userlog/pkg/config/config.go OCIS_DEFAULT_LANGUAGE The default language used by services and the WebUI. If not defined, English will be used as default. See the documentation for more details. OCIS_PERSISTENT_STORE_AUTH_USERNAME;USERLOG_STORE_AUTH_USERNAME The username to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_PERSISTENT_STORE_AUTH_PASSWORD;USERLOG_STORE_AUTH_PASSWORD The password to authenticate with the store. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. OCIS_EVENTS_AUTH_USERNAME;USERLOG_EVENTS_AUTH_USERNAME The username to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_EVENTS_AUTH_PASSWORD;USERLOG_EVENTS_AUTH_PASSWORD The password to authenticate with the events broker. The events broker is the ocis service which receives and delivers events between the services. OCIS_SERVICE_ACCOUNT_ID;USERLOG_SERVICE_ACCOUNT_ID The ID of the service account the service should use. See the \u0026lsquo;auth-service\u0026rsquo; service description for more details. OCIS_SERVICE_ACCOUNT_SECRET;USERLOG_SERVICE_ACCOUNT_SECRET The service account secret. services/web/pkg/config/options.go WEB_OPTION_LOGIN_URL Specifies the target URL to the login page. This is helpful when an external IdP is used. This option is disabled by default. Example URL like: https://www.myidp.com/login. WEB_OPTION_DISABLED_EXTENSIONS A list to disable specific Web extensions identified by their ID. The ID can e.g. be taken from the \u0026lsquo;index.ts\u0026rsquo; file of the web extension. Example: \u0026lsquo;com.github.owncloud.web.files.search,com.github.owncloud.web.files.print\u0026rsquo;. See the Environment Variable Types description for more details. WEB_OPTION_USER_LIST_REQUIRES_FILTER Defines whether one or more filters must be set in order to list users in the Web admin settings. Set this option to \u0026rsquo;true\u0026rsquo; if running in an environment with a lot of users and listing all users could slow down performance. Defaults to \u0026lsquo;false\u0026rsquo;. false WEB_OPTION_EMBED_ENABLED Defines whether Web should be running in \u0026rsquo;embed\u0026rsquo; mode. Setting this to \u0026rsquo;true\u0026rsquo; will enable a stripped down version of Web with reduced functionality used to integrate Web into other applications like via iFrame. Setting it to \u0026lsquo;false\u0026rsquo; or not setting it (default) will run Web as usual with all functionality enabled. See the text description for more details. WEB_OPTION_EMBED_TARGET Defines how Web is being integrated when running in \u0026rsquo;embed\u0026rsquo; mode. Currently, the only supported options are \u0026rsquo;\u0026rsquo; (empty) and \u0026rsquo;location\u0026rsquo;. With \u0026rsquo;\u0026rsquo; which is the default, Web will run regular as defined via the \u0026rsquo;embed.enabled\u0026rsquo; config option. With \u0026rsquo;location\u0026rsquo;, Web will run embedded as location picker. Resource selection will be disabled and the selected resources array always includes the current folder as the only item. See the text description for more details. WEB_OPTION_EMBED_MESSAGES_ORIGIN Defines a URL under which Web can be integrated via iFrame in \u0026rsquo;embed\u0026rsquo; mode. Note that setting this is mandatory when running Web in \u0026rsquo;embed\u0026rsquo; mode. Use \u0026lsquo;*\u0026rsquo; as value to allow running the iFrame under any URL, although this is not recommended for security reasons. See the text description for more details. WEB_OPTION_EMBED_DELEGATE_AUTHENTICATION Defines whether Web should require authentication to be done by the parent application when running in \u0026rsquo;embed\u0026rsquo; mode. If set to \u0026rsquo;true\u0026rsquo; Web will not try to authenticate the user on its own but will require an access token coming from the parent application. Defaults to being unset. WEB_OPTION_EMBED_DELEGATE_AUTHENTICATION_ORIGIN Defines the host to validate the message event origin against when running Web in \u0026rsquo;embed\u0026rsquo; mode with delegated authentication. Defaults to event message origin validation being omitted, which is only recommended for development setups. WEB_OPTION_CONCURRENT_REQUESTS_RESOURCE_BATCH_ACTIONS Defines the maximum number of concurrent requests per file/folder/space batch action. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SSE Defines the maximum number of concurrent requests in SSE event handlers. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SHARES_CREATE Defines the maximum number of concurrent requests per sharing invite batch. Defaults to 4. WEB_OPTION_CONCURRENT_REQUESTS_SHARES_LIST Defines the maximum number of concurrent requests when loading individual share information inside listings. Defaults to 2. ","description":"Added Variables between oCIS 4.0.0 and oCIS 5.0.0 File Variable Description Default ocis-pkg/shared/shared_types.go OCIS_CACHE_DISABLE_PERSISTENCE Disables persistence of the cache. Only applies when store type \u0026rsquo;nats-js-kv\u0026rsquo; is configured. false ocis-pkg/registry/registry.go MICRO_REGISTRY (important change) The Go micro registry type to use. Supported types are: \u0026lsquo;memory\u0026rsquo;, \u0026rsquo;nats-js-kv\u0026rsquo; (default) and \u0026lsquo;kubernetes\u0026rsquo;. Note that \u0026rsquo;nats\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;consul\u0026rsquo; and \u0026lsquo;mdns\u0026rsquo; are deprecated and will be removed in a later version. Only change on supervision of ownCloud Support."},{"id":315,"href":"/services/general-info/env-var-deltas/4.0.0-5.0.0-removed/","title":"4.0.0 5.0.0 Removed","parent":"General Information","content":" Removed Variables between oCIS 4.0.0 and oCIS 5.0.0 File Variable Replacement Description services/auth-basic/pkg/config/config.go LDAP_BIND_PASSWORD OCIS_LDAP_BIND_PASSWORD Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. services/graph/pkg/config/config.go LDAP_BIND_PASSWORD OCIS_LDAP_BIND_PASSWORD Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. services/groups/pkg/config/config.go LDAP_BIND_PASSWORD OCIS_LDAP_BIND_PASSWORD Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. services/idp/pkg/config/config.go LDAP_BIND_PASSWORD OCIS_LDAP_BIND_PASSWORD Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. services/sharing/pkg/config/config.go SHARING_EVENTS_TLS_ROOT_CA_CERT SHARING_EVENTS_TLS_ROOT_CA_CERTIFICATE The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SHARING_EVENTS_TLS_INSECURE will be seen as false. services/users/pkg/config/config.go LDAP_BIND_PASSWORD OCIS_LDAP_BIND_PASSWORD Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. LDAP_USER_SCHEMA_ID_IS_OCTETSTRING OCIS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING Set this to true if the defined \u0026lsquo;ID\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user ID\u0026rsquo;s. services/web/pkg/config/options.go WEB_OPTION_IMPRINT_URL To be configured via the theme.json file Specifies the target URL for the imprint link valid for the ocis instance in the account menu. WEB_OPTION_PRIVACY_URL To be configured via the theme.json file Specifies the target URL for the privacy link valid for the ocis instance in the account menu. ","description":"Removed Variables between oCIS 4.0.0 and oCIS 5.0.0 File Variable Replacement Description services/auth-basic/pkg/config/config.go LDAP_BIND_PASSWORD OCIS_LDAP_BIND_PASSWORD Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. services/graph/pkg/config/config.go LDAP_BIND_PASSWORD OCIS_LDAP_BIND_PASSWORD Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. services/groups/pkg/config/config.go LDAP_BIND_PASSWORD OCIS_LDAP_BIND_PASSWORD Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. services/idp/pkg/config/config.go LDAP_BIND_PASSWORD OCIS_LDAP_BIND_PASSWORD Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;. services/sharing/pkg/config/config.go SHARING_EVENTS_TLS_ROOT_CA_CERT SHARING_EVENTS_TLS_ROOT_CA_CERTIFICATE The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SHARING_EVENTS_TLS_INSECURE will be seen as false."},{"id":316,"href":"/categories/","title":"Categories","parent":"ownCloud","content":"","description":""},{"id":317,"href":"/tags/","title":"Tags","parent":"ownCloud","content":"","description":""}]