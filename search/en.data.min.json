[{"id":0,"href":"/clients/web/","title":"ownCloud Web","parent":"Clients","content":"This is the next generation ownCloud frontend. If you\u0026rsquo;re new here, head over to the the getting started guide for a quick introduction.\n","description":"This is the next generation ownCloud frontend. If you\u0026rsquo;re new here, head over to the the getting started guide for a quick introduction."},{"id":1,"href":"/clients/web/docs/","title":"ownCloud Web","parent":"ownCloud Web","content":"This is the next generation ownCloud frontend. If you\u0026rsquo;re new here, head over to the the getting started guide for a quick introduction.\n","description":"This is the next generation ownCloud frontend. If you\u0026rsquo;re new here, head over to the the getting started guide for a quick introduction."},{"id":2,"href":"/ocis/","title":"oCIS - ownCloud Infinite Scale","parent":"ownCloud","content":" ownCloud Infinite Scale     Welcome to oCIS, the modern file-sync and share platform, which is based on our knowledge and experience with the PHP based ownCloud server.\nThe idea of federated storage     To create a truly federated storage architecture oCIS breaks down the old ownCloud 10 user specific namespace, which is assembled on the server side, and makes the individual parts accessible to clients as storage spaces and storage space registries.\nThe diagram below shows the core concepts that are the foundation for the new architecture:\n End user devices can fetch the list of storage spaces a user has access to, by querying one or multiple storage space registries. The list contains a unique endpoint for every storage space. Storage space registries manage the list of storage spaces a user has access to. They may subscribe to storage spaces in order to receive notifications about changes on behalf of an end users mobile or desktop client. Storage spaces represent a collection of files and folders. A users personal files are contained in a storage space, a group or project drive is a storage space, and even incoming shares are treated and implemented as storage spaces. Each with properties like owners, permissions, quota and type. Storage providers can hold multiple storage spaces. At an oCIS instance, there might be a dedicated storage provider responsible for users personal storage spaces. There might be multiple, either to shard the load, provide different levels of redundancy or support custom workflows. Or there might be just one, hosting all types of storage spaces.   As an example, Einstein might want to share something with Marie, who has an account at a different identity provider and uses a different storage space registry. The process makes use of OpenID Connect (OIDC) for authentication and would look something like this:\nTo share something with Marie, Einstein would open https://cloud.zurich.test. His browser loads oCIS web and presents a login form that uses the OpenID Connect Discovery to look up the OIDC issuer. For einstein@zurich.test he will end up at https://idp.zurich.test, authenticate and get redirected back to https://cloud.zurich.test. Now, oCIS web will use a similar discovery to look up the storage space registry for the account, based on the email (or username). He will discover that https://cloud.zurich.test is also his storage registry that the web UI will use to load the list of storage spaces that are available to him.\nAfter locating a folder that he wants to share with Marie he enters her email marie@paris.test in the sharing dialog to grant her the editor role. This, in effect, creates a new storage space that is registered with the storage space registry at https://cloud.zurich.test.\nEinstein copies the URL in the browser (or an email with the same URL is sent automatically, or the storage registries use a back-channel mechanism). It contains the most specific storage space id and a path relative to it: https://cloud.zurich.test/#/spaces/716199a6-00c0-4fec-93d2-7e00150b1c84/a/rel/path.\nWhen Marie enters that URL she will be presented with a login form on the https://cloud.zurich.test instance, because the share was created on that domain. If https://cloud.zurich.test trusts her OpenID Connect identity provider https://idp.paris.test she can log in. This time, the storage space registry discovery will come up with https://cloud.paris.test though. Since that registry is different than the registry tied to https://cloud.zurich.test oCIS web can look up the storage space 716199a6-00c0-4fec-93d2-7e00150b1c84 and register the WebDAV URL https://cloud.zurich.test/dav/spaces/716199a6-00c0-4fec-93d2-7e00150b1c84/a/rel/path in Marie\u0026rsquo;s storage space registry at https://cloud.paris.test. When she accepts that share her clients will be able to sync the new storage space at https://cloud.zurich.test.\noCIS microservice runtime     The oCIS runtime allows us to dynamically manage services running in a single process. We use suture to create a supervisor tree that starts each service in a dedicated goroutine. By default oCIS will start all built-in oCIS services in a single process. Individual services can be moved to other nodes to scale-out and meet specific performance requirements. A go-micro based registry allows services in multiple nodes to form a distributed microservice architecture.\noCIS Services     Every oCIS service uses ocis-pkg, which implements the go-micro interfaces for servers to register and clients to lookup nodes with a service registry. We are following the 12 Factor methodology with oCIS. The uniformity of services also allows us to use the same command, logging and configuration mechanism. Configurations are forwarded from the oCIS runtime to the individual extensions.\ngo-micro     While the go-micro framework provides abstractions as well as implementations for the different components in a microservice architecture, it uses a more developer focused runtime philosophy: It is used to download services from a repo, compile them on the fly and start them as individual processes. For oCIS we decided to use a more admin friendly runtime: You can download a single binary and start the contained oCIS services with a single bin/ocis server. This also makes packaging easier.\nWe use ocis-pkg to configure the default implementations for the go-micro grpc server, client and mdns registry, swapping them out as needed, e.g. to use the kubernetes registry plugin.\nREVA     A lot of embedded services in oCIS are built upon the REVA runtime. We decided to bundle some of the CS3 services to logically group them. A home storage provider, which is dealing with metadata, and the corresponding data provider, which is dealing with up and download, are one example. The frontend with the oc flavoured webdav, ocs handlers and a data-gateway are another.\nProtocol driven development     Interacting with oCIS involves a multitude af APIs. The server and all clients rely on OpenID Connect for authentication. The embedded LibreGraph Connect can be replaced with any other OpenID Connect Identity Provider. Clients use the WebDAV based oc sync protocol to manage files and folders, ocs to manage shares and TUS to upload files in a resumable way. On the server side REVA is the reference implementation of the CS3 apis which is defined using protobuf. By embedding libregraph/idm, oCIS provides a LDAP interface to make accounts, including guests available to firewalls and other systems. In the future, we are looking into the Microsoft Graph API, which is based on odata, as a well-defined REST/JSON dialect for the existing endpoints.\nAcceptance test suite     We run a huge test suite, which originated in ownCloud 10 and continues to grow. A detailed description can be found in the developer docs for testing.\nArchitecture Overview     Running bin/ocis server will start the following services, all of which can be scaled and deployed on a single node or in a cloud native environment, as needed.\n ","description":"ownCloud Infinite Scale     Welcome to oCIS, the modern file-sync and share platform, which is based on our knowledge and experience with the PHP based ownCloud server.\nThe idea of federated storage     To create a truly federated storage architecture oCIS breaks down the old ownCloud 10 user specific namespace, which is assembled on the server side, and makes the individual parts accessible to clients as storage spaces and storage space registries."},{"id":3,"href":"/integration/file_picker/","title":"File Picker","parent":"Integrations","content":"Easily integrate ownCloud into your own product.\n","description":"Easily integrate ownCloud into your own product."},{"id":4,"href":"/integration/file_picker/docs/","title":"File Picker","parent":"File Picker","content":"Easily integrate ownCloud into your own product.\n","description":"Easily integrate ownCloud into your own product."},{"id":5,"href":"/ocis/adr/0001-introduce-accounts-service/","title":"1. Introduce an accounts service","parent":"Architecture Decisions","content":" Status: superseded by ADR-0003 Deciders: @butonic, @felixboehm, @micbar, @pmaier1 Date: 2020-06-15  Technical Story: persist accounts\nContext and Problem Statement     To attach metadata like shares to users ownCloud relies on persistent, non-reassignable, unique identifiers for users (and files). Email und username can change when a user changes his name. But even the OIDC sub+iss combination may change when the IdP changes. While there is an account porting protocol that describes how a relying party (RP) such as ownCloud should behave, it still requires the RP to maintain its own user identifiers.\nDecision Drivers      oCIS should be a single binary that can run out of the box without external dependencies like an LDAP server. Time: we want to build a release candidate asap. Firewalls need access to guests, typically via LDAP. Not all external LDAPs are writeable for us to provision Guest accounts. We see multiple LDAP servers in deployments. Being able to handle them is important and should be covered by using OIDC + being able to query multiple LDAP servers.  Considered Options      Accounts service wraps LDAP GLAuth wraps accounts service  Decision Outcome     Chosen option: \u0026ldquo;GLAuth wraps accounts service\u0026rdquo;, because we need write access to provision guest accounts and GLAuth currently has no write support.\nPositive Consequences      We can build a self-contained user management in the accounts service and can adjust it to our requirements. We do not rely on an LDAP server which would only be possible by implementing write support in the LDAP libraries used by GLAuth (hard to estimate effort, when will that be merged upstream).  Negative Consequences      We need to spend time on implementing user management  Pros and Cons of the Options     Accounts service wraps LDAP      Bad, because not all external LDAPs are writeable for us to provision Guest accounts.  ","description":"Status: superseded by ADR-0003 Deciders: @butonic, @felixboehm, @micbar, @pmaier1 Date: 2020-06-15  Technical Story: persist accounts\nContext and Problem Statement     To attach metadata like shares to users ownCloud relies on persistent, non-reassignable, unique identifiers for users (and files). Email und username can change when a user changes his name. But even the OIDC sub+iss combination may change when the IdP changes. While there is an account porting protocol that describes how a relying party (RP) such as ownCloud should behave, it still requires the RP to maintain its own user identifiers."},{"id":6,"href":"/clients/web/deployments/oc10-app/","title":"Deploy as an app in ownCloud 10","parent":"Deployments","content":"   Prerequisites Deploying ownCloud Web Configure oauth2 Configure ownCloud 10  Set ownCloud Web address Configure link routing Make ownCloud Web the default web interface   Configure ownCloud Web Integrate ownCloud Classic features in ownCloud Web  Add links to the app switcher Add links to the user menu ONLYOFFICE Collabora Online   Additional configuration for certain core apps  Preview app Text-Editor app   Accessing ownCloud Web      ownCloud Web is being deployed as an app to ownCloud marketplace to enable easy integration into existing ownCloud 10 instances. After completing this setup, ownCloud Web will be available on https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/web.\nPrerequisites      Running ownCloud 10 server with version 10.8 Installed oauth2 app Command line access to your server  Deploying ownCloud Web     Download the ownCloud Web app from the marketplace and enable it:\nocc market:install web Configure oauth2     Within the Admin page of ownCloud 10, head into User Authentication and add a new client with arbitrary name (e.g. ownCloud Web) and redirection URL https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/web/oidc-callback.html.\n  You can mark the ownCloud web client as trusted by clicking the respective checkbox so authorization after authentication gets omitted.   If you use OpenID Connect you need to add a new client for ownCloud Web to your identity provider instead.  Configure ownCloud 10     Set ownCloud Web address     To set the ownCloud Web address and to display ownCloud Web in the app switcher, add the following line into config/config.php:\n\u0026#39;web.baseUrl\u0026#39; =\u0026gt; \u0026#39;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/web\u0026#39;, Configure link routing     Administrators can optionally decide whether ownCloud Links (public and private links) should be provided by the Classic web interface or by ownCloud Web using the web.rewriteLinks option in config/config.php. The option defaults to false so that the links open in the Classic web interface. Setting it to true will redirect all links to ownCloud Web. To redirect all private and public links to ownCloud Web, add the following line into config/config.php:\n\u0026#39;web.rewriteLinks\u0026#39; =\u0026gt; true, Make ownCloud Web the default web interface     Administrators can optionally decide to make ownCloud Web the default web interface that users see after they log in to ownCloud. By default, the Classic web interface will be presented to users. To present ownCloud Web to users by default, add the following line into config/config.php:\n\u0026#39;defaultapp\u0026#39; =\u0026gt; \u0026#39;web\u0026#39;,   While it is possible to make ownCloud Web the default web interface, the decision should be carefully evaluated. Features are still being added to ownCloud Web and users might need to use the Classic web interface to do certain actions.  Configure ownCloud Web     There are a few config values which need to be set in order for ownCloud Web to work correctly. Please copy the example config below into config/config.json and adjust it for your environment:\n{ \u0026#34;server\u0026#34; : \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;\u0026#34;, \u0026#34;theme\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/themes/owncloud/theme.json\u0026#34;, \u0026#34;auth\u0026#34;: { \u0026#34;clientId\u0026#34;: \u0026#34;\u0026lt;client-id-from-oauth2\u0026gt;\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/oauth2/api/v1/token\u0026#34;, \u0026#34;authUrl\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/oauth2/authorize\u0026#34;, \u0026#34;logoutUrl\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/logout\u0026#34; }, \u0026#34;apps\u0026#34; : [ \u0026#34;files\u0026#34;, \u0026#34;preview\u0026#34;, \u0026#34;draw-io\u0026#34; ], \u0026#34;applications\u0026#34; : [ { \u0026#34;title\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;Classic Design\u0026#34;, \u0026#34;de\u0026#34;: \u0026#34;Klassisches Design\u0026#34;, \u0026#34;fr\u0026#34;: \u0026#34;Design classique\u0026#34;, \u0026#34;zh_CN\u0026#34;: \u0026#34;文件\u0026#34; }, \u0026#34;icon\u0026#34;: \u0026#34;swap-box\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/files\u0026#34; }, { \u0026#34;icon\u0026#34;: \u0026#34;settings-4\u0026#34;, \u0026#34;menu\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;_self\u0026#34;, \u0026#34;title\u0026#34;: { \u0026#34;de\u0026#34;: \u0026#34;Einstellungen\u0026#34;, \u0026#34;en\u0026#34;: \u0026#34;Settings\u0026#34; }, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/settings/personal\u0026#34; } ] }   If any issues arise when trying to access the new design, a good start for debugging it is to run your config.json file through a json validator of your choice.     config parameter explanation     server ownCloud 10 server address   theme Theme to be used in ownCloud Web pointing to a json file inside of themes folder   auth.clientId Client ID received when adding ownCloud Web in the User Authentication section in Admin   apps List of internal extensions to be loaded   applications Additional apps and links to be displayed in the application switcher or in the user menu   applications[0].title Visible title in the application switcher or user menu, localizable   applications[1].menu Use user to move the menu item into the user menu. Defaults to app switcher     It is important that you don\u0026rsquo;t edit or place the config.json within the app folder. If you do, the integrity check of the app will fail and raise warnings.   If you use OpenID Connect you need to replace the \u0026quot;auth\u0026quot; part with following configuration:\n\u0026#34;openIdConnect\u0026#34;: { \u0026#34;metadata_url\u0026#34;: \u0026#34;\u0026lt;fqdn-of-the-identity-provider\u0026gt;/.well-known/openid-configuration\u0026#34;, \u0026#34;authority\u0026#34;: \u0026#34;\u0026lt;fqdn-of-the-identity-provider\u0026gt;\u0026#34;, \u0026#34;client_id\u0026#34;: \u0026#34;\u0026lt;client-id-from-the-identity-provider\u0026gt;\u0026#34;, \u0026#34;response_type\u0026#34;: \u0026#34;code\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;openid profile email\u0026#34; }   Integrate ownCloud Classic features in ownCloud Web     Add links to the app switcher     ownCloud Classic features that are not deeply integrated with the Classic UI (e.g., full screen apps) can be added to the ownCloud Web app switcher so that users can easily access them from ownCloud Web. You can use the following example and customize it according to your needs.\n All apps that are listed in the ownCloud Classic app switcher will be added as links to the app switcher of the new ownCloud Web automatically. All of those links will open in a new browser tab on click.  To add new elements in the app switcher, paste the following into the applications section of config.json:\n{ \u0026#34;title\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;Custom Groups\u0026#34;, \u0026#34;de\u0026#34;: \u0026#34;Benutzerdefinierte Gruppen\u0026#34; }, \u0026#34;icon\u0026#34;: \u0026#34;settings-4\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/settings/personal?sectionid=customgroups\u0026#34; }   The URL in the example might need adaptations depending on the configuration of your ownCloud Server. App switcher elements added this way will open the respective page in a new tab. This method can also be used to link external sites like Help pages or similar.  Add links to the user menu     Just like adding links to the app switcher, you can also add links to the user menu.\n{ \u0026#34;icon\u0026#34;: \u0026#34;settings-4\u0026#34;, \u0026#34;menu\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;_self\u0026#34;, \u0026#34;title\u0026#34;: { \u0026#34;de\u0026#34;: \u0026#34;Hilfe\u0026#34;, \u0026#34;en\u0026#34;: \u0026#34;Help\u0026#34; }, \u0026#34;url\u0026#34;: \u0026#34;https://help-link.example\u0026#34; } This will add a link to the specified URL in the user menu. This way, the link will open in the same tab. If you instead want to open it in a new tab, just remove the line \u0026quot;target\u0026quot;: \u0026quot;_self\u0026quot;,.\nONLYOFFICE     For ONLYOFFICE there is a native integration available for ownCloud Web when it is used with ownCloud Classic Server. It fully integrates the ONLYOFFICE Document Editors and allows users to create and open documents right from ownCloud Web.\nTo be able to use ONLYOFFICE in ownCloud Web, it is required to run\n ownCloud Server \u0026gt;= 10.8 ownCloud Web \u0026gt;= 4.0.0 ONLYOFFICE Connector for ownCloud Classic \u0026gt;= 7.1.1  Make sure that ONLYOFFICE works as expected in the Classic UI and add the following to config.json to make it available in ownCloud Web:\n\u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;onlyoffice\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/apps/onlyoffice/js/web/onlyoffice.js\u0026#34; } ]   The URL in the example might need adaptations depending on the configuration of your ownCloud Server.  Collabora Online     For Collabora Online there is a native integration available for ownCloud Web when it is used with ownCloud Classic Server. It fully integrates the Collabora Online Document Editors and allows users to create and open documents right from ownCloud Web.\nTo be able to use Collabora Online in ownCloud Web, it is required to run\n ownCloud Server \u0026gt;= 10.8 ownCloud Web \u0026gt;= 4.0.0 Collabora Online Connector for ownCloud Classic \u0026gt;= 2.7.0  Make sure that Collabora Online works as expected in the Classic UI and add the following to config.json to make it available in ownCloud Web:\n\u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;richdocuments\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/apps/richdocuments/js/richdocuments.js\u0026#34; } ]   The URL in the example might need adaptations depending on the configuration of your ownCloud Server.  Additional configuration for certain core apps     There is additional configuration available for certain core apps. You can find them listed below.\nPreview app     In case the backend has additional preview providers configured there is no mechanism, yet, to announce those to the Preview app in ownCloud Web. As an intermediate solution you can add the additional supported mimeTypes to the Preview app by following these steps:\n Remove the \u0026quot;preview\u0026quot; string from the \u0026quot;apps\u0026quot; section in your config.json file Add the following config to your config.json file:  \u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;preview\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;web-app-preview\u0026#34;, \u0026#34;config\u0026#34;: { \u0026#34;mimeTypes\u0026#34;: [\u0026#34;image/tiff\u0026#34;, \u0026#34;image/webp\u0026#34;] } } ] If you already have an \u0026quot;external_apps\u0026quot; section, just add the preview app to the list. Please adjust the \u0026quot;mimeTypes\u0026quot; list according to your additional preview providers. See https://github.com/owncloud/files_mediaviewer#supporting-more-media-types for advise on how to add preview providers to the backend.\nText-Editor app     The text-editor app provides a list of file extensions that the app is associated with, both for opening files and for creating new files. By default, only .txt and .md files appear in the file creation menu and offer the text-editor as default app on a left mouse click in the file list. For other file types the text-editor app only appears in the right mouse click context menu. In case you want to change this default set of primary file extensions for the text-editor you can overwrite it as follows:\n Remove the \u0026quot;text-editor\u0026quot; string from the \u0026quot;apps\u0026quot; section in your config.json file Add the following config to your config.json file:  \u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;text-editor\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;web-app-text-editor\u0026#34;, \u0026#34;config\u0026#34;: { \u0026#34;primaryExtensions\u0026#34;: [\u0026#34;txt\u0026#34;, \u0026#34;yaml\u0026#34;] } } ] With the above example config the text editor will offer creation of new files for .txt and .yaml files instead of .txt and .md files. Also, a left mouse click on any .txt or .yaml file will open the respective file in the text-editor app. In this example, .md files would not be opened in the text-editor by default anymore, but the text-editor will would appear in the context menu for the file as alternative app.\nIf you already have an \u0026quot;external_apps\u0026quot; section, just add the preview app to the list. Please adjust the \u0026quot;mimeTypes\u0026quot; list according to your additional preview providers. See https://github.com/owncloud/files_mediaviewer#supporting-more-media-types for advise on how to add preview providers to the backend.\n The reason why the app needs to be ported from the apps section to the external_apps section is that only the external_apps support additional configuration. There are plans to change the configuration of apps to give you a coherent admin experience in that regard.  Accessing ownCloud Web     After following all the steps, you should see a new entry in the application switcher called New Design which points to the ownCloud web.\n ","description":"Prerequisites Deploying ownCloud Web Configure oauth2 Configure ownCloud 10  Set ownCloud Web address Configure link routing Make ownCloud Web the default web interface   Configure ownCloud Web Integrate ownCloud Classic features in ownCloud Web  Add links to the app switcher Add links to the user menu ONLYOFFICE Collabora Online   Additional configuration for certain core apps  Preview app Text-Editor app   Accessing ownCloud Web      ownCloud Web is being deployed as an app to ownCloud marketplace to enable easy integration into existing ownCloud 10 instances."},{"id":7,"href":"/clients/web/docs/deployments/oc10-app/","title":"Deploy as an app in ownCloud 10","parent":"Deployments","content":"   Prerequisites Deploying ownCloud Web Configure oauth2 Configure ownCloud 10  Set ownCloud Web address Configure link routing Make ownCloud Web the default web interface   Configure ownCloud Web Integrate ownCloud Classic features in ownCloud Web  Add links to the app switcher Add links to the user menu ONLYOFFICE Collabora Online   Additional configuration for certain core apps  Preview app Text-Editor app   Accessing ownCloud Web      ownCloud Web is being deployed as an app to ownCloud marketplace to enable easy integration into existing ownCloud 10 instances. After completing this setup, ownCloud Web will be available on https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/web.\nPrerequisites      Running ownCloud 10 server with version 10.8 Installed oauth2 app Command line access to your server  Deploying ownCloud Web     Download the ownCloud Web app from the marketplace and enable it:\nocc market:install web Configure oauth2     Within the Admin page of ownCloud 10, head into User Authentication and add a new client with arbitrary name (e.g. ownCloud Web) and redirection URL https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/web/oidc-callback.html.\n  You can mark the ownCloud web client as trusted by clicking the respective checkbox so authorization after authentication gets omitted.   If you use OpenID Connect you need to add a new client for ownCloud Web to your identity provider instead.  Configure ownCloud 10     Set ownCloud Web address     To set the ownCloud Web address and to display ownCloud Web in the app switcher, add the following line into config/config.php:\n\u0026#39;web.baseUrl\u0026#39; =\u0026gt; \u0026#39;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/web\u0026#39;, Configure link routing     Administrators can optionally decide whether ownCloud Links (public and private links) should be provided by the Classic web interface or by ownCloud Web using the web.rewriteLinks option in config/config.php. The option defaults to false so that the links open in the Classic web interface. Setting it to true will redirect all links to ownCloud Web. To redirect all private and public links to ownCloud Web, add the following line into config/config.php:\n\u0026#39;web.rewriteLinks\u0026#39; =\u0026gt; true, Make ownCloud Web the default web interface     Administrators can optionally decide to make ownCloud Web the default web interface that users see after they log in to ownCloud. By default, the Classic web interface will be presented to users. To present ownCloud Web to users by default, add the following line into config/config.php:\n\u0026#39;defaultapp\u0026#39; =\u0026gt; \u0026#39;web\u0026#39;,   While it is possible to make ownCloud Web the default web interface, the decision should be carefully evaluated. Features are still being added to ownCloud Web and users might need to use the Classic web interface to do certain actions.  Configure ownCloud Web     There are a few config values which need to be set in order for ownCloud Web to work correctly. Please copy the example config below into config/config.json and adjust it for your environment:\n{ \u0026#34;server\u0026#34; : \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;\u0026#34;, \u0026#34;theme\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/themes/owncloud/theme.json\u0026#34;, \u0026#34;auth\u0026#34;: { \u0026#34;clientId\u0026#34;: \u0026#34;\u0026lt;client-id-from-oauth2\u0026gt;\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/oauth2/api/v1/token\u0026#34;, \u0026#34;authUrl\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/oauth2/authorize\u0026#34;, \u0026#34;logoutUrl\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/logout\u0026#34; }, \u0026#34;apps\u0026#34; : [ \u0026#34;files\u0026#34;, \u0026#34;preview\u0026#34;, \u0026#34;draw-io\u0026#34; ], \u0026#34;applications\u0026#34; : [ { \u0026#34;title\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;Classic Design\u0026#34;, \u0026#34;de\u0026#34;: \u0026#34;Klassisches Design\u0026#34;, \u0026#34;fr\u0026#34;: \u0026#34;Design classique\u0026#34;, \u0026#34;zh_CN\u0026#34;: \u0026#34;文件\u0026#34; }, \u0026#34;icon\u0026#34;: \u0026#34;swap-box\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/apps/files\u0026#34; }, { \u0026#34;icon\u0026#34;: \u0026#34;settings-4\u0026#34;, \u0026#34;menu\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;_self\u0026#34;, \u0026#34;title\u0026#34;: { \u0026#34;de\u0026#34;: \u0026#34;Einstellungen\u0026#34;, \u0026#34;en\u0026#34;: \u0026#34;Settings\u0026#34; }, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/index.php/settings/personal\u0026#34; } ] }   If any issues arise when trying to access the new design, a good start for debugging it is to run your config.json file through a json validator of your choice.     config parameter explanation     server ownCloud 10 server address   theme Theme to be used in ownCloud Web pointing to a json file inside of themes folder   auth.clientId Client ID received when adding ownCloud Web in the User Authentication section in Admin   apps List of internal extensions to be loaded   applications Additional apps and links to be displayed in the application switcher or in the user menu   applications[0].title Visible title in the application switcher or user menu, localizable   applications[1].menu Use user to move the menu item into the user menu. Defaults to app switcher     It is important that you don\u0026rsquo;t edit or place the config.json within the app folder. If you do, the integrity check of the app will fail and raise warnings.   If you use OpenID Connect you need to replace the \u0026quot;auth\u0026quot; part with following configuration:\n\u0026#34;openIdConnect\u0026#34;: { \u0026#34;metadata_url\u0026#34;: \u0026#34;\u0026lt;fqdn-of-the-identity-provider\u0026gt;/.well-known/openid-configuration\u0026#34;, \u0026#34;authority\u0026#34;: \u0026#34;\u0026lt;fqdn-of-the-identity-provider\u0026gt;\u0026#34;, \u0026#34;client_id\u0026#34;: \u0026#34;\u0026lt;client-id-from-the-identity-provider\u0026gt;\u0026#34;, \u0026#34;response_type\u0026#34;: \u0026#34;code\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;openid profile email\u0026#34; }   Integrate ownCloud Classic features in ownCloud Web     Add links to the app switcher     ownCloud Classic features that are not deeply integrated with the Classic UI (e.g., full screen apps) can be added to the ownCloud Web app switcher so that users can easily access them from ownCloud Web. You can use the following example and customize it according to your needs.\n All apps that are listed in the ownCloud Classic app switcher will be added as links to the app switcher of the new ownCloud Web automatically. All of those links will open in a new browser tab on click.  To add new elements in the app switcher, paste the following into the applications section of config.json:\n{ \u0026#34;title\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;Custom Groups\u0026#34;, \u0026#34;de\u0026#34;: \u0026#34;Benutzerdefinierte Gruppen\u0026#34; }, \u0026#34;icon\u0026#34;: \u0026#34;settings-4\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/settings/personal?sectionid=customgroups\u0026#34; }   The URL in the example might need adaptations depending on the configuration of your ownCloud Server. App switcher elements added this way will open the respective page in a new tab. This method can also be used to link external sites like Help pages or similar.  Add links to the user menu     Just like adding links to the app switcher, you can also add links to the user menu.\n{ \u0026#34;icon\u0026#34;: \u0026#34;settings-4\u0026#34;, \u0026#34;menu\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;_self\u0026#34;, \u0026#34;title\u0026#34;: { \u0026#34;de\u0026#34;: \u0026#34;Hilfe\u0026#34;, \u0026#34;en\u0026#34;: \u0026#34;Help\u0026#34; }, \u0026#34;url\u0026#34;: \u0026#34;https://help-link.example\u0026#34; } This will add a link to the specified URL in the user menu. This way, the link will open in the same tab. If you instead want to open it in a new tab, just remove the line \u0026quot;target\u0026quot;: \u0026quot;_self\u0026quot;,.\nONLYOFFICE     For ONLYOFFICE there is a native integration available for ownCloud Web when it is used with ownCloud Classic Server. It fully integrates the ONLYOFFICE Document Editors and allows users to create and open documents right from ownCloud Web.\nTo be able to use ONLYOFFICE in ownCloud Web, it is required to run\n ownCloud Server \u0026gt;= 10.8 ownCloud Web \u0026gt;= 4.0.0 ONLYOFFICE Connector for ownCloud Classic \u0026gt;= 7.1.1  Make sure that ONLYOFFICE works as expected in the Classic UI and add the following to config.json to make it available in ownCloud Web:\n\u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;onlyoffice\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/apps/onlyoffice/js/web/onlyoffice.js\u0026#34; } ]   The URL in the example might need adaptations depending on the configuration of your ownCloud Server.  Collabora Online     For Collabora Online there is a native integration available for ownCloud Web when it is used with ownCloud Classic Server. It fully integrates the Collabora Online Document Editors and allows users to create and open documents right from ownCloud Web.\nTo be able to use Collabora Online in ownCloud Web, it is required to run\n ownCloud Server \u0026gt;= 10.8 ownCloud Web \u0026gt;= 4.0.0 Collabora Online Connector for ownCloud Classic \u0026gt;= 2.7.0  Make sure that Collabora Online works as expected in the Classic UI and add the following to config.json to make it available in ownCloud Web:\n\u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;richdocuments\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;https://\u0026lt;your-owncloud-server\u0026gt;/apps/richdocuments/js/richdocuments.js\u0026#34; } ]   The URL in the example might need adaptations depending on the configuration of your ownCloud Server.  Additional configuration for certain core apps     There is additional configuration available for certain core apps. You can find them listed below.\nPreview app     In case the backend has additional preview providers configured there is no mechanism, yet, to announce those to the Preview app in ownCloud Web. As an intermediate solution you can add the additional supported mimeTypes to the Preview app by following these steps:\n Remove the \u0026quot;preview\u0026quot; string from the \u0026quot;apps\u0026quot; section in your config.json file Add the following config to your config.json file:  \u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;preview\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;web-app-preview\u0026#34;, \u0026#34;config\u0026#34;: { \u0026#34;mimeTypes\u0026#34;: [\u0026#34;image/tiff\u0026#34;, \u0026#34;image/webp\u0026#34;] } } ] If you already have an \u0026quot;external_apps\u0026quot; section, just add the preview app to the list. Please adjust the \u0026quot;mimeTypes\u0026quot; list according to your additional preview providers. See https://github.com/owncloud/files_mediaviewer#supporting-more-media-types for advise on how to add preview providers to the backend.\nText-Editor app     The text-editor app provides a list of file extensions that the app is associated with, both for opening files and for creating new files. By default, only .txt and .md files appear in the file creation menu and offer the text-editor as default app on a left mouse click in the file list. For other file types the text-editor app only appears in the right mouse click context menu. In case you want to change this default set of primary file extensions for the text-editor you can overwrite it as follows:\n Remove the \u0026quot;text-editor\u0026quot; string from the \u0026quot;apps\u0026quot; section in your config.json file Add the following config to your config.json file:  \u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;text-editor\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;web-app-text-editor\u0026#34;, \u0026#34;config\u0026#34;: { \u0026#34;primaryExtensions\u0026#34;: [\u0026#34;txt\u0026#34;, \u0026#34;yaml\u0026#34;] } } ] With the above example config the text editor will offer creation of new files for .txt and .yaml files instead of .txt and .md files. Also, a left mouse click on any .txt or .yaml file will open the respective file in the text-editor app. In this example, .md files would not be opened in the text-editor by default anymore, but the text-editor will would appear in the context menu for the file as alternative app.\nIf you already have an \u0026quot;external_apps\u0026quot; section, just add the preview app to the list. Please adjust the \u0026quot;mimeTypes\u0026quot; list according to your additional preview providers. See https://github.com/owncloud/files_mediaviewer#supporting-more-media-types for advise on how to add preview providers to the backend.\n The reason why the app needs to be ported from the apps section to the external_apps section is that only the external_apps support additional configuration. There are plans to change the configuration of apps to give you a coherent admin experience in that regard.  Accessing ownCloud Web     After following all the steps, you should see a new entry in the application switcher called New Design which points to the ownCloud web.\n ","description":"Prerequisites Deploying ownCloud Web Configure oauth2 Configure ownCloud 10  Set ownCloud Web address Configure link routing Make ownCloud Web the default web interface   Configure ownCloud Web Integrate ownCloud Classic features in ownCloud Web  Add links to the app switcher Add links to the user menu ONLYOFFICE Collabora Online   Additional configuration for certain core apps  Preview app Text-Editor app   Accessing ownCloud Web      ownCloud Web is being deployed as an app to ownCloud marketplace to enable easy integration into existing ownCloud 10 instances."},{"id":8,"href":"/ocis/config/","title":"Configuration","parent":"oCIS - ownCloud Infinite Scale","content":"   Configuration Framework Overview of the approach In-depth configuration Flows  Examples  Expected loading locations Only config files Using ENV variables   Workflows  Supervised Unsupervised     Shared Values  Log config keys   Default config values (in yaml)      Configuration Framework     In order to simplify deployments and development the configuration model from oCIS aims to be simple yet flexible.\nOverview of the approach      In-depth configuration     Since we include a set of predefined extensions within the single binary, configuring an extension can be done in a variety of ways. Since we work with complex types, having as many cli per config value scales poorly, so we limited the options to config files and environment variables.\nThe hierarchy is clear enough, leaving us with:\n(each element above overwrites its precedent)\n env variables extension config ocis config  This is manifested in the previous diagram. We can then speak about \u0026ldquo;configuration file arithmetics\u0026rdquo;, where resulting config transformations happen through a series of steps. An administrator must be aware of these sources, since mis-managing them can be a source of confusion, having undesired transformations on config files believed not to be applied.\nFlows     Let\u0026rsquo;s explore the various flows with examples and workflows.\nExamples     Let\u0026rsquo;s explore with examples this approach.\nExpected loading locations      docker images: /etc/ocis/ binary releases: $HOME/.ocis/config/  followed by the \u0026lt;extension name\u0026gt;.yaml, eg proxy.yaml for the extension configuration. You also can put an ocis.yaml config file to the expected loading location to use a single config file.\nYou can set another directory as config path in the environment variable OCIS_CONFIG_DIR. It will then pick the same file names, but from the folder you configured.\nOnly config files     The following config files are present in the default loading locations:\nocis.yaml\nproxy:http:addr:localhost:1111log:pretty:falsecolor:falselevel:infolog:pretty:truecolor:truelevel:infoproxy.yaml\nhttp:addr:localhost:3333Note that the extension files will overwrite values from the main ocis.yaml, causing ocis server to run with the following configuration:\nproxy:http:addr:localhost:3333log:pretty:truecolor:truelevel:infoUsing ENV variables     The logging configuration if defined in the main ocis.yaml is inherited by all extensions. It can be, however, overwritten by a single extension file if desired. The same example can be used to demonstrate environment values overwrites. With the same set of config files now we have the following command PROXY_HTTP_ADDR=localhost:5555 ocis server, now the resulting config looks like:\nproxy:http:addr:localhost:5555log:pretty:truecolor:truelevel:infoWorkflows     Since one can run an extension using the runtime (supervised) or not (unsupervised), we ensure correct behavior in both modes, expecting the same outputs.\nSupervised     You are using the supervised mode whenever you issue the ocis server command. We start the runtime on port 9250 (by default) that listens for commands regarding the lifecycle of the supervised extensions. When an extension runs supervised and is killed, the only way to provide / overwrite configuration values will be through an extension config file. This is due to the parent process has already started, and it already has its own environment.\nUnsupervised     All the points from the priority section hold true. An unsupervised extension can be started with the format: ocis [extension] i.e: ocis proxy. First, ocis.yaml is parsed, then proxy.yaml followed by environment variables.\nShared Values     When running in supervised mode (ocis server) it is beneficial to have common values for logging, so that the log output is correctly formatted, or everything is piped to the same file without duplicating config keys and values all over the place. This is possible using the global log config key:\nocis.yaml\nlog:level:errorcolor:truepretty:truefile:/var/tmp/ocis_output.logThere is, however, the option for extensions to overwrite this global values by declaring their own logging directives:\nocis.yaml\nlog:level:infocolor:falsepretty:falseOne can go as far as to make the case of an extension overwriting its shared logging config that received from the main ocis.yaml file. Because things can get out of hands pretty fast we recommend not mixing logging configuration values and either use the same global logging values for all extensions.\n When overwriting a globally shared logging values, one MUST specify all values.  Log config keys     log:level:[error | warning | info | debug ]color:[true| false ]pretty:[true| false ]file:[path/to/log/file ]# MUST not be used with pretty = trueDefault config values (in yaml)     TBD. Needs to be generated and merged with the env mappings.\n","description":"Configuration Framework Overview of the approach In-depth configuration Flows  Examples  Expected loading locations Only config files Using ENV variables   Workflows  Supervised Unsupervised     Shared Values  Log config keys   Default config values (in yaml)      Configuration Framework     In order to simplify deployments and development the configuration model from oCIS aims to be simple yet flexible."},{"id":9,"href":"/integration/file_picker/docs/getting-started/","title":"Getting Started","parent":"File Picker","content":"   Components of the File picker  File picker Location picker        ownCloud File picker is a web component which can be integrated into existing web applications. It connects to an ownCloud server and enables a user to select resources which are then provided in a response of a fired event. Visit installation to see how to integrate the File picker into your product.\nComponents of the File picker     The file picker can be used in two different variations: File picker and location picker.\nFile picker     The file picker enables users to select multiple resources and is intended to bring resources from within ownCloud into your web applications.\nLocation picker     The location picker allows only one folder to be selected and its main purpose is to enable users to save files into the connected ownCloud instance.\n","description":"Components of the File picker  File picker Location picker        ownCloud File picker is a web component which can be integrated into existing web applications. It connects to an ownCloud server and enables a user to select resources which are then provided in a response of a fired event. Visit installation to see how to integrate the File picker into your product."},{"id":10,"href":"/integration/file_picker/getting-started/","title":"Getting Started","parent":"File Picker","content":"   Components of the File picker  File picker Location picker        ownCloud File picker is a web component which can be integrated into existing web applications. It connects to an ownCloud server and enables a user to select resources which are then provided in a response of a fired event. Visit installation to see how to integrate the File picker into your product.\nComponents of the File picker     The file picker can be used in two different variations: File picker and location picker.\nFile picker     The file picker enables users to select multiple resources and is intended to bring resources from within ownCloud into your web applications.\nLocation picker     The location picker allows only one folder to be selected and its main purpose is to enable users to save files into the connected ownCloud instance.\n","description":"Components of the File picker  File picker Location picker        ownCloud File picker is a web component which can be integrated into existing web applications. It connects to an ownCloud server and enables a user to select resources which are then provided in a response of a fired event. Visit installation to see how to integrate the File picker into your product."},{"id":11,"href":"/ocis/adr/0002-persist-accounts-using-cs3-storage/","title":"2. Persist accounts in a CS3 storage","parent":"Architecture Decisions","content":" Status: accepted Deciders: @butonic, @felixboehm Date: 2020-08-21  Technical Story: File system based indexing\nContext and Problem Statement     To set up High Availability (HA) or a geo-replicated setup we need to persist accounts in a distributed way. To efficiently query the accounts by email or username, and not only by id, they need to be indexed. Unfortunately, the bleve index we currently store locally on disk cannot be shared by multiple instances, preventing a scale out deployment.\nConsidered Options      Look into distributed bleve Persist users in a CS3 storage  Decision Outcome     Chosen option: \u0026ldquo;Persist users in a CS3 storage\u0026rdquo;, because we have one service less running and can rely on the filesystem for geo-replication and HA.\nPositive Consequences      We can store accounts on the storage using the CS3 API, pushing geo-distribution to the storage layer. Backups of users and storage can be implemented without inconsistencies between using snapshots.  Negative Consequences      We need to spend time on implementing a reverse index based on files, and symlinks.  ","description":"Status: accepted Deciders: @butonic, @felixboehm Date: 2020-08-21  Technical Story: File system based indexing\nContext and Problem Statement     To set up High Availability (HA) or a geo-replicated setup we need to persist accounts in a distributed way. To efficiently query the accounts by email or username, and not only by id, they need to be indexed. Unfortunately, the bleve index we currently store locally on disk cannot be shared by multiple instances, preventing a scale out deployment."},{"id":12,"href":"/ocis/adr/0003-external-user-management/","title":"3. Use external User Management","parent":"Architecture Decisions","content":" Status: superseded by 17. Allow read only external User Management Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2022-02-08  Technical Story: Skip account-service by talking to CS3 user-api\nContext and Problem Statement     To attach metadata like shares to users ownCloud relies on persistent, non-reassignable, unique identifiers for users (and files). Email and username can change when a user changes his name. But even the OIDC sub+iss combination may change when the IdP changes. While there is an account porting protocol that describes how a relying party (RP) such as ownCloud should behave, it still requires the RP to maintain its own user identifiers.\nDecision Drivers      oCIS should be a single binary that can run out of the box without external dependencies like an LDAP server. Time: we want to build a release candidate asap. oCIS should be able to be easily integrated with standard user management components  Considered Options      Accounts service wraps LDAP GLAuth wraps accounts service  Decision Outcome     Chosen option: \u0026ldquo;Move accounts functionality to GLAuth and name it accounts\u0026rdquo;, by moving the existing accounts service file based persistence to GLAuth and use it as a drop in replacement for an LDAP server. The reverse index and web UI existing in the accounts service will move as well in order to make GLAuth a standalone, small scale user management with write capabilities.\nProduct summary      GLAuth is a drop in user management for small scale deployments that do not rely on an actual LDAP server. oCIS admins can either use the web UI to manage users in GLAuth or use existing tools in their IDM. We hide the complexity by embedding an OpenID Provider, an LDAP server and a user management web UI.  Resulting deployment options      Use internal user management  Recommended for small scale use cases and simple deployments Users, groups and roles are stored and managed within GLAuth   Use external user management  Recommended for mid and large scale use cases Users, groups and roles are stored and managed within an external LDAP / AD / IDM Separate oCIS and LDAP admin: oCIS admin relies on the LDAP admin to manage users   User permissions for roles are always managed in oCIS (settings service) because they are specific to oCIS  Resulting technical implications      Make the file based reverse index a standalone library Contribute to GLAuth  Add ms graph based rest API to manage users, groups and roles (the LDAP lib is currently readonly) Add web UI to glauth that uses the ms graph based rest API to manage users Add a backend that uses the file based reverse index, currently living in the oCIS accounts service Move fallback mechanism from ocis/glauth service to upstream GLAuth to support multiple LDAP servers  Make it a chain to support more than two LDAP servers Document the implications for merging result sets when searching for recipients At least one writeable backend is needed to support creating guest accounts     Make all services currently using the accounts service talk to the CS3 userprovider To support multiple LDAP servers we need to move the fallback mechanism in ocis/glauth service to upstream GLAuth The current CS3 API for user management should be enriched with pagination, field mask and a query language as needed properly register an auxiliary LDAP schema that adds an ownCloudUUID attribute to users and groups  Positive Consequences      The accounts service (which is our drop in LDAP solution) can be dropped. The CS3 userprovider service becomes the only service dealing with users. No sync  Negative Consequences      If users want to store users in their IDM and at the same time guests in a separate user management we need to implement GLAuth backends that support more than one LDAP server.  Pros and Cons of the Options     GLAuth wraps accounts service     Currently, the accounts service is the source of truth and we use it to implement user management.\n Good, because it solves the problem of storing and looking up an owncloud UUID for a user (and group) Good, because we can manage users out of the box Good, because we can persist accounts in a CS3 storage provider Bad, because it maintains a separate user repository: it needs to either learn or sync users.  Move accounts functionality to GLAuth and name it accounts     We should use an existing LDAP server and make GLAuth a drop in replacement for it.\n Good, because we can use an existing user repository (an LDAP server), no need to sync or learn users. Good, because admins can rely on existing user management tools. Good, because we would have a clear separation of concerns:  users reside in whatever repository, typically an LDAP server  could be an existing LDAP server or AD could be our embeddable drop in glauth server   we use a service to wrap the LDAP server with other APIs:  ms graph API - ODATA based restful API, SCIM - designed to manage user identities, supported by some IDPs, the current accounts API (which is a protobuf spec following the ms graph API)   our account management UI can use the ms graph based API service which can have different backends  an existing LDAP server our drop in glauth server (which might serve the ms graph based API itself) the CS3 API + a future guest provisioning API + a future CS3 user provisioning API (or generic space provisioning)   all oCIS services can use the service registry to look up the accounts service that provides an internal API  could be the CS3 user provider (and API) could be the internal protobuf accounts API   introduce a new guest provisioning API to CS3 which properly captures our requirement to have them in the user repository  guests need to be made available to the firewall storages like EOS that integrate with the os for acl based file permissions need a numeric user and group id     Good, because we can use the CS3 user provider with the existing LDAP / rest driver. Bad, because oCIS admins may not have the rights to manage role assignments. (But this is handled at a different department.) Bad, because oCIS admins may not have the rights to disable users if an external LDAP is used instead of the drop in GLAuth.  Links      supersedes ADR-0001 superseded by 17. Allow read only external User Management  ","description":"Status: superseded by 17. Allow read only external User Management Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2022-02-08  Technical Story: Skip account-service by talking to CS3 user-api\nContext and Problem Statement     To attach metadata like shares to users ownCloud relies on persistent, non-reassignable, unique identifiers for users (and files). Email and username can change when a user changes his name. But even the OIDC sub+iss combination may change when the IdP changes."},{"id":13,"href":"/integration/file_picker/docs/installation/","title":"Installation","parent":"File Picker","content":"   Setup authentication  OpenID Connect config OAuth2 config Pass bearer token   Install File picker package Select browser storage Integrate in HTML page with vanilla JavaScript Integrate in Vue web application Set correct variation Theming Buttons and events  Select button Cancel button        Setup authentication     The config for the server backend and authentication needs to be provided in json format. The full set of options is listed below in two examples. One for authentication with OAuth2 and one with OpenID Connect.\nThere are different ways of providing the config JSON to the file picker:\n As a JSON object via a prop called configObject As a JSON string via the same prop (configObject) As a URL via a prop called configLocation. This requires full URL address (e.g. https://\u0026lt;your-server\u0026gt;/\u0026lt;path-to-the-config\u0026gt;) If none of the props (configObject or configLocation) is defined, the file picker has a configLocation of https://\u0026lt;your-server\u0026gt;/file-picker-config.json as fallback  Location of the file can be provided via a prop called configLocation. This requires full URL address (e.g. https://\u0026lt;your-server\u0026gt;/\u0026lt;path-to-the-config\u0026gt;). If the prop is not defined, the location will fallback to https://\u0026lt;your-server\u0026gt;/file-picker-config.json. The config can point to both oauth2 and OIDC. You can take a look at the following example to see how OIDC can be defined:\nOpenID Connect config     { \u0026#34;server\u0026#34;: \u0026#34;\u0026lt;owncloud-server\u0026gt;\u0026#34;, \u0026#34;openIdConnect\u0026#34;: { \u0026#34;metadata_url\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;/.well-known/openid-configuration\u0026#34;, \u0026#34;authority\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;\u0026#34;, \u0026#34;client_id\u0026#34;: \u0026#34;\u0026lt;client-id\u0026gt;\u0026#34;, \u0026#34;response_type\u0026#34;: \u0026#34;code\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;openid profile email\u0026#34; } } OAuth2 config     { \u0026#34;server\u0026#34;: \u0026#34;\u0026lt;owncloud-server\u0026gt;\u0026#34;, \u0026#34;auth\u0026#34;: { \u0026#34;clientId\u0026#34;: \u0026#34;\u0026lt;oauth2-client-id\u0026gt;\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;/index.php/apps/oauth2/api/v1/token\u0026#34;, \u0026#34;authUrl\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;/index.php/apps/oauth2/authorize\u0026#34; } } Pass bearer token     In case you already have a bearer token and want to skip the whole authorization process inside of the File picker, you can pass it to the component via prop called bearerToken.\nInstall File picker package     To integrate File picker into your own product, you can install it via one of the following commands:\nnpm install @ownclouders/file-picker --save # OR yarn add @ownclouders/file-picker Select browser storage     In order to authorize any request to the ownCloud server, we are storing the Bearer token in a browser storage. By default, it is the session storage. As browsers are adding more strict policies when it comes to blocking third party cookies, your users might experience issues with the token not being saved in the storage. For this reason, it is possible to specify a storage name in the config of File picker. To make it possible to run the File picker inside of an iframe, specify storage: memory.\n If the memory storage is used, it is not persisted in the session. This leads to users having to authorize again after a refresh has happened.   Users might still be experiencing issues with the authentication even if the memory storage is used. That can happen due to the authentication popup needing to trigger a callback in the File picker. To make sure it will work as supposed, be sure to set correct CORS headers.  Integrate in HTML page with vanilla JavaScript     When including File picker in an HTML page, it is important to include Vue.js as well. In this case, we will import it via unpkg. Without this, the component won\u0026rsquo;t work. Vue needs to be included also if you\u0026rsquo;re importing the File picker into a web application built with other framework than Vue (e.g. React, Angular).\n... \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;File picker example\u0026lt;/title\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/vue\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/file-picker/dist/wc/file-picker.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; ... \u0026lt;file-picker id=\u0026#34;file-picker\u0026#34; variation=\u0026#34;resource\u0026#34;\u0026gt;\u0026lt;/file-picker\u0026gt; Integrate in Vue web application     There is a caveat when using the File picker inside an existing Vue application. Since the web component will be imported before Vue, we need to define it as a global variable on our own. This requires us to separate the import of Vue into a bootstrap file.\nvue.js:\nimport Vue from \u0026#39;vue\u0026#39; window.Vue = Vue main.js:\nimport Vue from \u0026#39;./vue\u0026#39; new Vue(...) \u0026lt;template\u0026gt; \u0026lt;file-picker variation=\u0026#34;location\u0026#34; /\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import FilePicker from \u0026#39;@ownclouders/file-picker\u0026#39; import \u0026#39;@ownclouders/file-picker/dist/lib/file-picker.css\u0026#39; export default: { components: { FilePicker } } \u0026lt;/script\u0026gt; Set correct variation     As described in Getting Started, File picker comes in two variations. To define which one should be used, you need to pass it to the component via its variation property. Valid values are:\n resource - File picker location - Location picker  Theming     File picker comes by default with extracted stylesheet which combines our ownCloud Design System and a few custom styles. If you want to create a custom theme, do not include our stylesheet and create a custom one using File picker selectors.\nButtons and events     The wording of buttons can be customized.\nSelect button     The file picker has a button in the top right for emitting an event with the selected location or resource, depending on the configured variation. This button has default labels, depending on the chosen variation. However, it is possible to define a different button label by setting select-btn-label=\u0026quot;\u0026lt;your select button label\u0026gt;\u0026quot;. Using the select button will emit an event with the name selectResources.\nCancel button     Cancellation for the file picker is disabled by default. When a label is provided, the file picker renders a cancel button on the left side of the select button. This can be achieved by setting cancel-btn-label=\u0026quot;\u0026lt;your cancel button label\u0026gt;\u0026quot;. This will also add a keyboard event on the ESC key. Using the cancel button or the ESC key on the keyboard will emit an event with the name cancel.\n","description":"Setup authentication  OpenID Connect config OAuth2 config Pass bearer token   Install File picker package Select browser storage Integrate in HTML page with vanilla JavaScript Integrate in Vue web application Set correct variation Theming Buttons and events  Select button Cancel button        Setup authentication     The config for the server backend and authentication needs to be provided in json format."},{"id":14,"href":"/integration/file_picker/installation/","title":"Installation","parent":"File Picker","content":"   Setup authentication  OpenID Connect config OAuth2 config Pass bearer token   Install File picker package Select browser storage Integrate in HTML page with vanilla JavaScript Integrate in Vue web application Set correct variation Theming Buttons and events  Select button Cancel button        Setup authentication     The config for the server backend and authentication needs to be provided in json format. The full set of options is listed below in two examples. One for authentication with OAuth2 and one with OpenID Connect.\nThere are different ways of providing the config JSON to the file picker:\n As a JSON object via a prop called configObject As a JSON string via the same prop (configObject) As a URL via a prop called configLocation. This requires full URL address (e.g. https://\u0026lt;your-server\u0026gt;/\u0026lt;path-to-the-config\u0026gt;) If none of the props (configObject or configLocation) is defined, the file picker has a configLocation of https://\u0026lt;your-server\u0026gt;/file-picker-config.json as fallback  Location of the file can be provided via a prop called configLocation. This requires full URL address (e.g. https://\u0026lt;your-server\u0026gt;/\u0026lt;path-to-the-config\u0026gt;). If the prop is not defined, the location will fallback to https://\u0026lt;your-server\u0026gt;/file-picker-config.json. The config can point to both oauth2 and OIDC. You can take a look at the following example to see how OIDC can be defined:\nOpenID Connect config     { \u0026#34;server\u0026#34;: \u0026#34;\u0026lt;owncloud-server\u0026gt;\u0026#34;, \u0026#34;openIdConnect\u0026#34;: { \u0026#34;metadata_url\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;/.well-known/openid-configuration\u0026#34;, \u0026#34;authority\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;\u0026#34;, \u0026#34;client_id\u0026#34;: \u0026#34;\u0026lt;client-id\u0026gt;\u0026#34;, \u0026#34;response_type\u0026#34;: \u0026#34;code\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;openid profile email\u0026#34; } } OAuth2 config     { \u0026#34;server\u0026#34;: \u0026#34;\u0026lt;owncloud-server\u0026gt;\u0026#34;, \u0026#34;auth\u0026#34;: { \u0026#34;clientId\u0026#34;: \u0026#34;\u0026lt;oauth2-client-id\u0026gt;\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;/index.php/apps/oauth2/api/v1/token\u0026#34;, \u0026#34;authUrl\u0026#34;: \u0026#34;\u0026lt;your-server\u0026gt;/index.php/apps/oauth2/authorize\u0026#34; } } Pass bearer token     In case you already have a bearer token and want to skip the whole authorization process inside of the File picker, you can pass it to the component via prop called bearerToken.\nInstall File picker package     To integrate File picker into your own product, you can install it via one of the following commands:\nnpm install @ownclouders/file-picker --save # OR yarn add @ownclouders/file-picker Select browser storage     In order to authorize any request to the ownCloud server, we are storing the Bearer token in a browser storage. By default, it is the session storage. As browsers are adding more strict policies when it comes to blocking third party cookies, your users might experience issues with the token not being saved in the storage. For this reason, it is possible to specify a storage name in the config of File picker. To make it possible to run the File picker inside of an iframe, specify storage: memory.\n If the memory storage is used, it is not persisted in the session. This leads to users having to authorize again after a refresh has happened.   Users might still be experiencing issues with the authentication even if the memory storage is used. That can happen due to the authentication popup needing to trigger a callback in the File picker. To make sure it will work as supposed, be sure to set correct CORS headers.  Integrate in HTML page with vanilla JavaScript     When including File picker in an HTML page, it is important to include Vue.js as well. In this case, we will import it via unpkg. Without this, the component won\u0026rsquo;t work. Vue needs to be included also if you\u0026rsquo;re importing the File picker into a web application built with other framework than Vue (e.g. React, Angular).\n... \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;File picker example\u0026lt;/title\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/vue\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/file-picker/dist/wc/file-picker.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; ... \u0026lt;file-picker id=\u0026#34;file-picker\u0026#34; variation=\u0026#34;resource\u0026#34;\u0026gt;\u0026lt;/file-picker\u0026gt; Integrate in Vue web application     There is a caveat when using the File picker inside an existing Vue application. Since the web component will be imported before Vue, we need to define it as a global variable on our own. This requires us to separate the import of Vue into a bootstrap file.\nvue.js:\nimport Vue from \u0026#39;vue\u0026#39; window.Vue = Vue main.js:\nimport Vue from \u0026#39;./vue\u0026#39; new Vue(...) \u0026lt;template\u0026gt; \u0026lt;file-picker variation=\u0026#34;location\u0026#34; /\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import FilePicker from \u0026#39;@ownclouders/file-picker\u0026#39; import \u0026#39;@ownclouders/file-picker/dist/lib/file-picker.css\u0026#39; export default: { components: { FilePicker } } \u0026lt;/script\u0026gt; Set correct variation     As described in Getting Started, File picker comes in two variations. To define which one should be used, you need to pass it to the component via its variation property. Valid values are:\n resource - File picker location - Location picker  Theming     File picker comes by default with extracted stylesheet which combines our ownCloud Design System and a few custom styles. If you want to create a custom theme, do not include our stylesheet and create a custom one using File picker selectors.\nButtons and events     The wording of buttons can be customized.\nSelect button     The file picker has a button in the top right for emitting an event with the selected location or resource, depending on the configured variation. This button has default labels, depending on the chosen variation. However, it is possible to define a different button label by setting select-btn-label=\u0026quot;\u0026lt;your select button label\u0026gt;\u0026quot;. Using the select button will emit an event with the name selectResources.\nCancel button     Cancellation for the file picker is disabled by default. When a label is provided, the file picker renders a cancel button on the left side of the select button. This can be achieved by setting cancel-btn-label=\u0026quot;\u0026lt;your cancel button label\u0026gt;\u0026quot;. This will also add a keyboard event on the ESC key. Using the cancel button or the ESC key on the keyboard will emit an event with the name cancel.\n","description":"Setup authentication  OpenID Connect config OAuth2 config Pass bearer token   Install File picker package Select browser storage Integrate in HTML page with vanilla JavaScript Integrate in Vue web application Set correct variation Theming Buttons and events  Select button Cancel button        Setup authentication     The config for the server backend and authentication needs to be provided in json format."},{"id":15,"href":"/ocis/adr/0004-support-hot-migration/","title":"4. Support Hot Migration","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2021-03-16  Technical Story: [description | ticket/issue URL]\nContext and Problem Statement     Migration is one of the most important topics of the oCIS story. We need to provide a concept how to migrate from oC10 to oCIS.\nDecision Drivers      Do not lose file blob or metadata.  To prevent a sync surge from clients the etag for files should be migrated. To prevent internal links from breaking or pointing to wrong files the file id of existing files needs to be migrated. To prevent data loss trash and version blobs should be migrated.   Existing shares like public links and federated shares must remain functional after the migration.  To prevent internal shares the share type, permissions and expiry needs to be migrated. To prevent public links from breaking the url token, permissions, expiry and password needs to be migrated. What about federated shares? What about additional share permissions, e.g. comment on office files?   Legacy clients need to keep working  To keep existing clients working the remote.php/webdav and dav/files/\u0026lt;username\u0026gt; webdav endpoints as well as the ocs API need to be available.   What about app passwords/tokens?  Considered Options      Cold Migration: migrate data while systems are not online, so no user interaction happens in between. Hot Migration: one or both systems are online during migration.  Decision Outcome     Chosen option: \u0026ldquo;[option 1]\u0026rdquo;, because [justification. e.g., only option, which meets k.o. criterion decision driver | which resolves force force | … | comes out best (see below)].\nPositive Consequences      [e.g., improvement of quality attribute satisfaction, follow-up decisions required, …] …  Negative Consequences      [e.g., compromising quality attribute, follow-up decisions required, …] …  Pros and Cons of the Options     Cold Migration     The migration happens while the service is offline. File metadata, blobs and share data is exported from ownCloud 10 and imported in oCIS. This can happen user by user, where every user export would contain the file blobs, their metadata, trash, versions, shares and all metadata that belongs to the user\u0026rsquo;s storage. To prevent group shares from breaking, users in the same groups must be migrated in batch. Depending on the actual group shares in an instance this may effectively require a complete migration in a single batch.\n Good, because oCIS can be tested in a staging system without writing to the production system. Good, because file layout on disk can be changed to support new storage driver capabilities. Bad, because the export and import might require significant amounts of storage. Bad, because a rollback to the state before the migration might cause data loss of the changes that happened in between. Bad, because the cold migration can mean significant downtime.  Hot Migration     The migration happens in subsequent stages while the service is online.\n Good, because the admin can migrate users from old to new backend in a controlled way. Good, because users and admins can learn to trust the new system. Good, because there can be preparations even long before the migrations happens in parallel on the oC10 codebase, i.e. addition of metadata that is needed while the system operates. Good, because the downtime of the system can be fairly small. Bad, because it is more complex and might drag on for a long time.  Links      Clarify responsibilities of share providers and storage providers · Issue #1377 · cs3org/reva (github.com) because the share manager for oCIS should store share information on the storage system. And storage provider should persist share creator · Issue #93 · cs3org/cs3apis (github.com) finally: eos: store share id in inherited xattr · Issue #543 · cs3org/reva (github.com)  ","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2021-03-16  Technical Story: [description | ticket/issue URL]\nContext and Problem Statement     Migration is one of the most important topics of the oCIS story. We need to provide a concept how to migrate from oC10 to oCIS.\nDecision Drivers      Do not lose file blob or metadata.  To prevent a sync surge from clients the etag for files should be migrated."},{"id":16,"href":"/integration/file_picker/accessing-resources/","title":"Accessing Resources","parent":"File Picker","content":"   Access resources      If using File picker as a web component, it is returning selected resources via events called select and update. To access them, you need to set an event listener where you\u0026rsquo;ll be able to get them as part of the response of the callback function.\nAccess resources     \u0026lt;file-picker id=\u0026#34;file-picker\u0026#34; variation=\u0026#34;resource\u0026#34;\u0026gt;\u0026lt;/file-picker\u0026gt; \u0026lt;script\u0026gt; const item = document.getElementById(\u0026#39;file-picker\u0026#39;) let resources = [] item.addEventListener(\u0026#39;select\u0026#39;, event =\u0026gt; { resources = event.detail[0] }) \u0026lt;/script\u0026gt; ","description":"Access resources      If using File picker as a web component, it is returning selected resources via events called select and update. To access them, you need to set an event listener where you\u0026rsquo;ll be able to get them as part of the response of the callback function.\nAccess resources     \u0026lt;file-picker id=\u0026#34;file-picker\u0026#34; variation=\u0026#34;resource\u0026#34;\u0026gt;\u0026lt;/file-picker\u0026gt; \u0026lt;script\u0026gt; const item = document.getElementById(\u0026#39;file-picker\u0026#39;) let resources = [] item."},{"id":17,"href":"/integration/file_picker/docs/accessing-resources/","title":"Accessing Resources","parent":"File Picker","content":"   Access resources      If using File picker as a web component, it is returning selected resources via events called select and update. To access them, you need to set an event listener where you\u0026rsquo;ll be able to get them as part of the response of the callback function.\nAccess resources     \u0026lt;file-picker id=\u0026#34;file-picker\u0026#34; variation=\u0026#34;resource\u0026#34;\u0026gt;\u0026lt;/file-picker\u0026gt; \u0026lt;script\u0026gt; const item = document.getElementById(\u0026#39;file-picker\u0026#39;) let resources = [] item.addEventListener(\u0026#39;select\u0026#39;, event =\u0026gt; { resources = event.detail[0] }) \u0026lt;/script\u0026gt; ","description":"Access resources      If using File picker as a web component, it is returning selected resources via events called select and update. To access them, you need to set an event listener where you\u0026rsquo;ll be able to get them as part of the response of the callback function.\nAccess resources     \u0026lt;file-picker id=\u0026#34;file-picker\u0026#34; variation=\u0026#34;resource\u0026#34;\u0026gt;\u0026lt;/file-picker\u0026gt; \u0026lt;script\u0026gt; const item = document.getElementById(\u0026#39;file-picker\u0026#39;) let resources = [] item."},{"id":18,"href":"/ocis/guides/ocis-and-containers/","title":"oCIS and Containers","parent":"Guides","content":"Cloud Native     Why do we recommend to work with containers?\n Lightweight     Containers are more lightweight than VMs. It is easier to work with shared volumes and networks because they are isolated from the host system.  Dependencies     The container images have all dependencies installed and the maintainer takes care for keeping them up-to-date.  Scaling     In addition to that, containers help with scaling. You can run multiple instances of one container and distribute them across hosts.  Docker compose     For oCIS deployments you often need multiple services. These services need to share resources like volumes and networks. If you do not use any orchestration tool, you would end up writing bash scripts to create and update containers and volumes and connect them via networks. This is what orchestration tools like docker compose can do for you. You define a service mesh using .yaml files and the tool tries to run and maintain that. You gain more value and a version history by using a version control system. Your deployment configuration is fully written down as a spec and you will never touch any system directly and change the config manually.\nKubernetes     Containers are also used in kubernetes. Kubernetes is part of a huge ecosystem and is founded on best-of-breed practises to orchestrate large scale container applications and services.\noCIS and Containers     oCIS was developed as microservices. We do not scale the whole system as a monolith but we scale the individual services.\n","description":"Cloud Native     Why do we recommend to work with containers?\n Lightweight     Containers are more lightweight than VMs. It is easier to work with shared volumes and networks because they are isolated from the host system.  Dependencies     The container images have all dependencies installed and the maintainer takes care for keeping them up-to-date.  Scaling     In addition to that, containers help with scaling."},{"id":19,"href":"/ocis/adr/0005-cs3-api-account-management/","title":"5. Account Management through CS3 API","parent":"Architecture Decisions","content":" Status: proposed Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-04-12  Technical Story: Write only management API for User and Group resources\nContext and Problem Statement     What would be a more effective way of using network resources and handle account management within the oCIS-Reva ecosystem? Separating account management at the service level is pragmatic and allows for fast iterations, but also steadily accumulates inconsistencies and bloats technical debt.\nDecision Drivers      Reduce number of network calls. Reduce number of services (merge Account + GLAuth from ADR-0003). Formalize account management at the API level.  Considered Options      Account management delegated to vendors. Add account management to the CS3 API.  Decision Outcome     Chosen option: \u0026ldquo;Add account management to the CS3 API\u0026rdquo;. Making the API declare an API for account management will not only allow a deployment to fail fast (as in: the management node is not running) but would also centralize all management operations that should happen to be constrained within the Reva context. Constrained operations SHOULD be by definition more secure, or at least as secure as the rest of the system.\nPositive Consequences      More resilient API.  Because account management is considered a \u0026ldquo;first class citizen\u0026rdquo; changes are forced to go through a more exhaustive revision process.   Removing Accounts from search users1. Replace the provisioning API in favor of the new Reva Admin node.  (1) the current vendor implementation of searching a user (i.e: when sharing a resource) relies directly on the accounts service, since this is the only source of truth. Searching a user looks like:\n┌────────────────────────────────────────┐ │user search (no LDAP) │ │ │ │ ┌──────────┐ │ │ │ │ │ │ │ proxy │ │ │ │ │ ┌ ─ ─ ─ ─ ─ ┐ │ │ └──────────┘ go-micro │ │ ▲ │ │ │ │ │ Λ │ │ ▼ │ ╱ ╲ │ │ │ ┌──────────┐ ╱ ╲ │ │ │ │ │ ╱ ╲ │ │ │ │ ocs │◀──(1)───▶registry▏ │ │ │ │ │ ╲ ╱ │ │ │ └──────────┘ ╲ ╱ │ │ ▲ │ ╲ ╱ │ │ │ │ V │ │ │ │ │ │ │ │ │ │ │ └ ─ ─ ─ ─ ─ ┘ │ │ │ │ │ │ │ │ │ ┌──────────┐ │ │ │ │ │ │ │ └─────────────▶│ accounts │ │ │ │ │ │ │ └──────────┘ │ │ │ │ │ │(1) ocs requests a connection to the │ │accounts service to the registry │ │ │ └────────────────────────────────────────┘ Whereas, as a result of ADR-0003 and this ADR, we can simplify and improve this design:\n┌─────────────────────────────────────────────┐ │user search │ │ │ │ │ │ ┌──────────┐ │ │ │ │ │ │ │ proxy │ │ │ │ │ │ │ └──────────┘ │ │ │ │ │ ▼ │ │ ┌──────────┐ │ │ │ │ │ │ │ ocs │ │ │ │ │ │ │ └──────────┘ │ │ │ │ │ │ │ │ ┌ ─ ─ ─ ─ ─│─ ─ ─ ─ ┌ ─ ─ ─ ─ ─ ─ ─ ─ ┐ │ │ reva ▼ │ IDM │ │ │ ┌──────────┐ │ ┌──────────┐ │ │ │ │ │ │ │ │ │ │ │ │ users │◀─────┼──▶│ GLAuth │ │ │ │ │ │ │ │ │ │ │ │ └──────────┘ │ └──────────┘ │ │ │ │ │ │ └ ─ ─ ─ ─ ─ ─ ─ ─ ─ └ ─ ─ ─ ─ ─ ─ ─ ─ ┘ │ │ │ └─────────────────────────────────────────────┘ And instead rely on the already existing Reva users provider.\nPros and Cons of the Options     Account management delegated to vendors      Good, because it allows for fast iterations. Bad, because account management happens outside of the Reva process. This can potentially end up in invalid account creation / deletion / updates.  An example with the existing Accounts service is that any client can fire CRUD accounts requests to the Accounts service as long as the client knows where the server is running and provides with an Authorization header (only required by the proxy). This request totally bypasses Reva middlewares and therefore any security measures that should be enforced by the entire system.   Bad, because leaves teams the task of designing and implementing a way of dealing with account management. Ideally one schema should be provided / suggested.  Creating an account using the first option looks currently is implemented in vendors as:\n┌──────────────────────────────────────────────────┐ │ creating a user (webui) │ │ │ │ ┌──────────┐ │ │ │ │ │ │ │ proxy │ │ │ │ │ │ │ └──────────┘ │ │ │ │ │ │ │ │ /api/v0/accounts/accounts-create │ │ │ │ │ │ │ │ │ │ │ ▼ │ │ ┌──────────┐ │ │ │ │ │ │ │ accounts │ │ │ │ │ │ │ └──────────┘ │ │ │ │ note that while doing CRUD operations changes │ │ are instantly reflected for the IDP since out of │ │ the box oCIS uses an accounts backend for │ │ GLAuth. │ └──────────────────────────────────────────────────┘ As explained before, during this flow no Reva middlewares are run. Creating an account will only use the embedded accounts js file alongside a minted jwt token (by the oCIS proxy) to communicate with the accounts service.\nAdd account management to the CS3 API      Good, because it solidifies what the CS3 API can or cannot do, and account management should be handled at the API level since ultimately accounts would contain a mix of required CS3 and vendor-specific attributes. Good, because it centralizes account management and constrains it within the Reva boundaries. Good, because there is a clear separation of concerns on what is accounts management logic. Good, because we already designed a similar API for the accounts service the only difference being we (vendors) define their own messages.  The API would fully include CRUD methods   Bad, because development cycles are larger.  an example flow will be: update api \u0026gt; run prototool \u0026gt; publish language specific packages \u0026gt; update dependencies to fetch latest version of the package \u0026gt; utilize the new changes.    The new account management workflow will result in:\n┌───────────────────────────────────────────────────┐ │creating a user (webui) │ │ - maintain the same route for compatibility │ │ │ │ ┌──────────┐ │ │ │ │ │ │ │ proxy │ │ │ │ │ │ │ └──────────┘ │ │ │ │ │ │ │ │ /api/v0/accounts/accounts-create │ │ │ │ │ │ │ │ ┌ ─ ─ ─ ─ ─│─ ─ ─ ─ ─ ─ ─ ─ ┐ ┌ ─ ─ ─ ─ ─ ─ ─ ─ │ │ Reva │ IDM │ │ │ │ │ │ │ │ │ ▼ │ │ │ │ ┌──────────┐ │ │ ┌──────────┐ │ │ │ │ │ │ │ │ │ │ │ admin │───────────┼──┼──▶│ GLAuth │ │ │ │ │ │ │ │ │ │ │ └──────────┘ │ │ └──────────┘ │ │ │ │ │ │ │ │ │ │ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┘ │ │ │ │ │ │ │ │ │ │ │ │ │ │ an example of a driver could be GLAuth │ │ implementing the user management portion of the │ │ GraphAPI │ └───────────────────────────────────────────────────┘ This flow allows Reva and oCIS Proxy to run any middleware logic in order to validate a request. The communication between the proposed Admin api (CS3 API messages) and the IDM (GLAuth) are specific to the drivers.\n","description":"Status: proposed Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-04-12  Technical Story: Write only management API for User and Group resources\nContext and Problem Statement     What would be a more effective way of using network resources and handle account management within the oCIS-Reva ecosystem? Separating account management at the service level is pragmatic and allows for fast iterations, but also steadily accumulates inconsistencies and bloats technical debt."},{"id":20,"href":"/integration/file_picker/customisations/","title":"Customising","parent":"File Picker","content":"   Variation  File Picker Location Picker   Actions  Select Cancel        It is possible to customise certain parts of the File Picker with the help of props.\nVariation     File picker comes in two different variations - File Picker and Location Picker. To specify which one should be used, set property variation to resource or location.\nFile Picker     File picker variation is used to select resources from within your ownCloud instace. It is possible to select multiple files and folders.\nLocation Picker     Location picker variation is used to select location inside of your ownCloud instance. It is only possible to select one folder.\nActions     If you do not wish to include the default File Picker actions (select and cancel), you can hide both of them.\nSelect     Select resources/location button can be hidden by setting prop isSelectBtnDisplayed to false.\nCancel     Hiding Cancel button slightly differes to the Select button. If you do not wish to display the cancel button, simply leave out any value for prop cancelBtnLabel and the component will be hidden by default.\n","description":"Variation  File Picker Location Picker   Actions  Select Cancel        It is possible to customise certain parts of the File Picker with the help of props.\nVariation     File picker comes in two different variations - File Picker and Location Picker. To specify which one should be used, set property variation to resource or location."},{"id":21,"href":"/integration/file_picker/docs/customisations/","title":"Customising","parent":"File Picker","content":"   Variation  File Picker Location Picker   Actions  Select Cancel        It is possible to customise certain parts of the File Picker with the help of props.\nVariation     File picker comes in two different variations - File Picker and Location Picker. To specify which one should be used, set property variation to resource or location.\nFile Picker     File picker variation is used to select resources from within your ownCloud instace. It is possible to select multiple files and folders.\nLocation Picker     Location picker variation is used to select location inside of your ownCloud instance. It is only possible to select one folder.\nActions     If you do not wish to include the default File Picker actions (select and cancel), you can hide both of them.\nSelect     Select resources/location button can be hidden by setting prop isSelectBtnDisplayed to false.\nCancel     Hiding Cancel button slightly differes to the Select button. If you do not wish to display the cancel button, simply leave out any value for prop cancelBtnLabel and the component will be hidden by default.\n","description":"Variation  File Picker Location Picker   Actions  Select Cancel        It is possible to customise certain parts of the File Picker with the help of props.\nVariation     File picker comes in two different variations - File Picker and Location Picker. To specify which one should be used, set property variation to resource or location."},{"id":22,"href":"/ocis/adr/0006-service-discovery/","title":"6. Service Discovery within oCIS and Reva","parent":"Architecture Decisions","content":" Status: accepted Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-04-19  Technical Story: Introduce Named Services.\nContext and Problem Statement     Reva relies heavily on config files. A known implication of this approach are having to know a-priori where a service is running (host + port). We want to move away from hardcoded values and rely instead on named services for service discovery. Furthermore, we would like both platforms (Reva + oCIS) to have the same source of truth at any given time, not having one to notify the other whenever a service status changes.\nDecision Drivers      Avoid a-priori knowledge of services. Ease of scalability. Always up-to-date knowledge of the running services on a given deployment (a service registry doesn\u0026rsquo;t have to necessarily be running on the same machine / network)  Considered Options      Hardcoded tuples of hostname + port Dynamic service registration  Decision Outcome     Chosen option: \u0026ldquo;Dynamic service registration\u0026rdquo;. There were some drawbacks regarding this due to introducing go-micro to Reva was from start an issue. Given the little usage of go-micro we need, we decided instead to define our very own Registry interface on Reva and extended the runtime arguments to allow for injecting a registry.\nPositive Consequences      Having dynamic service registration delegates the entire lifecycle of finding a process to the service registry. Removing a-priori knowledge of hostname + port for services. Marrying go-micro\u0026rsquo;s registry and a newly defined registry abstraction on Reva. We will embrace go-micro interfaces by defining a third merger interface in order to marry go-micro registry and reva registry. The ability to fetch a service node relying only on its name (i.e: com.owncloud.proxy) and not on a tuple hostname + port that we rely on being preconfigured during runtime. Conceptually speaking, a better framework to tie all the services together. Referring to services by names is less overall confusing than having to add a service name + where it is running. A registry is agnostic to \u0026ldquo;where is it running\u0026rdquo; because it, by definition, keeps track of this specific question, so when speaking about design or functionality, it will ease communication.  Pros and Cons of the Options     Hardcoded tuples of hostname + port      Good, because firewalls are easier to configure since IP are static. Good, because the mental model required is easier to grasp as IP addresses can be easily bundled. Bad, because it requires thorough planning of ports.  Dynamic service registration      Good, because it abstracts the use of service lookup away to registry logic from the admin or developer. Good, because it allows for, through interfaces, registry injection  This means we can have a service registry that we extensively use in oCIS and inject its functionality onto Reva.   Bad, because it\u0026rsquo;s yet another abstraction. Bad, because firewalls are harder to configure with dynamic IPs.f  ","description":"Status: accepted Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-04-19  Technical Story: Introduce Named Services.\nContext and Problem Statement     Reva relies heavily on config files. A known implication of this approach are having to know a-priori where a service is running (host + port). We want to move away from hardcoded values and rely instead on named services for service discovery. Furthermore, we would like both platforms (Reva + oCIS) to have the same source of truth at any given time, not having one to notify the other whenever a service status changes."},{"id":23,"href":"/ocis/storage/spacesprovider/","title":"Spaces Provider","parent":"Storage","content":"  The current implementation in oCIS might not yet fully reflect this concept. Feel free to add links to ADRs, PRs and Issues in short warning boxes like this.  Spaces Provider     A storage provider manages resources identified by a reference by accessing a storage system with a storage driver.\n Frontend     The oCIS frontend service starts all services that handle incoming HTTP requests:\n ocdav for ownCloud flavoured WebDAV ocs for sharing, user provisioning, capabilities and other OCS API endpoints datagateway for up and downloads TODO: ocm   WebDAV     The ocdav service not only handles all WebDAV requests under (remote.php/)(web)dav but also some other legacy endpoints like status.php:\n   endpoint service CS3 api CS3 namespace description TODO     ownCloud 10 / current ocis setup:        status.php ocdav - - currently static should return compiled version and dynamic values   (remote.php/)webdav ocdav storageprovider /home the old webdav endpoint    (remote.php/)dav/files/\u0026lt;username\u0026gt; ocdav storageprovider /home the new webdav endpoint    (remote.php/)dav/meta/\u0026lt;fileid\u0026gt;/v ocdav storageprovider id based versions    (remote.php/)dav/trash-bin/\u0026lt;username\u0026gt; ocdav recycle - trash should aggregate the trash of storage spaces the user has access to   (remote.php/)dav/public-files/\u0026lt;token\u0026gt; ocdav storageprovider /public/\u0026lt;token\u0026gt; public links    (remote.php/)dav/avatars/\u0026lt;username\u0026gt; ocdav - - avatars, hardcoded look up from user provider and cache   CernBox setup:        (remote.php/)webdav ocdav storageprovider /     Note: existing folder sync pairs in legacy clients will break when moving the user home down in the path hierarchy        (remote.php/)webdav/home ocdav storageprovider /home     (remote.php/)webdav/users ocdav storageprovider /users     (remote.php/)dav/files/\u0026lt;username\u0026gt; ocdav storageprovider /users/\u0026lt;user_layout\u0026gt;     Spaces concept also needs a new endpoint:        (remote.php/)dav/spaces/\u0026lt;spaceid\u0026gt;/\u0026lt;relative_path\u0026gt; ocdav storageregistry \u0026amp; storageprovider bypass path based namespace and directly talk to the responsible storage provider using a relative path spaces concept needs to point to storage spaces allow accessing spaces, listing is done by the graph api    The correct endpoint for a users home storage space in oc10 is remote.php/dav/files/\u0026lt;username\u0026gt;. In oc10 all requests at this endpoint use a path based reference that is relative to the users home. In oCIS this can be configured and defaults to /home as well. Other API endpoints like ocs and the web UI still expect this to be the users home.\nIn oc10 we originally had remote.php/webdav which would render the current users home storage space. The early versions (pre OC7) would jail all received shares into a remote.php/webdav/shares subfolder. The semantics for syncing such a folder are not trivially predictable, which is why we made shares freely mountable anywhere in the users home.\nThe current reva implementation jails shares into a remote.php/webdav/Shares folder for performance reasons. Obviously, this brings back the special semantics for syncing. In the future we will follow a different solution and jail the received shares into a dedicated /shares space, on the same level as /home and /spaces. We will add a dedicated API to list all storage spaces a user has access to and where they are mounted in the users namespace.\n TODO rewrite this hint with /dav/spaces Existing folder sync pairs in legacy clients will break when moving the user home down in the path hierarchy like CernBox did. For legacy clients the remote.php/webdav endpoint will no longer list the users home directly, but instead present the different types of storage spaces:\n remote.php/webdav/home: the users home is pushed down into a new home storage space remote.php/webdav/shares: all mounted shares will be moved to a new shares storage space remote.php/webdav/spaces: other storage spaces the user has access to, e.g. group or project drives    Sharing     The OCS Share API endpoint /ocs/v1.php/apps/files_sharing/api/v1/shares returns shares, which have their own share id and reference files using a path relative to the users home. They API also lists the numeric storage id as well as the string type storage_id (which is confusing \u0026hellip; but yeah) which would allow constructing combined references with a storage space id and a path relative to the root of that storage space. The web UI however assumes that it can take the path from the file_target and append it to the users home to access it.\n The API already returns the storage id (and numeric id) in addition to the file id:\n\u0026lt;storage_id\u0026gt;home::auser\u0026lt;/storage_id\u0026gt; \u0026lt;storage\u0026gt;993\u0026lt;/storage\u0026gt; \u0026lt;item_source\u0026gt;3994486\u0026lt;/item_source\u0026gt; \u0026lt;file_source\u0026gt;3994486\u0026lt;/file_source\u0026gt; \u0026lt;file_parent\u0026gt;3994485\u0026lt;/file_parent\u0026gt; \u0026lt;file_target\u0026gt;/Shared/Paris.jpg\u0026lt;/file_target\u0026gt; Creating shares only takes the path as the argument so creating and navigating shares only needs the path. When you update or delete a share it takes the share id not the file id.\n  The OCS service makes a stat request to the storage provider to get a ResourceInfo object. It contains both, a ResourceId and an absolute path. If the resource exists a request is sent to the gateway. Depending on the type of share the Collaboration API, the Link API or the Open Cloud Mesh API endpoints are used.\n   API Request Resource identified by Grant type Further arguments     Collaboration CreateShareRequest ResourceInfo ShareGrant -   Link CreatePublicShareRequest ResourceInfo Link Grant We send the public link name in the ArbitraryMetadata of the ResourceInfo   Open Cloud Mesh CreateOCMShareRequest ResourceId OCM ShareGrant OCM ProviderInfo     The user and public share provider implementations identify the file using the ResourceId. The ResourceInfo is passed so the share provider can also store who the owner of the resource is. The path is not part of the other API calls, e.g. when listing shares. The OCM API takes an id based reference on the CS3 api, even if the OCM HTTP endpoint takes a path argument. @jfd: Why? Does it not need the owner? It only stores the owner of the share, which is always the currently logged-in user, when creating a share. Afterwards only the owner can update a share \u0026hellip; so collaborative management of shares is not possible. At least for OCM shares.  REVA Storage Registry     The reva storage registry manages the CS3 global namespace: It is used by the reva gateway to look up address and port of the storage provider that should handle a reference.\n ","description":"The current implementation in oCIS might not yet fully reflect this concept. Feel free to add links to ADRs, PRs and Issues in short warning boxes like this.  Spaces Provider     A storage provider manages resources identified by a reference by accessing a storage system with a storage driver.\n Frontend     The oCIS frontend service starts all services that handle incoming HTTP requests:"},{"id":24,"href":"/integration/file_picker/component-reference/","title":"Component reference","parent":"File Picker","content":"   Props Events      \u0026lt;file-picker\u0026gt; Props        Property Type Default Description     variation String  Specifies if File Picker (resource) or Location Picker (location) should be used   configLocation String window.location.origin + '/file-picker-config.json' Defines where the config file should be located   bearerToken String null Bearer token used for requests authentication. If specified, authorization step is skipped   configObject `String Object`    isSdkProvided Boolean false Asserts whether ownCloud SDK is already initialised in the consuming app   selectBtnLabel String null Replaces the select button label   isSelectBtnDisplayed Boolean true Asserts whether the select button should be displayed   cancelBtnLabel String nulll Displays the cancel button and uses the given value as a label   isOdsProvided Boolean false Asserts whether the ownCloud Design System has been already initialised in the consuming app   locale String null Sets the language in which the File Picker should be displayed. If omitted, the browser language will be used   isInitialFocusEnabled Boolean false Enables focusing last item of breadcrumbs after the first folder has been loaded    Events        Event Arguments Description     update Resources array Emitted when any resource is selected or deselected or if a folder has been loaded in location picker   select Resources array Emitted when the select button is clicked   cancel Native click event object Emitted when the cancel button is clicked   folderLoaded Current folder object Emitted when loading of a folder has ended    ","description":"Props Events      \u0026lt;file-picker\u0026gt; Props        Property Type Default Description     variation String  Specifies if File Picker (resource) or Location Picker (location) should be used   configLocation String window.location.origin + '/file-picker-config.json' Defines where the config file should be located   bearerToken String null Bearer token used for requests authentication. If specified, authorization step is skipped   configObject `String Object`    isSdkProvided Boolean false Asserts whether ownCloud SDK is already initialised in the consuming app   selectBtnLabel String null Replaces the select button label   isSelectBtnDisplayed Boolean true Asserts whether the select button should be displayed   cancelBtnLabel String nulll Displays the cancel button and uses the given value as a label   isOdsProvided Boolean false Asserts whether the ownCloud Design System has been already initialised in the consuming app   locale String null Sets the language in which the File Picker should be displayed."},{"id":25,"href":"/integration/file_picker/docs/component-reference/","title":"Component reference","parent":"File Picker","content":"   Props Events      \u0026lt;file-picker\u0026gt; Props        Property Type Default Description     variation String  Specifies if File Picker (resource) or Location Picker (location) should be used   configLocation String window.location.origin + '/file-picker-config.json' Defines where the config file should be located   bearerToken String null Bearer token used for requests authentication. If specified, authorization step is skipped   configObject `String Object`    isSdkProvided Boolean false Asserts whether ownCloud SDK is already initialised in the consuming app   selectBtnLabel String null Replaces the select button label   isSelectBtnDisplayed Boolean true Asserts whether the select button should be displayed   cancelBtnLabel String nulll Displays the cancel button and uses the given value as a label   isOdsProvided Boolean false Asserts whether the ownCloud Design System has been already initialised in the consuming app   locale String null Sets the language in which the File Picker should be displayed. If omitted, the browser language will be used   isInitialFocusEnabled Boolean false Enables focusing last item of breadcrumbs after the first folder has been loaded    Events        Event Arguments Description     update Resources array Emitted when any resource is selected or deselected or if a folder has been loaded in location picker   select Resources array Emitted when the select button is clicked   cancel Native click event object Emitted when the cancel button is clicked   folderLoaded Current folder object Emitted when loading of a folder has ended    ","description":"Props Events      \u0026lt;file-picker\u0026gt; Props        Property Type Default Description     variation String  Specifies if File Picker (resource) or Location Picker (location) should be used   configLocation String window.location.origin + '/file-picker-config.json' Defines where the config file should be located   bearerToken String null Bearer token used for requests authentication. If specified, authorization step is skipped   configObject `String Object`    isSdkProvided Boolean false Asserts whether ownCloud SDK is already initialised in the consuming app   selectBtnLabel String null Replaces the select button label   isSelectBtnDisplayed Boolean true Asserts whether the select button should be displayed   cancelBtnLabel String nulll Displays the cancel button and uses the given value as a label   isOdsProvided Boolean false Asserts whether the ownCloud Design System has been already initialised in the consuming app   locale String null Sets the language in which the File Picker should be displayed."},{"id":26,"href":"/ocis/adr/0007-api-for-spaces/","title":"7. Open Graph API for oCIS File Spaces","parent":"Architecture Decisions","content":" Status: accepted Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2021-03-19  Technical Story: API to enable the concept of Spaces\nContext and Problem Statement     As one of the building blocks for Spaces in oCIS we plan to add an API that returns information about available spaces. This ADR discusses the API design oriented on the Microsoft Graph API.\n Note: The term \u0026ldquo;spaces\u0026rdquo; is used here in the context of \u0026ldquo;a space where files can be saved\u0026rdquo;, similar to a directory. It is not to be confused with space in the sense of free file space for example.\n The purpose of this new API is to give clients a very simple way to query the dynamic list of spaces, that the user has access to. Clients can provide a better user experience with that.\nThis API is supposed to be queried often, to give clients a condensed view of the available spaces for a user, but also their eTags and cTags. Hence the clients do not have to perform a PROPFIND for every space separately.\nThis API would even allow to provide (WebDAV-) endpoints depending on the kind and version of the client asking for it.\nDecision Drivers      Make it easy to work with a dynamic list of spaces of a user for the clients. No longer the need to make assumptions about WebDAV- and other routes in clients. More meta data available about spaces for a better user experience. Part of the bigger spaces plan. Important to consider in client migration scenarios, i.e. in CERN.  Considered Options      Microsoft Graph API inspired API that provides the requested information.  Decision Outcome     This the DRAFT for the API.\nAPI to Get Info about Spaces     ownCloud servers provide an API to query for available spaces of an user.\nSee the openAPI Specification for the Libre Graph API.\nMost important, the API returns the WebDAV endpoint for each space. With that, clients do not have to make assumptions about WebDAV routes any more.\nSee Drive item in Microsoft Graph API for an overview of drive and driveItem resources. The concrete list of drives / spaces a user has access to can be obtained on multiple endpoints.\nGet \u0026ldquo;Home folder\u0026rdquo;     Retrieve information about the home space of a user. Note: The user has access to more spaces. This call only returns the home space to provide API parity with the Graph API.\nAPI Call: /me/drive: Returns the information about the users home folder.\nGet All Spaces of a User     Retrieve a list of available spaces of a user. This includes all spaces the user has access to at that moment, also the home space.\nAPI Call: /me/drives: Returns a list of spaces.\nThere is also /drives, returning the list of spaces the user has access to. This endpoint is used to access any space by id using /drives/{drive-id}.\nCommon Reply     The reply to both calls is either one or a list of Drive representation objects:\n{ \u0026#34;id\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;createdDateTime\u0026#34;: \u0026#34;string (timestamp)\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;personal | projectSpaces | shares\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;string (timestamp)\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;microsoft.graph.identitySet\u0026#34; }, \u0026#34;quota\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;microsoft.graph.quota\u0026#34; }, \u0026#34;root\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;microsoft.graph.driveItem\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;url\u0026#34; } The meaning of the objects in Open Graph API context are:\n id - a persistent and unique ID identifying the space, called Storage Space ID. driveType - describing the type of the space. owner - an owner object to whom the space belongs quota - quota information about this space root - the root driveItem object. webUrl - The URL to make this space visible in the browser.  The following driveType values are available in the first step, but might be enhanced later:\n personal: The users home space projectSpaces: The project spaces available for the user (*) shares: The share jail, contains all shares for the user (*)  Other space types such as backup, hidden etc. can be added later as requested.\n Note: The projectSpaces and shares space are virtual spaces. They only contain other spaces, and no regular resources.\n The (*) marked types are not defined in the official MS API. They are prefixed with oc to avoid namespace clashes.\nThe root object equals a driveItem and contains information about the root resource (directory) of the space.\nThis is an example object as it can be expected as root element. It is not complete, as not all elements will be implemented so far.\n{ \u0026#34;cTag\u0026#34;: \u0026#34;string (etag)\u0026#34;, \u0026#34;webDavUrl\u0026#34;: \u0026#34;string\u0026#34;, /* inherited from baseItem */ \u0026#34;id\u0026#34;: \u0026#34;string (identifier)\u0026#34;, \u0026#34;createdBy\u0026#34;: {\u0026#34;@odata.type\u0026#34;: \u0026#34;microsoft.graph.identitySet\u0026#34;}, \u0026#34;createdDateTime\u0026#34;: \u0026#34;String (timestamp)\u0026#34;, \u0026#34;eTag\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;lastModifiedBy\u0026#34;: {\u0026#34;@odata.type\u0026#34;: \u0026#34;microsoft.graph.identitySet\u0026#34;}, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;String (timestamp)\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;webUrl\u0026#34;: \u0026#34;string\u0026#34;, } Meaningful fields of the root element in the context of the Open Graph API:\n id - a persistent and unique ID identifying the root directory node. webDavUrl - The webdav path of the top item of the space. eTag - an identifier that changes automatically if the content or metadata of the node or the underlying resources changes. cTag - an identifier that changes automatically if the content of the root node or of one of the underlying resources changes. webUrl - The URL to make this space visible in the browser.   Note: To indicate that only the metadata of a resource has changed, the eTag has changed, but the cTag not.\n Positive Consequences      A well understood and mature API from Microsoft adopted to our needs. Prerequisite for Spaces in oCIS. Enables further steps in client development.  Negative Consequences      Migration impact on existing installations. Still to be investigated. Requires additional webdav endpoint that allows accessing an arbitrary storage space, either  with an id: /dav/spaces/\u0026lt;spaceid\u0026gt;/relative/path/to/file.ext, or with a global path: /dav/global/\u0026lt;accessible\u0026gt;/\u0026lt;mount\u0026gt;/\u0026lt;point\u0026gt;/relative/path/to/file.ext, e.g. /dav/global/projects/Golive 2021/Resources/slides.odt    Open Topics      What are the WebDAV paths for Trashbin, Versions  option: additional entries in the reply struct   The identitySet object used for \u0026ldquo;owner\u0026rdquo; and \u0026ldquo;coowner\u0026rdquo; require to implement the https://docs.microsoft.com/de-de/graph/api/resources/identityset?view=graph-rest-1.0 JSON object, which contains information that seems to be of limited benefit for oCIS. An alternative would be to implement a simpler identity object for oCIS and use that.  ","description":"Status: accepted Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2021-03-19  Technical Story: API to enable the concept of Spaces\nContext and Problem Statement     As one of the building blocks for Spaces in oCIS we plan to add an API that returns information about available spaces. This ADR discusses the API design oriented on the Microsoft Graph API.\n Note: The term \u0026ldquo;spaces\u0026rdquo; is used here in the context of \u0026ldquo;a space where files can be saved\u0026rdquo;, similar to a directory."},{"id":27,"href":"/integration/file_picker/docs/focus-management/","title":"Focus Management","parent":"File Picker","content":"   Focusing content of File Picker Initial folder load focus      File Picker comes only with partial focus management. If you want to focus an element, it needs to be achieved through a code in the consuming app.\nFocusing content of File Picker     If you\u0026rsquo;re including File Picker as a web component, managing focus is slightly different from focusing content of any other component in the DOM tree. Since web component are living in shadow root, we need to send the focus into it. To focus e.g. a checkbox within the File Picker, you can use the following code.\ndocument.querySelector(\u0026#39;#file-picker\u0026#39;).shadowRoot.querySelector(\u0026#39;.oc-breadcrumb-list-item span[aria-current=\u0026#34;page\u0026#34;]\u0026#39;).focus()   The #file-picker selector is coming from the consuming app, not from File Picker.  Initial folder load focus     After opening a folder, we are focusing the last item of breadcrumbs. This is not the case when loading the first folder. Any following navigation into the first folder will focus the item. To enable focus on the first load as well, you need to set isInitialFocusEnabled prop to true.\n","description":"Focusing content of File Picker Initial folder load focus      File Picker comes only with partial focus management. If you want to focus an element, it needs to be achieved through a code in the consuming app.\nFocusing content of File Picker     If you\u0026rsquo;re including File Picker as a web component, managing focus is slightly different from focusing content of any other component in the DOM tree."},{"id":28,"href":"/integration/file_picker/focus-management/","title":"Focus Management","parent":"File Picker","content":"   Focusing content of File Picker Initial folder load focus      File Picker comes only with partial focus management. If you want to focus an element, it needs to be achieved through a code in the consuming app.\nFocusing content of File Picker     If you\u0026rsquo;re including File Picker as a web component, managing focus is slightly different from focusing content of any other component in the DOM tree. Since web component are living in shadow root, we need to send the focus into it. To focus e.g. a checkbox within the File Picker, you can use the following code.\ndocument.querySelector(\u0026#39;#file-picker\u0026#39;).shadowRoot.querySelector(\u0026#39;.oc-breadcrumb-list-item span[aria-current=\u0026#34;page\u0026#34;]\u0026#39;).focus()   The #file-picker selector is coming from the consuming app, not from File Picker.  Initial folder load focus     After opening a folder, we are focusing the last item of breadcrumbs. This is not the case when loading the first folder. Any following navigation into the first folder will focus the item. To enable focus on the first load as well, you need to set isInitialFocusEnabled prop to true.\n","description":"Focusing content of File Picker Initial folder load focus      File Picker comes only with partial focus management. If you want to focus an element, it needs to be achieved through a code in the consuming app.\nFocusing content of File Picker     If you\u0026rsquo;re including File Picker as a web component, managing focus is slightly different from focusing content of any other component in the DOM tree."},{"id":29,"href":"/ocis/guides/ocis-local-docker/","title":"Discover oCIS with Docker","parent":"Guides","content":"   Prerequisites Start oCIS with docker compose  Create the project Initialize Mount the config file Apply the changes Open the port 9200 to the outside Persist data, restart and logging Pin the oCIS version   Wrapping up      Prerequisites      Local docker installation (e.g. Docker for Desktop) Check oCIS and Containers  Start oCIS with docker compose     Create the project     Use the following skeleton as a docker-compose.yml:\nmkdir simple-ocis \u0026amp;\u0026amp; \\ cd simple-ocis \u0026amp;\u0026amp; \\ touch docker-compose.yml Copy the following file content into docker-compose.yml and save it.\nversion:\u0026#34;3.7\u0026#34;services:ocis:image:owncloud/ocis:latestenvironment:# INSECURE: needed if oCIS / Traefik is using self generated certificatesOCIS_INSECURE:\u0026#34;true\u0026#34;# OCIS_URL: the external domain / ip address of oCIS (with protocol, must always be https)OCIS_URL:\u0026#34;https://localhost:9200\u0026#34;# OCIS_LOG_LEVEL: error / info / ... / debugOCIS_LOG_LEVEL:infoInitialize     Run ocis init to create a config\ndocker run --rm -it -v $(pwd):/etc/ocis/ owncloud/ocis:latest init You will get the following output:\nDo you want to configure Infinite Scale with certificate checking disabled? This is not recommended for public instances! [yes | no = default] yes ========================================= generated OCIS Config ========================================= configpath : /etc/ocis/ocis.yaml user : admin password : t3p4N0jJ47LbhpQ04s9W%u1$d2uE3Y.3 Check your local folder. We just generated a default ocis configuration file with random passwords and secrets.\nls # list the current folder docker-compose.yml ocis.yaml # ocis.yaml has been generated Run cat ocis.yaml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54  token_manager:jwt_secret:X35rffWpS9BR.=^#LDt\u0026amp;z3ykYOd7h@w*machine_auth_api_key:-0$4ieu5+t6HD6Ui^0PpKU6B0qxisv.msystem_user_api_key:oVxICwMR9YcKXTau+@pqKZ0EO-OHz8sFtransfer_secret:e%3Sda=WFBuy\u0026amp;ztBUmriAbBR$i2CmaDvsystem_user_id:b7d976a1-7300-4db7-82df-13502d6b5e18admin_user_id:c59a6ae9-5f5e-4eef-b82e-0e5c34f93e52graph:spaces:insecure:falseidentity:ldap:bind_password:wElKpGjeH0d.E4moXh=.dc@s2CtB0vy%idp:ldap:bind_password:Ft2$2%#=6Mi22@.YPkhh-c6Kj=3xBZAbidm:service_user_passwords:admin_password:t3p4N0jJ47LbhpQ04s9W%u1$d2uE3Y.3idm_password:wElKpGjeH0d.E4moXh=.dc@s2CtB0vy%reva_password:pJAdZ2fU!SFKgcdDPRW%ruIiNM6GnN1Didp_password:Ft2$2%#=6Mi22@.YPkhh-c6Kj=3xBZAbproxy:insecure_backends:falsefrontend:archiver:insecure:falseauth_basic:auth_providers:ldap:bind_password:pJAdZ2fU!SFKgcdDPRW%ruIiNM6GnN1Dauth_bearer:auth_providers:oidc:insecure:falseusers:drivers:ldap:bind_password:pJAdZ2fU!SFKgcdDPRW%ruIiNM6GnN1Dgroups:drivers:ldap:bind_password:pJAdZ2fU!SFKgcdDPRW%ruIiNM6GnN1Dstorage_system:data_provider_insecure:falsestorage_users:data_provider_insecure:falseocdav:insecure:falsethumbnails:thumbnail:transfer_secret:z-E%G8MTeFpuT-ez2o8BjfnG1Jl2yLLmwebdav_allow_insecure:falsecs3_allow_insecure:false    Password initialisation\nDuring the run of ./ocis init, the password for the admin user has been set to a random string.\nYou can override that later by setting IDM_ADMIN_PASSWORD=secret. The ENV variable setting always overrides the config file.\n  Mount the config file     Add the config file as a bind mount.\nvolumes:# mount the ocis config file inside the container- \u0026#34;./ocis.yaml:/etc/ocis/ocis.yaml\u0026#34;Apply the changes     docker compose up -d The service should be running.\ndocker compose ps NAME COMMAND SERVICE STATUS PORTS simple-ocis-ocis-1 \u0026#34;/usr/bin/ocis server\u0026#34; ocis running 9200/tcp Open the port 9200 to the outside     ports:- 9200:9200Add a port mapping to your docker compose file and run docker compose up -d again. You should now be able to access https://localhost:9200 and log in. You will get a warning from your browser that the connection is not safe because we are using a self-signed certificate. Accept this warning message to continue. Use the user admin and the password which has been initialized before.\nCongratulations! You have successfully set up a simple Infinite Scale locally.\n docker compose up\nYou do not need to shut down your service to apply changes from the docker-compose.yml file. Running docker compose up -d again is enough. Docker compose always tries to bring all services to the desired state.\ndocker compose ps\nThis gives you a status of the services of the project.\ndocker compose exec \u0026lt;service name\u0026gt; \u0026lt;command\u0026gt;\nThis command is handy to run specific commands inside your service. Try docker compose exec ocis ocis version.\n  Persist data, restart and logging     The key to a successful container setup is the persistance of the application data to make the data survive a re-boot. Docker normally uses volumes for this purpose. A volume can either be a \u0026ldquo;named volume\u0026rdquo; which are completely managed by docker and have many advantages (see the linked docker documentation), or \u0026ldquo;bind mounts\u0026rdquo; which are uing the directory structure and OS of the host system. In our example we already use a bind mount for the config file. We will now add a named volume for the oCIS data directory.\nThis is the way we should configure the ocis service:\nvolumes:# mount the ocis config file inside the container- \u0026#34;./ocis.yaml:/etc/ocis/ocis.yaml\u0026#34;# short syntax for using a named volume# in the form \u0026lt;volume name\u0026gt;:\u0026lt;mount path in the container\u0026gt;# use a named volume for the ocis data directory- \u0026#34;ocis-data:/var/lib/ocis\u0026#34;# or the more verbose syntax#- type: volume# source: ocis-data # name of the volume# target: /var/lib/ocis # the mount path inside the containerThe docker-compose.yml needs to declare the named volumes globally, add this at the bottom of the file:\n# https://docs.docker.com/compose/compose-file/compose-file-v3/#volumes# this declares the named volume with all default settings# you can also see the volume when running `docker volume list`volumes:ocis-data:Now let us configure the restart policy and the logging settings for the ocis service:\n# https://docs.docker.com/compose/compose-file/compose-file-v3/#restartrestart:always# or on-failure / unless-stopped# https://docs.docker.com/config/containers/logging/configure/# https://docs.docker.com/compose/compose-file/compose-file-v3/#logging# the default log driver does no log rotation# you can switch to the \u0026#34;local\u0026#34; log driver which does rotation by defaultlogging:driver:local# otherwise you could specify log rotation exlicitely# driver: \u0026#34;json-file\u0026#34; # this is the default driver# options:# max-size: \u0026#34;200k\u0026#34; # limit the size of the log file# max-file: \u0026#34;10\u0026#34; # limit the count of the log filesApply your changes! Just run docker compose up -d again.\nNow you have an oCIS which will survive reboots, restart automatically and has log rotation by default.\nAccess the logs via docker compose logs -f and do some actions in the frontend to see the effect. Create data by uploading files and adding more users. Then run docker compose down to shut oCIS down. Start it again docker compose up -d, log in again and check that your data has survived the reboot.\nPin the oCIS version     Last but not least, it is never a good idea to use the latest docker tag. Pin your container image to a released version.\nimage:owncloud/ocis:latest@sha256:5ce3d5f9da017d6760934448eb207fbaab9ceaf0171b4122e791e292f7c86c97# the latest tag is not recommended, because you don\u0026#39;t know which version you\u0026#39;ll get# but even if you use `owncloud/ocis:1.16.0` you cannot be sure that you\u0026#39;ll get# the exact same image if you pull it at a later point in time (because docker image tags are not immutable).# To be 100% that you always get the same image, you can pin the digest (hash) of the# image. If you do a `docker pull owncloud/ocis:latest`, it also will also show you the digest.# see also https://docs.docker.com/engine/reference/commandline/images/#list-image-digestsWrapping up     If you have completed this guide, your docker-compose.yml should look like the following example:\nSolution ...  version:\"3.7\"services:ocis:image:owncloud/ocis:latest@sha256:5ce3d5f9da017d6760934448eb207fbaab9ceaf0171b4122e791e292f7c86c97# the latest tag is not recommended, because you don't know which version you'll get# but even if you use `owncloud/ocis:1.16.0` you cannot be sure that you'll get# the exact same image if you pull it at a later point in time (because docker image tags are not immutable).# To be 100% that you always get the same image, you can pin the digest (hash) of the# image. If you do a `docker pull owncloud/ocis:latest`, it also will also show you the digest.# see also https://docs.docker.com/engine/reference/commandline/images/#list-image-digestsenvironment:# INSECURE: needed if oCIS / Traefik is using self generated certificatesOCIS_INSECURE:\"true\"# OCIS_URL: the external domain / ip address of oCIS (with protocol, must always be https)OCIS_URL:\"https://localhost:9200\"# OCIS_LOG_LEVEL: error / info / ... / debugOCIS_LOG_LEVEL:infovolumes:# mount the ocis config file inside the container- \"./ocis.yaml:/etc/ocis/ocis.yaml\"# short syntax for using a named volume# in the form :# use a named volume for the ocis data directory- \"ocis-data:/var/lib/ocis\"# or the more verbose syntax#- type: volume# source: ocis-data # name of the volume# target: /var/lib/ocis # the mount path inside the containerports:- 9200:9200# https://docs.docker.com/compose/compose-file/compose-file-v3/#restartrestart:always# or on-failure / unless-stopped# https://docs.docker.com/config/containers/logging/configure/# https://docs.docker.com/compose/compose-file/compose-file-v3/#logging# the default log driver does no log rotation# you can switch to the \"local\" log driver which does rotation by defaultlogging:driver:local# otherwise you could specify log rotation exlicitely# driver: \"json-file\" # this is the default driver# options:# max-size: \"200k\" # limit the size of the log file# max-file: \"10\" # limit the count of the log files# https://docs.docker.com/compose/compose-file/compose-file-v3/#volumes# this declares the named volume with all default settings# you can also see the volume when running `docker volume list`volumes:ocis-data:   ","description":"Prerequisites Start oCIS with docker compose  Create the project Initialize Mount the config file Apply the changes Open the port 9200 to the outside Persist data, restart and logging Pin the oCIS version   Wrapping up      Prerequisites      Local docker installation (e.g. Docker for Desktop) Check oCIS and Containers  Start oCIS with docker compose     Create the project     Use the following skeleton as a docker-compose."},{"id":30,"href":"/ocis/guides/","title":"Guides","parent":"oCIS - ownCloud Infinite Scale","content":"   Step-by-step Guides  Available Guides        Step-by-step Guides     These guides should extend the generic documentation and help admins to learn Infinite Scale through digestable \u0026ldquo;hands-on\u0026rdquo; sessions.\nAvailable Guides     oCIS deployments are super simple, yet there are many configurations possible for advanced setups.\n  Discover oCIS with Docker - configure domain, certificates and port  Migrate data to Infinite Scale  ","description":"   Step-by-step Guides  Available Guides        Step-by-step Guides     These guides should extend the generic documentation and help admins to learn Infinite Scale through digestable \u0026ldquo;hands-on\u0026rdquo; sessions.\nAvailable Guides     oCIS deployments are super simple, yet there are many configurations possible for advanced setups.\n  Discover oCIS with Docker - configure domain, certificates and port  Migrate data to Infinite Scale  "},{"id":31,"href":"/ocis/adr/0008-configuration/","title":"8. Configuration","parent":"Architecture Decisions","content":" Status: proposed Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-05-03  Context and Problem Statement     As per urfave/cli\u0026rsquo;s doc:\n The precedence for flag value sources is as follows (highest to lowest):\nCommand line flag value from user Environment variable (if specified) Configuration file (if specified) Default defined on the flag   An issue arises in point 2, in the sense that configuration file refers to a single file containing the value for the env variable. The CLI framework we use for flag parsing does not support merging config structs with CLI flags. This introduces an inconsistency with the framework: config structs are not supported, and we cannot hook to the lifecycle of the flags parsing to use a file as source and conform to these rules.\nBecause we solely rely on structured configuration we need a way to modify values in this struct using the provided means urfave/cli gives us (flags, env variables, config files and default value), but since we have different modes of operation (supervised Vs. unsupervised) we have to define a clear line.\nDecision Drivers      Improve experience for the end user. Improve experience for developers. Sane defaults. Sane overrides.  Considered Options      Extend FlagInputSourceExtension interface Feature request: support for structured configuration (urfave/cli). Clearly defined boundaries of what can and cannot be done. Expose structured field values as CLI flags Drop support for structure configuration Adapt the \u0026ldquo;structured config files have the highest priority\u0026rdquo; within oCIS  Decision Outcome     [STILL UNDECIDED]\nPositive Consequences     [TBD, depends on Decision Outcome]\nPros and Cons of the Options     Extend FlagInputSourceExtension interface      Good, because we could still use Viper to load from config files here and apply values to the flags in the context. Bad, because urfave/cli team are actively working on v3 of altsrc and we don\u0026rsquo;t want to maintain yet another slice of the codebase.  notes: source is FlagInputSourceExtension interface\nFeature request: support for structured configuration (urfave/cli).      Good, because we could remove Viper off the codebase and solely rely on urfave/cli\u0026rsquo;s native code. Bad, because there are no plans to support this upstream.  Clearly defined boundaries of what can and cannot be done.      Good, because no changes to the codebase required (not drastic changes.) Bad, because we\u0026rsquo;re limited by the framework  Expose structured field values as CLI flags      Good, because it has been already taken into account on large projects (kubernetes) here. in point 5. Bad, because it requires quite a bit1 of custom logic. Bad, because how should these flags be present in the -h menu of a subcommand? Probably some code generation needed.  *[1] this is a big uncertainty.\nDrop support for structure configuration      Good, because it makes the integration with the cli framework easier to grasp. Good, because it is not encouraged by the 12factor app spec. Bad, because we already support if and users make active use of it. At least for development.  Adapt the \u0026ldquo;structured config files have the highest priority\u0026rdquo; within oCIS      Good, because that would mean little structural changes to the codebase since the Viper config parsing logic already uses the Before hook to parse prior to the command\u0026rsquo;s action executes.  Notes     Use Cases and Expected Behaviors     Supervised (ocis server or ocis run extension)      Use a global config file (ocis.yaml) to configure an entire set of services: \u0026gt; ocis --config-file /etc/ocis.yaml service Use a global config file (ocis.yaml) to configure a single extension: \u0026gt; ocis --config-file /etc/ocis/yaml proxy When running in supervised mode, config files from extensions are NOT evaluated (only when running ocis server, runs with ocis run extension do parse individual config files)  i.e: present config files: ocis.yaml and proxy.yaml; only the contents of ocis.yaml are loaded1.   Flag parsing for subcommands are not allowed in this mode, since the runtime is in control. Configuration has to be done solely using config files.  *[1] see the development section for more on this topic.\nKnown Gotchas      \u0026gt; ocis --config-file /etc/ocis/ocis.yaml server does not work. It currently only supports reading global config values from the predefined locations.  Unsupervised (ocis proxy)      ocis.yaml is parsed first (since proxy is a subcommand of ocis) proxy.yaml is parsed if present, overriding values from ocis.yaml and any cli flag or env variable present.  Other known use cases      Configure via env + some configuration files like WEB_UI_CONFIG or proxy routes Configure via flags + some configuration files like WEB_UI_CONFIG or proxy routes Configure via global (single file for all extensions) config file + some configuration files like WEB_UI_CONFIG or proxy routes configure via per extension config file + some configuration files like WEB_UI_CONFIG or proxy routes  Each individual use case DOES NOT mix sources (i.e: when using cli flags, do not use environment variables nor cli flags).\nLimitations on urfave/cli prevent us from providing structured configuration and framework support for cli flags + env variables.\nUse Cases for Development     Config Loading     Sometimes is desired to decouple the main series of services from an individual instance. We want to use the runtime to startup all services, then do work only on a single service. To achieve that one could use ocis server \u0026amp;\u0026amp; ocis kill proxy \u0026amp;\u0026amp; ocis run proxy. This series of commands will 1. load all config from ocis.yaml, 2. kill the supervised proxy service and 3. start the same service with the contents from proxy.yaml.\nStart an extension multiple times with different configs (in Supervised mode)     Flag parsing on subcommands in supervised mode is not yet allowed. The runtime will first parse the global ocis.yaml (if any) and run with the loaded configuration. This use case should provide support for having 2 different proxy config files and making use of the runtime start 2 proxy services, with different values.\nFor this to work, services started via Service.Start need to forward any args as flags:\nif err := client.Call(\u0026#34;Service.Start\u0026#34;, os.Args[2], \u0026amp;reply); err != nil { log.Fatal(err) } This should provide with enough flexibility for interpreting different config sources as: \u0026gt; bin/ocis run proxy --config-file /etc/ocis/unexpected/proxy.yaml\nDeveloping Considered Alternatives Further     Let\u0026rsquo;s develop further the following concept: Adapt the \u0026ldquo;structured config files have the highest priority\u0026rdquo; within oCIS.\nOf course it directly contradicts urfave/cli priorities. When a command finished parsing its cli args and env variables, only after that Before is called. This mean by the time we reach a command Before hook, flags have already been parsed and its values loaded to their respective destinations within the Config struct.\nThis should still not prevent a developer from using different config files for a single service. Let\u0026rsquo;s analyze the following use case:\n global config file present (ocis.yaml) single proxy.yaml config file another proxy.yaml config file running under supervision mode  The outcome of the following set of commands should be having all bootstrapped services running + 2 proxies on different addresses:\n\u0026gt; ocis server \u0026gt; ocis kill proxy \u0026gt; ocis run proxy --config-file proxy.yaml \u0026gt; ocis run proxy --config-file proxy2.yaml This is a desired use case that is yet not supported due to lacking of flags forwarding.\nFollow-up PR\u0026rsquo;s      Variadic runtime extensions to run (development mostly) Arg forwarding to command (when running in supervised mode, forward any \u0026ndash;config-file flag to supervised subcommands) Ability to set OCIS_URL from a config file (this would require to extend the ocis-pkg/config/config.go file).  The case for OCIS_URL     OCIS_URL is a jack-of-all trades configuration. It is meant to ease up providing defaults and ensuring dependant services are well configured. It is an override to the following env vars:\nOCIS_IDM_ADDRESS PROXY_OIDC_ISSUER STORAGE_OIDC_ISSUER STORAGE_FRONTEND_PUBLIC_URL STORAGE_LDAP_IDP WEB_UI_CONFIG_SERVER WEB_OIDC_AUTHORITY OCIS_PUBLIC_URL Because this functionality is only available as an env var, there is no current way to \u0026ldquo;normalize\u0026rdquo; its usage with a config file. That is, there is no way to individually set OCIS_URL via config file. This is clear technical debt, and should be added functionality.\nState of the Art      Kubernetes proposal on this very same topic Configuration | Pulumi  Configuration can be altered via setters through the CLI.    ","description":"Status: proposed Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-05-03  Context and Problem Statement     As per urfave/cli\u0026rsquo;s doc:\n The precedence for flag value sources is as follows (highest to lowest):\nCommand line flag value from user Environment variable (if specified) Configuration file (if specified) Default defined on the flag   An issue arises in point 2, in the sense that configuration file refers to a single file containing the value for the env variable."},{"id":32,"href":"/ocis/guides/migrate-data-rclone/","title":"Migrate Data using rclone","parent":"Guides","content":"People keep asking on how to migrate data from other cloud storage to Infinite Scale.\nThere are too many cloud variants and use cases out there to have a migration path for all at hand, but let\u0026rsquo;s see what we can start with: There is the famous Swiss army knife for clouds called rclone available.\nThe awesome rclone tool makes it easy to migrate data from one installation to another on a user per user base. A very good first step.\nThis article explains by the example of Nextcloud how you would migrate your data from an running NC to Infinite Scale. A prerequisite is that you have Infinite Scale already set up and running on a different domain.\n Be prepared that migration can take some time. Also, check the size of your data. This example was around 1.5 GiB of data, that obviously went fast.\nAnd of course: Have a backup! Even if this method only reads from the source, you never know.\n  Install rclone     Check the rclone website on how to install rclone.\nCreate Users     First, decide on a user that you want to migrate. To create the user on Infinite Scale, log in as an admin user and create the desired user. Create and set groups accordingly.\nFor the next step, you need the user credentials on both the source- and the destination cloud.\nConfigure rclone Remotes     To be able to address the clouds in rclone, you need to configure so called remotes. It is nothing else than a shortcut for the combination of\n which kind of cloud are you talking to the URL the username the password, if one is set  You need to add a configuration for both the source cloud (Nextcloud) and the target (Infinite Scale). As both talk WebDAV, the rclone manual page is accurate to follow.\nFor both, use an URL in the form of https://my.host.de/remote.php/webdav.\nOnce that is finished, the command rclone config show should give output similar to this:\n[:~/] ± rclone config show [NCoC] type = webdav url = https://nc.this.de/remote.php/webdav vendor = nextcloud user = wilma pass = zfdsaiewrafdskfjdasfxdasffdafdsafas [ocis] type = webdav url = https://infinitescale.works/remote.php/webdav vendor = owncloud user = wilma pass = cdsfasrefdsadaGkxTXjksfpqQFI5nQawqs Now, for example the directories on the Nextcloud root can be checked with rclone lsd NCoC:/.\nCopy Data     To migrate the data, rclone provides the command copy. It transfers data from one remote to the other. Use the following command example to transfer the entire cloud data from Nextcloud to Infinite Scale:\nrclone copy NCoC:/ ocis:/ --no-check-certificate -P The \u0026ndash;no-check-certificate can and should be skipped if your clouds have proper certificates. The -P however, provides you with interesting statistics about the copy progress. Once you are finished, this might be the result:\n[:~/] $ rclone copy NCoC:/ ocis:/ --no-check-certificate -P Transferred: 1.228 GiB / 1.228 GiB, 100%, 10.170 MiB/s, ETA 0s Transferred: 411 / 411, 100% Elapsed time: 2m19.3s Note that while testing this, occasionally the Nextcloud was returning a 404 not found for some files. While the reason for that was not completely clear, it does not matter, because the rclone command can be repeated. It is clever enough to only copy what has changed!\nEnjoy!     All done! Now you have your data on Infinite Scale.\nObviously this method has a few downsides, such as:\n This migration requires a little of \u0026ldquo;quiet time\u0026rdquo; for migrating data. It is a user by user method where provisioning of users has to be done manually. Only data is migrated, and there is probably a data size limit in real life using this way. Private- and public shares are not migrated The trashbin, versions, comments and favorites are not migrated  These are shortcomings but this is a good first step to start investigating. The other parts will be sorted as we move along.\n To improve this guide, you are welcome to file an issue or even send a pull request. See the getting started guide how easy it is to build the documentation.\n","description":"People keep asking on how to migrate data from other cloud storage to Infinite Scale.\nThere are too many cloud variants and use cases out there to have a migration path for all at hand, but let\u0026rsquo;s see what we can start with: There is the famous Swiss army knife for clouds called rclone available.\nThe awesome rclone tool makes it easy to migrate data from one installation to another on a user per user base."},{"id":33,"href":"/ocis/adr/0009-extension-template/","title":"9. Extension Template","parent":"Architecture Decisions","content":" Status: proposed Deciders: @c0rby  Date: 2021-06-10  Technical Story: [description | ticket/issue URL] Context and Problem Statement     We want to accelerate and simplify extension development by removing the necessity to type or copy the boilerplate code. Can we provide a template or a similar mechanism to aid when developing new extensions?\nDecision Drivers      The solution should be easily maintainable.  It should always be up-to-date.   The solution should be easy to use.  Considered Options      Use boilr Create a template git repository. Use ocis-hello as a \u0026ldquo;template\u0026rdquo;  Decision Outcome     Chosen option: \u0026ldquo;[option 1]\u0026rdquo;, because [justification. e.g., only option, which meets k.o. criterion decision driver | which resolves force force | … | comes out best (see below)].\nPositive Consequences:      [e.g., improvement of quality attribute satisfaction, follow-up decisions required, …] …  Negative consequences:      [e.g., compromising quality attribute, follow-up decisions required, …] …  Pros and Cons of the Options     boilr     We have a boilr template already. boilr-ocis-extension This approach is nice because it provides placeholders which can be filled during the generation of a new extension from the template. It also provides prompts for the placeholder values during generation.\n Good, because with the placeholders it is hard to miss values which should be changed Bad, because maintaining is more complex  Template git repository     Create a git repository with an extension containing the boilerplate code.\n Good, because we can use the usual tools for QA and dependency scanning/updating. Good, because it doesn\u0026rsquo;t require any additional tool.  ocis-hello as a \u0026ldquo;template\u0026rdquo;     We have the ocis-hello repository which acts as an example extension containing a grpc and http service and a web UI. It also demonstrates the usage of the settings service.\n Good, because it contains a bit more code than just the plain boilerplate Good, because the integration into oCIS is already tested for the Hello extension (e.g. with Proxy and Settings). This will ensure, that the example extension is up-to-date. Bad, because if you don\u0026rsquo;t require all features you have to delete stuff  ","description":"Status: proposed Deciders: @c0rby  Date: 2021-06-10  Technical Story: [description | ticket/issue URL] Context and Problem Statement     We want to accelerate and simplify extension development by removing the necessity to type or copy the boilerplate code. Can we provide a template or a similar mechanism to aid when developing new extensions?\nDecision Drivers      The solution should be easily maintainable.  It should always be up-to-date."},{"id":34,"href":"/ocis/storage/spacesregistry/","title":"Spaces Registry","parent":"Storage","content":"  The current implementation in oCIS might not yet fully reflect this concept. Feel free to add links to ADRs, PRs and Issues in short warning boxes like this.  Storage Space Registries     A storage spaces registry manages the namespace for a user: it is used by clients to look up storage spaces a user has access to, the /dav/spaces endpoint to access it via WabDAV, and where the client should mount it in the users personal namespace.\n ","description":"The current implementation in oCIS might not yet fully reflect this concept. Feel free to add links to ADRs, PRs and Issues in short warning boxes like this.  Storage Space Registries     A storage spaces registry manages the namespace for a user: it is used by clients to look up storage spaces a user has access to, the /dav/spaces endpoint to access it via WabDAV, and where the client should mount it in the users personal namespace."},{"id":35,"href":"/ocis/adr/0010-policy-enforcement/","title":"10. Extension Policies","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1, @fschade Date: 2021-06-30  Context and Problem Statement     There should be a way to impose certain limitations in areas of the code that require licensing. This document researches an approach to achieve this goal, while limiting the scope to the enforcement side of it. The architecture for a policy system must be composed of 2 parts:\n License creation and validation Enforcement  It is desirable to keep both systems isolated, since the implementation of the latter has to be done within the constraints of the codebase. The alternative is running an enforcement service and have each and every single request evaluating whether the request is valid or not.\nDecision Drivers      As a team, we want to have the licensing code concentrated in a central module We don\u0026rsquo;t want to stop/start the extension whenever a policy is updated (hot reload). It must happen during runtime.  Considered Options      Build the evaluation engine in-house. Use third party libraries such as Open Policy Agent (a CNCF approved project written in Go)  Decision Outcome     Chosen option: option 2; Use third party libraries such as Open Policy Agent (a CNCF approved project written in Go)\nPositive Consequences      OPA is production battle tested. Built around performance - policies evaluations are no longer than 1ms per request. Middleware friendly: we use gRPC clients all over our ecosystem; wrappers (or middlewares) is a viable way to solve this problem instead of a dedicated service or its own package. Community support. Kubernetes friendly. Supports envoy, kong, terraform, traefik, php, node and many more.  Negative Consequences      More vendor code inside the binary (larger attack surface, larger footprint [to be quantified] )  Chosen option approach     Make use of overloading Open Policy Agent\u0026rsquo;s input along with an external storage source (instead of an OPA service) in conjunction with go-micro\u0026rsquo;s gRPC client wrappers (a.k.a. middlewares) to leverage policy rules evaluation.\nTerminology     New terms are defined to refer to new mental models:\n Policy: self-imposed limitation of a piece of software. i.e: \u0026ldquo;after 20 users limit the use of thumbnails\u0026rdquo;. Checkers: in the context of a middleware, a checker is in charge of defining logical conditions that prevent requests (users) from doing an action. Policy file: a rego file. Policy evaluation: the act of piecing together input (from a request), data (from an external storage) and policies in order to make a decision.  Temporary new Interfaces part of the PoC      IStorage: provides means of extracting data from an external source (in case of the POC an etcd storage cluster).  External data storages     However, for this to be usable it needs state. The Rego engine works with input and data, where data is essentially a database the input is tried against, in order to expand this poc to include functionality such as counters (i.e: give access to the thumbnails only to 50 users) we need an external storage, and consequentially, Rego needs to have an option to load data from an external storage. There is an entire chapter in the documentation regarding external data: https://www.openpolicyagent.org/docs/latest/external-data/. The most \u0026ldquo;natural\u0026rdquo; option (option 5) states:\n OPA includes functionality for reaching out to external servers during evaluation. This functionality handles those cases where there is too much data to synchronize into OPA, JWTs are ineffective, or policy requires information that must be as up-to-date as possible.\n This is a natural option because it requires service-to-service communication, and by definition using microservices it should come \u0026ldquo;natural to us\u0026rdquo;. Another approach is using JWT (which we already use) to encode the necessary data into the JWT and handing it over to rego as \u0026ldquo;data\u0026rdquo;. The issue with this approach is that depending on the features of the licenses the JWT might grow and be filled with noise and redundancy (this is, unless a new token is issued for licensing purposes).\nFuture ideas     This proof of concept is very rigid in the sense that the IStorage interface only has one implementation that ties it to etcd, meaning running an oCIS cluster without an etcd service will result in a crash. This is by far ideal and less coupled implementations should be done. There is the case of using the storage metadata as a source to store data necessary to the policies, or even using the go-micro store as a kv store to achieve the exact same, since it already runs as its own service. The implementation of this is trivial and left out of the POC since it requires more time than the allotted for this task.\nMessage Broker     This problem perfectly encompasses the use of a message broker, where services such as OCS will emit messages to a bus and only listeners react to them. In this case the following applies:\nThe necessary interfaces are provided to us by go-micro, only implementations are to be done.\n","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1, @fschade Date: 2021-06-30  Context and Problem Statement     There should be a way to impose certain limitations in areas of the code that require licensing. This document researches an approach to achieve this goal, while limiting the scope to the enforcement side of it. The architecture for a policy system must be composed of 2 parts:\n License creation and validation Enforcement  It is desirable to keep both systems isolated, since the implementation of the latter has to be done within the constraints of the codebase."},{"id":36,"href":"/ocis/deployment/continuous_deployment/","title":"Continuous Deployment","parent":"Deployment","content":" oCIS with Traefik  Latest Daily Released   oCIS with WOPI server  Latest Daily Released   oCIS with latest ownCloud Web  Latest Daily   oCIS with Keycloak  Latest Released   Parallel deployment of oC10 and oCIS  Latest   oCIS with Hello extension  Latest   oCIS with S3 storage backend (MinIO)  Latest   oCIS with LDAP for users and groups  Latest Released      We are continuously deploying the following deployment examples. Every example is deployed in two flavors:\n Latest: reflects the current master branch state of oCIS and will be updated with every commit to master Daily: reflects the master branch state of oCIS as of the time of deployment Released: reflects the newest release state (currently latest release of version 1) and will be updated with every release  The configuration for the continuous deployment can be found in the oCIS repository.\noCIS with Traefik     Credentials:\n oCIS: see default demo users  Latest      oCIS: ocis.ocis-traefik.latest.owncloud.works Mail: mail.ocis-traefik.latest.owncloud.works  Daily      oCIS: ocis.ocis-traefik.daily.owncloud.works Mail: mail.ocis-traefik.daily.owncloud.works  Released      oCIS: ocis.ocis-traefik.released.owncloud.works Mail: mail.ocis-traefik.released.owncloud.works  oCIS with WOPI server     Credentials:\n oCIS: see default demo users  Latest      oCIS: ocis.ocis-wopi.latest.owncloud.works Mail: mail.ocis-wopi.latest.owncloud.works  Daily      oCIS: ocis.ocis-wopi.daily.owncloud.works Mail: mail.ocis-wopi.daily.owncloud.works  Released      oCIS: ocis.ocis-wopi.released.owncloud.works Mail: mail.ocis-wopi.released.owncloud.works  oCIS with latest ownCloud Web     Credentials:\n oCIS: see default demo users  Latest      oCIS: ocis.ocis-web.latest.owncloud.works  Daily      oCIS: ocis.ocis-web.daily.owncloud.works  oCIS with Keycloak     Credentials:\n oCIS: see default demo users Keycloak:  username: admin password: admin    Latest      oCIS: ocis.ocis-keycloak.latest.owncloud.works Keycloak admin access: keycloak.ocis-keycloak.latest.owncloud.works Keycloak account management: keycloak.ocis-keycloak.latest.owncloud.works/realms/oCIS/account/#/  Released      oCIS: ocis.ocis-keycloak.released.owncloud.works Keycloak: keycloak.ocis-keycloak.released.owncloud.works Keycloak account management: keycloak.ocis-keycloak.released.owncloud.works/realms/oCIS/account/#/  Parallel deployment of oC10 and oCIS     Credentials:\n oC10 / oCIS: see default demo users Keycloak:  username: admin password: admin   LDAP management:  username: cn=admin,dc=owncloud,dc=com password: admin    Latest      oC10 / oCIS: cloud.oc10-ocis-parallel.latest.owncloud.works LDAP management: ldap.oc10-ocis-parallel.latest.owncloud.works Keycloak: keycloak.oc10-ocis-parallel.latest.owncloud.works  oCIS with Hello extension     Credentials:\n oCIS: see default demo users  Latest      oCIS: ocis.ocis-hello.latest.owncloud.works  oCIS with S3 storage backend (MinIO)     Credentials:\n oCIS: see default demo users MinIO:  access key: ocis secret access key: ocis-secret-key    Latest      oCIS: ocis.ocis-s3.latest.owncloud.works MinIO: minio.ocis-s3.latest.owncloud.works  oCIS with LDAP for users and groups     Credentials:\n oCIS: see default demo users LDAP admin:  username: cn=admin,dc=owncloud,dc=com password: admin    Latest      oCIS: ocis.ocis-ldap.latest.owncloud.works LDAP admin: ldap.ocis-ldap.latest.owncloud.works  Released      oCIS: ocis.ocis-ldap.released.owncloud.works LDAP admin: ldap.ocis-ldap.released.owncloud.works  ","description":"oCIS with Traefik  Latest Daily Released   oCIS with WOPI server  Latest Daily Released   oCIS with latest ownCloud Web  Latest Daily   oCIS with Keycloak  Latest Released   Parallel deployment of oC10 and oCIS  Latest   oCIS with Hello extension  Latest   oCIS with S3 storage backend (MinIO)  Latest   oCIS with LDAP for users and groups  Latest Released      We are continuously deploying the following deployment examples."},{"id":37,"href":"/ocis/development/","title":"Development","parent":"oCIS - ownCloud Infinite Scale","content":"","description":""},{"id":38,"href":"/ocis/deployment/monitoring-tracing/","title":"Monitoring \u0026 Tracing","parent":"Deployment","content":" Overview about the proposed solution  Monitoring \u0026amp; tracing clients Monitoring \u0026amp; tracing server      Monitoring and tracing gives developers and admin insights into a complex system, in this case oCIS.\nIf you are a developer and want to trace during developing you should have a look at example server setup.\nThis documentation describes how to set up a long-running monitoring \u0026amp; tracing infrastructure for one or multiple oCIS servers or deployments. After reading this guide, you also should know everything needed to integrate oCIS into your existing monitoring and tracing infrastructure.\nOverview about the proposed solution      Monitoring \u0026amp; tracing clients     We assume that you already have oCIS deployed on one or multiple servers by using our deployment examples (see rectangle on the left). On these servers our monitoring \u0026amp; tracing clients, namely Telegraf and Jaeger agent, need to be added.\nTelegraf will collect host metrics (CPU, RAM, network, processes, \u0026hellip;) and docker metrics (per container CPU, RAM, network, \u0026hellip;). Telegraf is also configured to scrape metrics from Prometheus metric endpoints which oCIS exposes, this is done by the Prometheus input plugin . The metrics from oCIS and all other metrics gathered will be exposed with the Prometheus output plugin and can therefore be scraped by our monitoring \u0026amp; tracing server.\nJaeger agent is being configured as target for traces in oCIS. It then will receive traces from all oCIS services, add some process tags to them and forward them to our Jaeger collector on our monitoring \u0026amp; tracing server.\nFor more information and how to deploy it, see monitoring \u0026amp; tracing client.\nMonitoring \u0026amp; tracing server     A live version of the monitoring and tracing server for our demo instances is available here: Grafana, Prometheus and Jaeger Query.\nThe monitoring \u0026amp; tracing server is considered as shared infrastructure and is normally used for different services. This means that oCIS is not the only software whose metrics and traces are available on the monitoring server. It is also possible that data of multiple oCIS instances are available on the monitoring server.\nMetrics are scraped, stored and can be queried with Prometheus. For the visualization of these metrics Grafana is used. Because Prometheus is scraping the metrics from the oCIS server (pull model instead of a push model), the Prometheus server must have access to the exposed endpoint of the Telegraf Prometheus output plugin.\nJaeger collector receives traces sent by the Jaeger agent on the oCIS servers and persists them in ElasticSearch. From there the user can query and visualize the traces in Jaeger query or in Grafana. Because Jaeger agent is actively sending traces to the monitoring \u0026amp; tracing server, the server must be reachable from the oCIS server.\nFor more information and how to deploy it, see monitoring \u0026amp; tracing server.\n","description":"Overview about the proposed solution  Monitoring \u0026amp; tracing clients Monitoring \u0026amp; tracing server      Monitoring and tracing gives developers and admin insights into a complex system, in this case oCIS.\nIf you are a developer and want to trace during developing you should have a look at example server setup.\nThis documentation describes how to set up a long-running monitoring \u0026amp; tracing infrastructure for one or multiple oCIS servers or deployments."},{"id":39,"href":"/services/app-registry/apps/","title":"Apps","parent":"App-Registry","content":"oCIS is all about files. But most of the time you want to do something with files that is beyond the basic upload, download and share behavior. Therefore, oCIS has a concept for apps, that can handle specific file types, so-called mime types.\nApp provider capability     The capabilities endpoint (e.g. https://localhost:9200/ocs/v1.php/cloud/capabilities?format=json) gives you following capabilities which are relevant for the app provider:\n{ \u0026#34;ocs\u0026#34;: { \u0026#34;data\u0026#34;: { \u0026#34;capabilities\u0026#34;: { \u0026#34;files\u0026#34;: { \u0026#34;app_providers\u0026#34;: [ { \u0026#34;enabled\u0026#34;: true, \u0026#34;version\u0026#34;: \u0026#34;1.1.0\u0026#34;, \u0026#34;apps_url\u0026#34;: \u0026#34;/app/list\u0026#34;, \u0026#34;open_url\u0026#34;: \u0026#34;/app/open\u0026#34;, \u0026#34;open_web_url\u0026#34;: \u0026#34;/app/open-with-web\u0026#34;, \u0026#34;new_url\u0026#34;: \u0026#34;/app/new\u0026#34; } ] } } } } }   Please note that there might be two or more app providers with different versions. This is not be expected to happen on a regular basis. It was designed for a possible migration period for clients when the app provider needs a breaking change.  App registry     The app registry is the single point where all apps register themselves and their respective supported mime types.\nMime type configuration / creation allow list     The apps will register their supported mime types automatically, so that users can open supported files with them.\nAdministrators can set default applications on a per mime type basis and also allow the creation of new files for certain mime types. This per mime type configuration also features a description, file extension option and an icon.\nIn order to modify the mime type config you need to set STORAGE_APP_REGISTRY_MIMETYPES_JSON=.../mimetypes.json to a valid JSON file with content like this:\n[ { \u0026#34;mime_type\u0026#34;: \u0026#34;application/vnd.oasis.opendocument.text\u0026#34;, \u0026#34;extension\u0026#34;: \u0026#34;odt\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;OpenDocument\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;OpenDocument text document\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://some-website.test/opendocument-text-icon.png\u0026#34;, \u0026#34;default_app\u0026#34;: \u0026#34;Collabora\u0026#34;, \u0026#34;allow_creation\u0026#34;: true }, { \u0026#34;mime_type\u0026#34;: \u0026#34;application/vnd.oasis.opendocument.spreadsheet\u0026#34;, \u0026#34;extension\u0026#34;: \u0026#34;ods\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;OpenSpreadsheet\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;OpenDocument spreadsheet document\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;default_app\u0026#34;: \u0026#34;Collabora\u0026#34;, \u0026#34;allow_creation\u0026#34;: false } ] Fields:\n mime_type is the mime type you want to configure extension is the file extension to be used for new files name is the name of the file / mime type description is a human-readable description of the file / mime type icon URL to an icon which should be used for that mime type default_app name of the default app which opens this mime type when the user doesn\u0026rsquo;t specify one allow_creation is whether a user should be able to create new file from that mime type (true or false)  Listing available apps / mime types     Clients, for example ownCloud Web, need to offer users the available apps to open files and mime types for new file creation. This information can be obtained from this endpoint.\nEndpoint: specified in the capabilities in apps_url, currently /app/list\nMethod: HTTP GET\nAuthentication: None\nRequest example:\ncurl \u0026#39;https://ocis.test/app/list\u0026#39; Response example:\nHTTP status code: 200\n{ \u0026#34;mime-types\u0026#34;: [ { \u0026#34;mime_type\u0026#34;: \u0026#34;application/pdf\u0026#34;, \u0026#34;ext\u0026#34;: \u0026#34;pdf\u0026#34;, \u0026#34;app_providers\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;OnlyOffice\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://www.pikpng.com/pngl/m/343-3435764_onlyoffice-desktop-editors-onlyoffice-logo-clipart.png\u0026#34; } ], \u0026#34;name\u0026#34;: \u0026#34;PDF\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;PDF document\u0026#34; }, { \u0026#34;mime_type\u0026#34;: \u0026#34;application/vnd.oasis.opendocument.text\u0026#34;, \u0026#34;ext\u0026#34;: \u0026#34;odt\u0026#34;, \u0026#34;app_providers\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Collabora\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://www.collaboraoffice.com/wp-content/uploads/2019/01/CP-icon.png\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;OnlyOffice\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://www.pikpng.com/pngl/m/343-3435764_onlyoffice-desktop-editors-onlyoffice-logo-clipart.png\u0026#34; } ], \u0026#34;name\u0026#34;: \u0026#34;OpenDocument\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://some-website.test/opendocument-text-icon.png\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;OpenDocument text document\u0026#34;, \u0026#34;allow_creation\u0026#34;: true, \u0026#34;default_application\u0026#34;: \u0026#34;Collabora\u0026#34; }, { \u0026#34;mime_type\u0026#34;: \u0026#34;text/markdown\u0026#34;, \u0026#34;ext\u0026#34;: \u0026#34;md\u0026#34;, \u0026#34;app_providers\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;CodiMD\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://avatars.githubusercontent.com/u/67865462?v=4\u0026#34; } ], \u0026#34;name\u0026#34;: \u0026#34;Markdown file\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Markdown file\u0026#34;, \u0026#34;allow_creation\u0026#34;: true, \u0026#34;default_application\u0026#34;: \u0026#34;CodiMD\u0026#34; }, { \u0026#34;mime_type\u0026#34;: \u0026#34;application/vnd.ms-word.document.macroenabled.12\u0026#34;, \u0026#34;app_providers\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Collabora\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://www.collaboraoffice.com/wp-content/uploads/2019/01/CP-icon.png\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;OnlyOffice\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://www.pikpng.com/pngl/m/343-3435764_onlyoffice-desktop-editors-onlyoffice-logo-clipart.png\u0026#34; } ] }, { \u0026#34;mime_type\u0026#34;: \u0026#34;application/vnd.ms-powerpoint.template.macroenabled.12\u0026#34;, \u0026#34;app_providers\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Collabora\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://www.collaboraoffice.com/wp-content/uploads/2019/01/CP-icon.png\u0026#34; } ] } ] } Open a file with the ownCloud Web     Endpoint: specified in the capabilities in open_web_url, currently /app/open-with-web\nMethod: HTTP POST\nAuthentication (one of them):\n Authorization header with OIDC Bearer token for authenticated users or basic auth credentials (if enabled in oCIS) X-Access-Token header with a REVA token for authenticated users  Query parameters:\n file_id (mandatory): id of the file to be opened app_name (optional)  default (not given): default app for mime type possible values depend on the app providers for a mimetype from the /app/open endpoint    Request examples:\ncurl -X POST \u0026#39;https://ocis.test/app/open-with-web?file_id=ZmlsZTppZAo=\u0026#39; curl -X POST \u0026#39;https://ocis.test/app/open-with-web?file_id=ZmlsZTppZAo=\u0026amp;app_name=Collabora\u0026#39; Response examples:\nThe URI from the response JSON is intended to be opened with a GET request in a browser. If the user has not yet a session in the browser, a login flow is handled by ownCloud Web.\nHTTP status code: 200\n{ \u0026#34;uri\u0026#34;: \u0026#34;https://.....\u0026#34; } Example responses (error case):\nSee error cases for Open a file with the app provider\nOpen a file with the app provider     Endpoint: specified in the capabilities in open_url, currently /app/open\nMethod: HTTP POST\nAuthentication (one of them):\n Authorization header with OIDC Bearer token for authenticated users or basic auth credentials (if enabled in oCIS) Public-Token header with public link token for public links X-Access-Token header with a REVA token for authenticated users  Query parameters:\n file_id (mandatory): id of the file to be opened app_name (optional)  default (not given): default app for mime type possible values depend on the app providers for a mimetype from the /app/open endpoint   view_mode (optional)  default (not given): highest possible view mode, depending on the file permissions possible values:  write: user can edit and download in the opening app read: user can view and download from the opening app view: user can view in the opening app (download is not possible)     lang (optional)  default (not given): default language of the application (which might maybe use the browser language) possible value is any ISO 639-1 language code. Examples:  de en es \u0026hellip;      Request examples:\ncurl -X POST \u0026#39;https://ocis.test/app/open?file_id=ZmlsZTppZAo=\u0026#39; curl -X POST \u0026#39;https://ocis.test/app/open?file_id=ZmlsZTppZAo=\u0026amp;lang=de\u0026#39; curl -X POST \u0026#39;https://ocis.test/app/open?file_id=ZmlsZTppZAo=\u0026amp;app_name=Collabora\u0026#39; curl -X POST \u0026#39;https://ocis.test/app/open?file_id=ZmlsZTppZAo=\u0026amp;view_mode=read\u0026#39; curl -X POST \u0026#39;https://ocis.test/app/open?file_id=ZmlsZTppZAo=\u0026amp;app_name=Collabora\u0026amp;view_mode=write\u0026#39; Response examples:\nAll apps are expected to be opened in an iframe and the response will give some parameters for that action.\nThere are apps, which need to be opened in the iframe with a form post. The form post must include all form parameters included in the response. For these apps the response will look like this:\nHTTP status code: 200\n{ \u0026#34;app_url\u0026#34;: \u0026#34;https://.....\u0026#34;, \u0026#34;method\u0026#34;: \u0026#34;POST\u0026#34;, \u0026#34;form_parameters\u0026#34;: { \u0026#34;access_token\u0026#34;: \u0026#34;eyJ0...\u0026#34;, \u0026#34;access_token_ttl\u0026#34;: \u0026#34;1634300912000\u0026#34;, \u0026#34;arbitrary_param\u0026#34;: \u0026#34;lorem-ipsum\u0026#34; } } There are apps, which need to be opened in the iframe with a GET request. The GET request must have set all headers included in the response. For these apps the response will look like this:\nHTTP status code: 200\n{ \u0026#34;app_url\u0026#34;: \u0026#34;https://...\u0026#34;, \u0026#34;method\u0026#34;: \u0026#34;GET\u0026#34;, \u0026#34;headers\u0026#34;: { \u0026#34;access_token\u0026#34;: \u0026#34;eyJ0e...\u0026#34;, \u0026#34;access_token_ttl\u0026#34;: \u0026#34;1634300912000\u0026#34;, \u0026#34;arbitrary_header\u0026#34;: \u0026#34;lorem-ipsum\u0026#34; } } Example responses (error case):\n  missing file_id\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;missing file ID\u0026#34; }   wrong view_mode\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;invalid view mode\u0026#34; }   unknown app_name\nHTTP status code: 404\n{ \u0026#34;code\u0026#34;: \u0026#34;RESOURCE_NOT_FOUND\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;error: not found: app \u0026#39;Collabora\u0026#39; not found\u0026#34; }   wrong / invalid file id\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;invalid file ID\u0026#34; }   file id does not point to a file\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;the given file id does not point to a file\u0026#34; }   file does not exist / unauthorized to open the file\nHTTP status code: 404\n{ \u0026#34;code\u0026#34;: \u0026#34;RESOURCE_NOT_FOUND\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;file does not exist\u0026#34; }   invalid language code\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;lang parameter does not contain a valid ISO 639-1 language code\u0026#34; }   Creating a file with the app provider     Endpoint: specified in the capabilities in new_file_url, currently /app/new\nMethod: HTTP POST\nAuthentication (one of them):\n Authorization header with OIDC Bearer token for authenticated users or basic auth credentials (if enabled in oCIS) Public-Token header with public link token for public links X-Access-Token header with a REVA token for authenticated users  Query parameters:\n parent_container_id (mandatory): ID of the folder in which the file will be created filename (mandatory): name of the new file template (optional): not yet implemented  Request examples:\ncurl -X POST \u0026#39;https://ocis.test/app/new?parent_container_id=c2lkOmNpZAo=\u0026amp;filename=test.odt\u0026#39; Response example:\nYou will receive a file id of the freshly created file, which you can use to open the file in an editor.\n{ \u0026#34;file_id\u0026#34;: \u0026#34;ZmlsZTppZAo=\u0026#34; } Example responses (error case):\n  missing parent_container_id\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;missing parent container ID\u0026#34; }   missing filename\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;missing filename\u0026#34; }   parent container not found\nHTTP status code: 404\n{ \u0026#34;code\u0026#34;: \u0026#34;RESOURCE_NOT_FOUND\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;the parent container is not accessible or does not exist\u0026#34; }   parent_container_id does not point to a container\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;the parent container id does not point to a container\u0026#34; }   filename is invalid (e.g. includes a path segment)\nHTTP status code: 400\n{ \u0026#34;code\u0026#34;: \u0026#34;INVALID_PARAMETER\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;the filename must not contain a path segment\u0026#34; }   file already exists\nHTTP status code: 403\n{ \u0026#34;code\u0026#34;: \u0026#34;RESOURCE_ALREADY_EXISTS\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;the file already exists\u0026#34; }   App drivers     App drivers represent apps, if the app is not able to register itself. Currently there is only the CS3org WOPI server app driver.\nCS3org WOPI server app driver     The CS3org WOPI server app driver is included in oCIS by default. It needs at least one WOPI compliant app (e.g. Collabora, OnlyOffice or Microsoft Online Server) or a CS3org WOPI bridge supported app (CodiMD or Etherpad) and the CS3org WOPI server.\nHere is a closer look at the configuration of the actual app provider in a docker-compose example (see also full example):\nservices:ocis:image:owncloud/ocis:latest...environment:...GATEWAY_GRPC_ADDR:0.0.0.0:9142# make the REVA gateway accessible to the app driversocis-appdriver-collabora:image:owncloud/ocis:latestcommand:storage-app-provider server# start only the app driverenvironment:STORAGE_GATEWAY_ENDPOINT:ocis:9142# oCIS gateway endpointAPP_PROVIDER_GRPC_ADDR:0.0.0.0:9164APP_PROVIDER_EXTERNAL_ADDR:ocis-appdriver-collabora:9164# how oCIS can reach this app driverOCIS_JWT_SECRET:ocis-jwt-secretAPP_PROVIDER_DRIVER:wopiAPP_PROVIDER_WOPI_DRIVER_APP_NAME:Collabora# will be used as name for this appAPP_PROVIDER_WOPI_DRIVER_APP_ICON_URI:https://www.collaboraoffice.com/wp-content/uploads/2019/01/CP-icon.png# will be used as icon for this appAPP_PROVIDER_WOPI_DRIVER_APP_URL:https://collabora.owncloud.test# endpoint of collaboraAPP_PROVIDER_WOPI_DRIVER_INSECURE:falseAPP_PROVIDER_WOPI_DRIVER_IOP_SECRET:wopi-iop-secretAPP_PROVIDER_WOPI_DRIVER_WOPI_URL:https://wopiserver.owncloud.test# endpoint of the CS3org WOPI server","description":"oCIS is all about files. But most of the time you want to do something with files that is beyond the basic upload, download and share behavior. Therefore, oCIS has a concept for apps, that can handle specific file types, so-called mime types.\nApp provider capability     The capabilities endpoint (e.g. https://localhost:9200/ocs/v1.php/cloud/capabilities?format=json) gives you following capabilities which are relevant for the app provider:\n{ \u0026#34;ocs\u0026#34;: { \u0026#34;data\u0026#34;: { \u0026#34;capabilities\u0026#34;: { \u0026#34;files\u0026#34;: { \u0026#34;app_providers\u0026#34;: [ { \u0026#34;enabled\u0026#34;: true, \u0026#34;version\u0026#34;: \u0026#34;1."},{"id":40,"href":"/clients/web/docs/getting-started/","title":"Getting Started","parent":"ownCloud Web","content":"   Installation  Docker Source code   Configuration    Options   Sentry   Setting up backend and running Running      Installation     Docker     Make sure to have Docker, Docker-Compose, Node.js and pnpm installed.\n This setup currently doesn\u0026rsquo;t work on Windows out of the box.\n Workaround One of our contributors has opened a PR to a dependency that prevents us from successfully bundling the frontend. Feel free to check out [his changes](https://github.com/egoist/rollup-plugin-postcss/pull/384) and build them locally if you absolutely want to work on Windows.    After cloning the source code, install the dependencies via pnpm install and bundle the frontend code by running pnpm build:w.\nThen, you can start the backends by running docker-compose up oc10 ocis and access them via https://host.docker.internal:9200 (oCIS) and http://host.docker.internal:8080 (OC10). If you\u0026rsquo;re not using Docker Desktop, you might have to modify your /etc/hosts and add 172.17.0.1 docker.host.internal to make the host.docker.internal links work.\nThe bundled frontend code automatically gets mounted into the Docker containers, recompiles on changes and you can log in using the demo user (admin/admin) and take a look around!\nSource code     The source code is hosted at https://github.com/owncloud/web. Please refer to the build documentation for Web.\nConfiguration     Depending on the backend you are using, there are sample config files provided in the config folder of the ownCloud Web git repository. See below for available backends. Also, find some of the configuration details below.\nOptions      options.homeFolder You can specify a folder that is used when the user navigates home. Navigating home gets triggered by clicking on the All files menu item. The user will not be jailed in that directory. It simply serves as a default location. You can either provide a static location, or you can use variables of the user object to come up with a user specific home path. This uses twig template variable style and allows you to pick a value or a substring of a value of the authenticated user. Examples are /Shares, /{{.Id}} and /{{substr 0 3 .Id}}/{{.Id}. options.disablePreviews Set this option to true to disable previews in all the different file listing views. The only list view that is not affected by this is the trash bin, as that doesn\u0026rsquo;t allow showing previews at all. options.previewFileMimeTypes Specifies which mimeTypes will be previewed in the ui. For example to only preview jpg and text files set this option to [\u0026quot;image/jpeg\u0026quot;, \u0026quot;text/plain\u0026quot;]. options.disableFeedbackLink Set this option to true to disable the feedback link in the topbar. Keeping it enabled (value false or absence of the option) allows ownCloud to get feedback from your user base through a dedicated survey website. options.feedbackLink This accepts an object with the following optional fields to customize the feedback link in the topbar:  options.feedbackLink.href Set a different target URL for the feedback link. Make sure to prepend it with http(s)://. Defaults to https://owncloud.com/web-design-feedback. options.feedbackLink.ariaLabel Since the link only has an icon, you can set an e.g. screen reader accessible label. Defaults to ownCloud feedback survey. options.feedbackLink.description Provide any description you want to see as tooltip and as accessible description. Defaults to Provide your feedback: We'd like to improve the web design and would be happy to hear your feedback. Thank you! Your ownCloud team.   options.sharingRecipientsPerPage Sets the amount of users shown as recipients in the dropdown when sharing resources. Default amount is 200. options.sidebar.shares.showAllOnLoad Sets the list of (link) shares list in the sidebar to be initially expanded (default is a collapsed state, only showing the first three shares). options.runningOnEos Set this option to true if running on an EOS storage backend to enable its specific features. Defaults to false. options.cernFeatures Enabling this will activate CERN-specific features. Defaults to false. options.hoverableQuickActions Set this option to true to hide the quick actions (buttons appearing on file rows), and only show them when the user hovers the row with his mouse. Defaults to false. option.routing This accepts an object with the following fields to customize the routing behaviour:  options.routing.idBased Enable or disable fileIds being added to the URL. Defaults to true because otherwise e.g. spaces with name clashes can\u0026rsquo;t be resolved correctly. Only disable this if you can guarantee server side that spaces of the same namespace can\u0026rsquo;t have name clashes.   options.upload.xhr.timeout Specifies the timeout for XHR uploads in milliseconds.  Sentry     Web supports Sentry to provide monitoring and error tracking. To enable sending data to a Sentry instance, you can use the following configuration keys:\n sentry.dsn Should contain the DSN for your sentry project. sentry.environment: Lets you specify the enviroment to use in Sentry. Defaults to production.  Any other key under sentry will be forwarded to the Sentry initialization. You can find out more settings in the Sentry docs.\n If you are using an old version of Sentry (9 and before), you might want to add the setting sentry.autoSessionTracking: false to avoid errors related to breaking changes introduced in the integration libraries.  Setting up backend and running     Web can run against either ownCloud 10 as backend or oCIS. Depending which one you chose, please check the matching section:\n Setting up with ownCloud as backend Setting up with oCIS as backend  Running      Running with ownCloud as backend Running with oCIS as backend  ","description":"Installation  Docker Source code   Configuration    Options   Sentry   Setting up backend and running Running      Installation     Docker     Make sure to have Docker, Docker-Compose, Node.js and pnpm installed.\n This setup currently doesn\u0026rsquo;t work on Windows out of the box.\n Workaround One of our contributors has opened a PR to a dependency that prevents us from successfully bundling the frontend."},{"id":41,"href":"/clients/web/getting-started/","title":"Getting Started","parent":"ownCloud Web","content":"   Installation  Docker Source code   Configuration    Options   Sentry   Setting up backend and running Running      Installation     Docker     Make sure to have Docker, Docker-Compose, Node.js and pnpm installed.\n This setup currently doesn\u0026rsquo;t work on Windows out of the box.\n Workaround One of our contributors has opened a PR to a dependency that prevents us from successfully bundling the frontend. Feel free to check out [his changes](https://github.com/egoist/rollup-plugin-postcss/pull/384) and build them locally if you absolutely want to work on Windows.    After cloning the source code, install the dependencies via pnpm install and bundle the frontend code by running pnpm build:w.\nThen, you can start the backends by running docker-compose up oc10 ocis and access them via https://host.docker.internal:9200 (oCIS) and http://host.docker.internal:8080 (OC10). If you\u0026rsquo;re not using Docker Desktop, you might have to modify your /etc/hosts and add 172.17.0.1 docker.host.internal to make the host.docker.internal links work.\nThe bundled frontend code automatically gets mounted into the Docker containers, recompiles on changes and you can log in using the demo user (admin/admin) and take a look around!\nSource code     The source code is hosted at https://github.com/owncloud/web. Please refer to the build documentation for Web.\nConfiguration     Depending on the backend you are using, there are sample config files provided in the config folder of the ownCloud Web git repository. See below for available backends. Also, find some of the configuration details below.\nOptions      options.homeFolder You can specify a folder that is used when the user navigates home. Navigating home gets triggered by clicking on the All files menu item. The user will not be jailed in that directory. It simply serves as a default location. You can either provide a static location, or you can use variables of the user object to come up with a user specific home path. This uses twig template variable style and allows you to pick a value or a substring of a value of the authenticated user. Examples are /Shares, /{{.Id}} and /{{substr 0 3 .Id}}/{{.Id}. options.openAppsInTab Configures whether apps and extensions generally should open in a new tab. Defaults to false. options.disablePreviews Set this option to true to disable previews in all the different file listing views. The only list view that is not affected by this is the trash bin, as that doesn\u0026rsquo;t allow showing previews at all. options.previewFileMimeTypes Specifies which mimeTypes will be previewed in the ui. For example to only preview jpg and text files set this option to [\u0026quot;image/jpeg\u0026quot;, \u0026quot;text/plain\u0026quot;]. options.accountEditLink This accepts an object with the following optional fields to have a link on the account page:  options.accountEditLink.href Set a different target URL for the edit link. Make sure to prepend it with http(s)://.   options.disableFeedbackLink Set this option to true to disable the feedback link in the topbar. Keeping it enabled (value false or absence of the option) allows ownCloud to get feedback from your user base through a dedicated survey website. options.feedbackLink This accepts an object with the following optional fields to customize the feedback link in the topbar:  options.feedbackLink.href Set a different target URL for the feedback link. Make sure to prepend it with http(s)://. Defaults to https://owncloud.com/web-design-feedback. options.feedbackLink.ariaLabel Since the link only has an icon, you can set an e.g. screen reader accessible label. Defaults to ownCloud feedback survey. options.feedbackLink.description Provide any description you want to see as tooltip and as accessible description. Defaults to Provide your feedback: We'd like to improve the web design and would be happy to hear your feedback. Thank you! Your ownCloud team.   options.sharingRecipientsPerPage Sets the amount of users shown as recipients in the dropdown when sharing resources. Default amount is 200. options.sidebar.shares.showAllOnLoad Sets the list of (link) shares list in the sidebar to be initially expanded (default is a collapsed state, only showing the first three shares). options.runningOnEos Set this option to true if running on an EOS storage backend to enable its specific features. Defaults to false. options.cernFeatures Enabling this will activate CERN-specific features. Defaults to false. options.hoverableQuickActions Set this option to true to hide the quick actions (buttons appearing on file rows), and only show them when the user hovers the row with his mouse. Defaults to false. option.routing This accepts an object with the following fields to customize the routing behaviour:  options.routing.idBased Enable or disable fileIds being added to the URL. Defaults to true because otherwise e.g. spaces with name clashes can\u0026rsquo;t be resolved correctly. Only disable this if you can guarantee server side that spaces of the same namespace can\u0026rsquo;t have name clashes.   options.upload.xhr.timeout Specifies the timeout for XHR uploads in milliseconds. options.editor.autosaveEnabled Specifies if the autosave for the editor apps is enabled. options.editor.autosaveInterval Specifies the time interval for the autosave of editor apps in seconds.  Sentry     Web supports Sentry to provide monitoring and error tracking. To enable sending data to a Sentry instance, you can use the following configuration keys:\n sentry.dsn Should contain the DSN for your sentry project. sentry.environment: Lets you specify the enviroment to use in Sentry. Defaults to production.  Any other key under sentry will be forwarded to the Sentry initialization. You can find out more settings in the Sentry docs.\n If you are using an old version of Sentry (9 and before), you might want to add the setting sentry.autoSessionTracking: false to avoid errors related to breaking changes introduced in the integration libraries.  Setting up backend and running     Web can run against either ownCloud 10 as backend or oCIS. Depending which one you chose, please check the matching section:\n Setting up with ownCloud as backend Setting up with oCIS as backend  Running      Running with ownCloud as backend Running with oCIS as backend  ","description":"Installation  Docker Source code   Configuration    Options   Sentry   Setting up backend and running Running      Installation     Docker     Make sure to have Docker, Docker-Compose, Node.js and pnpm installed.\n This setup currently doesn\u0026rsquo;t work on Windows out of the box.\n Workaround One of our contributors has opened a PR to a dependency that prevents us from successfully bundling the frontend."},{"id":42,"href":"/services/idm/admin_password_reset/","title":"Resetting a lost administrator password","parent":"IDM","content":"Resetting a lost administrator password     By default, when using oCIS with the builtin IDM an ad generates the user admin (DN uid=admin,ou=users,o=libregraph-idm) if, for any reason, the password of that user is lost, it can be reset using the resetpassword sub-command:\nocis idm resetpassword It will prompt for a new password and set the password of that user accordingly. Note: As this command is accessing the idm database directly will only work while ocis is not running and nothing else is accessing database.\n","description":"Resetting a lost administrator password     By default, when using oCIS with the builtin IDM an ad generates the user admin (DN uid=admin,ou=users,o=libregraph-idm) if, for any reason, the password of that user is lost, it can be reset using the resetpassword sub-command:\nocis idm resetpassword It will prompt for a new password and set the password of that user accordingly. Note: As this command is accessing the idm database directly will only work while ocis is not running and nothing else is accessing database."},{"id":43,"href":"/ocis/adr/0011-global-url-format/","title":"11. WebUI URL format","parent":"Architecture Decisions","content":" Status: accepted Deciders: @refs, @butonic, @micbar, @dragotin, @hodyroff, @pmaier1, @fschade, @tbsbdr, @kulmann Date: 2021-07-07  Context and Problem Statement     When speaking about URLs we have to make a difference between browser URLs and API URLs. Only browser URLs are visible to end users and will be bookmarked. The currently existing and bookmarked ownCloud 10 URLs look something like this:\nGET https://demo.owncloud.com/apps/files/?dir=/path/to/resource\u0026amp;fileid=5472225 303 Location: https://demo.owncloud.com/apps/files/?dir=/path/to/resource When the URL contains a fileid parameter the server will look up the corresponding dir, overwriting whatever was set before the redirect. The fileid always takes precedence and the server is responsible for the lookup.\nGET https://demo.owncloud.com/apps/files/?dir=/path/to/resource The dir parameter is then used to make a WebDAV request against the /dav/files endpoint of the currently logged-in user:\nPROPFIND https://demo.owncloud.com/remote.php/dav/files/demo/path/to/resource The resulting PROPFIND response is used to render the file listing. All good so far.\nFor the new ocis web UI we want to clean up the user visible Browser URLs. They currently look like this:\nhttps://demo.owncloud.com/#/files/list/all/path/to/resource Currently, there is no fileid like parameter in the browser URL, making bookmarks of it fragile (they break when a bookmarked folder is renamed).\nThe oCIS web UI just takes the path and uses the /webdav endpoint of the currently logged-in user:\nPROPFIND https://demo.owncloud.com/remote.php/webdav/path/to/resource With the new ownCloud web client (owncloud/web)\nneeds to interpret them to make API calls. With this in mind, this is the current mapping on ownCloud Web with OC10 and OCIS backend:\n    Browser URL API URL     OC10 + classic WebUI https://demo.owncloud.com/apps/files/?dir=/path/to/resource\u0026amp;fileid=5472225 https://demo.owncloud.com/remote.php/dav/files/demo/path/to/resource   OC10 + OCIS WebUI https://web.owncloud.com/index.html#/files/list/all/path%2Fto%2Fresource https://demo.owncloud.com/remote.php/webdav/path/to/resource   OCIS https://demo.owncloud.com/#/files/list/all/path/to/resource https://demo.owncloud.com/remote.php/webdav/path/to/resource    On an OC10 backend the fileid query parameter takes precedence over the dir. In fact if dir is invalid but fileid isn\u0026rsquo;t, the resolution will succeed, as opposed to if the fileid is wrong (doesn\u0026rsquo;t exist) and dir correct, resolution will fail altogether with a 404.\nThis ADR is limited to the scope of \u0026ldquo;how will a web client deal with the browser URL?\u0026rdquo;. The API URLs will change with the spaces concept to https://demo.owncloud.com/dav/spaces/\u0026lt;space_id\u0026gt;/relative/path/to/resource. The Web UI can look up a space id and the mount path using the /graph/v1.0/drives API:\n TODO for a given resource id as part of the URL the https://demo.owncloud.com/v1.0/drive/items/123456A14B0A7750!359?$select=parentReference can be used to retrieve the drive/space:  { \u0026#34;parentReference\u0026#34;: { \u0026#34;driveId\u0026#34;: \u0026#34;123456a14b0a7750\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;personal\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;123456A14B0A7750!357\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/drive/root:\u0026#34; } } TODO to fetch the list of all spaces with their mount points we need an API endpoint that allows clients (not only the web ui) to \u0026lsquo;sync\u0026rsquo; the list of storages a user has access to from the storage registry on the server side. This allows clients to directly talk to a storage provider on another instance, allowing true storage federation. The MS graph api has no notion of mount points, so we will need to add a mountpath (or mountpoint? or alias?) to our drive resource properties in the libreGraph spec. Tracked in https://github.com/owncloud/open-graph-api/issues/6   @jfd: The graph api returns a path in the parentReference, which is part of the root in a drive resource. But it contains a value in the namespace of the graph endpoint, e.g.: /drive/root:/Bilder for the /Bilder folder in the root of the currently logged-in users personal drive/space. Which is again relative to the drive. To give the clients a way to determine the mount point we need to add a new mountpath/point/alias property.  Decision Drivers      To reveal relevant context to the user URLs should either carry a path component or a meaningful alias To prevent bookmarks from breaking URLs should have an id component that can be used by the system to lookup the resource  Considered Options      Existing ownCloud 10 URLs ID based URLs Path based URLs Space based URLs Mixed Global URLs Configurable path component in URLs  Decision Outcome     Chosen option: \u0026ldquo;Mixed global URLs\u0026rdquo;, because it meets the requirement to contain a path and a stable identifier.\nPositive Consequences      The path makes it \u0026ldquo;human readable\u0026rdquo; The URL can be bookmarked The bookmarked URLs remain stable even if the path changes All URLs can be shortened to hide any metadata like path, resource name and query parameters  Negative Consequences      the web UI needs to look up the space alias in a registry to build an API request for the /dav/space endpoint  Pros and Cons of the Options     Existing OwnCloud 10 URLs     The existing ownCloud 10 URLs look like this\n   URL comment     https://\u0026lt;host\u0026gt;/apps/files/?dir=\u0026lt;path\u0026gt;\u0026amp;fileid=\u0026lt;fileid\u0026gt; pattern   https://demo.owncloud.com/apps/files/?dir=/\u0026amp;fileid=18 root of the currently logged in user   https://demo.owncloud.com/index.php/apps/files/?dir=/path/to/resource\u0026amp;fileid=192 sub folder /path/to/resource    It contains a path and a fileid (which takes precedence).\n Good, because the fileid prevents bookmarks from breaking Good, because the dir reveals context in the form of a path Bad, because the web UI needs to look up the space alias in a registry to build an API request for the /dav/space endpoint Bad, because URLs still contain a long prefix (/index.php)/apps/files Bad, because the fileid needs to be accompanied by a storageid to allow efficient routing in ocis Bad, because if not configured properly an additional /index.php prefixes the route Bad, because power users cannot navigate by updating only the path in the URL, as the fileid takes precedence. They have to delete the fileid to navigate  ID based URLs     MS OneDrive has URLs like this:\n   URL comment     https://\u0026lt;host\u0026gt;/?id=\u0026lt;fileid\u0026gt;(\u0026amp;cid=\u0026lt;cid\u0026gt;) pattern, the cid is optional but added automatically   https://onedrive.live.com/?id=root\u0026amp;cid=A12345A14B0A7750 root of a personal drive   https://onedrive.live.com/?id=A12345A14B0A7750%21359\u0026amp;cid=A12345A14B0A7750 sub folder in a personal drive    It contains only IDs but no folder names. The fileid is a URL encoded \u0026lt;cid\u0026gt;!\u0026lt;numericid\u0026gt;. Very similar to the CS3 resourceid which consists of storageid and nodeid.\n Good, because bookmarks cannot break Good, because URLs do not disclose unshared path segments Bad, because the web UI needs to look up the space id in a registry to build an API request for the /dav/space endpoint Bad, because URLs reveal no context to users  Path based URLs     There is a customized ownCloud instance that uses path only based URLs:\n   URL comment     https://\u0026lt;host\u0026gt;/apps/files/?dir=/\u0026amp; root of the currently logged in user   https://demo.owncloud.com/apps/files/?dir=/\u0026amp; root of the currently logged in user   https://demo.owncloud.com/apps/files/?dir=/path/to/resource\u0026amp; sub folder /path/to/resource     Good, because the URLs reveal the full path context to users Good, because power users can navigate by updating the path in the url Bad, because the web UI needs to look up the space id in a registry to build an API request for the /dav/space endpoint Bad, because the bookmarks break when someone renames a folder in the path Bad, because there is no id that can be used as a fallback lookup mechanism Bad, because URLs might leak too much context (parent folders of shared files)  Space based URLs        URL comment     https://\u0026lt;host\u0026gt;/#/s/\u0026lt;space_id\u0026gt;(/\u0026lt;relative/path\u0026gt;)(?id=\u0026lt;resource_id\u0026gt;) the pattern, relative path and resource_id are optional   https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607 root of a storage space, might be the currently logged in users home   https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607/relative/path/to/resource sub folder /relative/path/to/resource in the storage with id b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607, works only if path still exists   https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607/relative/path/to/resource?id=ba4c1820-df12-11eb-8dcd-ff21f12c1264:beb78dd6-df12-11eb-a05c-a395505126f6 sub folder /relative/path/to/resource in the storage with id b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607, lookup can fall back to the id      /# is used by the current vue router. /s denotes that this is a space url. \u0026lt;space_id\u0026gt; and \u0026lt;resource_id\u0026gt; both consist of \u0026lt;storage_id\u0026gt;:\u0026lt;node_id\u0026gt;, but the space_id can be replaced with a shorter id or an alias. See further down below. \u0026lt;relative/path\u0026gt; takes precedence over the \u0026lt;resource_id\u0026gt;, both are optional     Good, because the web UI does not need to look up the space id in a registry to build an API request for the /dav/space endpoint Good, because the URLs reveal a relevant path context to users Good, because everything after the # is not sent to the server, building the webdav request to list the folder is offloaded to the clients Good, because power users can navigate by updating the path in the url Bad, because the current ids are uuid based, leading to very long URLs where the path component nearly vanishes between two very long strings Bad, because the # in the URL is just a technical requirement Bad, because ocis web requires a /#/files/s at the root of the route to distinguish the files app from other apps Bad, while navigating using the WebUI, the URL has to be updated whenever we change spaces. Bad, because the technical \u0026lt;space_id\u0026gt; is meaningless to end users  With the above explained, let\u0026rsquo;s see some use cases:\nExample 1: UserA shares something from her Home folder with UserB      open the browser and go to demo.owncloud.com the browser\u0026rsquo;s url changes to: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607. You\u0026rsquo;re now in YOUR home folder / personal space. you create a new folder /relative/path/to/resource and navigate into /relative/path/to  the URL now changes to: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607/relative/path/to   You share resource with some else You navigate into /relative/path/to/resource  now the URL would look like: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:3a9305da-df17-11eb-ab99-abe09d93e08a    As you can see, even if you\u0026rsquo;re the owner of /relative/path/to/resource and navigate into it, the URL changes due to a new space being entered. This ensures that while working in your home folder, copying URLs and giving them to the person you share the resource with, the receiver can still navigate within the new space.\nIn short terms, while navigating using the WebUI, the URL has to constantly change whenever we change spaces to reflect the most explicit one.\nExample 2: UserA shares something from a Workspace     Assuming we only have one storage provider; a consequence of this, all storage spaces will start with the same storage_id.\n open the browser and go to demo.owncloud.com the browser\u0026rsquo;s url changes to: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607. You\u0026rsquo;re now in YOUR home folder / personal space. you have access to a workspace called foo (created by an admin) navigate into workspace foo  the URL now changes to: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:d342f9ce-df18-11eb-b319-1b6d9df4bc74. You are now at the root of the workspace foo.  because we only have one storage provider, the space_id section of the URL only updates the node_id part of it. had we had more than one storage provider, the space_id would depend on which storage provider contains the storage space.     you create a folder /relative/path/to/resource you navigate into /relative/path/to/resource  now the URL would look like: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:d342f9ce-df18-11eb-b319-1b6d9df4bc74/relative/path/to/resource or a more robust url: https://demo.owncloud.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:d342f9ce-df18-11eb-b319-1b6d9df4bc74/relative/path/to/resource?id=b78c2044-5b51-446f-82f6-907a664d089c:04f1991c-df19-11eb-9cc7-3b09f04f9ca3    Spaces Registry     A big drawback against this idea is that the length of the URL is increased by a lot, rendering them almost unreadable. Introducing a Spaces Registry (SR) would shorten them. Let\u0026rsquo;s see how.\nA URL without a SR would look like: https://ocis.com/#/s/b78c2044-5b51-446f-82f6-907a664d089c:d342f9ce-df18-11eb-b319-1b6d9df4bc74/TEST?id=b78c2044-5b51-446f-82f6-907a664d089c:04f1991c-df19-11eb-9cc7-3b09f04f9ca3 The same URL with a SR https://ocis.com/#/s/workspaceFoo/TEST?id=b78c2044-5b51-446f-82f6-907a664d089c:04f1991c-df19-11eb-9cc7-3b09f04f9ca3\nSpace Registry resolution can happen at the client side (i.e: the client keeps a list of space name -\u0026gt; space id [where space id = storageid + nodeid]; the client queries a SR) or server side. Server side is more resilient due to clients can have limited networking; for instance if they are running on a tight intranet.\nMixed Global URLs     While ID based space URLs can be made more readable by shortening the IDs they only start to reveal context when an alias is used instead of the space id. These aliases however have to be unique identifiers. These aliases should live in namespaces like /workspaces/marketing and /personal/marketing to make phishing attacks harder (in this case a user that registered with the username marketing). But namespaced aliases is semantically equivalent to \u0026hellip; a path hierarchy.\nWhen every space has a namespaced alias and a relative path we can build a global namespace:\n   URL comment     https://\u0026lt;host\u0026gt;/files\u0026lt;/namespaced/alias\u0026gt;\u0026lt;/relative/path/to/resource\u0026gt;?id=\u0026lt;resource_id\u0026gt; the pattern, /files might become optional   https://demo.owncloud.com/files/personal/einstein/?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21607 root of user einstein   https://demo.owncloud.com/files/personal/einstein/relative/path/to/resource?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21608 sub folder /relative/path/to/resource   https://demo.owncloud.com/files/shares/einstein/somesharename?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21608 shared URL for /relative/path/to/resource   https://demo.owncloud.com/files/personal/einstein/marie is stupid/and richard as well/resource?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21608 sub folder marie is stupid/and richard as well/resource \u0026hellip; something einstein might not want to reveal   https://demo.owncloud.com/files/shares/einstein/resource (2)?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21608 named link URL for /marie is stupid/and richard as well/resource, does not disclose the actual hierarchy, has an appended counter to avoid a collision   https://demo.owncloud.com/files/shares/einstein/mybestfriends?id=b78c2044-5b51-446f-82f6-907a664d089c:194b4a97-597c-4461-ab56-afd4f5a21608 named link URL for /marie is stupid/and richard as well/resource, does not disclose the actual hierarchy, has a custom alias for the share   https://demo.owncloud.com/files/public/kcZVYaXr7oZ66bg/relative/path/to/resource sub folder /relative/path/to/resource in public link with token kcZVYaXr7oZ66bg   https://demo.owncloud.com/files/public/kcZVYaXr7oZ66bg/relative/path/to/resource sub folder /relative/path/to/resource in public link with token kcZVYaXr7oZ66bg   https://demo.owncloud.com/s/kcZVYaXr7oZ66bg/ shortened link to a resource. This is needed to be able to copy a link to a resource without leaking any metadata.    \u0026lt;/namespaced/alias\u0026gt;\u0026lt;/relative/path/to/resource\u0026gt; is the global path in the CS3 api. The CS3 Storage Registry is responsible by managing the mount points.\nIn order to be able to copy and paste URLs all resources must be uniquely identifiable:\n Instead of /home the URL always has to reflect the user: /personal/einstein Workspaces can use /workspaces/\u0026lt;alias\u0026gt; or /workspaces/\u0026lt;additional\u0026gt;/\u0026lt;classification\u0026gt;/\u0026lt;alias\u0026gt; where the hierarchy is given by the organization Experiments can use /experiments/\u0026lt;alias\u0026gt; Research institutes could set up /papers/\u0026lt;researchgroup\u0026gt;/\u0026lt;alias\u0026gt; Trash could be accessed by prefixing the namespace alias with /trash? or using /trash/\u0026lt;space_id\u0026gt; Instead of a namespaced alias a storage space id could be used with a generic /space/\u0026lt;space_id\u0026gt; namespace An url shortener can create urls like /s/\u0026lt;token\u0026gt; which could be used as a stable link to a resource. Links for anonymous users will resolve to /public/\u0026lt;token\u0026gt;  The alias namespace hierarchy and depth can be pre-determined by the admin. Even if aliases change the id parameter prevents bookmarks from breaking. A user can decide to build a different hierarchy by using his own registry.\nWhat about shares? Similar to /home it must reflect the user: /shares/einstein would list all shares by einstein for the currently logged-in user. The ui needs to apply the same URL rewriting as for space based URLs: when navigating into a share the URL has to switch from /personal/einstein/relative/path/to/shared/resource to /shares/einstein/\u0026lt;unique and potentially namespaced alias for shared resource\u0026gt;. When more than one resource was shared a name collision would occur. To prevent this we can use ids /shares/einstein/id/\u0026lt;resource_id or namespaced aliases /shares/einstein/files/alias. Similar to the /trash prefix we could treat /shares as a filter for the shared resources a user has access to, but that would disclose unshared path segments in personal spaces. We could make that a feature and let users create an alias for a shared resource, similar as for public links. Then they can decide if they want to disclose the full path in their personal space (or another workspace) or if they want to use an alias which is then accessed at /shares/einstein/\u0026lt;alias\u0026gt;. As a default we could take the alias at creation time from the filename. That way two shares to a resource with the same name, e.g.: /personal/einstein/project AAA/foo and /personal/einstein/project BBB/foo would lead to /shares/einstein/foo (a CS3 internal reference to /personal/einstein/project AAA/foo) and /shares/einstein/foo (2) (a CS3 internal reference to /personal/einstein/project BBB/foo). foo (2) would keep its name even when foo is deleted or renamed. Well an id as the alias might be better then, because users might rename these aliases, which would break URLs if they have been bookmarked. In any case this would make end user more aware of what they share AND it would allow them to choose an arbitrary context for the links they want to send out: personal internal share URLs.\nWith these different namespaces the /files part in the URL becomes obsolete, because the files application can be registered for multiple namespaces: /personal, /workspaces, /shares, /trash \u0026hellip;\n Good, because it contains a global path Good, because spaces with namespaced aliases can be bookmarked and copied into mails or chat without disclosing unshared path segments, as the space is supposed to be shared Good, because the UI can detect broken paths and notify the user to update his bookmark if the resource could be found by id Good, because the /files part might only be required for id only based lookup to let the web ui know which app is responsible for the route Good, because it turns shares into deliberately named spaces in /shares/\u0026lt;owner\u0026gt;/\u0026lt;alias\u0026gt; Good, because all urls can be shortened to hide any metadata like path, resource name and query parameters Bad, because the web UI needs to look up the space alias in a registry to build an API request for the /dav/space endpoint  Configurable path component in URLs     Not every deployment may have the requirement to have the path in the URL. We could use id only based URLs, similar to onedrive and make showing paths configurable.\n   URL comment     https://\u0026lt;host\u0026gt;/files?id=\u0026lt;resource_id\u0026gt; default id based navigation   https://\u0026lt;host\u0026gt;/files\u0026lt;/namespaced/alias\u0026gt;\u0026lt;/relative/path/to/resource\u0026gt;?id=\u0026lt;resource_id\u0026gt; optional path based navigation with fallback to id    In contrast to ownCloud 10 path takes precedence and the user is warned when the fileid in his bookmark no longer matches the id on the server: sth. like \u0026ldquo;The path of the resource has changed, please verify and update your bookmark!\u0026rdquo;\nWhen a file is selected the filename also becomes part of the URL so individual files can be bookmarked.\nIf navigation is id based we need to look up the path for the id so we can make a webdav request, or we need to implement the graph drives and driveItem resources.\nThe URL https://\u0026lt;host\u0026gt;/files?id=\u0026lt;resource_id\u0026gt;̀ is sent to the server. It has to look up the correct path and redirect the request, including the path. But that would make all bookmarks contain tha path again, even if paths were configured to not be part of the URL.\nThe /meta/\u0026lt;fileid\u0026gt; webdav endpoint can be used to look up the path with property meta-path-for-user.\nFor now, we would use path based navigation with URLs like this:\nhttps://\u0026lt;host\u0026gt;/files\u0026lt;/namespaced/alias\u0026gt;\u0026lt;/relative/path/to/resource\u0026gt;?id=\u0026lt;resource_id\u0026gt; This means that only the resource path is part of the URL path. Any other parameter, e.g. file id, page or sort order must be given as URL parameters.\n  To make lookup by id possible we need to implement the /meta/\u0026lt;fileid\u0026gt; endpoint so the sdk can use it to look up the path. We should not implement a redirect on the ocis server side because the same redirect logic would need to be added to oc10. Having it in ocis web is the right place.\n  The old sharing links and oc10 urls still need to be redirected by ocis/reva as in oc10.\n  Public links would have the same format: https://\u0026lt;host\u0026gt;/files?id=\u0026lt;resource_id\u0026gt; The web UI has to detect if the user is logged in or not and adjust the ui accordingly.\n Since there is no difference between public and private files a logged-in user cannot see the public version of a link unless he logs out.  ","description":"Status: accepted Deciders: @refs, @butonic, @micbar, @dragotin, @hodyroff, @pmaier1, @fschade, @tbsbdr, @kulmann Date: 2021-07-07  Context and Problem Statement     When speaking about URLs we have to make a difference between browser URLs and API URLs. Only browser URLs are visible to end users and will be bookmarked. The currently existing and bookmarked ownCloud 10 URLs look something like this:\nGET https://demo.owncloud.com/apps/files/?dir=/path/to/resource\u0026amp;fileid=5472225 303 Location: https://demo.owncloud.com/apps/files/?dir=/path/to/resource When the URL contains a fileid parameter the server will look up the corresponding dir, overwriting whatever was set before the redirect."},{"id":44,"href":"/ocis/adr/0012-tracing/","title":"12. Tracing","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @mstingl, @pmaier1, @fschade Date: 2021-08-17  Context and Problem Statement     At the time of this writing we are in a situation where our logs have too much verbosity, rendering impossible or rather difficult to debug an instance. For this reason we are giving some care to our traces by updating dependencies from OpenCensus to OpenTelemetry.\nDecision Drivers      We don\u0026rsquo;t want to rely only on logs to debug an instance. Logs are too verbose. Since we have micro-services, we want to holistically understand a request.  Considered Options      Trim down logs Use OpenCensus Migrate to OpenTelemetry  Decision Outcome     Chosen option: option 3; Migrate to OpenTelemetry. OpenCensus is deprecated, and OpenTelemetry is the merger from OpenCensus and OpenTelemetry and the most recent up-to-date spec.\nPositive Consequences      Fix the current state of the traces on Reva. Add more contextual information on a span for a given request. Per-request filtering with the X-Request-Id header. Group the supported tracing backends to support Jaeger only for simplicity.  Chosen option approach      A trace is a tree, and the proxy will create the root trace and propagate it downstream. The Root trace will log the request headers. The unit that ultimately does the work will log the result of the operation if success. The unit that ultimately does the work will change the state of the span to error if any occurred.  With these premises, this is by no means a fixed document and the more we learn about the usage of an instance the more context we can add to the traces.\n","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @mstingl, @pmaier1, @fschade Date: 2021-08-17  Context and Problem Statement     At the time of this writing we are in a situation where our logs have too much verbosity, rendering impossible or rather difficult to debug an instance. For this reason we are giving some care to our traces by updating dependencies from OpenCensus to OpenTelemetry.\nDecision Drivers      We don\u0026rsquo;t want to rely only on logs to debug an instance."},{"id":45,"href":"/ocis/storage/storagedrivers/","title":"Storage drivers","parent":"Storage","content":"A storage driver implements access to a storage system:\nIt maps the path and id based CS3 references to an appropriate storage system specific reference, e.g.:\n eos file ids posix inodes or paths deconstructed filesystem nodes  Storage providers     To manage the file tree oCIS uses storage providers that are accessing the underlying storage using a storage driver. The driver can be used to change the implementation of a storage aspect to better reflect the actual underlying storage capabilities. As an example a move operation on a POSIX filesystem (theoretically) is an atomic operation. When trying to implement a file tree on top of S3 there is no native move operation that can be used. A naive implementation might fall back on a COPY and DELETE. Some S3 implementations provide a COPY operation that uses an existing key as the source, so the file at least does not need to be reuploaded. In the worst case scenario, which is renaming a folder with hundreds of thousands of objects, a reupload for every file has to be made. Instead of hiding this complexity a better choice might be to disable renaming of files or at least folders on S3. There are however implementations of filesystems on top of S3 that store the tree metadata in dedicated objects or use a completely different persistence mechanism like a distributed key value store to implement the file tree aspect of a storage.\n While the storage provider is responsible for managing the tree, file up- and downloads are delegated to a dedicated data provider. See below.  Storage aspects     A lot of different storage technologies exist, ranging from general purpose file systems with POSIX semantics to software defined storage with multiple APIs. Choosing any of them is making a tradeoff decision. Or, if a storage technology is already in place it automatically predetermines the capabilities that can be made available. Not all storage systems are created equal.\nUnfortunately, no POSIX filesystem natively supports all storage aspects that ownCloud 10 requires:\nA hierarchical file tree     An important aspect of a filesystem is organizing files and directories in a file hierarchy, or tree. It allows you to create, move and delete nodes. Beside the name a node also has well known metadata like size and mtime that are persisted in the tree as well.\n Folders are not directories There is a difference between folder and directory: a directory is a file system concept. A folder is a metaphor for the concept of a physical file folder. There are also virtual folders or smart folders like the recent files folder which are no file system directories. So, every directory and every virtual folder is a folder, but not every folder is a directory. See the folder metaphor in wikipedia. Also see the activity history below.  Id based lookup     While traditionally nodes in the tree are reached by traversing the path the tree persistence should be prepared to look up a node by an id. Think of an inode in a POSIX filesystem. If this operation needs to be cached for performance reasons keep in mind that cache invalidation is hard and crawling all files to update the inode to path mapping takes O(n), not O(1).\nETag propagation     For the state based sync a client can discover changes by recursively descending the tree and comparing the ETag for every node. If the storage technology supports propagating ETag changes up the tree, only the root node of a tree needs to be checked to determine if a discovery needs to be started and which nodes need to be traversed. This allows using the storage technology itself to persist all metadata that is necessary for sync, without additional services or caches.\nSubtree size accounting     The tree can keep track of how many bytes are stored in a folder. Similar to ETag propagation a change in file size is propagated up the hierarchy.\n ETag and Size propagation When propagating the ETag (mtime) and size changes up the tree the question is where to stop. If all changes need to be propagated to the root of a storage then the root or busy folders will become a hotspot. There are two things to keep in mind: 1. propagation only happens up to the root of a single space (a user private drive or a single group drive), 2. no cross storage propagation. The latter was used in oc10 to let clients detect when a file in a received shared folder changed. This functionality is moving to the storage registry which caches the ETag for every root so clients can discover if and which storage changed.  Rename     Depending on the underlying storage technology some operations may either be slow, up to a point where it makes more sense to disable them entirely. One example is a folder rename: on S3 a simple folder rename translates to a copy and delete operation for every child of the renamed folder. There is an exception though: this restriction only applies if the S3 storage is treated like a filesystem, where the keys are the path and the value is the file content. There are smarter ways to implement file systems on top of S3, but again: there is always a tradeoff.\n S3 has no rename Technically, S3 has no rename operation at all. By design, the location of the value is determined by the key, so it always has to do a copy and delete. Another example is the redis RENAME operation: while being specified as O(1) it executes an implicit DEL operation, so if the deleted key contains a very big value it may cause high latency\u0026hellip;  Arbitrary metadata persistence     In addition to well known metadata like name size and mtime, users might be able to add arbitrary metadata like tags, comments or dublin core. In POSIX filesystems this maps to extended attributes.\nGrant persistence     The CS3 API uses grants to describe access permissions. Storage systems have a wide range of permissions granularity and not all grants may be supported by every storage driver. POSIX ACLs for example have no expiry. If the storage system does not support certain grant properties, e.g. expiry, then the storage driver may choose to implement them in a different way. Expiries could be persisted in a different way and checked periodically to remove the grants. Again: every decision is a tradeoff.\nTrash persistence     After deleting a node the storage allows listing the deleted nodes and has an undo mechanism for them.\nVersions persistence     A user can restore a previous version of a file.\n Snapshots are not versions Modern POSIX filesystems support snapshotting of volumes. This is different from keeping track of versions to a file or folder, but might be another implementation strategy for a storage driver to allow users to restore content.  Activity History     The storage keeps an activity history, tracking the different actions that have been performed. This does not only include file changes but also metadata changes like renames and permission changes.\nStorage drivers     Reva currently has several storage driver implementations that can be used for storage providers as well as data providers.\nOCIS and S3NG Storage Driver     The oCIS storage driver is the default storage driver. It decomposes the metadata and persists it in a POSIX filesystem. Blobs are stored on the filesystem as well. The layout makes extensive use of symlinks and extended attributes. A filesystem like xfs or zfs without practical inode size limitations is recommended. We will evolve this to further integrate with file systems like cephfs or gpfs.\n Ext4 limits the number of bytes that can be used for extended attribute names and their values to the size of a single block (by default 4k). This reduces the number of shares for a single file or folder to roughly 20-30, as grants have to share the available space with other metadata.  The S3NG storage driver uses the same metadata layout on a POSIX storage as the oCIS driver, but it uses S3 as the blob storage.\nTradeoffs     ➕ Efficient ID based lookup\n➕ Leverages Kernel VFS cache\n➕ No database needed\n➖ Not intended to be accessed by end users on the server side as it does not reflect a normal filesystem on disk\n➖ Metadata limited by Kernel VFS limits (see below)\nRelated Kernel limits     The Decomposed FS currently stores CS3 grants in extended attributes. When listing extended attributes the result is currently limited to 64kB. Assuming a 20 byte uuid a grant has ~40 bytes. Which would limit the number of extended attributes to ~1630 entries or ~1600 shares. This can be extended by moving the grants from extended attributes into a dedicated file and is tracked in ocis/issues/4638.\nFrom Wikipedia on Extended file attributes:\n The Linux kernel allows extended attribute to have names of up to 255 bytes and values of up to 64 KiB,[14] as do XFS and ReiserFS, but ext2/3/4 and btrfs impose much smaller limits, requiring all the attributes (names and values) of one file to fit in one \u0026ldquo;filesystem block\u0026rdquo; (usually 4 KiB). Per POSIX.1e,[citation needed] the names are required to start with one of security, system, trusted, and user plus a period. This defines the four namespaces of extended attributes.[15]\n And from the man page on listxattr:\n As noted in xattr(7), the VFS imposes a limit of 64 kB on the size of the extended attribute name list returned by listxattr(7). If the total size of attribute names attached to a file exceeds this limit, it is no longer possible to retrieve the list of attribute names.\n Local Storage Driver     The minimal storage driver for a POSIX based filesystem. It literally supports none of the storage aspect other than basic file tree management. Sharing can - to a degree - be implemented using POSIX ACLs.\n tree provided by a POSIX filesystem  inefficient path by id lookup, currently uses the file path as id, so ids are not stable  can store a uuid in extended attributes and use a cache to look them up, similar to the ownCloud driver   no native ETag propagation, five options are available:  built in propagation (changes bypassing ocis are not picked up until a rescan) built in inotify (requires 48 bytes of RAM per file, needs to keep track of every file and folder) external inotify (same RAM requirement, but could be triggered by external tools, e.g. a workflow engine) kernel audit log (use the linux kernel audit to capture file events on the storage and offload them to a queue) fuse filesystem overlay   no subtree accounting, same options as for ETag propagation efficient rename arbitrary metadata using extended attributes   grant persistence  using POSIX ACLs  requires an LDAP server to make guest accounts available in the OS  an existing LDAP could be used if guests ar provisioned in another way     using extended attributes to implement expiry or sharing that does not require OS level integration fuse filesystem overlay   no native trash  could use The FreeDesktop.org Trash specification fuse filesystem overlay   no native versions, multiple options possible  git for folders rcs for single files rsnapshot for hourly / daily / weekly / monthly backups \u0026hellip; but this is not versioning as known from oc10 design new freedesktop spec, basically what is done in oc10 without the limitations or borrow ideas from the freedesktop trash spec fuse filesystem overlay    To provide the other storage aspects we plan to implement a FUSE overlay filesystem which will add the different aspects on top of local filesystems like ext4, btrfs or xfs. It should work on NFSv4 as well, although NFSv4 supports RichACLs and we will explore how to leverage them to implement sharing at a future date. The idea is to use the storages native capabilities to deliver the best user experience. But again: that means making the right tradeoffs.\nEOS Storage Driver     The CERN eos storage has evolved with ownCloud and natively supports id based lookup, ETag propagation, subtree size accounting, sharing, trash and versions. To use it you need to change the default configuration of the storage storage-home command (or have a look at the Makefile ̀ eos-start` target):\nexport STORAGE_DRIVER_EOS_NAMESPACE=/eos export STORAGE_DRIVER_EOS_MASTER_URL=\u0026#34;root://eos-mgm1.eoscluster.cern.ch:1094\u0026#34; export STORAGE_DRIVER_EOS_ENABLE_HOME=true export STORAGE_DRIVER_EOS_LAYOUT=\u0026#34;dockertest/{{.Username}}\u0026#34; Running it locally also requires the eos and xrootd binaries. Running it using make eos-start will use CentOS based containers that already have the necessary packages installed.\n Pull requests to add explicit storage storage-(s3|custom|...) commands with working defaults are welcome.  S3 Storage Driver     A naive driver that treats the keys in an S3 capable storage as / delimited path names. While it does not support MOVE or ETag propagation it can be used to read and write files. Better integration with native capabilities like versioning is possible but depends on the Use Case. Several storage solutions that provide an S3 interface also support some form of notifications that can be used to implement ETag propagation.\nData Providers     Clients using the CS3 API use an InitiateFileDownload and InitiateUpload request at the storage gateway to obtain a URL endpoint that can be used to either GET the file content or upload content using the resumable tus.io protocol.\nThe data provider uses the same storage driver as the storage provider but can be scaled independently.\nThe dataprovider allows uploading the file to a quarantine area where further data analysis may happen before making the file accessible again. One use case for this is antivirus scanning for files coming from untrusted sources.\nFuture work     FUSE overlay filesystem     We are planning to further separate the concerns and use a local storage provider with a FUSE filesystem overlaying the actual POSIX storage that can be used to capture deletes and writes that might happen outside of ocis/reva.\nIt would allow us to extend the local storage driver with missing storage aspects while keeping a tree like filesystem that end users are used to see when sshing into the machine.\nUpload to Quarantine area     Antivirus scanning of random files uploaded from untrusted sources and executing metadata extraction or thumbnail generation should happen in a sandboxed system to prevent malicious users from gaining any information about the system. By spawning a new container with access to only the uploaded data we can further limit the attack surface.\n","description":"A storage driver implements access to a storage system:\nIt maps the path and id based CS3 references to an appropriate storage system specific reference, e.g.:\n eos file ids posix inodes or paths deconstructed filesystem nodes  Storage providers     To manage the file tree oCIS uses storage providers that are accessing the underlying storage using a storage driver. The driver can be used to change the implementation of a storage aspect to better reflect the actual underlying storage capabilities."},{"id":46,"href":"/ocis/adr/0013-locking/","title":"13. Locking","parent":"Architecture Decisions","content":" Status: accepted Deciders: @hodyroff, @pmaier1, @jojowein, @dragotin, @micbar, @tbsbdr, @wkloucek Date: 2021-11-03  Context and Problem Statement     At the time of this writing no locking mechanisms exists in oCIS / REVA for both directories and files. The CS3org WOPI server implements a file based locking in order to lock files. This ADR discusses if this approach is ok for the general availability of oCIS or if changes are needed.\nDecision Drivers      Is the current situation acceptable for the GA Is locking needed or can we have oCIS / REVA without locking  Considered Options      File based locking No locking CS3 API locking  Decision Outcome     For the GA we chose option 2. Therefore we need to remove or disable the file based locking functionality of the CS3org WOPI server. The decision was taken because the current file based locking does not work on file-only shares. The current locking also does not guarantee exclusive access to a file since other parts of oCIS like the WebDAV API or other REVA services don\u0026rsquo;t respect the locks.\nAfter the GA we need to implement option 3.\nPros and Cons of the Options     File based locking     The CS3org WOPI server creates a .sys.wopilock.\u0026lt;filename\u0026gt;. and .~lock.\u0026lt;filename\u0026gt;# file when opening a file in write mode\nFile based locking is good, because:\n it is already implemented in the current CS3org WOPI server  File based locking is bad, because:\n lock files should be checked by all parties manipulating files (e.g. the WebDAV api) lock files can be deleted by everyone you can not lock files in a file-only share (you need a folder share to create a lock file besides the original file)  If we have file based locks, we can also sync them with e.g. the Desktop Client.\nSyncing lock files is good: because\n native office applications can notice lock files by the WOPI server and vice versa (LibreOffice also creates .lock.\u0026lt;filename\u0026gt;# files)  Syncing lock files is bad, because:\n if lockfile is not deleted, no one can edit the file creating lock files in a folder shared with 2000000 users creates a lot of noise and pressure on the server (etag propagation, therefore oC Desktop sync client has an ignore rule for .~lock.* files)  No locking     We remove or disable the file based locking of the CS3org WOPI server.\nNo locking is good, because:\n you don\u0026rsquo;t need to release locks overwriting a file just creates a new version of it  No locking is bad, because:\n merging changes from different versions is a pain, since there is no way to calculate differences for most of the files (e.g. docx or xlsx files) no locking breaks the WOPI specs, as the CS3 WOPI server won\u0026rsquo;t be capable to honor the WOPI Lock related operations  CS3 API locking      Add CS3 API for resource (files, directories) locking, unlocking and checking locks  locking always with timeout lock creation is a \u0026ldquo;create-if-not-exists\u0026rdquo; operation locks need to have arbitrary metadata (e.g. the CS3 WOPI server is stateless by storing information on / in the locks)   Implement WebDAV locking using the CS3 API Implement Locking in storage drivers Change CS3 WOPI server to use CS3 API locking mechanism Optional: manual lock / unlock in ownCloud Web (who is allowed to unlock locks of another user?)  CS3 API locking is good, because:\n you can lock files on the actual storage (if the storage supports that -\u0026gt; storage driver dependent) you can lock files in ownCloud 10 when using the ownCloudSQL storage driver in the migration deployment (but oC10 Collabora / OnlyOffice also need to implement locking, to fully leverage that) clients can get the lock information via the api without ignoring / hiding lock file changes clients can use the lock information to lock the file in their context (e.g. via some file explorer integration)  CS3 API locking is bad, because:\n it needs to be defined and implemented, currently not planned for the GA  ","description":"Status: accepted Deciders: @hodyroff, @pmaier1, @jojowein, @dragotin, @micbar, @tbsbdr, @wkloucek Date: 2021-11-03  Context and Problem Statement     At the time of this writing no locking mechanisms exists in oCIS / REVA for both directories and files. The CS3org WOPI server implements a file based locking in order to lock files. This ADR discusses if this approach is ok for the general availability of oCIS or if changes are needed."},{"id":47,"href":"/ocis/adr/0014-microservices-runtime/","title":"14. Microservices Runtime","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @mstingl, @pmaier1, @fschade Date: 2022-01-21  Context and Problem Statement     In an environment where shipping a single binary makes it easier for the end user to use oCIS, embedding a whole family of microservices within a package and running it leveraging the use of the Go language has plenty of value. In such environment, a runtime is necessary to orchestrate the services that run within it. Other solutions are hot right now, such as Kubernetes, but for a single deployment this entails orbital measures.\nDecision Drivers      Start oCIS microservices with a single command (ocis server). Clear separation of concerns between services. Control the lifecycle of the running services. Services can be distributed across multiple machines and still be controllable somehow.  Considered Options     1.The use of frameworks such as:\n asim/go-micro go-kit/kit  Build and synchronize all services in-house. A hybrid solution between framework and in-house.  Options     go-kit/kit     Pros\n Large community behind The creator is a maintainer of Go, so the code quality is quite high.  Cons\n Too verbose. Ultimately too slow to make progress. Implementing a service would require defining interfaces and a lot of boilerplate.  asim/go-micro     Pros\n Implementation based in swappable interfaces. Multiple implementations, either in-memory or through external services Production ready Good compromise between high and low level code.  Decision Outcome     Number 3: A hybrid solution between framework and in-house.\nDesign      First of, every ocis service IS a go-micro service, and because go-micro makes use of urfave/cli, a service can be conveniently wrapped inside a subcommand. Writing a supervisor is then a choice. We do use a supervisor to ensure long-running processes and embrace the \u0026ldquo;let it crash\u0026rdquo; mentality. The piece we use for this end is called Suture.\nThe code regarding the runtime can be found pretty isolated here. The runtime itself runs as a service. This is done so messages can be sent to it using the oCIS single binary to control the lifecycle of its services.\n","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @mstingl, @pmaier1, @fschade Date: 2022-01-21  Context and Problem Statement     In an environment where shipping a single binary makes it easier for the end user to use oCIS, embedding a whole family of microservices within a package and running it leveraging the use of the Go language has plenty of value. In such environment, a runtime is necessary to orchestrate the services that run within it."},{"id":48,"href":"/ocis/adr/0015-events/","title":"15. oCIS Event System","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @c0rby, @wkloucek Date: 2022-01-21  Context and Problem Statement     Overview     To be able to implement simple, flexible and independent inter service communication there is the idea to implement an event system in oCIS. A service can send out events which are received by one or more other services. The receiving service can cause different kinds of actions based on the event by utilizing the information that the event carries.\nExample: Email Notification     A simple example is the notification feature for oCIS: Users should receive an email when another user shares a file with them. The information, that the file was shared should go out as an event from a storage provider or share manager, carrying the information which file was shared to which receiver. A potential notification service that sends out the email listens to these kinds of events and sends the email out once on every received event of that specific type.\nDecision Drivers      Events are supposed to decouple services and raise flexibility, also considering extensions that are not directly controlled by the ownCloud project. Events should bring flexibility in the implementation of sending and receiving services. Events should not obsolete other mechanisms to communicate, i.e. grpc calls. Sending an event has to be as little resource consuming for the sender as possible. Events are never user visible.  Considered Options      Lightweight Events with Event Queue and \u0026ldquo;At most once\u0026rdquo; QoS As 1., but with \u0026ldquo;At least once\u0026rdquo; QoS  Options     1. Lightweight Events with Event Queue and \u0026ldquo;At most once\u0026rdquo; QoS     Reva will get a messaging service that is available to all services within oCIS and Reva. It is considered as one of the mandatory services of the oCIS system. If the messaging backend is not running, neither Reva nor oCIS can be considered healthy and should shut down.\nAll oCIS- and Reva-services can connect to the messaging bus and send so-called events. The sender gets an immediate return if handing the event to the message bus was successful or not.\nThe sender can not make any assumptions when the message is delivered to any receiving service. Depending on the QoS model (as proposed as alternatives in this ADR) it might even be not guaranteed that the event is delivered at all. Also, the sender can not know if zero, one or many services are listening to that event.\nEvent Data     Events are identified by their namespace and their respective name. The namespace is delimited by dots and starts with either \u0026ldquo;reva\u0026rdquo; or \u0026ldquo;ocis\u0026rdquo; or a future extension name. It is followed by the name of the sending service and an unique name of the event.\nExample: ocis.ocdav.delete - an event with that name sent out if an WebDAV DELETE request arrived in the oCDav service.\nAn event can carry a payload which is encoded as json object. (See for example NATS ). There are no pre-defined members in that object, it is fully up to the sender which data will be included in the payload. Receivers must be robust to deal with changes.\nQuality of Service     Events are sent with \u0026ldquo;At most once\u0026rdquo; quality of service. That means, if a receiver is not present at the moment of publishing it might not receive the event. That requires that the sender and the receiver must have functionality to back up the situation that events were missed. That adds more state to the services because they always need to behave like a FISM. Given that the event queue can be considered the backbone of the system, it is unlikely that it is not running.\nTransactions     The described way of inter service communication with events is not transactional. It is not supposed to be, but only provides a lightweight, loosely coupled way to \u0026ldquo;inform\u0026rdquo;.\nIf transactions are required, proper synchronous GRPC API calls should be used. Another way would be to build asynchronous flows with request- and reply events as in saga pattern. That is only recommended for special cases.\nPros      Simple setup Flexible way of connecting services Stateless event queue \u0026ldquo;State of the art\u0026rdquo; pattern in microservices architectures  Cons      Over engineering: Can we do without an extra message queue component? Messages might get lost, so that eventual consistency is endangered A service needs to hold more state to ensure consistency Message queue needs to be implemented in Reva  2. Lightweight Events with Event Queue and \u0026ldquo;At-least once\u0026rdquo; QoS     Exactly as described above, but with a higher service level quality.\nQuality of Service     Events are sent with \u0026ldquo;At least once\u0026rdquo; quality of service. That means the events will remain in the queue until they are received by all receivers. This puts more responsibility on the event bus and adds state to the events. Given that the event queue can be considered the backbone of the system, it is required to be running.\nPros      Better service level: Messages do not get lost Simplifies the design of the microservices because the events are \u0026ldquo;fire-and-forget\u0026rdquo; Events would be idempotent. If a service goes down the events will stay in the queue until they are consumed  Cons      Stateful event system with higher cost in terms of compute and storage The queue could become a bottleneck and needs to be scaled  Decision Outcome     Design     ","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @c0rby, @wkloucek Date: 2022-01-21  Context and Problem Statement     Overview     To be able to implement simple, flexible and independent inter service communication there is the idea to implement an event system in oCIS. A service can send out events which are received by one or more other services. The receiving service can cause different kinds of actions based on the event by utilizing the information that the event carries."},{"id":49,"href":"/ocis/adr/","title":"Architecture Decisions","parent":"oCIS - ownCloud Infinite Scale","content":"oCIS is documenting architecture decisions using Markdown Architectural Decision Records (MADR), following Documenting Architecture Decisions by Michael Nygard.\n  To manage the records we use butonic/adr-tools, a fork of the original npryce/adr-tools, based on a pull request that should have added MADR support. It also supports a YAML header that is used by our Hugo based doc generation\n","description":"oCIS is documenting architecture decisions using Markdown Architectural Decision Records (MADR), following Documenting Architecture Decisions by Michael Nygard.\n  To manage the records we use butonic/adr-tools, a fork of the original npryce/adr-tools, based on a pull request that should have added MADR support. It also supports a YAML header that is used by our Hugo based doc generation"},{"id":50,"href":"/ocis/development/getting-started/","title":"Getting Started","parent":"Development","content":"   Requirements Repository structure Starting points  Developing oCIS Developing extensions        Requirements     We want contribution to oCIS and the creation of extensions to be as easy as possible. So we are trying to reflect this in the tooling. It should be kept simple and quick to be set up.\nBesides standard development tools like git and a text editor, you need the following software for development:\n Go \u0026gt;= v1.20 (install instructions) pnpm (install instructions) docker (install instructions) docker-compose (install instructions)  If you find tools needed besides the mentioned above, please feel free to open an issue or open a PR.\nRepository structure     oCIS consists of multiple microservices, also called extensions. We started by having standalone repositories for each of them, but quickly noticed that this adds a time-consuming overhead for developers. So we ended up with a monorepo housing all the extensions in one repository.\nEach extension lives in a subfolder (e.g. accounts or settings) within this repository as an independent Go module, following the golang-standard project-layout. They have common Makefile targets and can be used to change, build and run individual extensions. This allows us to version and release each extension independently.\nThe ocis folder contains our go-micro and suture based runtime. It is used to import all extensions and implements commands to manage them, similar to a small orchestrator. With the resulting oCIS binary you can start single extensions or even all extensions at the same time.\nThe docs folder contains the source for the oCIS documentation.\nThe deployments folder contains documented deployment configurations and templates. On a single node, running a single ocis runtime is a resource efficient way to deploy ocis. For multiple nodes docker compose or helm charts for kubernetes examples can be found here.\nThe scripts folder contains scripts to perform various build, install, analysis, etc. operations.\nStarting points     Depending on what you want to develop there are different starting points. These will be described below.\nDeveloping oCIS     If you want to contribute to oCIS:\n see contribution guidelines make sure the tooling is set up by building oCIS and building the docs create or pick an open issue to develop on and mention in the issue that you are working on it open a PR and get things done  Developing extensions     If you want to develop an extension, start here: Extensions\n","description":"Requirements Repository structure Starting points  Developing oCIS Developing extensions        Requirements     We want contribution to oCIS and the creation of extensions to be as easy as possible. So we are trying to reflect this in the tooling. It should be kept simple and quick to be set up.\nBesides standard development tools like git and a text editor, you need the following software for development:"},{"id":51,"href":"/ocis/storage/namespaces/","title":"Namespaces","parent":"Storage","content":"A namespace is a set of paths with a common prefix. Depending on the endpoint you are talking to you will encounter a different kind of namespace: In ownCloud 10 all paths are considered relative to the users home. The CS3 API uses a global namespace and the storage providers use a local namespace with paths relative to the storage providers root.\n The different paths in the namespaces need to be translated while passing references from service to service. While the oc10 endpoints all work on paths we internally reference shared resources by id, so the shares don\u0026rsquo;t break when a file is renamed or moved inside a storage space. The following table lists the various namespaces, paths and id based references:\n   oc10 namespace CS3 global namespace storage provider reference content     /webdav/path/to/file.ext /dav/files/\u0026lt;username\u0026gt;/path/to/file.ext /home/path/to/file.ext home /\u0026lt;user_layout\u0026gt;/path/to/file.ext currently logged in users home   /webdav/Shares/foo /dav/files/\u0026lt;username\u0026gt;/Shares/foo /home/Shares/foo users id based access all users, used to access collaborative shares   /dav/public-files/\u0026lt;token\u0026gt;/rel/path/to/file.ext /public/\u0026lt;token\u0026gt;/rel/path/to/file.ext public id based access publicly shared files, used to access public links     oCIS currently is configured to jail users into the CS3 /home namespace in the oc10 endpoints to mimic ownCloud 10. CernBox has been exposing a global namespace on /webdav for years already. The ocs service returns urls that are relative to the CS3 global namespace which makes both scenarios work, but only one of them at a time. Which is why the testsuite hiccups when trying to Allow full paths targets in reva#1605.   In the global CS3 namespaces we plan to move /home/Shares, which currently lists all mounted shares of the currently logged-in user to a dedicated /shares namespace. See below and Move shares folder out from home directory to a separate mount reva#1584.  ownCloud namespaces     In contrast to the global namespace of CS3, ownCloud always presented a user specific namespace on all endpoints. It will always list the users private files under /. Shares can be mounted at an arbitrary location in the users private spaces. See the webdav and ocs sections for more details end examples.\nWith the spaces concept we are planning to introduce a global namespace to the ownCloud webdav endpoints. This will push the users private space down in the hierarchy: it will move from /webdav to /webdav/home or /webdav/users/\u0026lt;username\u0026gt;. The related migration stages are subject to change.\nCS3 global namespaces     The CS3 global namespace in oCIS is configured in the storage spaces registry. oCIS uses these defaults:\n   global namespace description     /home an alias for the currently logged in uses private space   /users/\u0026lt;user_layout\u0026gt; user private spaces   /shares a virtual listing of share spaces a user has access to   /public/\u0026lt;token\u0026gt; a virtual folder listing public shares   /spaces/\u0026lt;spacename\u0026gt; TODO: project or group spaces    Technically, the /home namespace is not necessary: the storage spaces registry knows the path to a users private space in the /users namespace and the gateway can forward the requests to the responsible storage provider.\n *@jfd: Why don\u0026rsquo;t we use /home/\u0026lt;user_layout\u0026gt; instead of /users/\u0026lt;user_layout\u0026gt;. Then the paths would be consistent with most unix systems.  The /shares namespace is used to solve two problems:\n To query all shares the current user has access to the share manager can be used to list the resource ids. While the shares can then be navigated by resource id, they will return the relative path in the actual storage provider, leaking parent folders of the shared resource. When accepting a remote share e.g., for OCM the resource does not exist on the local instance. They are made accessible in the global namespace under the /shares namespace.   @jfd: Should we split /shares into /collaborations, /ocm and /links? We also have /public which uses token based authentication. They may have different latencies or polling strategies? Well, I guess we can cache them differently regardless of the mount point.  Browser URLs vs API URLs     In ownCloud 10 you can not only create public links but also private links. Both can be copy pasted into an email or chat to grant others access to a file. Most often though, end users will copy and paste the URL from their browsers location bar.\n   URL description     https://demo.owncloud.com/apps/files/?dir=/Photos/Vacation\u0026fileid=24 The normal browser URL   https://demo.owncloud.com/apps/files/?fileid=24 the dir is actually not used to find the directory and will be filled when pasting this URL   https://demo.owncloud.com/f/24 private links are the shortened version of this and work in the same way   https://demo.owncloud.com/s/piLdAAt1m3Bg0Fk public link     The dir parameter alone cannot be used to look up the directory, because the path for a file may be different depending on the currently logged-in user:\n User A shares his /path/to/Photos with User X. User B shares his /other/path/to/Photos with User X and Y. User A shares his /path/to/Photos with User Y.  (Depending on the order in which they accept the shares) X and Y now have two folders /shares/Photos and /shares/Photos (1). But if they were to copy paste a link with that path in the URL and if the directory were only looked up by path X and Y would end up in different folders.\nYou could argue that the path should always use a global path in the CS3 namespace:\n User A shares his /users/a/path/to/Photos with User X. User B shares his /users/b/other/path/to/Photos with User X and Y. User A shares his /users/a/path/to/Photos with User Y.  By using a global path like this X and Y would always end up in the correct folder. However, there are two caveats:\n This only works for resources that reside on the instance (because only they have unique and global path). Shares from other instances need to be identified by id, or they cannot be uniquely addressed User A may not want to leak path path/to segments leading to Photos. They might contain things like low-priority or personal data.  That is the reason why URLs always have to contain some kind of stable identifier. By introducing the concept of storage spaces and treating user homes, project drives and shares we can create a URL that contains an identifier for the storage space and a path relative to the root of it.\n  In ocis we will unify the way links sharing works, however there will always be at least two types of URLs:\n the URL you see in the browsers location bar, and the URL that a client uses to actually access a file.  ","description":"A namespace is a set of paths with a common prefix. Depending on the endpoint you are talking to you will encounter a different kind of namespace: In ownCloud 10 all paths are considered relative to the users home. The CS3 API uses a global namespace and the storage providers use a local namespace with paths relative to the storage providers root.\n The different paths in the namespaces need to be translated while passing references from service to service."},{"id":52,"href":"/ocis/adr/0016-files-metadata/","title":"16. Storage for Files Metadata","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @dragotin, @micbar, @C0rby Date: 2022-02-04  Context and Problem Statement     In addition to the file content we need to store metadata which is attached to a file. Metadata describes additional properties of a file. These properties need to be stored as close as possible to the file content to avoid inconsistencies. Metadata are key to workflows and search. We consider them as an additional value which enhances the file content.\nDecision Drivers      Metadata will become more important in the future Metadata are key to automated data processing Metadata storage should be as close as possible to the file content Metadata should be always in sync with the file content  Considered Options      Database Extended file attributes Metadata file next to the file content Linked metadata in separate file  Decision Outcome     Chosen option: \u0026ldquo;Extended File Attributes\u0026rdquo;, because we guarantee the consistency of data and have arbitrary simple storage mechanism.\nPositive Consequences      Metadata is always attached to the file itself We can store arbitrary key/values No external dependencies are needed  Negative consequences      The storage inside extended file attributes has limits Changes to extended attributes are not atomic and need file locks  Pros and Cons of the Options     Database or Key-Value Store     Use a Database or an external key/value store to persist metadata.\n Good, because it scales well Good, because databases provide efficient lookup mechanisms Bad, because the file content and the metadata could run out of sync Bad, because a storage backup doesn\u0026rsquo;t cover the file metadata  Extended File Attributes     Extended File Attributes allow to store arbitrary properties. There are 4 namespaces user, system, trusted and security. We can safely use the user namespace. An example attribute name would be user.ocis.owner.id. The linux kernel has length limits on attribute names and values.\nFrom Wikipedia on Extended file attributes:\n The Linux kernel allows extended attribute to have names of up to 255 bytes and values of up to 64 KiB,[14] as do XFS and ReiserFS, but ext2/3/4 and btrfs impose much smaller limits, requiring all the attributes (names and values) of one file to fit in one “filesystem block” (usually 4 KiB). Per POSIX.1e,[citation needed] the names are required to start with one of security, system, trusted, and user plus a period. This defines the four namespaces of extended attributes.\n  Good, because metadata is stored in the filesystem Good, because consistency is easy to maintain Good, because the data is attached to the file and survives file operations like copy and move Good, because a storage backup also covers the file metadata Bad, because we could hit the filesystem limit Bad, because changes to extended attributes are not atomic  Metadata File     We could store metadata in a metadata file next to the file content which has a structured content format like .json, .yaml or .toml. That would give us more space to store bigger amounts of metadata.\n Good, because there are no size limits Good, because there is more freedom to the content format Good, because a storage backup also covers the file metadata Bad, because it doubles the amount of read / write operations Bad, because it needs additional measures against concurrent overwriting changes  Link metadata with an id in the extended attributes     To link metadata to file content a single extended attribute with a file id (unique per storage space) is sufficient. This would also allow putting metadata in better suited storage systems like SQLite or a key value store.\n Good, because it avoids extended attribute limits Good, because the same mechanism could be used to look up files by id, when the underlying filesystem is an existing POSIX filesystem. Bad, because backup needs to cover the metadata as well. Could be mitigated by sharing metadata per space and doing space wide snapshots. Bad, because it is a bit more effort to access it to read or index it.  ","description":"Status: proposed Deciders: @butonic, @dragotin, @micbar, @C0rby Date: 2022-02-04  Context and Problem Statement     In addition to the file content we need to store metadata which is attached to a file. Metadata describes additional properties of a file. These properties need to be stored as close as possible to the file content to avoid inconsistencies. Metadata are key to workflows and search. We consider them as an additional value which enhances the file content."},{"id":53,"href":"/ocis/deployment/systemd/","title":"Systemd service","parent":"Deployment","content":"   Install the oCIS binary Systemd service definition Starting the oCIS service      Install the oCIS binary     Download the oCIS binary of your preferred version and for your CPU architecture and operating system from download.owncloud.com.\nRename the downloaded binary to ocis and move it to /usr/bin/. As a next step, you need to mark it as executable with chmod +x /usr/bin/ocis.\nWhen you now run ocis help on your command line, you should see the available options for the oCIS command.\nSystemd service definition     Create the Systemd service definition for oCIS in the file /etc/systemd/system/ocis.service with following content:\n[Unit] Description=OCIS server [Service] Type=simple User=root Group=root EnvironmentFile=/etc/ocis/ocis.env ExecStart=ocis server Restart=always [Install] WantedBy=multi-user.target   For reasons of simplicity we are using the root user and group to run oCIS which is not recommended. Please use a non-root user in production environments and modify the oCIS service definition accordingly.  In the service definition we referenced /etc/ocis/ocis.env as our file containing environment variables for the oCIS process. In order to create the file we need first to create the folder /etc/ocis/ and then we can add the actual /etc/ocis/ocis.env with following content:\nOCIS_URL=https://some-hostname-or-ip:9200 PROXY_HTTP_ADDR=0.0.0.0:9200 OCIS_INSECURE=false OCIS_LOG_LEVEL=error OCIS_CONFIG_DIR=/etc/ocis OCIS_BASE_DATA_PATH=/var/lib/ocis Since we set OCIS_CONFIG_DIR to /etc/ocis you can also place configuration files in this directory.\nPlease change your OCIS_URL in order to reflect your actual deployment. If you are using self-signed certificates you need to set OCIS_INSECURE=true in /etc/ocis/ocis.env.\noCIS will store all data in /var/lib/ocis, because we configured it so by setting OCIS_BASE_DATA_PATH. Therefore you need to create that directory and make it accessible to the user, you use to start oCIS.\nStarting the oCIS service     Initialize the oCIS configuration by running ocis init --config-path /etc/ocis.\nYou can enable oCIS now by running systemctl enable --now ocis. It will ensure that oCIS also is restarted after a reboot of the host.\nIf you need to restart oCIS because of configuration changes in /etc/ocis/ocis.env, run systemctl restart ocis.\nYou can have a look at the logs of oCIS by issuing journalctl -f -u ocis.\n","description":"Install the oCIS binary Systemd service definition Starting the oCIS service      Install the oCIS binary     Download the oCIS binary of your preferred version and for your CPU architecture and operating system from download.owncloud.com.\nRename the downloaded binary to ocis and move it to /usr/bin/. As a next step, you need to mark it as executable with chmod +x /usr/bin/ocis."},{"id":54,"href":"/ocis/deployment/basic-remote-setup/","title":"Basic Remote Setup","parent":"Deployment","content":"   Start the oCIS fullstack server from binary  Using automatically generated certificates Using already present certificates   Start the oCIS fullstack server with Docker Compose      The default configuration of the oCIS binary and the owncloud/ocis docker image assume, that you access oCIS on localhost. This enables you to do quick testing and development without any configuration.\nIf you need to access oCIS running in a docker container, on a VM or a remote machine via another hostname than localhost, you need to configure this hostname in oCIS. The same applies if you are not using hostnames but instead an IP (e.g. 192.168.178.25).\nStart the oCIS fullstack server from binary     Initialize the oCIS configuration by running ./bin/ocis init.\nUpon first start of the oCIS fullstack server with ./bin/ocis server it will generate a directory tree skeleton in $HOME/.ocis. If that is already existing it will not be overwritten as it contains all relevant data for oCIS.\nFor the following examples you need to have the oCIS binary in your current working directory, we assume it is named ocis and it needs to be marked as executable. See Getting Started for where to get the binary from.\nUsing automatically generated certificates     In order to run oCIS with automatically generated and self-signed certificates please execute following command. You need to replace your-host with an IP or hostname. Since you have only self-signed certificates you need to have OCIS_INSECURE set to true.\nOCIS_INSECURE=true \\ PROXY_HTTP_ADDR=0.0.0.0:9200 \\ OCIS_URL=https://your-host:9200 \\ ./ocis server Using already present certificates     If you have your own certificates already in place, you may want to make oCIS use them:\nOCIS_INSECURE=false \\ PROXY_HTTP_ADDR=0.0.0.0:9200 \\ OCIS_URL=https://your-host:9200 \\ PROXY_TRANSPORT_TLS_KEY=./certs/your-host.key \\ PROXY_TRANSPORT_TLS_CERT=./certs/your-host.crt \\ ./ocis server If you generated these certificates on your own, you might need to set OCIS_INSECURE to true.\nFor more configuration options check the configuration section in oCIS and the oCIS services.\nStart the oCIS fullstack server with Docker Compose     Please have a look at our other deployment examples.\n","description":"Start the oCIS fullstack server from binary  Using automatically generated certificates Using already present certificates   Start the oCIS fullstack server with Docker Compose      The default configuration of the oCIS binary and the owncloud/ocis docker image assume, that you access oCIS on localhost. This enables you to do quick testing and development without any configuration.\nIf you need to access oCIS running in a docker container, on a VM or a remote machine via another hostname than localhost, you need to configure this hostname in oCIS."},{"id":55,"href":"/ocis/adr/0017-allow-read-only-external-user-management/","title":"17. Allow read only external User Management","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @rhafer Date: 2022-02-08  Context and Problem Statement     oCIS needs to be integrated with various external Authentication and Identity Management Systems. Usually oCIS will have no administrative access to such a system and we will not be allowed to reconfigure it to suit our needs (e.g. we will not be able to enhance the schema of an already existing LDAP Directory). In most of the cases our access will be read-only.\nSidenote: There is a difference between users, identities and accounts: A user may have multiple identities which he can authenticate with, e.g. his facebook, twitter, microsoft or google identity. Multiple identities can be linked to an account in ocis, allowing to fall back to another identity provider should one of them shut down. This also allows migrating from one identity provider to another.\nThere are different cases where oCIS requires access to users:\n While we settled on using OpenID Connect (OIDC) as the authentication protocol for oCIS, we need to build a user object during authentication with at least an account UUID (to identify the account) and the email or a name (for display purposes). When searching for share recipients we need to be able to query existing users in the external identity management system When listing files we need to be able to look up a users display properties (username, email, avatar\u0026hellip;) based on the account UUID  oCIS internally relies on a stable and persistent identifier (e.g. a UUID) for accounts in order to implement permissions and sharing. Unfortunately, some deployments are unable to deliver this kind of stable identifier for users:\n In OIDC itself the only stable identifier that is guaranteed to be provided by the IDP is combination of the sub and iss claims. IDPs can optionally return other claims, but we cannot rely on a specific claim being present. When no other services (LDAP, SCIM, \u0026hellip;) are available that could be used look up a user UUID  Decision Drivers      oCIS should be a single binary that can run out of the box without external dependencies like an LDAP server. Time: we want to build a release candidate asap. oCIS should be easy to integrate with standard external identity management systems  Considered Options     There are two case to consider:\n External identity management system provides an OIDC IdP and an interface to query users External identity management system provides just an OIDC IdP with no possibility to query users  Decision Outcome     It\u0026rsquo;s not really possible single out any of the options for this ADR. In the end we will likely need to support both scenarios.\nPositive Consequences:      Very flexible integration with a wide range of external systems  Negative consequences:      configuration complexity, high support efforts Increasingly complex code in oCIS  Pros and Cons of the Options     External identity management system is read only and provides an interface to query users (e.g. Corporate Active Directory)     IdP sends sub \u0026amp; iss and mail or username claims, Identity Management System provides APIs (e.g. LDAP, SCIM, REST \u0026hellip;) to lookup additional user information. All oCIS services use the CS3 API to look up the account for the given email or username, where CS3 then uses a backend that relies on the APIs provided by the IdM.\n Good, because we can rely on the external identity management Good, because ocis services only need to know about the CS3 user provider API, which acts as an abstraction layer for different identity management systems Good, because there is only a single source of truth (the external IdM) and we don\u0026rsquo;t need to implement a synchronization mechanism to maintain an internal user database (we will likely need some form of caching though, see below) Bad, because the identity management needs to provide a stable, persistent, non-reassignable user identifier for an account, e.g. owncloudUUID or ms-DS-ConsistencyGuid Bad, because we need to implement tools that can change the account id when it did change anyway Bad, because without caching we will hammer the identity management system with lookup requests  External identity management system is read only and does NOT provide an API to query users     Idp sends sub \u0026amp; iss and mail or username claims. We need to provision an internal account mapping, creating a unique ID, upon the first login of a user to be able to look up user properties by account id.\n Good, because this has very little external requirements Good, because we have accounts fully under our control Bad, because we have to provide the user lookup APIs Bad, because users will only a visible after the first login Bad, because our internal account mapping might get out of date when user attribute (e.g. name or mail) change. At least until the next time that user logs in  Links      [Link type] [Link to ADR]  …  supersedes 3. Use external User Management  ","description":"Status: proposed Deciders: @butonic, @micbar, @rhafer Date: 2022-02-08  Context and Problem Statement     oCIS needs to be integrated with various external Authentication and Identity Management Systems. Usually oCIS will have no administrative access to such a system and we will not be allowed to reconfigure it to suit our needs (e.g. we will not be able to enhance the schema of an already existing LDAP Directory)."},{"id":56,"href":"/ocis/storage/users/","title":"Users","parent":"Storage","content":"TODO add this to the storage overview? or is this a different part? That should be started as a separate service ? And documented elsewhere, e.g. in the accounts?\nUser and Group provisioning     In oc10 users are identified by a username, which cannot change, because it is used as a foreign key in several tables. For oCIS we are internally identifying users by a UUID, while using the username in the WebDAV and OCS APIs for backwards compatability. To distinguish this in the URLs we are using \u0026lt;username\u0026gt; instead of \u0026lt;userid\u0026gt;. You may have encountered \u0026lt;user_layout\u0026gt;, which refers to a template that can be configured to build several path segments by filling in user properties, e.g. the first character of the username ({{substr 0 1 .Username}}/{{.Username}}), the identity provider ({{.Id.Idp}}/{{.Username}}) or the email ({{.Mail}})\n Make no mistake, the OCS Provisioning API uses userid while it actually is the username, because it is what you use to login.  We are currently working on adding user management through the CS3 API to handle user and group provisioning (and deprovisioning).\nDemo driver     This is a simple user driver for testing. It contains three users:\neinstein:relativity marie:radioactivity richard:superfluidity In order to use the demo driver you need to export the relevant environment variable:\nexport STORAGE_USERS_DRIVER=demo JSON driver     In order to switch from the ldap driver to JSON based users you need to export the relevant environment variables:\nexport STORAGE_USERS_DRIVER=json export STORAGE_USERS_JSON=/path/to/users.json For the format of the users.json have a look at the reva examples\nLDAP driver     This is the default user driver.\nIf the following defaults don\u0026rsquo;t match your environment then change them accordingly:\nexport STORAGE_LDAP_HOSTNAME=localhost export STORAGE_LDAP_PORT=9126 export STORAGE_LDAP_BASE_DN=\u0026#39;dc=ocis,dc=test\u0026#39; export STORAGE_LDAP_USER_FILTER=\u0026#39;(\u0026amp;(objectclass=posixAccount)(cn=%s))\u0026#39; export STORAGE_LDAP_GROUP_FILTER=\u0026#39;(\u0026amp;(objectclass=posixGroup)(cn=%s))\u0026#39; export STORAGE_LDAP_BIND_DN=\u0026#39;cn=reva,ou=sysusers,dc=ocis,dc=test\u0026#39; export STORAGE_LDAP_BIND_PASSWORD=reva export STORAGE_LDAP_USER_SCHEMA_UID=uid export STORAGE_LDAP_USER_SCHEMA_MAIL=mail export STORAGE_LDAP_USER_SCHEMA_DISPLAYNAME=sn export STORAGE_LDAP_USER_SCHEMA_CN=cn Then restart the bin/storage users and bin/storage auth-basic services for the changes to take effect.\n","description":"TODO add this to the storage overview? or is this a different part? That should be started as a separate service ? And documented elsewhere, e.g. in the accounts?\nUser and Group provisioning     In oc10 users are identified by a username, which cannot change, because it is used as a foreign key in several tables. For oCIS we are internally identifying users by a UUID, while using the username in the WebDAV and OCS APIs for backwards compatability."},{"id":57,"href":"/ocis/storage/terminology/","title":"Terminology","parent":"Storage","content":"Communication is hard. And clear communication is even harder. You may encounter the following terms throughout the documentation, in the code or when talking to other developers. Just keep in mind that whenever you hear or read storage, that term needs to be clarified, because on its own it is too vague. PR welcome.\nLogical concepts     Resources     A resource is the basic building block that oCIS manages. It can be of different types:\n an actual file a container, e.g. a folder or bucket a symlink, or a reference which can point to a resource in another storage provider  References     A reference identifies a resource. A CS3 reference can carry a path and a CS3 resource id. The references come in two flavors: absolute and combined. Absolute references have either the path or the resource id set:\n An absolute path MUST start with a /. The resource id MUST be empty. An absolute resource id uniquely identifies a resource and is used as a stable identifier for sharing. The path MUST be empty. Combined references have both, path and resource id set: the resource id identifies the root resource the path is relative to that root. It MUST start with .  References     A reference is a logical concept that identifies a resource. A CS3 reference consists of either\n a path based reference, used to identify a resource in the namespace of a storage provider. It must start with a /. a CS3 id based reference, uniquely identifying a resource in the namespace of a storage provider. It consists of a storage provider id and an opaque id. The storage provider id must NOT start with a /.   The / is important because currently the static storage registry uses a map to look up which storage provider is responsible for the resource. Paths must be prefixed with / so there can be no collisions between paths and storage provider ids in the same map.  Storage Drivers     A storage driver implements access to a storage system:\nIt maps the path and id based CS3 references to an appropriate storage system specific reference, e.g.:\n eos file ids posix inodes or paths deconstructed filesystem nodes   Proposed Change iOS clients can only queue single requests to be executed in the background. The queue an upload and need to be able to identify the uploaded file after it has been uploaded to the server. The disconnected nature of the connection might cause workflows or manual user interaction with the file on the server to move the file to a different place or changing the content while the device is offline. However, on the device users might have marked the file as favorite or added it to other iOS specific collections. To be able to reliably identify the file the client can generate a uuid and attach it to the file metadata during the upload. While it is not necessary to look up files by this uuid having a second file id that serves exactly the same purpose as the file id is redundant.\nAnother aspect for the file id / uuid is that it must be a logical identifier that can be set, at least by internal systems. Without a writeable fileid we cannot restore backups or migrate storage spaces from one storage provider to another storage provider.\nTechnically, this means that every storage driver needs to have a map of a uuid to in internal resource identifier. This internal resource identifier can be\n an eos fileid, because eos can look up files by id an inode if the filesystem and the storage driver support looking up by inode a path if the storage driver has no way of looking up files by id.  In this case other mechanisms like inotify, kernel audit or a fuse overlay might be used to keep the paths up to date. to prevent excessive writes when deep folders are renamed a reverse map might be used: it will map the uuid to \u0026lt;parentuuid\u0026gt;:\u0026lt;childname\u0026gt;, allowing to trade writes for reads      Storage Providers     Technical concepts     Storage Systems      A storage provider manages multiple storage spaces by accessing a storage system with a storage driver.\n Storage Space Registries     A storage spaces registry manages the namespace for a user\nStorage Spaces     A storage space is a logical concept: It is a tree of resourcesresources with a single owner (user or group), a quota and permissions, identified by a storage space id.\n Examples would be every user\u0026rsquo;s home storage space, project storage spaces or group storage spaces. While they all serve different purposes and may or may not have workflows like antivirus scanning enabled, we need a way to identify and manage these subtrees in a generic way. By creating a dedicated concept for them this becomes easier and literally makes the codebase cleaner. A storage space registry then allows listing the capabilities of storage spaces, e.g. free space, quota, owner, syncable, root etag, upload workflow steps, \u0026hellip;\nFinally, a logical storage space id is not tied to a specific storage provider. If the storage driver supports it, we can import existing files including their file id, which makes it possible to move storage spaces between storage providers to implement storage classes, e.g. with or without archival, workflows, on SSDs or HDDs.\nShares     To be clarified: we are aware that storage spaces may be too \u0026lsquo;heavyweight\u0026rsquo; for ad hoc sharing with groups. That being said, there is no technical reason why group shares should not be treated like storage spaces that users can provision themselves. They would share the quota with the users home storage space and the share initiator would be the sole owner. Technically, the mechanism of treating a share like a new storage space would be the same. This obviously also extends to user shares and even file individual shares that would be wrapped in a virtual collection. It would also become possible to share collections of arbitrary files in a single storage space, e.g. the ten best pictures from a large album.\nStorage Systems     Every storage system has different native capabilities like id and path based lookups, recursive change time propagation, permissions, trash, versions, archival and more. A storage provider makes the storage system available in the CS3 API by wrapping the capabilities as good as possible using a storage driver. There might be multiple storage drivers for a storage system, implementing different tradeoffs to match varying requirements.\nGateways     A gateway acts as a facade to the storage related services. It authenticates and forwards API calls that are publicly accessible.\n","description":"Communication is hard. And clear communication is even harder. You may encounter the following terms throughout the documentation, in the code or when talking to other developers. Just keep in mind that whenever you hear or read storage, that term needs to be clarified, because on its own it is too vague. PR welcome.\nLogical concepts     Resources     A resource is the basic building block that oCIS manages."},{"id":58,"href":"/ocis/adr/0018-file-search-api/","title":"18. File Search API","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @C0rby Date: 2022-03-18  Context and Problem Statement     The ability to find files based on certain search terms is a key requirement for a system that provides the ability to store unstructured data on a large scale.\nDecision Drivers      Have a simple yet powerful, scalable and performant way of finding files in oCIS Be able to construct intelligent searches based on metadata Allow the user to filter the search queries based on metadata  Considered Options      Libre Graph API WebDAV API  Decision Outcome     Chosen option: WebDAV API because the current WebUI is compatible with that API. We may use the GraphAPI later in a second iteration.\nPositive Consequences      The existing Clients can continue to use the well-known API There are existing API tests which cover the basic behavior  Negative consequences      We have no server side result filtering capabilities  Pros and Cons of the Options     Libre Graph API      Good, because we try to switch most of our HTTP requests to Libre Graph Good, because the Graph API supports scopes, sorting and query language Good, because it supports server side result filtering Bad, because there are currently no clients which support that  WebDAV API      Good, because WebDAV is a well-known and widely adopted Standard Good, because existing Clients continue to work without extra efforts Bad, because the syntax is limited Bad, because we cannot do server side result filtering  Links      Search Indexing Search Query Language  ","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @C0rby Date: 2022-03-18  Context and Problem Statement     The ability to find files based on certain search terms is a key requirement for a system that provides the ability to store unstructured data on a large scale.\nDecision Drivers      Have a simple yet powerful, scalable and performant way of finding files in oCIS Be able to construct intelligent searches based on metadata Allow the user to filter the search queries based on metadata  Considered Options      Libre Graph API WebDAV API  Decision Outcome     Chosen option: WebDAV API because the current WebUI is compatible with that API."},{"id":59,"href":"/ocis/storage/proposedchanges/","title":"Proposed Changes","parent":"Storage","content":"Some architectural changes still need to be clarified or changed. Maybe an ADR is in order for all of the below.\nReva Gateway changes     A dedicated shares storage provider     Currently, when a user accepts a share, a cs3 reference is created in the users /home/shares folder. This reference represents the mount point of a share and can be renamed, similar to the share jail in ownCloud 10. This spreads the metadata of a share in two places:\n the share is persisted in the share manager the mount point of a share is persisted in the home storage provider  Furthermore, the gateway treats /home/shares different than any other path: it will stat all children and calculate an etag to allow clients to discover changes in accepted shares. This requires the storage provider to cooperate and provide this special /shares folder in the root of a users home when it is accessed as a home storage. That is the origin of the enable_home config flag that needs to be implemented for every storage driver.\nIn order to have a single source of truth we need to make the share manager aware of the mount point. We can then move all the logic that aggregates the etag in the share folder to a dedicated shares storage provider that is using the share manager for persistence. The shares storage provider would provide a /shares namespace outside of /home that lists all accepted shares for the current user. As a result the storage drivers no longer need to have a enable_home flag that jails users into their home. The /home/shares folder would move outside of the /home. In fact /home will no longer be needed, because the home folder concept can be implemented as a space: CreateHome would create a personal space on the.\nWork on this is done in https://github.com/cs3org/reva/pull/2023\n What about copy pasting links from the browser? Well this storage is only really needed to have a path to ocm shares that actually reside on other instances. In the UI the shares would be listed by querying a share manager. It returns ResourceIds, which can be stated to fetch a path that is then accessible in the CS3 global namespace. Two caveats:\n This only works for resources that are actually hosted by the current instance. For those it would leak the parent path segments to a shared resource. For accepted OCM shares there must be a path in the CS3 global namespace that has to be the same for all users, otherwise they cannot copy and share those URLs.    The gateway should be responsible for path transformations     Currently, storage providers are aware af their mount point, coupling them tightly with the gateway.\nTracked in https://github.com/cs3org/reva/issues/578\nWork is done in https://github.com/cs3org/reva/pull/1866\nURL escaped string representation of a CS3 reference     For the spaces concept we introduced the /dav/spaces/ endpoint. It encodes a cs3 reference in a URL compatible way.\n We can separate the path using a /: /dav/spaces/\u0026lt;spaceid\u0026gt;/\u0026lt;path\u0026gt; The spaceid currently is a cs3 resourceid, consisting of \u0026lt;storageid\u0026gt; and \u0026lt;opaqueid\u0026gt;. Since the opaqueid might contain / e.g. for the local driver we have to urlencode the spaceid.  To access resources by id we need to make the /dav/meta/\u0026lt;resourceid\u0026gt; able to list directories\u0026hellip; Otherwise id based navigation first has to look up the path. Or we use the libregraph api for id based navigation.\nA reference is a logical concept. It identifies a resource and consists of a \u0026lt;resource_id\u0026gt; and a \u0026lt;path\u0026gt;. A \u0026lt;resource_id\u0026gt; consists of a \u0026lt;storage_id\u0026gt; and a \u0026lt;node_id\u0026gt;. They can be concatenated using the separators ! and ::\n\u0026lt;storage_id\u0026gt;!\u0026lt;node_id\u0026gt;:\u0026lt;path\u0026gt; While all components are optional, only three cases are used:\n   format example description     !:\u0026lt;absolute_path\u0026gt; !:/absolute/path/to/file.ext absolute path   \u0026lt;storage_space\u0026gt;!:\u0026lt;relative_path\u0026gt; ee1687e5-ac7f-426d-a6c0-03fed91d5f62!:path/to/file.ext path relative to the root of the storage space   \u0026lt;storage_space\u0026gt;!\u0026lt;root\u0026gt;:\u0026lt;relative_path\u0026gt; ee1687e5-ac7f-426d-a6c0-03fed91d5f62!c3cf23bb-8f47-4719-a150-1d25a1f6fb56:to/file.ext path relative to the specified node in the storage space, used to reference resources without disclosing parent paths    \u0026lt;storage_space\u0026gt; should be a UUID to prevent references from breaking when a user or storage space gets renamed. But it can also be derived from a migration of an oc10 instance by concatenating an instance identifier and the numeric storage id from oc10, e.g. oc10-instance-a$1234.\nA reference will often start as an absolute/global path, e.g. !:/home/Projects/Foo. The gateway will look up the storage provider that is responsible for the path\n   Name Description Who resolves it?     !:/home/Projects/Foo the absolute path a client like davfs will use. The gateway uses the storage registry to look up the responsible storage provider   ee1687e5-ac7f-426d-a6c0-03fed91d5f62!:/Projects/Foo the storage_space is the same as the root, the path becomes relative to the root the storage provider can use this reference to identify this resource    Now, the same file is accessed as a share\n   Name Description     !:/users/Einstein/Projects/Foo Foo is the shared folder   ee1687e5-ac7f-426d-a6c0-03fed91d5f62!56f7ceca-e7f8-4530-9a7a-fe4b7ec8089a: 56f7ceca-e7f8-4530-9a7a-fe4b7ec8089a is the id of Foo, the path is empty    The :, ! and $ are chosen from the set of RFC3986 sub delimiters on purpose. They can be used in URLs without having to be encoded. In some cases, a delimiter can be left out if a component is not set:\n   reference interpretation     /absolute/path/to/file.ext absolute path, all delimiters omitted   ee1687e5-ac7f-426d-a6c0-03fed91d5f62!path/to/file.ext relative path in the given storage space, root delimiter : omitted   56f7ceca-e7f8-4530-9a7a-fe4b7ec8089a:to/file.ext relative path in the given root node, storage space delimiter ! omitted   ee1687e5-ac7f-426d-a6c0-03fed91d5f62!56f7ceca-e7f8-4530-9a7a-fe4b7ec8089a: node id in the given storage space, : must be present   ee1687e5-ac7f-426d-a6c0-03fed91d5f62 root of the storage space, all delimiters omitted, can be distinguished by the /    space providers     When looking up an id based resource the reference must use a logical space id, not a CS3 resource id. Otherwise id based requests, which only have a resourceid consisting of a storage id and a node id cannot be routed to the correct storage provider if the storage has moved from one storage provider to another.\nif the registry routes based on the storageid AND the nodeid it has to keep a cache of all nodeids in order to route all requests for a storage space (which consists of storage it + nodeid) to the correct storage provider. the correct resourceid for a node in a storage space would be \u0026lt;storageid\u0026gt;$\u0026lt;rootnodeid\u0026gt;!\u0026lt;nodeid\u0026gt;. The \u0026lt;storageid\u0026gt;$\u0026lt;rootnodeid\u0026gt; part allow the storage registry to route all id based requests to the correct storage provider. This becomes relevant when the storage space was moved from one storage provider to another. The storage space id remains the same, but the internal address and port change.\nTODO discuss to clarify further\nStorage drivers     allow clients to send a uuid on upload     iOS clients can only queue single requests to be executed in the background. They queue an upload and need to be able to identify the uploaded file after it has been uploaded to the server. The disconnected nature of the connection might cause workflows or manual user interaction with the file on the server to move the file to a different place or changing the content while the device is offline. However, on the device users might have marked the file as favorite or added it to other iOS specific collections. To be able to reliably identify the file the client can generate a uuid and attach it to the file metadata during the upload. While it is not necessary to look up files by this uuid having a second file id that serves exactly the same purpose as the file id is redundant.\nAnother aspect for the file id / uuid is that it must be a logical identifier that can be set, at least by internal systems. Without a writeable fileid we cannot restore backups or migrate storage spaces from one storage provider to another storage provider.\nTechnically, this means that every storage driver needs to have a map of a uuid to an internal resource identifier. This internal resource identifier can be\n an eos fileid, because eos can look up files by id an inode if the filesystem and the storage driver support looking up by inode a path if the storage driver has no way of looking up files by id.  In this case other mechanisms like inotify, kernel audit or a fuse overlay might be used to keep the paths up to date. to prevent excessive writes when deep folders are renamed a reverse map might be used: it will map the uuid to \u0026lt;parentuuid\u0026gt;:\u0026lt;childname\u0026gt;, in order to trade writes for reads as a fallback a sync job can read the file id from the metadata of the resources and populate the uuid to internal id map.    The TUS upload can take metadata, for PUT we might need a header.\nSpace id vs resource id vs storage id     We have /dav/meta/\u0026lt;fileid\u0026gt; where the fileid is a string that was returned by a PROPFIND or by the /graph/v1.0/me/drives/ endpoint? That returns a space id and the root drive item which has an id\nDoes that id have a specific format? We currently concatenate as \u0026lt;storageid\u0026gt;!\u0026lt;nodeid\u0026gt;.\nA request against /dav/meta/fileid will use the reva storage registry to look up a path.\nWhat if the storage space is moved to another storage provider. This happens during a migration:\n the current oc10 fileids need to be prefixed with at least the numeric storage id to shard them.  123 becomes instanceprefix$345!123 if we use a custom prefix that identifies an instance (so we can merge multiple instances into one ocis instance) and append the numeric storageid 345. The pattern is \u0026lt;instanceprefix\u0026gt;$\u0026lt;numericstorageid\u0026gt;!\u0026lt;fileid\u0026gt;.\nEvery \u0026lt;instanceprefix\u0026gt;$\u0026lt;numericstorageid\u0026gt; identifies a space.\n the owncloudsql driver can return these spaceids when listing spaces.  Why does it not work if we just use the fileid of the root node in the db?\nSay we have a space with three resources: \u0026lt;instanceprefix\u0026gt;$\u0026lt;numericstorageid\u0026gt;!\u0026lt;fileid\u0026gt; instanceprefix$345!1 instanceprefix$345!2 instanceprefix$345!3\nAll users have moved to ocis and the registry contains a regex to route all instanceprefix.* references to the storageprovider with the owncloudsql driver. It is up to the driver to locate the correct resource by using the filecache table. In this case the numeric storage id is unnecessary.\nNow we migrate the space 345 to another storage driver:\n the storage registry contains a new entry for instanceprefix$345 to send all resource ids for that space to the new storage provider the new storage driver has to take into account the full storageid because the nodeid may only be unique per storage space.  If we now have to fetch the path on the /dav/meta/ endpoint: /dav/meta/instanceprefix$345!1 /dav/meta/instanceprefix$345!2 /dav/meta/instanceprefix$345!3\nThis would work because the registry always sees instanceprefix$345 as the storageid.\nNow if we use the fileids directly and leave out the numeric storageid: \u0026lt;instanceprefix\u0026gt;!\u0026lt;fileid\u0026gt; instanceprefix!1 instanceprefix!2 instanceprefix!3\nThis is the current \u0026lt;storageid\u0026gt;!\u0026lt;nodeid\u0026gt; format.\nThe reva storage registry contains a instanceid entry pointing to the storage provider with the owncloudsql driver.\nResources can be looked up because the oc_filecache has a unique fileid over all storages.\nNow we again migrate the space 345 to another storage driver:\n the storage registry contains a new entry for instanceprefix!1 so the storage space root now points to the new storage provider The registry needs to be aware of node ids to route properly. This is a no-go. We don\u0026rsquo;t want to keep a cache of all nodeids in the registry. Only the root nodes of spaces. The new storage driver only has a nodeid which might collide with other nodeids from other storage spaces, e.g. when two instances are imported into one ocis instance. Although it would be possible to just set up two storage providers extra care would have to be taken to prevent nodeid collisions when importing a space.  If we now have to fetch the path on the /dav/meta/ endpoint: /dav/meta/instanceprefix!1 would work because it is the root of a space /dav/meta/instanceprefix!2 would cause the gateway to poll all storage providers because the registry has no way to determine the responsible storage provider /dav/meta/instanceprefix!3 same\nThe problem is that without a part in the storageid that allows differentiating storage spaces we cannot route them individually.\nNow, we could use the nodeid of the root of a storage space as the spaceid \u0026hellip; if it is a uuid. If it is numeric it needs a prefix to distinguish it from other spaces. \u0026lt;space-root-uuid\u0026gt;!\u0026lt;fileid\u0026gt; would be easy for the decomposedfs. eos might use numeric ids: \u0026lt;eosprefix\u0026gt;$\u0026lt;space-root-fileid\u0026gt;!\u0026lt;fileid\u0026gt;, but it needs a custom prefix to distinguish multiple eos instances.\nFurthermore, when migrating spaces between storage providers we want to stay collision free, which is why we should recommend uuids.\nAll this has implications for the decomposedfs, because it needs to split the nodes per space to prevent them from colliding.\n","description":"Some architectural changes still need to be clarified or changed. Maybe an ADR is in order for all of the below.\nReva Gateway changes     A dedicated shares storage provider     Currently, when a user accepts a share, a cs3 reference is created in the users /home/shares folder. This reference represents the mount point of a share and can be renamed, similar to the share jail in ownCloud 10."},{"id":60,"href":"/ocis/adr/0019-file-search-index/","title":"19. File Search Index","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @C0rby Date: 2022-03-18  Context and Problem Statement     The ability to find files based on certain search terms is a key requirement for a system that provides the ability to store unstructured data on a large scale.\nMore sophisticated search capabilities are expected and can be implemented, especially based on metadata.\nTo trigger the indexing of a file, the search service listens to create, update and delete events on the internal event bus of oCIS.\nThe events need to contain a valid reference that defines the file space and file id of the file in question. The event only must be sent when the file operation (update, creation, removal) is finished.\nSharing adds more complexity because the index also needs to react to create, delete and modify shares events. Sharing should not duplicate the indexed data, especially within spaces or group shares.\nDecision Drivers      Have a simple yet powerful, scalable and performant way of finding files in oCIS Be able to construct intelligent searches based on metadata Allow the user to filter the search queries based on metadata Basic File Search needs to be implemented out of the box without external dependencies The Search Indexing Service should be replaceable with more sophisticated technologies like Elasticsearch Make use of the spaces architecture to shard search indexes by space The Search Indexing Service needs to deal with multiple users accessing the same resources due to shares The Search Service should be compatible with different search indexing technologies  Considered Options      Bleve Search Elastic Search  Decision Outcome     Chosen option: Bleve Search, because we can fulfill the MVP and include it into the single binary.\nPositive Consequences      Basic File Search works out of the box We do not need heavy external dependencies which need to be deployed alongside  Negative consequences      We need to be aware of the scaling limits We need to find a way to work with shares and spaces It has a limited query language  Pros and Cons of the Options     Bleve Search      Good, because it is written in GoLang and can be bundled into the single oCIS binary Good, because it is a lightweight but powerful solution which could fulfill a lot of use cases Bad, because we do not know exactly how we can represent shares in the index without duplicating data Bad, because it is a single process Bad, because the query language is limited  Elastic Search      Good, because it has become an industry standard Good, because it supports a rich query language Good, because it has built in cluster support and scales well Good, because it has a permission system and supports multiple users and groups to access the same resource Bad, because it is a heavy setup and needs extra effort and knowledge  Links      Search API Search Query Language Bleve Search on GitHub ElasticSearch  ","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @C0rby Date: 2022-03-18  Context and Problem Statement     The ability to find files based on certain search terms is a key requirement for a system that provides the ability to store unstructured data on a large scale.\nMore sophisticated search capabilities are expected and can be implemented, especially based on metadata.\nTo trigger the indexing of a file, the search service listens to create, update and delete events on the internal event bus of oCIS."},{"id":61,"href":"/services/webfinger/","title":"Webfinger","parent":"Services","content":"Abstract     The webfinger service provides an RFC7033 WebFinger lookup of ownCloud instances relevant for a given user account via endpoints a the /.well-known/webfinger implementation.\nIt is based on https://github.com/owncloud/lookup-webfinger-sciebo but also returns localized titles in addition to the href property.\nTable of Contents        Service Configuration      OpenID Connect Discovery     Clients can make an unauthenticated GET https://drive.ocis.test/.well-known/webfinger?resource=https%3A%2F%2Fcloud.ocis.test request to discover the OpenID Connect Issuer in the http://openid.net/specs/connect/1.0/issuer relation:\n{ \u0026#34;subject\u0026#34;: \u0026#34;acct:einstein@drive.ocis.test\u0026#34;, \u0026#34;links\u0026#34;: [ { \u0026#34;rel\u0026#34;: \u0026#34;http://openid.net/specs/connect/1.0/issuer\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://sso.example.org/cas/oidc/\u0026#34; } ] } Here, the resource takes the instance domain URI, but an acct: URI works as well.\nAuthenticated Instance Discovery     When using OpenID connect to authenticate requests, clients can look up the owncloud instances a user has access to.\n Authentication is necessary to prevent leaking information about existing users. Basic auth is not supported.  The default configuration will simply return the OCIS_URL and direct clients to that domain:\n{ \u0026#34;subject\u0026#34;: \u0026#34;acct:einstein@drive.ocis.test\u0026#34;, \u0026#34;links\u0026#34;: [ { \u0026#34;rel\u0026#34;: \u0026#34;http://openid.net/specs/connect/1.0/issuer\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://sso.example.org/cas/oidc/\u0026#34; }, { \u0026#34;rel\u0026#34;: \u0026#34;http://webfinger.owncloud/rel/server-instance\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://abc.drive.example.org\u0026#34;, \u0026#34;titles\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance\u0026#34; } } ] } Configure Different Instances Based on OpenidConnect UserInfo Claims     A more complex example for configuring different instances could look like this:\nwebfinger:instances:- claim:emailregex:einstein@example\\.orghref:\u0026#34;https://{{.preferred_username}}.cloud.ocis.test\u0026#34;title:\u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for Einstein\u0026#34;\u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für Einstein\u0026#34;break:true- claim:\u0026#34;email\u0026#34;regex:marie@example\\.orghref:\u0026#34;https://{{.preferred_username}}.cloud.ocis.test\u0026#34;title:\u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for Marie\u0026#34;\u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für Marie\u0026#34;break:false- claim:\u0026#34;email\u0026#34;regex:.+@example\\.orghref:\u0026#34;https://example-org.cloud.ocis.test\u0026#34;title:\u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for example.org\u0026#34;\u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für example.org\u0026#34;break:true- claim:\u0026#34;email\u0026#34;regex:.+@example\\.comhref:\u0026#34;https://example-com.cloud.ocis.test\u0026#34;title:\u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for example.com\u0026#34;\u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für example.com\u0026#34;break:true- claim:\u0026#34;email\u0026#34;regex:.+@.+\\..+href:\u0026#34;https://cloud.ocis.test\u0026#34;title:\u0026#34;en\u0026#34;: \u0026#34;oCIS Instance\u0026#34;\u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz\u0026#34;break:trueNow, an authenticated webfinger request for acct:me@example.org (when logged in as marie) would return two instances, based on her email claim, the regex matches and break flags:\n{ \u0026#34;subject\u0026#34;: \u0026#34;acct:marie@example.org\u0026#34;, \u0026#34;links\u0026#34;: [ { \u0026#34;rel\u0026#34;: \u0026#34;http://openid.net/specs/connect/1.0/issuer\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://sso.example.org/cas/oidc/\u0026#34; }, { \u0026#34;rel\u0026#34;: \u0026#34;http://webfinger.owncloud/rel/server-instance\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://marie.cloud.ocis.test\u0026#34;, \u0026#34;titles\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for Marie\u0026#34;, \u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für Marie\u0026#34; } }, { \u0026#34;rel\u0026#34;: \u0026#34;http://webfinger.owncloud/rel/server-instance\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://xyz.drive.example.org\u0026#34;, \u0026#34;titles\u0026#34;: { \u0026#34;en\u0026#34;: \u0026#34;oCIS Instance for example.org\u0026#34;, \u0026#34;de\u0026#34;: \u0026#34;oCIS Instanz für example.org\u0026#34; } } ] } ","description":"Abstract     The webfinger service provides an RFC7033 WebFinger lookup of ownCloud instances relevant for a given user account via endpoints a the /.well-known/webfinger implementation.\nIt is based on https://github.com/owncloud/lookup-webfinger-sciebo but also returns localized titles in addition to the href property.\nTable of Contents        Service Configuration      OpenID Connect Discovery     Clients can make an unauthenticated GET https://drive."},{"id":62,"href":"/ocis/adr/0020-file-search-query-language/","title":"20. File Search Query Language","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @micbar, @dragotin, @C0rby Date: 2022-03-18  Context and Problem Statement     From the users perspective, the interface to search is just a single form field where the user enters one or more search terms. The minimum expectation is that the search returns file names and links to files that:\n have a file name that contains at least one of the search terms contain at least one of the search terms in the file contents have metadata that is equal or contains one of the search terms  Decision Drivers      The standard user should not be bothered by a query syntax The power user should also be able to narrow his search with an efficient and flexible syntax We need to consider different backend technologies which we need to access through an abstraction layer Using different indexing systems should lead to a slightly different feature set without changing the syntax completely  Considered Options      Simple Query Lucene Query Language Solr Query Language Elasticsearch Query Language  Decision Outcome     Chosen option: Simple Query, because it is a suitable MVP.\nPositive Consequences      We can do a quick implementation  Negative consequences      We cannot specify terms or other search criteria We will need to find a good point in time to use a query language before we start working around it  Pros and Cons of the Options     Simplified Query     Implement a very simple search approach: Return all files which contain at least one of the keywords in their name, path, alias or selected metadata.\n Good, because that covers 80% of the users needs Good, because it is very straightforward Good, because it is a suitable solution for GA Bad, because it is below the industry standard Bad, because it only provides one search query  Lucene Query Language     The Lucene Query Parser syntax supports advanced queries like term, phrase, wildcard, fuzzy search, proximity search, regular expressions, boosting, boolean operators and grouping. It is a well known query syntax used by the Apache Lucene Project. Popular Platforms like Wikipedia are using Lucene or Solr, which is the successor of Lucene\n Good, because it is a well documented and powerful syntax Good, because it is very close to the Elasticsearch and the Solr syntax which enhances compatibility Bad, because there is no powerful and well tested query parser for golang available Bad, because it adds complexity and fulfilling all the different query use-cases can be an \u0026ldquo;uphill battle\u0026rdquo;  Solr Query Language     Solr is highly reliable, scalable and fault-tolerant, providing distributed indexing, replication and load-balanced querying, automated failover and recovery, centralized configuration and more. Solr powers the search and navigation features of many of the world\u0026rsquo;s largest internet sites.\n Good, because it is a well documented and powerful syntax Good, because it is very close to the Elasticsearch and the Lucene syntax which enhances compatibility Good, because it has a strong community with large resources and knowledge Bad, because it adds complexity and fulfilling all the different query use-cases can be an \u0026ldquo;uphill battle\u0026rdquo;  Elasticsearch Query Language     Elasticsearch provides a full Query DSL (Domain Specific Language) based on JSON to define queries. Think of the Query DSL as an AST (Abstract Syntax Tree) of queries, consisting of two types of clauses. It is able to combine multiple query types into compound queries. It is also a successor of Solr.\n Good, because it is a well documented and powerful syntax Good, because it is very close to the Elasticsearch and the Solr syntax which enhances compatibility Good, because there is a stable and well tested go client which brings a query builder Good, because it could be used as the query language which supports different search backends by just implementing what is needed for our use-case Bad, because it adds complexity and fulfilling all the different query use-cases can be an \u0026ldquo;uphill battle\u0026rdquo;  Links      Search API Search Indexing Apache Lucene Apache Solr Elastic Search Elastic Search for go  ","description":"Status: proposed Deciders: @butonic, @micbar, @dragotin, @C0rby Date: 2022-03-18  Context and Problem Statement     From the users perspective, the interface to search is just a single form field where the user enters one or more search terms. The minimum expectation is that the search returns file names and links to files that:\n have a file name that contains at least one of the search terms contain at least one of the search terms in the file contents have metadata that is equal or contains one of the search terms  Decision Drivers      The standard user should not be bothered by a query syntax The power user should also be able to narrow his search with an efficient and flexible syntax We need to consider different backend technologies which we need to access through an abstraction layer Using different indexing systems should lead to a slightly different feature set without changing the syntax completely  Considered Options      Simple Query Lucene Query Language Solr Query Language Elasticsearch Query Language  Decision Outcome     Chosen option: Simple Query, because it is a suitable MVP."},{"id":63,"href":"/services/app-provider/","title":"App-Provider","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":64,"href":"/services/app-registry/","title":"App-Registry","parent":"Services","content":"Abstract     Table of Contents        Apps      Service Configuration      ","description":"Abstract     Table of Contents        Apps      Service Configuration      "},{"id":65,"href":"/services/audit/","title":"Audit","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":66,"href":"/services/auth-basic/","title":"Auth-Basic","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":67,"href":"/services/auth-bearer/","title":"Auth-Bearer","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":68,"href":"/services/auth-machine/","title":"Auth-Machine","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":69,"href":"/services/frontend/","title":"Frontend","parent":"Services","content":"Abstract     The frontend service provides multiple HTTP endpoints to translate OCS, archiver and approvider requests into CS3 requests.\nTable of Contents        Service Configuration      OCS     The OCS endpoint implements the open collaboration services API in a backwards compatible manner.\nSharing     Aggregating share information is one of the most time consuming operations in OCIS. The service fetches a list of either received or created shares and has to stat every resource individually. While stats are fast, the default behavior scales linearly with the number of shares.\nTo save network trips the sharing implementation can cache the stat requests with an in memory cache or in redis. It will shorten the response time by the network rountrip overhead at the cost of the API only eventually being updated.\nSetting FRONTEND_OCS_RESOURCE_INFO_CACHE_TTL=60 would cache the stat info for 60 seconds. Increasing this value makes sense for large deployments with thousands of active users that keep the cache up to date. Low frequency usage scenarios should not expect a noticeable improvement.\nArchiver     The archiver endpoint provides bundled downloads of multiple files and folders.\nAppprovider     The appprovider endpoint is used to manage available apps that can be used to open different file types.\n","description":"Abstract     The frontend service provides multiple HTTP endpoints to translate OCS, archiver and approvider requests into CS3 requests.\nTable of Contents        Service Configuration      OCS     The OCS endpoint implements the open collaboration services API in a backwards compatible manner.\nSharing     Aggregating share information is one of the most time consuming operations in OCIS."},{"id":70,"href":"/services/gateway/","title":"Gateway","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":71,"href":"/services/groups/","title":"Groups","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":72,"href":"/services/idm/","title":"IDM","parent":"Services","content":"Abstract     The IDM service provides a minimal LDAP Service (based on https://github.com/libregraph/idm) for oCIS. It is started as part of the default configuration and serves as a central place for storing user and group information.\nIt is mainly targeted at small oCIS installations. For larger setups it is recommended to replace IDM with a \u0026ldquo;real\u0026rdquo; LDAP server or to switch to an external Identity Management Solution.\nIDM listens on port 9325 by default. In the default configuration it only accepts TLS protected connections (LDAPS). The BaseDN of the LDAP tree is o=libregraph-idm. IDM gives LDAP write permissions to a single user (DN: uid=libregraph,ou=sysusers,o=libregraph-idm). Any other authenticated user has read-only access. IDM stores its data in a boltdb file idm/ocis.boltdb inside the oCIS base data directory.\nNote: IDM is limited in its functionality. It only supports a subset of the LDAP operations (namely BIND, SEARCH, ADD, MODIFY, DELETE). Also IDM currently does not do any schema verification (e.g. structural vs. auxiliary object classes, require and option attributes, syntax checks, \u0026hellip;). So it\u0026rsquo;s not meant as a general purpose LDAP server.\nTable of Contents        Resetting a lost administrator password      Configuration Hints      Service Configuration      ","description":"Abstract     The IDM service provides a minimal LDAP Service (based on https://github.com/libregraph/idm) for oCIS. It is started as part of the default configuration and serves as a central place for storing user and group information.\nIt is mainly targeted at small oCIS installations. For larger setups it is recommended to replace IDM with a \u0026ldquo;real\u0026rdquo; LDAP server or to switch to an external Identity Management Solution."},{"id":73,"href":"/services/nats/","title":"NATS","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":74,"href":"/services/notifications/","title":"Notifications","parent":"Services","content":"Abstract     The notifications extension is responsible for making users aware of changes. It listens on the event bus, filters relevant events, looks up the recipients email address and then queues an email with an external MTA.\nTable of Contents        Service Configuration      ","description":"Abstract     The notifications extension is responsible for making users aware of changes. It listens on the event bus, filters relevant events, looks up the recipients email address and then queues an email with an external MTA.\nTable of Contents        Service Configuration      "},{"id":75,"href":"/services/ocdav/","title":"ocDAV","parent":"Services","content":"Abstract     This service provides the WebDAV API which is required by ownCloud clients. Previews (thumbnails) are provided by the [WebDAV service]({{ ../../webdav }}).\nTable of Contents        Service Configuration      ","description":"Abstract     This service provides the WebDAV API which is required by ownCloud clients. Previews (thumbnails) are provided by the [WebDAV service]({{ ../../webdav }}).\nTable of Contents        Service Configuration      "},{"id":76,"href":"/services/storage-publiclink/","title":"Storage-Publiclink","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":77,"href":"/services/storage-shares/","title":"Storage-Shares","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":78,"href":"/services/storage-system/","title":"Storage-System","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":79,"href":"/services/storage-users/","title":"Storage-Users","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":80,"href":"/services/users/","title":"Users","parent":"Services","content":"Abstract     Table of Contents        Service Configuration      ","description":"Abstract     Table of Contents        Service Configuration      "},{"id":81,"href":"/extensions/ocis_hello/configuration/","title":"Configuration","parent":"Hello (example extension)","content":"   Configuration  Configuration using config files Environment variables Command line flags   Root Command Sub Commands  hello server hello health        Configuration     Configuration using config files     Out of the box extensions will attempt to read configuration details from:\n/etc/ocis $HOME/.ocis ./config For this configuration to be picked up, have a look at your extension root command and look for which default config name it has assigned. i.e: ocis-hello reads hello.json | yaml | toml ....\nSo far we support the file formats JSON and YAML, if you want to get a full example configuration just take a look at our repository, there you can always see the latest configuration format. These example configurations include all available options and the default values. The configuration file will be automatically loaded if it\u0026rsquo;s placed at /etc/ocis/ocis.yml, ${HOME}/.ocis/ocis.yml or $(pwd)/config/ocis.yml.\nEnvironment variables     If you prefer to configure the service with environment variables you can see the available variables below.\nIf multiple variables are listed for one option, they are in order of precedence. This means the leftmost variable will always win if given.\nCommand line flags     If you prefer to configure the service with command line flags you can see the available variables below. Command line flags are only working when calling the sub command directly.\nRoot Command     Hello, an example oCIS extension\nUsage: hello [global options] command [command options] [arguments...]\n -config-file | $HELLO_CONFIG_FILE Path to config file. -log-level | $HELLO_LOG_LEVEL , $OCIS_LOG_LEVEL Set logging level. Default: info. -log-pretty | $HELLO_LOG_PRETTY , $OCIS_LOG_PRETTY Enable pretty logging. -log-color | $HELLO_LOG_COLOR , $OCIS_LOG_COLOR Enable colored logging.  Sub Commands     hello server     start hello service\nUsage: hello server [command options] [arguments...]\n -log-file | $HELLO_LOG_FILE , $OCIS_LOG_FILE Enable log to file. -tracing-enabled | $HELLO_TRACING_ENABLED Enable sending traces. -tracing-type | $HELLO_TRACING_TYPE Tracing backend type. Default: jaeger. -tracing-endpoint | $HELLO_TRACING_ENDPOINT Endpoint for the agent. -tracing-collector | $HELLO_TRACING_COLLECTOR Endpoint for the collector. -tracing-service | $HELLO_TRACING_SERVICE Service name for tracing. Default: hello. -debug-addr | $HELLO_DEBUG_ADDR Address to bind debug server. Default: 0.0.0.0:9109. -debug-token | $HELLO_DEBUG_TOKEN Token to grant metrics access. -debug-pprof | $HELLO_DEBUG_PPROF Enable pprof debugging. -debug-zpages | $HELLO_DEBUG_ZPAGES Enable zpages debugging. -http-namespace | $HELLO_HTTP_NAMESPACE Set the base namespace for the http namespace. Default: com.owncloud.web. -http-addr | $HELLO_HTTP_ADDR Address to bind http server. Default: 0.0.0.0:9105. -http-root | $HELLO_HTTP_ROOT Root path of http server. Default: /. -http-cache-ttl | $HELLO_CACHE_TTL Set the static assets caching duration in seconds. Default: 604800. -grpc-namespace | $HELLO_GRPC_NAMESPACE Set the base namespace for the grpc namespace. Default: com.owncloud.api. -name | $HELLO_NAME service name. Default: \u0026quot;hello\u0026quot;. -grpc-addr | $HELLO_GRPC_ADDR Address to bind grpc server. Default: 0.0.0.0:9106. -asset-path | $HELLO_ASSET_PATH Path to custom assets. -jwt-secret | $HELLO_JWT_SECRET Used to create JWT to talk to reva, should equal reva\u0026rsquo;s jwt-secret. Default: Pive-Fumkiu4.  hello health     Check health status\nUsage: hello health [command options] [arguments...]\n -debug-addr | $HELLO_DEBUG_ADDR Address to debug endpoint. Default: 0.0.0.0:9109.  ","description":"Configuration  Configuration using config files Environment variables Command line flags   Root Command Sub Commands  hello server hello health        Configuration     Configuration using config files     Out of the box extensions will attempt to read configuration details from:\n/etc/ocis $HOME/.ocis ./config For this configuration to be picked up, have a look at your extension root command and look for which default config name it has assigned."},{"id":82,"href":"/clients/rclone/","title":"Rclone","parent":"Clients","content":"About Rclone      Rclone is a command line program to manage files on cloud storage. It is a feature rich alternative to cloud vendors\u0026rsquo; web storage interfaces. Over 40 cloud storage products support rclone including S3 object stores, business \u0026amp; consumer file storage services, as well as standard transfer protocols.\nRclone has powerful cloud equivalents to the unix commands rsync, cp, mv, mount, ls, ncdu, tree, rm, and cat. Rclone\u0026rsquo;s familiar syntax includes shell pipeline support, and \u0026ndash;dry-run protection. It is used at the command line, in scripts or via its API.\nUsers call rclone \u0026ldquo;The Swiss army knife of cloud storage\u0026rdquo;, and \u0026ldquo;Technology indistinguishable from magic\u0026rdquo;.\n  Source: Rclone project website\nTable of Contents        WebDAV with Basic Authentication      WebDAV with OpenID Connect      ","description":"About Rclone      Rclone is a command line program to manage files on cloud storage. It is a feature rich alternative to cloud vendors\u0026rsquo; web storage interfaces. Over 40 cloud storage products support rclone including S3 object stores, business \u0026amp; consumer file storage services, as well as standard transfer protocols.\nRclone has powerful cloud equivalents to the unix commands rsync, cp, mv, mount, ls, ncdu, tree, rm, and cat."},{"id":83,"href":"/clients/rclone/webdav-sync-basic-auth/","title":"WebDAV with Basic Authentication","parent":"Rclone","content":"WebDAV with Basic Authentication      Basic Authentication is disabled by default in oCIS because of security considerations. In order to make the following Rclone commands work the oCIS administrator needs to enable Basic Authentication e.g. by setting the environment variable PROXY_ENABLE_BASIC_AUTH to true.\nPlease consider to use Rclone with OpenID Connect instead.\n  For the usage of a WebDAV remote with Rclone see also the Rclone documentation\nConfigure the WebDAV remote     First of all we need to set up our credentials and the WebDAV remote for Rclone. In this example we do this by setting environment variables. You might also set up a named remote or use command line options to achieve the same.\nexport RCLONE_WEBDAV_VENDOR=owncloud export RCLONE_WEBDAV_URL=https://ocis.owncloud.test/remote.php/webdav/ export RCLONE_WEBDAV_USER=einstein export RCLONE_WEBDAV_PASS=$(rclone obscure relativity)   Please note that RCLONE_WEBDAV_PASS is not set to the actual password, but to the value returned by rclone obscure \u0026lt;password\u0026gt;.  We now can use Rclone to sync the local folder /tmp/test to /test in your oCIS home folder.\nSync to the WebDAV remote     rclone sync :local:/tmp :webdav:/test If your oCIS doesn\u0026rsquo;t use valid SSL certificates, you may need to use rclone --no-check-certificate sync ....\n","description":"WebDAV with Basic Authentication      Basic Authentication is disabled by default in oCIS because of security considerations. In order to make the following Rclone commands work the oCIS administrator needs to enable Basic Authentication e.g. by setting the environment variable PROXY_ENABLE_BASIC_AUTH to true.\nPlease consider to use Rclone with OpenID Connect instead.\n  For the usage of a WebDAV remote with Rclone see also the Rclone documentation"},{"id":84,"href":"/clients/rclone/webdav-sync-oidc/","title":"WebDAV with OpenID Connect","parent":"Rclone","content":"WebDAV with OpenID Connect     Rclone itself is not able to open and maintain an OpenID Connect session. But it is able to still use OpenID Connect for authentication by leveraging a so called OIDC-agent.\nSetting up the OIDC-agent     You need to install the OIDC-agent from your OS\u0026rsquo; package repository (e.g. Debian or MacOS).\nConfiguring the OIDC-agent     Run the following command to add a OpenID Connect profile to your OIDC-agent. It will open the login page of OpenID Connect identity provider where you need to log in if you don\u0026rsquo;t have an active session.\noidc-gen \\  --client-id=oidc-agent \\  --client-secret=\u0026#34;\u0026#34; \\  --pub \\  --issuer https://ocis.owncloud.test \\  --redirect-uri=http://localhost:12345 \\  --scope max \\  einstein-ocis-owncloud-test If you have dynamic client registration enabled on your OpenID Connect identity provider, you can skip the --client-id, --client-secret and --pub options.\nIf you\u0026rsquo;re using a dedicated OpenID Connect client for the OIDC-agent, we recommend a public one with the following two redirect URIs: http://127.0.0.1:* and http://localhost:*. Alternatively you also may use the already existing OIDC client of the ownCloud Desktop Client (--client-id=xdXOt13JKxym1B1QcEncf2XDkLAexMBFwiT9j6EfhhHFJhs2KM9jbjTmf8JBXE69 and --client-secret=UBntmLjC2yYCeHwsyj73Uwo9TAaecAetRwMw0xYcvNL9yRdLSUi0hUAHfvCHFeFh, no --pub set, request specific scope for oofline access), e.g.:\noidc-gen / --client-id=xdXOt13JKxym1B1QcEncf2XDkLAexMBFwiT9j6EfhhHFJhs2KM9jbjTmf8JBXE69 \\  --client-secret=UBntmLjC2yYCeHwsyj73Uwo9TAaecAetRwMw0xYcvNL9yRdLSUi0hUAHfvCHFeFh \\  --issuer https://cloud.ocis.test \\  --redirect-uri=http://localhost:12345 \\  --scope=\u0026#34;openid offline_access profile email\u0026#34; \\  my-client When using a self signed certificate you have to provide the certificate chain using --cp /etc/ssl/certs/test.cert.pem. In case oidc-gen cannot determine the flow try with --flow=code.\nPlease also note that the OIDC-agent will listen on your localhost interface on port 12345 for the time of the initial authentication. If that port is already occupied on your machine, you can easily change that by setting the --redirect-uri parameter to a different value.\nAfter a successful login or an already existing session you will be redirected to success page of the OIDC-agent. You will now be asked for a password for your account configuration, so that your OIDC session is secured and cannot be used by other people with access to your computer.\nConfigure the WebDAV remote     First of all we need to set up our credentials and the WebDAV remote for Rclone. In this example we do this by setting environment variables. You might also set up a named remote or use command line options to achieve the same.\nexport RCLONE_WEBDAV_VENDOR=owncloud export RCLONE_WEBDAV_URL=https://ocis.owncloud.test/remote.php/webdav/ export RCLONE_WEBDAV_BEARER_TOKEN_COMMAND=\u0026#34;oidc-token einstein-ocis-owncloud-test\u0026#34; Sync to the WebDAV remote     We now can use Rclone to sync the local folder /tmp/test to /test in your oCIS home folder.\nrclone sync :local:/tmp :webdav:/test If your oCIS doesn\u0026rsquo;t use valid SSL certificates, you may need to use rclone --no-check-certificate sync ....\n","description":"WebDAV with OpenID Connect     Rclone itself is not able to open and maintain an OpenID Connect session. But it is able to still use OpenID Connect for authentication by leveraging a so called OIDC-agent.\nSetting up the OIDC-agent     You need to install the OIDC-agent from your OS\u0026rsquo; package repository (e.g. Debian or MacOS).\nConfiguring the OIDC-agent     Run the following command to add a OpenID Connect profile to your OIDC-agent."},{"id":85,"href":"/ocis/deployment/","title":"Deployment","parent":"oCIS - ownCloud Infinite Scale","content":"   Deployments scenarios and examples  Setup oCIS on your server   Secure an oCIS instance      Deployments scenarios and examples     This section handles deployments and operations for admins and people who are interested in how versatile oCIS is. If you want to just try oCIS you may also follow Getting started.\nSetup oCIS on your server     oCIS deployments are super simple, yet there are many configurations possible for advanced setups.\n Basic oCIS setup - configure domain, certificates and port oCIS setup with Traefik for SSL termination oCIS setup with Keycloak as identity provider oCIS setup with WOPI server to open office documents in your browser Parallel deployment of oC10 and oCIS oCIS with S3 storage backend (MinIO) oCIS with the Hello extension example  Secure an oCIS instance     oCIS no longer has any default secrets in versions later than oCIS 1.20.0. Therefore you\u0026rsquo;re no longer able to start oCIS without generating / setting all needed secrets.\nThe recommended way is to use ocis init for that. It will generate a secure config file for you.\n","description":"Deployments scenarios and examples  Setup oCIS on your server   Secure an oCIS instance      Deployments scenarios and examples     This section handles deployments and operations for admins and people who are interested in how versatile oCIS is. If you want to just try oCIS you may also follow Getting started.\nSetup oCIS on your server     oCIS deployments are super simple, yet there are many configurations possible for advanced setups."},{"id":86,"href":"/extensions/ocis_hello/building/","title":"Building","parent":"Hello (example extension)","content":"   Frontend Backend Documentation      As this project is built with Go and NodeJS, so you need to install that first. The installation of Go and NodeJS is out of the scope of this document, please follow the official documentation for Go, NodeJS and Yarn, to build this project you have to install Go \u0026gt;= v1.16. After the installation of the required tools you need to get the sources:\ngit clone https://github.com/owncloud/ocis-hello.git cd ocis-hello All required tool besides the ones mentioned above will be automatically installed. All commands to build this project are part of our Makefile and respectively our package.json.\nFrontend     yarn install yarn build The above commands will install the required build dependencies and build the whole frontend bundle. This bundle will we embedded into the binary later on.\nBackend     make generate make build The above commands will embed the frontend bundle into the binary. Finally you should have the binary within the bin/ folder now, give it a try with ./bin/hello -h to see all available options.\nDocumentation     Just run make -C docs docs-serve from within the root level of the extensions git repository. This will make documentation available on localhost:1313 and also do a hot reload if you change something in the (non autogenerated) documentation files.\n","description":"Frontend Backend Documentation      As this project is built with Go and NodeJS, so you need to install that first. The installation of Go and NodeJS is out of the scope of this document, please follow the official documentation for Go, NodeJS and Yarn, to build this project you have to install Go \u0026gt;= v1.16. After the installation of the required tools you need to get the sources:"},{"id":87,"href":"/clients/web/building/","title":"Building from source","parent":"ownCloud Web","content":"   Building ownCloud Web Updating dependencies Building the documentation  Setting up Viewing the documentation Deploying the documentation        Building ownCloud Web      Run pnpm install to install dependencies Run pnpm build to build Web and all apps included in the packages folder  Updating dependencies      Run pnpm upgrade to update dependencies  Building the documentation     Setting up      Install hugo Run make docs  Viewing the documentation     To view the rendered docs in the browser run:\ncd hugo hugo -D server Then open \u0026ldquo;http://localhost:1313/\u0026rdquo;\nWhen making changes to the docs, run make docs again and the server will pick up the changes and reload the page automatically\nDeploying the documentation     The documentation is automatically deployed from the master branch to https://owncloud.dev/clients/web/\n","description":"Building ownCloud Web Updating dependencies Building the documentation  Setting up Viewing the documentation Deploying the documentation        Building ownCloud Web      Run pnpm install to install dependencies Run pnpm build to build Web and all apps included in the packages folder  Updating dependencies      Run pnpm upgrade to update dependencies  Building the documentation     Setting up      Install hugo Run make docs  Viewing the documentation     To view the rendered docs in the browser run:"},{"id":88,"href":"/clients/web/docs/building/","title":"Building from source","parent":"ownCloud Web","content":"   Building ownCloud Web Updating dependencies Building the documentation  Setting up Viewing the documentation Deploying the documentation        Building ownCloud Web      Run pnpm install to install dependencies Run pnpm build to build Web and all apps included in the packages folder  Updating dependencies      Run pnpm upgrade to update dependencies  Building the documentation     Setting up      Install hugo Run make docs  Viewing the documentation     To view the rendered docs in the browser run:\ncd hugo hugo -D server Then open \u0026ldquo;http://localhost:1313/\u0026rdquo;\nWhen making changes to the docs, run make docs again and the server will pick up the changes and reload the page automatically\nDeploying the documentation     The documentation is automatically deployed from the master branch to https://owncloud.dev/clients/web/\n","description":"Building ownCloud Web Updating dependencies Building the documentation  Setting up Viewing the documentation Deploying the documentation        Building ownCloud Web      Run pnpm install to install dependencies Run pnpm build to build Web and all apps included in the packages folder  Updating dependencies      Run pnpm upgrade to update dependencies  Building the documentation     Setting up      Install hugo Run make docs  Viewing the documentation     To view the rendered docs in the browser run:"},{"id":89,"href":"/services/eventhistory/","title":"Eventhistory","parent":"Services","content":"Abstract     The eventhistory consumes all events from the configured event system like NATS, stores them and allows other services to retrieve them via an eventid.\nTable of Contents        Service Configuration      Prerequisites     Running the eventhistory service without an event sytem like NATS is not possible.\nConsuming     The eventhistory services consumes all events from the configured event sytem.\nStoring     The eventhistory service stores each consumed event via the configured store in EVENTHISTORY_STORE_TYPE. Possible stores are:\n mem: Basic in-memory store and the default. ocmem: Advanced in-memory store allowing max size. redis: Stores data in a configured redis cluster. etcd: Stores data in a configured etcd cluster. nats-js: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in productive enviroments.   Note that in-memory stores are by nature not reboot persistent. Though usually not necessary, a database name and a database table can be configured for event stores if the event store supports this. Generally not applicapable for stores of type in-memory. These settings are blank by default which means that the standard settings of the configured store applies. Events stay in the store for 2 weeks by default. Use EVENTHISTORY_RECORD_EXPIRY to adjust this value. The eventhistory service can be scaled if not using in-memory stores and the stores are configured identically over all instances.  Retrieving     Other services can call the eventhistory service via a grpc call to retrieve events. The request must contain the eventid that should be retrieved.\n","description":"Abstract     The eventhistory consumes all events from the configured event system like NATS, stores them and allows other services to retrieve them via an eventid.\nTable of Contents        Service Configuration      Prerequisites     Running the eventhistory service without an event sytem like NATS is not possible.\nConsuming     The eventhistory services consumes all events from the configured event sytem."},{"id":90,"href":"/services/graph/","title":"Graph","parent":"Services","content":"Abstract     This service provides a simple graph world API which can be used by clients or other extensions.\nTable of Contents        Service Configuration      ","description":"Abstract     This service provides a simple graph world API which can be used by clients or other extensions.\nTable of Contents        Service Configuration      "},{"id":91,"href":"/services/idp/","title":"IDP","parent":"Services","content":"Abstract     This service provides an OpenID Connect provider which is the default way to authenticate in oCIS.\nTable of Contents        Service Configuration      Theming      ","description":"Abstract     This service provides an OpenID Connect provider which is the default way to authenticate in oCIS.\nTable of Contents        Service Configuration      Theming      "},{"id":92,"href":"/apis/http/graph/","title":"LibreGraph","parent":"Http","content":"The LibreGraph API is a REST Api which is inspired by the Microsoft Graph API. It tries to stay compliant with the Microsoft Graph API and aims to be the Next Generation Api in Infinite Scale where we want to support most of the features of the platform. The API specification is available in the OpenApi 3 standard and there are generated client and server SDKs available. You can browse the API with the Swagger UI.\nCalling the LibreGraph API     {HTTP method} https://ocis.url/graph/{version}/{resource}?{query-parameters} The request component consists of:\n   Component Description     {HTTP method} The HTTP method which is used in the request.   {version} The version of the LibreGraph API used by the client.   {resource} The LibreGraph Resource which the client is referencing in the request.   {query-parameters} Optional parameters for the request to customize the response.    HTTP methods        Method Description     GET Read data from a resource.   POST Create a new resource.   PATCH Update an existing resource.   PUT Replace an existing resource.   DELETE Delete an existing resource.    The methods GET and DELETE need no request body. The methods POST, PATCH and PUT require a request body, normally in JSON format to provide the needed values.\nVersion     Infinite Scale currently provides the version v1.0.\nResource     A resource could be an entity or a complex type and is usually defined by properties. Entities are always recognizable by an Id property. The URL contains the resource which you are interacting with e.g. /me/drives or /groups/{group-id}.\nEach resource could possibly require different permissions. Usually you need permissions on a higher level for creating or updating an existing resource than for reading.\nQuery parameters     Query parameters can be OData system query options, or other strings that a method accepts to customize its response.\nYou can use optional OData system query options to include more or fewer properties than the default response, filter the response for items that match a custom query, or provide additional parameters for a method.\nFor example, adding the following filter parameter restricts the drives returned to only those with the driveType property of project.\nGET https://ocis.url/graph/v1.0/drives?$filter=driveType eq \u0026#39;project\u0026#39; For more information about OData query options please check the API specification and the provided examples.\nAuthorization     For development purposes the examples in the developer documentation use Basic Auth. It is disabled by default and should only be enabled by setting PROXY_ENABLE_BASIC_AUTH in the proxy for development or test instances.\nTo authenticate with a Bearer token or OpenID Connect access token replace the -u user:password Basic Auth option of curl with a -H 'Authorization: Bearer \u0026lt;token\u0026gt;' header. A \u0026lt;token\u0026gt; can be obtained by copying it from a request in the browser, although it will time out within minutes. To automatically refresh the OpenID Connect access token an ssh-agent like solution like oidc-agent should be used. The graph endpoints that support a preconfigured token can be found in the API specification\nResources        Spaces      Users      Groups      ","description":"The LibreGraph API is a REST Api which is inspired by the Microsoft Graph API. It tries to stay compliant with the Microsoft Graph API and aims to be the Next Generation Api in Infinite Scale where we want to support most of the features of the platform. The API specification is available in the OpenApi 3 standard and there are generated client and server SDKs available. You can browse the API with the Swagger UI."},{"id":93,"href":"/services/ocs/","title":"Ocs","parent":"Services","content":"Abstract     This service provides the OCS API which is required by some ownCloud clients.\nTable of Contents        Service Configuration      ","description":"Abstract     This service provides the OCS API which is required by some ownCloud clients.\nTable of Contents        Service Configuration      "},{"id":94,"href":"/services/policies/","title":"Policies","parent":"Services","content":"Abstract     The policies service provides a new grpc api which can be used to return whether a requested operation is allowed or not. To do so, Open Policy Agent (OPA) is used to determine the set of rules of what is permitted and what is not.\nPolicies are written in the rego query language. The location of the rego files can be configured via yaml, a configuration via environment variables is not possible.\nTable of Contents        Service Configuration      General Information     The policies service consists of the following modules:\n Proxy authorization (middleware) Event authorization (async post-processing) gRPC API (can be used by other services)  To configure the policies service, three environment variables need to be defined:\n POLICIES_ENGINE_TIMEOUT POLICIES_POSTPROCESSING_QUERY PROXY_POLICIES_QUERY  Note that each query setting defines the Complete Rules variable defined in the rego rule set the corresponding step uses for the evaluation. If the variable is mistyped or not found, the evaluation defaults to deny. Individual query definitions can be defined for each module.\nTo activate a the policies service for a module, it must be started with a yaml configuration that points to one or more rego files. Note that if the service is scaled horizontally, each instance should have access to the same rego files to avoid unpredictable results. If a file path has been configured but the file it is not present or accessible, the evaluation defaults to deny.\nWhen using async post-processing which is done via the postprocessing service, the value policies must be added to the POSTPROCESSING_STEPS configuration in postprocessing service in the order where the evaluation should take place.\nvariable defined in the Rego rule set the corresponding step uses for the evaluation. If the variable is mistyped or not found, the evaluation defaults to deny. Individual query definitions can be defined for each module.\nTo activate the policies service for a module, it must be started with a yaml configuration that points to at least one Rego file that contains the complete rule variable to be queried. Note that if the service is scaled horizontally, each instance should have access to the same Rego files to avoid unpredictable results. If a file path has been configured but the file it is not present or accessible, the evaluation defaults to deny.\nWhen using async post-processing via the postprocessing service, the value policies must be added to the POSTPROCESSING_STEPS configuration in the order in which the evaluation should take place. Example: First check if a file contains questionable content via policies. If it looks okay, continue to check for viruses.\nFor configuration examples, the Example Policies from below are used.\nModules     gRPC API     The gRPC API can be used by any other internal service. It can also be used for example by third parties to find out if an action is allowed or not. This layer is already used by the proxy middleware. There is no configuration necessary, because the query setting (complete rule variable) must be part of the request.\nProxy Middleware     The proxy service already includes a middleware which uses the internal gRPC API to evaluate the policies. Since the proxy is in heavy use and every HTTP request is processed here, only simple and quick decisions should be evaluated. More complex queries such as file content evaluation are strongly discouraged.\nEvent Service (Postprocessing)     This layer is event-based and part of the postprocessing service. Since processing at this point is asynchronous, the operations can also take longer and be more expensive, like evaluating the contents of a file.\nDefining Policies to Evaluate     Each module can have as many policy files as needed for evaluation. Files can also include other files if necessary. To use policies, they have to be saved to a location that is accessible to the policies service. As a good starting point, take the config directory and use a subdirectory collecting all the .rego files, though any other directory can be defined. The config directory is already accessible by all services and usually is included in a xref:maintenance/b-r/backup.adoc[backup] plan.\nIf this is done, it\u0026rsquo;s required to configure the policies service to use these files:\nNOTE: It is important that all necessary files are added to the list of files the policies service uses.\npolicies:engine:policies:- your_path_to_policies/proxy.rego- your_path_to_policies/postprocessing.rego- your_path_to_policies/util.regoOnce the references to policy files are configured correctly, the _QUERY configuration needs to be defined for the proxy middleware and for the events service.\nSetting the Query Configuration     To define a value for the query evaluation, the following scheme is necessary:\ndata.\u0026lt;package-name\u0026gt;.\u0026lt;complete-rule-variable-name\u0026gt;\n The keyword data is mandatory and must be present. The package-name is defined in one .rego file like package postprocessing. It is not related to the filename. For more details, see the packages documentation. The complete-rule-variable-name is the variable providing the result of the evaluation. Exact one of the defined files, which is responsible for returning the evaluation result, must contain the combination of \u0026lt;package-name\u0026gt; and \u0026lt;complete-rule-variable-name\u0026gt;.  Proxy     Note that this setting has to be part of the proxy configuration.\nproxy:policies_middleware:query:data.proxy.grantedThe same can be achieved by setting the following evironment variable:\nPROXY_POLICIES_QUERY=data.proxy.grantedPostprocessing     policies:postprocessing:query:data.postprocessing.grantedThe same can be achieved by setting the following evironment variable:\nPOLICIES_POSTPROCESSING_QUERY=data.postprocessing.grantedAs soon as that query is configured, the postprocessing service must be informed to use the policies step by setting the environment variable:\nPOSTPROCESSING_STEPS=policiesNote that additional steps can be configured and their position in the list defines the order of processing. For details see the postprocessing service documentation.\nRego Key Match     To identify available keys for OPA, you need to look at engine.go and the policies.swagger.json file. Note that which keys are avaialble depends from which module it is used.\nExample Policies     The policies service contains a set of preconfigured example policies. See the deployment examples directory for details. The contained policies disallow Infinite Scale to create certain file types, both via the proxy middleware and the events service via postprocessing.\n","description":"Abstract     The policies service provides a new grpc api which can be used to return whether a requested operation is allowed or not. To do so, Open Policy Agent (OPA) is used to determine the set of rules of what is permitted and what is not.\nPolicies are written in the rego query language. The location of the rego files can be configured via yaml, a configuration via environment variables is not possible."},{"id":95,"href":"/services/postprocessing/","title":"Postprocessing","parent":"Services","content":"Abstract     The postprocessing service handles the coordination of asynchronous postprocessing steps.\nTable of Contents        Service Configuration      General Prerequisites     To use the postprocessing service, an event system needs to be configured for all services. By default, ocis ships with a preconfigured nats service.\nPostprocessing Functionality     The storageprovider service (storage-users) can be configured to initiate asynchronous postprocessing by setting the STORAGE_USERS_OCIS_ASYNC_UPLOADS environment variable to true. If this is the case, postprocessing will get initiated after uploading a file and all bytes have been received.\nThe postprocessing service will then coordinate configured postprocessing steps like scanning the file for viruses. During postprocessing, the file will be in a processing state where only a limited set of actions are available. Note that this processing state excludes file accessability by users.\nWhen all postprocessing steps have completed successfully, the file will be made accessible for users.\nAdditional Prerequisites for the Postprocessing Service     When postprocessing has been enabled, configuring any postprocessing step will require the requested services to be enabled and pre-configured. For example, to use the virusscan step, one needs to have an enabled and configured antivirus service.\nPostprocessing Steps     The postporcessing service is individually configurable. This is achieved by allowing a list of postprocessing steps that are processed in order of their appearance in the POSTPROCESSING_STEPS envvar. This envvar expects a comma separated list of steps that will be executed. Currently known steps to the system are virusscan and delay. Custom steps can be added but need an existing target for processing.\nVirus Scanning     To enable virus scanning as a postprocessing step after uploading a file, the environment variable POSTPROCESSING_STEPS needs to contain the word virusscan at one location in the list of steps. As a result, each uploaded file gets virus scanned as part of the postprocessing steps. Note that the antivirus service is required to be enabled and configured for this to work.\nDelay     Though this is for development purposes only and NOT RECOMMENDED on production systems, setting the environment variable POSTPROCESSING_DELAY to a duration not equal to zero will add a delay step with the configured amount of time. ocis will continue postprocessing the file after the configured delay. Use the enviroment variable POSTPROCESSING_STEPS and the keyword delay if you have multiple postprocessing steps and want to define their order. If POSTPROCESSING_DELAY is set but the keyword delay is not contained in POSTPROCESSING_STEPS, it will be processed as last postprocessing step without being listed there. In this case, a log entry will be written on service startup to notify the admin about that situation. That log entry can be avoided by adding the keyword delay to POSTPROCESSING_STEPS.\nCustom Postprocessing Steps     By using the envvar POSTPROCESSING_STEPS, custom postprocessing steps can be added. Any word can be used as step name but be careful not to conflict with exising keywords like virusscan and delay. In addition, if a keyword is misspelled or the corresponding service does either not exist or does not follow the necessary event communication, the postprocessing service will wait forever getting the required response to proceed and does not continue any other processing.\nPrerequisites     For using custom postprocessing steps you need a custom service listening to the configured event system (see General Prerequisites)\nWorkflow     When setting a custom postprocessing step (eg. \u0026quot;customstep\u0026quot;) the postprocessing service will eventually sent an event during postprocessing. The event will be of type StartPostprocessingStep with its field StepToStart set to \u0026quot;customstep\u0026quot;. When the custom service receives this event it can savely execute its actions, postprocessing service will wait until it has finished its work. The event contains further information (filename, executing user, size, \u0026hellip;) and also required tokens and urls to download the file in case byte inspection is necessary.\nOnce the custom service has finished its work, it should sent an event of type PostprocessingFinished via the configured events system. This event needs to contain a FinishedStep field set to \u0026quot;customstep\u0026quot;. It also must contain the outcome of the step, which can be one of \u0026ldquo;delete\u0026rdquo; (abort postprocessing, delete the file), \u0026ldquo;abort\u0026rdquo; (abort postprocessing, keep the file) and \u0026ldquo;continue\u0026rdquo; (continue postprocessing, this is the success case).\nSee the cs3 org for up-to-date information of reserved step names and event definitons.\n","description":"Abstract     The postprocessing service handles the coordination of asynchronous postprocessing steps.\nTable of Contents        Service Configuration      General Prerequisites     To use the postprocessing service, an event system needs to be configured for all services. By default, ocis ships with a preconfigured nats service.\nPostprocessing Functionality     The storageprovider service (storage-users) can be configured to initiate asynchronous postprocessing by setting the STORAGE_USERS_OCIS_ASYNC_UPLOADS environment variable to true."},{"id":96,"href":"/services/proxy/","title":"Proxy","parent":"Services","content":"Abstract     The proxy service is an API-Gateway for the ownCloud Infinite Scale microservices. Every HTTP request goes through this service. Authentication, logging and other preprocessing of requests also happens here. Mechanisms like request rate limitting or intrusion prevention are not included in the proxy service and must be setup in front like with an external reverse proxy.\nThe proxy service is the only service communicating to the outside and needs therefore usual protections against DDOS, Slow Loris or other attack vectors. All other services are not exposed to the outside, but also need protective measures when it comes to distributed setups like when using container orchestration over various physical servers.\nTable of Contents        Service Configuration      Authentication     The following request authentication schemes are implemented:\n Basic Auth (Only use in development, never in production setups!) OpenID Connect Signed URL Public Share Token  Automatic Quota Assignments     It is possible to automatically assign a specific quota to new users depending on their role. To do this, you need to configure a mapping between roles defined by their ID and the quota in bytes. The assignment can only be done via a yaml configuration and not via environment variables. See the following proxy.yaml config snippet for a configuration example.\nrole_quotas:\u0026lt;role ID1\u0026gt;:\u0026lt;quota1\u0026gt;\u0026lt;role ID2\u0026gt;:\u0026lt;quota2\u0026gt;Automatic Role Assignments     When users login, they do automatically get a role assigned. The automatic role assignment can be configured in different ways. The PROXY_ROLE_ASSIGNMENT_DRIVER environment variable (or the driver setting in the role_assignment section of the configuration file) select which mechanism to use for the automatic role assignment.\nWhen set to default, all users which do not have a role assigned at the time for the first login will get the role \u0026lsquo;user\u0026rsquo; assigned. (This is also the default behavior if PROXY_ROLE_ASSIGNMENT_DRIVER is unset.\nWhen PROXY_ROLE_ASSIGNMENT_DRIVER is set to oidc the role assignment for a user will happen based on the values of an OpenID Connect Claim of that user. The name of the OpenID Connect Claim to be used for the role assignment can be configured via the PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM environment variable. It is also possible to define a mapping of claim values to role names defined in ownCloud Infinite Scale via a yaml configuration. See the following proxy.yaml snippet for an example.\nrole_assignment:driver:oidcoidc_role_mapper:role_claim:ocisRolesrole_mapping:admin:myAdminRoleuser:myUserRolespaceadmin:mySpaceAdminRoleguest:myGuestRoleThis would assign the role admin to users with the value myAdminRole in the claim ocisRoles. The role user to users with the values myUserRole in the claims ocisRoles and so on.\nClaim values that are not mapped to a specific ownCloud Infinite Scale role will be ignored.\nNote: An ownCloud Infinite Scale user can only have a single role assigned. If the configured role_mapping and a user\u0026rsquo;s claim values result in multiple possible roles for a user, an error will be logged and the user will not be able to login.\nThe default role_claim (or PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM) is roles. The role_mapping is:\nadmin:ocisAdminuser:ocisUserspaceadmin:ocisSpaceAdminguest:ocisGuestRecommendations for Production Deployments     In a production deployment, you want to have basic authentication (PROXY_ENABLE_BASIC_AUTH) disabled which is the default state. You also want to setup a firewall to only allow requests to the proxy service or the reverse proxy if you have one. Requests to the other services should be blocked by the firewall.\n","description":"Abstract     The proxy service is an API-Gateway for the ownCloud Infinite Scale microservices. Every HTTP request goes through this service. Authentication, logging and other preprocessing of requests also happens here. Mechanisms like request rate limitting or intrusion prevention are not included in the proxy service and must be setup in front like with an external reverse proxy.\nThe proxy service is the only service communicating to the outside and needs therefore usual protections against DDOS, Slow Loris or other attack vectors."},{"id":97,"href":"/services/search/","title":"Search","parent":"Services","content":"Abstract     This service provides search functionality.\nTable of Contents        Service Configuration      ","description":"Abstract     This service provides search functionality.\nTable of Contents        Service Configuration      "},{"id":98,"href":"/services/app-provider/configuration/","title":"Service Configuration","parent":"App-Provider","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  # Autogenerated# Filename: app-provider-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9165token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9164tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;external_addr:\u0026#34;\u0026#34;driver:\u0026#34;\u0026#34;drivers:wopi:app_api_key:\u0026#34;\u0026#34;app_desktop_only:falseapp_icon_uri:\u0026#34;\u0026#34;app_internal_url:\u0026#34;\u0026#34;app_name:\u0026#34;\u0026#34;app_url:\u0026#34;\u0026#34;insecure:falsewopi_server_iop_secret:\u0026#34;\u0026#34;wopi_server_external_url:\u0026#34;\u0026#34;wopi_folder_url_base_url:https://localhost:9200/wopi_folder_url_path_template:/f/{{.ResourceID}}   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAPP_PROVIDER_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAPP_PROVIDER_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAPP_PROVIDER_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAPP_PROVIDER_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELAPP_PROVIDER_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAPP_PROVIDER_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAPP_PROVIDER_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAPP_PROVIDER_LOG_FILE string  The path to the log file. Activates logging to this file if set.   APP_PROVIDER_DEBUG_ADDR string 127.0.0.1:9165 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   APP_PROVIDER_DEBUG_TOKEN string  Token to secure the metrics endpoint   APP_PROVIDER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling   APP_PROVIDER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory.   APP_PROVIDER_GRPC_ADDR string 127.0.0.1:9164 The bind address of the GRPC service.   APP_PROVIDER_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service.   OCIS_JWT_SECRETAPP_PROVIDER_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   APP_PROVIDER_EXTERNAL_ADDR string  Address of the app provider, where the GATEWAY service can reach it.   APP_PROVIDER_DRIVER string  Driver, the APP PROVIDER services uses. Only \u0026ldquo;wopi\u0026rdquo; is supported as of now.   APP_PROVIDER_WOPI_APP_API_KEY string  API key for the wopi app.   APP_PROVIDER_WOPI_APP_DESKTOP_ONLY bool false Offer this app only on desktop.   APP_PROVIDER_WOPI_APP_ICON_URI string  URI to an app icon to be used by clients.   APP_PROVIDER_WOPI_APP_INTERNAL_URL string  Internal URL to the app, like in your DMZ.   APP_PROVIDER_WOPI_APP_NAME string  Human readable app name.   APP_PROVIDER_WOPI_APP_URL string  URL for end users to access the app.   APP_PROVIDER_WOPI_INSECURE bool false Disable TLS certificate validation for requests to the WOPI server and the web office application. Do not set this in production environments.   APP_PROVIDER_WOPI_WOPI_SERVER_IOP_SECRET string  Shared secret of the CS3org WOPI server.   APP_PROVIDER_WOPI_WOPI_SERVER_EXTERNAL_URL string  External url of the CS3org WOPI server.   OCIS_URLAPP_PROVIDER_WOPI_FOLDER_URL_BASE_URL string https://localhost:9200/ Base url to navigate back from the app to the containing folder in the file list.   APP_PROVIDER_WOPI_FOLDER_URL_PATH_TEMPLATE string /f/{{.ResourceID}} Path template to navigate back from the app to the containing folder in the file list. Supported template variables are {{.ResourceInfo.ResourceID}}, {{.ResourceInfo.Mtime.Seconds}}, {{.ResourceInfo.Name}}, {{.ResourceInfo.Path}}, {{.ResourceInfo.Type}}, {{.ResourceInfo.Id.SpaceId}}, {{.ResourceInfo.Id.StorageId}}, {{.ResourceInfo.Id.OpaqueId}}, {{.ResourceInfo.MimeType}}     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  # Autogenerated# Filename: app-provider-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9165token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9164tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;external_addr:\u0026#34;\u0026#34;driver:\u0026#34;\u0026#34;drivers:wopi:app_api_key:\u0026#34;\u0026#34;app_desktop_only:falseapp_icon_uri:\u0026#34;\u0026#34;app_internal_url:\u0026#34;\u0026#34;app_name:\u0026#34;\u0026#34;app_url:\u0026#34;\u0026#34;insecure:falsewopi_server_iop_secret:\u0026#34;\u0026#34;wopi_server_external_url:\u0026#34;\u0026#34;wopi_folder_url_base_url:https://localhost:9200/wopi_folder_url_path_template:/f/{{.ResourceID}}   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAPP_PROVIDER_TRACING_ENABLED bool false Activates tracing."},{"id":99,"href":"/services/app-registry/configuration/","title":"Service Configuration","parent":"App-Registry","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101  # Autogenerated# Filename: app-registry-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9243token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9242tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;app_registry:mimetypes:- mime_type:application/pdfextension:pdfname:PDFdescription:PDF documenticon:\u0026#34;\u0026#34;default_app:\u0026#34;\u0026#34;allow_creation:false- mime_type:application/vnd.oasis.opendocument.textextension:odtname:OpenDocumentdescription:OpenDocument text documenticon:\u0026#34;\u0026#34;default_app:\u0026#34;\u0026#34;allow_creation:true- mime_type:application/vnd.oasis.opendocument.spreadsheetextension:odsname:OpenSpreadsheetdescription:OpenDocument spreadsheet documenticon:\u0026#34;\u0026#34;default_app:\u0026#34;\u0026#34;allow_creation:true- mime_type:application/vnd.oasis.opendocument.presentationextension:odpname:OpenPresentationdescription:OpenDocument presentation documenticon:\u0026#34;\u0026#34;default_app:\u0026#34;\u0026#34;allow_creation:true- mime_type:application/vnd.openxmlformats-officedocument.wordprocessingml.documentextension:docxname:Microsoft Worddescription:Microsoft Word documenticon:\u0026#34;\u0026#34;default_app:\u0026#34;\u0026#34;allow_creation:true- mime_type:application/vnd.openxmlformats-officedocument.spreadsheetml.sheetextension:xlsxname:Microsoft Exceldescription:Microsoft Excel documenticon:\u0026#34;\u0026#34;default_app:\u0026#34;\u0026#34;allow_creation:true- mime_type:application/vnd.openxmlformats-officedocument.presentationml.presentationextension:pptxname:Microsoft PowerPointdescription:Microsoft PowerPoint documenticon:\u0026#34;\u0026#34;default_app:\u0026#34;\u0026#34;allow_creation:true- mime_type:application/vnd.jupyterextension:ipynbname:Jupyter Notebookdescription:Jupyter Notebookicon:\u0026#34;\u0026#34;default_app:\u0026#34;\u0026#34;allow_creation:false- mime_type:text/markdownextension:mdname:Markdown filedescription:Markdown fileicon:\u0026#34;\u0026#34;default_app:\u0026#34;\u0026#34;allow_creation:true- mime_type:application/compressed-markdownextension:zmdname:Compressed markdown filedescription:Compressed markdown fileicon:\u0026#34;\u0026#34;default_app:\u0026#34;\u0026#34;allow_creation:false   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAPP_REGISTRY_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAPP_REGISTRY_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAPP_REGISTRY_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAPP_REGISTRY_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELAPP_REGISTRY_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAPP_REGISTRY_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAPP_REGISTRY_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAPP_REGISTRY_LOG_FILE string  The path to the log file. Activates logging to this file if set.   APP_REGISTRY_DEBUG_ADDR string 127.0.0.1:9243 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   APP_REGISTRY_DEBUG_TOKEN string  Token to secure the metrics endpoint.   APP_REGISTRY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   APP_REGISTRY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   APP_REGISTRY_GRPC_ADDR string 127.0.0.1:9242 The bind address of the GRPC service.   APP_REGISTRY_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETAPP_REGISTRY_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101  # Autogenerated# Filename: app-registry-config-example."},{"id":100,"href":"/services/audit/configuration/","title":"Service Configuration","parent":"Audit","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  # Autogenerated# Filename: audit-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9234token:\u0026#34;\u0026#34;pprof:falsezpages:falseevents:endpoint:127.0.0.1:9233cluster:ocis-clustergroup:audittls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falseauditlog:log_to_console:truelog_to_file:falsefilepath:\u0026#34;\u0026#34;format:json   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELAUDIT_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAUDIT_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAUDIT_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAUDIT_LOG_FILE string  The path to the log file. Activates logging to this file if set.   AUDIT_DEBUG_ADDR string 127.0.0.1:9234 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   AUDIT_DEBUG_TOKEN string  Token to secure the metrics endpoint.   AUDIT_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   AUDIT_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   AUDIT_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   AUDIT_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   AUDIT_EVENTS_GROUP string audit The consumergroup of the service. One group will only get one copy of an event.   OCIS_INSECUREAUDIT_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   AUDIT_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided AUDIT_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSAUDIT_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   AUDIT_LOG_TO_CONSOLE bool true Logs to Stdout if true. Independent of the log to file option.   AUDIT_LOG_TO_FILE bool false Logs to file if true. Independent of the log to Stdout file option.   AUDIT_FILEPATH string  Filepath to the logfile. Mandatory if LogToFile is true.   AUDIT_FORMAT string json Log format. Using json is advised.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  # Autogenerated# Filename: audit-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9234token:\u0026#34;\u0026#34;pprof:falsezpages:falseevents:endpoint:127.0.0.1:9233cluster:ocis-clustergroup:audittls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falseauditlog:log_to_console:truelog_to_file:falsefilepath:\u0026#34;\u0026#34;format:json   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELAUDIT_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;."},{"id":101,"href":"/services/auth-basic/configuration/","title":"Service Configuration","parent":"Auth-Basic","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75  # Autogenerated# Filename: auth-basic-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9147token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9146tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falseauth_provider:ldapauth_providers:ldap:uri:ldaps://localhost:9235ca_cert:~/.ocis/idm/ldap.crtinsecure:falsebind_dn:uid=reva,ou=sysusers,o=libregraph-idmbind_password:\u0026#34;\u0026#34;user_base_dn:ou=users,o=libregraph-idmgroup_base_dn:ou=groups,o=libregraph-idmuser_scope:subgroup_scope:subuser_filter:\u0026#34;\u0026#34;group_filter:\u0026#34;\u0026#34;user_object_class:inetOrgPersongroup_object_class:groupOfNameslogin_attributes:- uididp:https://localhost:9200disable_user_mechanism:noneldap_disabled_users_group_dn:cn=DisabledUsersGroup,ou=groups,o=libregraph-idmuser_schema:id:ownclouduuidid_is_octet_string:falsemail:maildisplay_name:displaynameuser_name:uiduser_enabled:ownCloudUserEnabledgroup_schema:id:ownclouduuidid_is_octet_string:falsemail:maildisplay_name:cngroup_name:cnmember:memberowncloudsql:db_username:ownclouddb_password:\u0026#34;\u0026#34;db_host:mysqldb_port:3306db_name:owncloudidp:https://localhost:9200nobody:90join_username:falsejoin_owncloud_uuid:false   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_BASIC_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAUTH_BASIC_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAUTH_BASIC_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAUTH_BASIC_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELAUTH_BASIC_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAUTH_BASIC_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAUTH_BASIC_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAUTH_BASIC_LOG_FILE string  The path to the log file. Activates logging to this file if set.   AUTH_BASIC_DEBUG_ADDR string 127.0.0.1:9147 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   AUTH_BASIC_DEBUG_TOKEN string  Token to secure the metrics endpoint.   AUTH_BASIC_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   AUTH_BASIC_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory.   AUTH_BASIC_GRPC_ADDR string 127.0.0.1:9146 The bind address of the GRPC service.   AUTH_BASIC_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETAUTH_BASIC_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   AUTH_BASIC_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups.   AUTH_BASIC_AUTH_MANAGER string ldap The authentication manager to check if credentials are valid. Supported value is \u0026rsquo;ldap\u0026rsquo;.   LDAP_URIAUTH_BASIC_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo;   LDAP_CACERTAUTH_BASIC_LDAP_CACERT string ~/.ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   LDAP_INSECUREAUTH_BASIC_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments.   LDAP_BIND_DNAUTH_BASIC_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server.   LDAP_BIND_PASSWORDAUTH_BASIC_LDAP_BIND_PASSWORD string  Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;.   LDAP_USER_BASE_DNAUTH_BASIC_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users.   LDAP_GROUP_BASE_DNAUTH_BASIC_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups.   LDAP_USER_SCOPEAUTH_BASIC_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_GROUP_SCOPEAUTH_BASIC_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_USER_FILTERAUTH_BASIC_LDAP_USER_FILTER string  LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;.   LDAP_GROUP_FILTERAUTH_BASIC_LDAP_GROUP_FILTER string  LDAP filter to add to the default filters for group searches.   LDAP_USER_OBJECTCLASSAUTH_BASIC_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;).   LDAP_GROUP_OBJECTCLASSAUTH_BASIC_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;).   LDAP_LOGIN_ATTRIBUTESAUTH_BASIC_LDAP_LOGIN_ATTRIBUTES []string [uid] The user object attributes, that can be used for login.   OCIS_URLOCIS_OIDC_ISSUERAUTH_BASIC_IDP_URL string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider.   LDAP_DISABLE_USER_MECHANISMAUTH_BASIC_DISABLE_USER_MECHANISM string none An option to control the behavior for disabling users. Valid options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed.   LDAP_DISABLED_USERS_GROUP_DNAUTH_BASIC_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;.   LDAP_USER_SCHEMA_IDAUTH_BASIC_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for users. This should be a stable globally unique ID like a UUID.   LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGAUTH_BASIC_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user IDs.   LDAP_USER_SCHEMA_MAILAUTH_BASIC_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users.   LDAP_USER_SCHEMA_DISPLAYNAMEAUTH_BASIC_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users.   LDAP_USER_SCHEMA_USERNAMEAUTH_BASIC_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users.   LDAP_USER_ENABLED_ATTRIBUTEAUTH_BASIC_LDAP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP attribute to use as a flag telling if the user is enabled or disabled.   LDAP_GROUP_SCHEMA_IDAUTH_BASIC_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for groups. This should be a stable globally unique id (e.g. a UUID).   LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGAUTH_BASIC_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group IDs.   LDAP_GROUP_SCHEMA_MAILAUTH_BASIC_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty).   LDAP_GROUP_SCHEMA_DISPLAYNAMEAUTH_BASIC_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute).   LDAP_GROUP_SCHEMA_GROUPNAMEAUTH_BASIC_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups.   LDAP_GROUP_SCHEMA_MEMBERAUTH_BASIC_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members.   AUTH_BASIC_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database.   AUTH_BASIC_OWNCLOUDSQL_DB_PASSWORD string  Password for the database user.   AUTH_BASIC_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server.   AUTH_BASIC_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection.   AUTH_BASIC_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database.   AUTH_BASIC_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider.   AUTH_BASIC_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided.   AUTH_BASIC_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames   AUTH_BASIC_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user ID\u0026rsquo;s.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75  # Autogenerated# Filename: auth-basic-config-example."},{"id":102,"href":"/services/auth-bearer/configuration/","title":"Service Configuration","parent":"Auth-Bearer","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  # Autogenerated# Filename: auth-bearer-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9149token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9148tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falseoidc:issuer:https://localhost:9200insecure:falseid_claim:preferred_usernameuid_claim:\u0026#34;\u0026#34;gid_claim:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_BEARER_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAUTH_BEARER_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAUTH_BEARER_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAUTH_BEARER_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELAUTH_BEARER_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAUTH_BEARER_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAUTH_BEARER_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAUTH_BEARER_LOG_FILE string  The path to the log file. Activates logging to this file if set.   AUTH_BEARER_DEBUG_ADDR string 127.0.0.1:9149 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   AUTH_BEARER_DEBUG_TOKEN string  Token to secure the metrics endpoint.   AUTH_BEARER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   AUTH_BEARER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   AUTH_BEARER_GRPC_ADDR string 127.0.0.1:9148 The bind address of the GRPC service.   AUTH_BEARER_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETAUTH_BEARER_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   AUTH_BEARER_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups.   OCIS_URLOCIS_OIDC_ISSUERAUTH_BEARER_OIDC_ISSUER string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP.   OCIS_INSECUREAUTH_BEARER_OIDC_INSECURE bool false Allow insecure connections to the OIDC issuer.   AUTH_BEARER_OIDC_ID_CLAIM string preferred_username Name of the claim, which holds the user identifier.   AUTH_BEARER_OIDC_UID_CLAIM string  Name of the claim, which holds the UID.   AUTH_BEARER_OIDC_GID_CLAIM string  Name of the claim, which holds the GID.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  # Autogenerated# Filename: auth-bearer-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9149token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9148tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falseoidc:issuer:https://localhost:9200insecure:falseid_claim:preferred_usernameuid_claim:\u0026#34;\u0026#34;gid_claim:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_BEARER_TRACING_ENABLED bool false Activates tracing."},{"id":103,"href":"/services/auth-machine/configuration/","title":"Service Configuration","parent":"Auth-Machine","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  # Autogenerated# Filename: auth-machine-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9167token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9166tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsemachine_auth_api_key:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_MACHINE_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAUTH_MACHINE_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAUTH_MACHINE_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAUTH_MACHINE_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELAUTH_MACHINE_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAUTH_MACHINE_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAUTH_MACHINE_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAUTH_MACHINE_LOG_FILE string  The path to the log file. Activates logging to this file if set.   AUTH_MACHINE_DEBUG_ADDR string 127.0.0.1:9167 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   AUTH_MACHINE_DEBUG_TOKEN string  Token to secure the metrics endpoint.   AUTH_MACHINE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   AUTH_MACHINE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   AUTH_MACHINE_GRPC_ADDR string 127.0.0.1:9166 The bind address of the GRPC service.   AUTH_MACHINE_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETAUTH_MACHINE_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   AUTH_MACHINE_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups.   OCIS_MACHINE_AUTH_API_KEYAUTH_MACHINE_API_KEY string  Machine auth API key used to validate internal requests necessary for the access to resources from other services.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  # Autogenerated# Filename: auth-machine-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9167token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9166tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsemachine_auth_api_key:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_MACHINE_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAUTH_MACHINE_TRACING_TYPE string  The type of tracing."},{"id":104,"href":"/services/eventhistory/configuration/","title":"Service Configuration","parent":"Eventhistory","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  # Autogenerated# Filename: eventhistory-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:\u0026#34;\u0026#34;token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:0tls:nullgrpc_client_tls:nullevents:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falsestore:store:memorynodes:[]database:eventhistorytable:eventsrecord_expiry:336h0m0ssize:0   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELEVENTHISTORY_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYEVENTHISTORY_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLOREVENTHISTORY_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEEVENTHISTORY_LOG_FILE string  The path to the log file. Activates logging to this file if set.   EVENTHISTORY_DEBUG_ADDR string  Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   EVENTHISTORY_DEBUG_TOKEN string  Token to secure the metrics endpoint.   EVENTHISTORY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   EVENTHISTORY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   EVENTHISTORY_GRPC_ADDR string 127.0.0.1:0 The bind address of the GRPC service.   EVENTHISTORY_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   EVENTHISTORY_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECUREEVENTHISTORY_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   EVENTHISTORY_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSEVENTHISTORY_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   OCIS_PERSISTENT_STOREEVENTHISTORY_STOREOCIS_PERSISTENT_STORE_TYPEEVENTHISTORY_STORE_TYPE string memory The type of the eventhistory store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;ocmem\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_PERSISTENT_STORE_NODESEVENTHISTORY_STORE_ADDRESSES []string [] A comma separated list of nodes to access the configured store. This has no effect when \u0026lsquo;in-memory\u0026rsquo; stores are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   EVENTHISTORY_STORE_DATABASE string eventhistory The database name the configured store should use.   EVENTHISTORY_STORE_TABLE string events The database table the store should use.   EVENTHISTORY_RECORD_EXPIRY Duration 336h0m0s Time to live for events in the store. The duration can be set as number followed by a unit identifier like s, m or h. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks).   EVENTHISTORY_STORE_SIZE int 0 The maximum quantity of items in the store. Only applies when store type \u0026lsquo;ocmem\u0026rsquo; is configured. Defaults to 512.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  # Autogenerated# Filename: eventhistory-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:\u0026#34;\u0026#34;token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:0tls:nullgrpc_client_tls:nullevents:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falsestore:store:memorynodes:[]database:eventhistorytable:eventsrecord_expiry:336h0m0ssize:0   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELEVENTHISTORY_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;."},{"id":105,"href":"/services/frontend/configuration/","title":"Service Configuration","parent":"Frontend","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111  # Autogenerated# Filename: frontend-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9141token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:9140protocol:tcpprefix:\u0026#34;\u0026#34;cors:allow_origins:- \u0026#39;*\u0026#39;allow_methods:- OPTIONS- HEAD- GET- PUT- POST- DELETE- MKCOL- PROPFIND- PROPPATCH- MOVE- COPY- REPORT- SEARCHallow_headers:- Origin- Accept- Content-Type- Depth- Authorization- Ocs-Apirequest- If-None-Match- If-Match- Destination- Overwrite- X-Request-Id- X-Requested-With- Tus-Resumable- Tus-Checksum-Algorithm- Upload-Concat- Upload-Length- Upload-Metadata- Upload-Defer-Length- Upload-Expires- Upload-Checksum- Upload-Offset- X-HTTP-Method-Overrideallow_credentials:truetransfer_secret:\u0026#34;\u0026#34;token_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;machine_auth_api_key:\u0026#34;\u0026#34;skip_user_groups_in_token:falseenable_favorites:falseenable_project_spaces:trueenable_share_jail:truemax_quota:0upload_max_chunk_size:100000000upload_http_method_override:\u0026#34;\u0026#34;default_upload_protocol:tusenable_resharing:trueenable_federated_sharing_incoming:falseenable_federated_sharing_outgoing:falsesearch_min_length:3public_url:https://localhost:9200app_handler:insecure:falsearchiver:max_num_files:10000max_size:1073741824insecure:falsedata_gateway:prefix:dataocs:prefix:ocsshare_prefix:/Shareshome_namespace:/users/{{.Id.OpaqueId}}additional_info_attribute:\u0026#39;{{.Mail}}\u0026#39;resource_info_cache_ttl:0resource_info_cache_type:memoryenable_denials:falsepublic_sharing_writeableshare_must_have_password:falsechecksums:supported_types:- sha1- md5- adler32preferred_upload_type:sha1middleware:auth:credentials_by_user_agent:{}   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDFRONTEND_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEFRONTEND_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTFRONTEND_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORFRONTEND_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELFRONTEND_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYFRONTEND_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORFRONTEND_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEFRONTEND_LOG_FILE string  The path to the log file. Activates logging to this file if set.   FRONTEND_DEBUG_ADDR string 127.0.0.1:9141 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   FRONTEND_DEBUG_TOKEN string  Token to secure the metrics endpoint.   FRONTEND_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   FRONTEND_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   FRONTEND_HTTP_ADDR string 127.0.0.1:9140 The bind address of the HTTP service.   FRONTEND_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service.   FRONTEND_HTTP_PREFIX string  The Path prefix where the frontend can be accessed (defaults to /).   OCIS_CORS_ALLOW_ORIGINSFRONTEND_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSFRONTEND_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT POST DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSFRONTEND_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSFRONTEND_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   STORAGE_TRANSFER_SECRET string  Transfer secret for signing file up- and download requests.   OCIS_JWT_SECRETFRONTEND_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_MACHINE_AUTH_API_KEYFRONTEND_MACHINE_AUTH_API_KEY string  The machine auth API key used to validate internal requests necessary to access resources from other services.   FRONTEND_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   FRONTEND_ENABLE_FAVORITES bool false Enables the support for favorites in the clients.   FRONTEND_ENABLE_PROJECT_SPACES bool true Changing this value is NOT supported. Indicates to clients that project spaces are supposed to be made available.   FRONTEND_ENABLE_SHARE_JAIL bool true Changing this value is NOT supported. Indicates to clients that the share jail is supposed to be used.   OCIS_SPACES_MAX_QUOTAFRONTEND_MAX_QUOTA uint64 0 Set the global max quota value in bytes. A value of 0 equals unlimited. The value is provided via capabilities.   FRONTEND_UPLOAD_MAX_CHUNK_SIZE int 100000000 Sets the max chunk sizes in bytes for uploads via the clients.   FRONTEND_UPLOAD_HTTP_METHOD_OVERRIDE string  Advise TUS to replace PATCH requests by POST requests.   FRONTEND_DEFAULT_UPLOAD_PROTOCOL string tus The default upload protocol to use in the clients (e.g. tus).   FRONTEND_ENABLE_RESHARING bool true Changing this value is NOT supported. Enables the support for resharing in the clients.   FRONTEND_ENABLE_FEDERATED_SHARING_INCOMING bool false Changing this value is NOT supported. Enables support for incoming federated sharing for clients. The backend behaviour is not changed.   FRONTEND_ENABLE_FEDERATED_SHARING_OUTGOING bool false Changing this value is NOT supported. Enables support for outgoing federated sharing for clients. The backend behaviour is not changed.   FRONTEND_SEARCH_MIN_LENGTH int 3 Minimum number of characters to enter before a client should start a search for Share receivers. This setting can be used to customize the user experience if e.g too many results are displayed.   OCIS_URLFRONTEND_PUBLIC_URL string https://localhost:9200 The public facing URL of the oCIS frontend.   OCIS_INSECUREFRONTEND_APP_HANDLER_INSECURE bool false Allow insecure connections to the frontend.   FRONTEND_ARCHIVER_MAX_NUM_FILES int64 10000 Max number of files that can be packed into an archive.   FRONTEND_ARCHIVER_MAX_SIZE int64 1073741824 Max size in bytes of the zip archive the archiver can create.   OCIS_INSECUREFRONTEND_ARCHIVER_INSECURE bool false Allow insecure connections to the archiver.   FRONTEND_DATA_GATEWAY_PREFIX string data Path prefix for the data gateway.   FRONTEND_OCS_PREFIX string ocs URL path prefix for the OCS service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;.   FRONTEND_OCS_SHARE_PREFIX string /Shares Path prefix for shares as part of an ocis resource. Note that the path must start with \u0026lsquo;/\u0026rsquo;.   FRONTEND_OCS_HOME_NAMESPACE string /users/{{.Id.OpaqueId}} Homespace namespace identifier.   FRONTEND_OCS_ADDITIONAL_INFO_ATTRIBUTE string {{.Mail}} Additional information attribute for the user like {{.Mail}}.   FRONTEND_OCS_RESOURCE_INFO_CACHE_TTL int 0 Max TTL in seconds for the resource info cache. 0 disables the cache.   FRONTEND_OCS_RESOURCE_INFO_CACHE_TYPE string memory The type of the resource info cache. Supported values are \u0026lsquo;memory\u0026rsquo; and \u0026lsquo;redis\u0026rsquo;.   FRONTEND_OCS_RESOURCE_INFO_CACHE_REDIS_ADDR string  A comma separated list of addresses to access the configured store. This has no effect when the \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how addresses are used is dependent on the library of the configured store.   FRONTEND_OCS_RESOURCE_INFO_CACHE_REDIS_USERNAME string  The username to access the redis cache.   FRONTEND_OCS_RESOURCE_INFO_CACHE_REDIS_PASSWORD string  The password to access the redis cache.   FRONTEND_OCS_ENABLE_DENIALS bool false EXPERIMENTAL: enable the feature to deny access on folders.   OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORDFRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD bool false Set this to true if you want to enforce passwords on Uploader, Editor or Contributor shares.   FRONTEND_CHECKSUMS_SUPPORTED_TYPES []string [sha1 md5 adler32] Define the checksum types that indicate to clients which hashes the server can use to verify upload integrity. You can provide multiple types separated by blank or comma. Supported types are \u0026lsquo;sha1\u0026rsquo;, \u0026lsquo;md5\u0026rsquo; and \u0026lsquo;adler32\u0026rsquo;.   FRONTEND_CHECKSUMS_PREFERRED_UPLOAD_TYPE string sha1 The supported checksum type for uploads that indicates to clients supporting multiple hash algorithms which one is preferred by the server. Must be one out of the defined list of SUPPORTED_TYPES.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111  # Autogenerated# Filename: frontend-config-example."},{"id":106,"href":"/services/gateway/configuration/","title":"Service Configuration","parent":"Gateway","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  # Autogenerated# Filename: gateway-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9143token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9142tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsecommit_share_to_storage_grant:trueshare_folder_name:Sharesdisable_home_creation_on_login:truetransfer_secret:\u0026#34;\u0026#34;transfer_expires:86400cache:store:memorynodes:[]database:usersstat_cache_ttl:300provider_cache_ttl:300create_home_cache_ttl:300frontend_public_url:https://localhost:9200users_endpoint:localhost:9144groups_endpoint:localhost:9160permissions_endpoint:localhost:9191sharing_endpoint:localhost:9150auth_basic_endpoint:localhost:9146auth_bearer_endpoint:\u0026#34;\u0026#34;auth_machine_endpoint:localhost:9166storage_public_link_endpoint:localhost:9178storage_users_endpoint:localhost:9157storage_shares_endpoint:localhost:9154app_registry_endpoint:localhost:9242storage_registry:driver:spacesrules:[]json:\u0026#34;\u0026#34;storage_users_mount_id:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDGATEWAY_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEGATEWAY_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTGATEWAY_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORGATEWAY_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELGATEWAY_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYGATEWAY_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORGATEWAY_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEGATEWAY_LOG_FILE string  The path to the log file. Activates logging to this file if set.   GATEWAY_DEBUG_ADDR string 127.0.0.1:9143 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   GATEWAY_DEBUG_TOKEN string  Token to secure the metrics endpoint.   GATEWAY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   GATEWAY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   GATEWAY_GRPC_ADDR string 127.0.0.1:9142 The bind address of the GRPC service.   GATEWAY_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETGATEWAY_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   GATEWAY_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   GATEWAY_COMMIT_SHARE_TO_STORAGE_GRANT bool true Commit shares to storage grants. This grants access to shared resources for the share receiver directly on the storage.   GATEWAY_SHARE_FOLDER_NAME string Shares Name of the share folder in users\u0026rsquo; home space.   GATEWAY_DISABLE_HOME_CREATION_ON_LOGIN bool true Disable creation of the home space on login.   STORAGE_TRANSFER_SECRET string  The storage transfer secret.   GATEWAY_TRANSFER_EXPIRES int 86400 Expiry for the gateway tokens.   OCIS_CACHE_STOREGATEWAY_CACHE_STOREOCIS_CACHE_STORE_TYPEGATEWAY_CACHE_STORE_TYPE string memory Store implementation for the cache. Valid values are \u0026ldquo;memory\u0026rdquo; (default), \u0026ldquo;redis\u0026rdquo;, and \u0026ldquo;etcd\u0026rdquo;.   OCIS_CACHE_STORE_NODESGATEWAY_CACHE_STORE_NODESOCIS_CACHE_STORE_ADDRESSGATEWAY_CACHE_STORE_ADDRESSGATEWAY_CACHE_NODES []string [] Nodes to use for the cache store.   GATEWAY_CACHE_DATABASE string users Database name of the cache.   OCIS_CACHE_STORE_TTLGATEWAY_STAT_CACHE_TTL int 300 Max TTL in seconds for the gateway\u0026rsquo;s stat cache.   OCIS_CACHE_STORE_TTLGATEWAY_PROVIDER_CACHE_TTL int 300 Max TTL in seconds for the gateway\u0026rsquo;s provider cache.   OCIS_CACHE_STORE_TTLGATEWAY_CREATE_HOME_CACHE_TTL int 300 Max TTL in seconds for the gateway\u0026rsquo;s create home cache.   OCIS_URLGATEWAY_FRONTEND_PUBLIC_URL string https://localhost:9200 The public facing URL of the oCIS frontend.   GATEWAY_USERS_ENDPOINT string localhost:9144 The USERS API endpoint.   GATEWAY_GROUPS_ENDPOINT string localhost:9160 The GROUPS API endpoint.   GATEWAY_PERMISSIONS_ENDPOINT string localhost:9191 The SETTINGS API endpoint.   GATEWAY_SHARING_ENDPOINT string localhost:9150 The SHARE API endpoint.   GATEWAY_AUTH_BASIC_ENDPOINT string localhost:9146 The AUTH BASIC API endpoint.   GATEWAY_AUTH_BEARER_ENDPOINT string  The AUTH BEARER API endpoint.   GATEWAY_AUTH_MACHINE_ENDPOINT string localhost:9166 The AUTH MACHINE API endpoint.   GATEWAY_STORAGE_PUBLIC_LINK_ENDPOINT string localhost:9178 The STORAGE PUBLICLINK API endpoint.   GATEWAY_STORAGE_USERS_ENDPOINT string localhost:9157 The STORAGE USERS API endpoint.   GATEWAY_STORAGE_SHARES_ENDPOINT string localhost:9154 The STORAGE SHARES API endpoint.   GATEWAY_APP_REGISTRY_ENDPOINT string localhost:9242 The APP REGISTRY API endpoint.   GATEWAY_STORAGE_USERS_MOUNT_ID string  Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  # Autogenerated# Filename: gateway-config-example."},{"id":107,"href":"/services/graph/configuration/","title":"Service Configuration","parent":"Graph","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100  # Autogenerated# Filename: graph-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;cache:store:memorynodes:[]database:graphtable:rolesttl:336h0m0ssize:0debug:addr:127.0.0.1:9124token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:9120root:/graphtls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;apitoken:\u0026#34;\u0026#34;api:group_members_patch_limit:20graph_username_match:defaultgraph_assign_default_user_role:truereva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;token_manager:jwt_secret:\u0026#34;\u0026#34;grpc_client_tls:nullapplication:id:\u0026#34;\u0026#34;displayname:ownCloud Infinite Scalespaces:webdav_base:https://localhost:9200webdav_path:/dav/spaces/default_quota:\u0026#34;1000000000\u0026#34;extended_space_properties_cache_ttl:0users_cache_ttl:1800000000000groups_cache_ttl:1800000000000identity:backend:ldapldap:uri:ldaps://localhost:9235cacert:~/.ocis/idm/ldap.crtinsecure:falsebind_dn:uid=libregraph,ou=sysusers,o=libregraph-idmbind_password:\u0026#34;\u0026#34;use_server_uuid:falseuse_password_modify_exop:truewrite_enabled:truerefint_enabled:falseuser_base_dn:ou=users,o=libregraph-idmuser_search_scope:subuser_filter:\u0026#34;\u0026#34;user_objectclass:inetOrgPersonuser_mail_attribute:mailuser_displayname_attribute:displayNameuser_name_attribute:uiduser_id_attribute:owncloudUUIDuser_type_attribute:ownCloudUserTypeuser_enabled_attribute:ownCloudUserEnableddisable_user_mechanism:attributeldap_disabled_users_group_dn:cn=DisabledUsersGroup,ou=groups,o=libregraph-idmgroup_base_dn:ou=groups,o=libregraph-idmgroup_search_scope:subgroup_filter:\u0026#34;\u0026#34;group_objectclass:groupOfNamesgroup_name_attribute:cngroup_id_attribute:owncloudUUIDeducation_resources_enabled:falseeducationconfig:school_base_dn:\u0026#34;\u0026#34;school_search_scope:\u0026#34;\u0026#34;school_filter:\u0026#34;\u0026#34;school_objectclass:\u0026#34;\u0026#34;school_name_attribute:\u0026#34;\u0026#34;school_number_attribute:\u0026#34;\u0026#34;school_id_attribute:\u0026#34;\u0026#34;events:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:false   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDGRAPH_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEGRAPH_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTGRAPH_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORGRAPH_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELGRAPH_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYGRAPH_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORGRAPH_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEGRAPH_LOG_FILE string  The path to the log file. Activates logging to this file if set.   OCIS_CACHE_STOREGRAPH_CACHE_STOREOCIS_CACHE_STORE_TYPEGRAPH_CACHE_STORE_TYPE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;ocmem\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_CACHE_STORE_NODESGRAPH_CACHE_STORE_NODESOCIS_CACHE_STORE_ADDRESSESGRAPH_CACHE_STORE_ADDRESSES []string [] A comma-separated list of nodes to connect to. This has no effect when \u0026lsquo;in-memory\u0026rsquo; stores are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   GRAPH_CACHE_STORE_DATABASE string graph The database name the configured store should use.   GRAPH_CACHE_STORE_TABLE string roles The database table the store should use.   OCIS_CACHE_STORE_TTLGRAPH_CACHE_STORE_TTL Duration 336h0m0s Time to live for cache records in the graph. The duration can be set as number followed by a unit identifier like s, m or h. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks).   OCIS_CACHE_STORE_SIZEGRAPH_CACHE_STORE_SIZE int 0 The maximum quantity of items in the store. Only applies when store type \u0026lsquo;ocmem\u0026rsquo; is configured. Defaults to 512.   GRAPH_DEBUG_ADDR string 127.0.0.1:9124 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   GRAPH_DEBUG_TOKEN string  Token to secure the metrics endpoint.   GRAPH_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   GRAPH_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   GRAPH_HTTP_ADDR string 127.0.0.1:9120 The bind address of the HTTP service.   GRAPH_HTTP_ROOT string /graph Subdirectory that serves as the root for this HTTP service.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   GRAPH_HTTP_API_TOKEN string  An optional API bearer token   GRAPH_GROUP_MEMBERS_PATCH_LIMIT int 20 The amount of group members allowed to be added with a single patch request.   GRAPH_USERNAME_MATCH string default Option to allow legacy usernames. Supported options are \u0026lsquo;default\u0026rsquo; and \u0026rsquo;none\u0026rsquo;.   GRAPH_ASSIGN_DEFAULT_USER_ROLE bool true Whether to assign newly created users the default role \u0026lsquo;User\u0026rsquo;. Set this to \u0026lsquo;false\u0026rsquo; if you want to assign roles manually, or if the role assignment should happen at first login. Set this to \u0026rsquo;true\u0026rsquo; (the default) to assign the role \u0026lsquo;User\u0026rsquo; when creating a new user.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_JWT_SECRETGRAPH_JWT_SECRET string  The secret to mint and validate jwt tokens.   GRAPH_APPLICATION_ID string  The ocis application id shown in the graph. All app roles are tied to this.   GRAPH_APPLICATION_DISPLAYNAME string ownCloud Infinite Scale The oCIS application name   OCIS_URLGRAPH_SPACES_WEBDAV_BASE string https://localhost:9200 The public facing URL of WebDAV.   GRAPH_SPACES_WEBDAV_PATH string /dav/spaces/ The WebDAV subpath for spaces.   GRAPH_SPACES_DEFAULT_QUOTA string 1000000000 The default quota in bytes.   GRAPH_SPACES_EXTENDED_SPACE_PROPERTIES_CACHE_TTL int 0 Max TTL in seconds for the spaces property cache.   GRAPH_SPACES_USERS_CACHE_TTL int 1800000000000 Max TTL in seconds for the spaces users cache.   GRAPH_SPACES_GROUPS_CACHE_TTL int 1800000000000 Max TTL in seconds for the spaces groups cache.   GRAPH_IDENTITY_BACKEND string ldap The user identity backend to use. Supported backend types are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;cs3\u0026rsquo;.   LDAP_URIGRAPH_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo;   LDAP_CACERTGRAPH_LDAP_CACERT string ~/.ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   LDAP_INSECUREGRAPH_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments.   LDAP_BIND_DNGRAPH_LDAP_BIND_DN string uid=libregraph,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server.   LDAP_BIND_PASSWORDGRAPH_LDAP_BIND_PASSWORD string  Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;.   GRAPH_LDAP_SERVER_UUID bool false If set to true, rely on the LDAP Server to generate a unique ID for users and groups, like when using \u0026rsquo;entryUUID\u0026rsquo; as the user ID attribute.   GRAPH_LDAP_SERVER_USE_PASSWORD_MODIFY_EXOP bool true User the Password Modify Extended Operation for updating user passwords.   GRAPH_LDAP_SERVER_WRITE_ENABLED bool true Allow to create, modify and delete LDAP users via GRAPH API. This is only works when the default Schema is used.   GRAPH_LDAP_REFINT_ENABLED bool false Signals that the server has the refint plugin enabled, which makes some actions not needed.   LDAP_USER_BASE_DNGRAPH_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users.   LDAP_USER_SCOPEGRAPH_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_USER_FILTERGRAPH_LDAP_USER_FILTER string  LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;.   LDAP_USER_OBJECTCLASSGRAPH_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;).   LDAP_USER_SCHEMA_MAILGRAPH_LDAP_USER_EMAIL_ATTRIBUTE string mail LDAP Attribute to use for the email address of users.   LDAP_USER_SCHEMA_DISPLAY_NAMEGRAPH_LDAP_USER_DISPLAYNAME_ATTRIBUTE string displayName LDAP Attribute to use for the displayname of users.   LDAP_USER_SCHEMA_USERNAMEGRAPH_LDAP_USER_NAME_ATTRIBUTE string uid LDAP Attribute to use for username of users.   LDAP_USER_SCHEMA_IDGRAPH_LDAP_USER_UID_ATTRIBUTE string owncloudUUID LDAP Attribute to use as the unique ID for users. This should be a stable globally unique ID like a UUID.   LDAP_USER_SCHEMA_USER_TYPEGRAPH_LDAP_USER_TYPE_ATTRIBUTE string ownCloudUserType LDAP Attribute to distinguish between \u0026lsquo;Member\u0026rsquo; and \u0026lsquo;Guest\u0026rsquo; users. Default is \u0026lsquo;ownCloudUserType\u0026rsquo;.   LDAP_USER_ENABLED_ATTRIBUTEGRAPH_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP Attribute to use as a flag telling if the user is enabled or disabled.   LDAP_DISABLE_USER_MECHANISMGRAPH_DISABLE_USER_MECHANISM string attribute An option to control the behavior for disabling users. Supported options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed. Default is \u0026lsquo;attribute\u0026rsquo;.   LDAP_DISABLED_USERS_GROUP_DNGRAPH_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;.   LDAP_GROUP_BASE_DNGRAPH_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups.   LDAP_GROUP_SCOPEGRAPH_LDAP_GROUP_SEARCH_SCOPE string sub LDAP search scope to use when looking up groups. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_GROUP_FILTERGRAPH_LDAP_GROUP_FILTER string  LDAP filter to add to the default filters for group searches.   LDAP_GROUP_OBJECTCLASSGRAPH_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;).   LDAP_GROUP_SCHEMA_GROUPNAMEGRAPH_LDAP_GROUP_NAME_ATTRIBUTE string cn LDAP Attribute to use for the name of groups.   LDAP_GROUP_SCHEMA_IDGRAPH_LDAP_GROUP_ID_ATTRIBUTE string owncloudUUID LDAP Attribute to use as the unique id for groups. This should be a stable globally unique ID like a UUID.   LDAP_EDUCATION_RESOURCES_ENABLEDGRAPH_LDAP_EDUCATION_RESOURCES_ENABLED bool false Enable LDAP support for managing education related resources   LDAP_SCHOOL_BASE_DNGRAPH_LDAP_SCHOOL_BASE_DN string  Search base DN for looking up LDAP schools.   LDAP_SCHOOL_SCOPEGRAPH_LDAP_SCHOOL_SEARCH_SCOPE string  LDAP search scope to use when looking up schools. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_SCHOOL_FILTERGRAPH_LDAP_SCHOOL_FILTER string  LDAP filter to add to the default filters for school searches.   LDAP_SCHOOL_OBJECTCLASSGRAPH_LDAP_SCHOOL_OBJECTCLASS string  The object class to use for schools in the default school search filter.   LDAP_SCHOOL_SCHEMA_SCHOOL_NAMEGRAPH_LDAP_SCHOOL_NAME_ATTRIBUTE string  LDAP Attribute to use for the name of a school.   LDAP_SCHOOL_SCHEMA_SCHOOL_NUMBERGRAPH_LDAP_SCHOOL_NUMBER_ATTRIBUTE string  LDAP Attribute to use for the number of a school.   LDAP_SCHOOL_SCHEMA_IDGRAPH_LDAP_SCHOOL_ID_ATTRIBUTE string  LDAP Attribute to use as the unique id for schools. This should be a stable globally unique ID like a UUID.   GRAPH_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Set to a empty string to disable emitting events.   GRAPH_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   OCIS_INSECUREGRAPH_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   GRAPH_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided GRAPH_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSGRAPH_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100  # Autogenerated# Filename: graph-config-example."},{"id":108,"href":"/services/groups/configuration/","title":"Service Configuration","parent":"Groups","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72  # Autogenerated# Filename: groups-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9161token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9160tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsedriver:ldapdrivers:ldap:uri:ldaps://localhost:9235ca_cert:~/.ocis/idm/ldap.crtinsecure:falsebind_dn:uid=reva,ou=sysusers,o=libregraph-idmbind_password:\u0026#34;\u0026#34;user_base_dn:ou=users,o=libregraph-idmgroup_base_dn:ou=groups,o=libregraph-idmuser_scope:subgroup_scope:subgroup_substring_filter_type:anyuser_filter:\u0026#34;\u0026#34;group_filter:\u0026#34;\u0026#34;user_object_class:inetOrgPersongroup_object_class:groupOfNamesidp:https://localhost:9200user_schema:id:ownclouduuidid_is_octet_string:falsemail:maildisplay_name:displaynameuser_name:uidgroup_schema:id:ownclouduuidid_is_octet_string:falsemail:maildisplay_name:cngroup_name:cnmember:memberowncloudsql:db_username:ownclouddb_password:\u0026#34;\u0026#34;db_host:mysqldb_port:3306db_name:owncloudidp:https://localhost:9200nobody:90join_username:falsejoin_owncloud_uuid:falseenable_medial_search:false   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDGROUPS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEGROUPS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTGROUPS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORGROUPS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELGROUPS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYGROUPS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORGROUPS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEGROUPS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   GROUPS_DEBUG_ADDR string 127.0.0.1:9161 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   GROUPS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   GROUPS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   GROUPS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   GROUPS_GRPC_ADDR string 127.0.0.1:9160 The bind address of the GRPC service.   GROUPS_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETGROUPS_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   GROUPS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   GROUPS_DRIVER string ldap The driver which should be used by the groups service. Supported values are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;.   LDAP_URIGROUPS_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo;   LDAP_CACERTGROUPS_LDAP_CACERT string ~/.ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   LDAP_INSECUREGROUPS_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments.   LDAP_BIND_DNGROUPS_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server.   LDAP_BIND_PASSWORDGROUPS_LDAP_BIND_PASSWORD string  Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;.   LDAP_USER_BASE_DNGROUPS_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users.   LDAP_GROUP_BASE_DNGROUPS_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups.   LDAP_USER_SCOPEGROUPS_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_GROUP_SCOPEGROUPS_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_GROUP_SUBSTRING_FILTER_TYPEGROUP_LDAP_GROUP_SUBSTRING_FILTER_TYPE string any Type of substring search filter to use for substring searches for groups. Supported values are \u0026lsquo;initial\u0026rsquo;, \u0026lsquo;final\u0026rsquo; and \u0026lsquo;any\u0026rsquo;. The value \u0026lsquo;initial\u0026rsquo; is used for doing prefix only searches, \u0026lsquo;final\u0026rsquo; for doing suffix only searches or \u0026lsquo;any\u0026rsquo; for doing full substring searches   LDAP_USER_FILTERGROUPS_LDAP_USER_FILTER string  LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;.   LDAP_GROUP_FILTERGROUPS_LDAP_GROUP_FILTER string  LDAP filter to add to the default filters for group searches.   LDAP_USER_OBJECTCLASSGROUPS_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;).   LDAP_GROUP_OBJECTCLASSGROUPS_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;).   OCIS_URLOCIS_OIDC_ISSUERGROUPS_IDP_URL string https://localhost:9200 The identity provider value to set in the group IDs of the CS3 group objects for groups returned by this group provider.   LDAP_USER_SCHEMA_IDGROUPS_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for users. This should be a stable globally unique id like a UUID.   LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGGROUPS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user id\u0026rsquo;s.   LDAP_USER_SCHEMA_MAILGROUPS_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users.   LDAP_USER_SCHEMA_DISPLAYNAMEGROUPS_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users.   LDAP_USER_SCHEMA_USERNAMEGROUPS_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users.   LDAP_GROUP_SCHEMA_IDGROUPS_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for groups. This should be a stable globally unique ID like a UUID.   LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGGROUPS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s.   LDAP_GROUP_SCHEMA_MAILGROUPS_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty).   LDAP_GROUP_SCHEMA_DISPLAYNAMEGROUPS_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute).   LDAP_GROUP_SCHEMA_GROUPNAMEGROUPS_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups.   LDAP_GROUP_SCHEMA_MEMBERGROUPS_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members.   GROUPS_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database.   GROUPS_OWNCLOUDSQL_DB_PASSWORD string  Password for the database user.   GROUPS_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server.   GROUPS_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection.   GROUPS_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database.   GROUPS_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider.   GROUPS_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided.   GROUPS_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames.   GROUPS_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user IDs.   GROUPS_OWNCLOUDSQL_ENABLE_MEDIAL_SEARCH bool false Allow \u0026lsquo;medial search\u0026rsquo; when searching for users instead of just doing a prefix search. This allows finding \u0026lsquo;Alice\u0026rsquo; when searching for \u0026rsquo;lic\u0026rsquo;.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72  # Autogenerated# Filename: groups-config-example."},{"id":109,"href":"/services/idm/configuration/","title":"Service Configuration","parent":"IDM","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  # Autogenerated# Filename: idm-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9239token:\u0026#34;\u0026#34;pprof:falsezpages:falseidm:ldaps_addr:127.0.0.1:9235cert:~/.ocis/idm/ldap.crtkey:~/.ocis/idm/ldap.keydatabase:~/.ocis/idm/ocis.boltdbcreate_demo_users:falseservice_user_passwords:admin_password:\u0026#34;\u0026#34;idm_password:\u0026#34;\u0026#34;reva_password:\u0026#34;\u0026#34;idp_password:\u0026#34;\u0026#34;admin_user_id:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDIDM_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEIDM_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTIDM_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORIDM_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELIDM_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYIDM_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORIDM_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEIDM_LOG_FILE string  The path to the log file. Activates logging to this file if set.   IDM_DEBUG_ADDR string 127.0.0.1:9239 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   IDM_DEBUG_TOKEN string  Token to secure the metrics endpoint.   IDM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   IDM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   IDM_LDAPS_ADDR string 127.0.0.1:9235 Listen address for the LDAPS listener (ip-addr:port).   IDM_LDAPS_CERT string ~/.ocis/idm/ldap.crt File name of the TLS server certificate for the LDAPS listener. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   IDM_LDAPS_KEY string ~/.ocis/idm/ldap.key File name for the TLS certificate key for the server certificate. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   IDM_DATABASE_PATH string ~/.ocis/idm/ocis.boltdb Full path to the IDM backend database. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   IDM_CREATE_DEMO_USERSACCOUNTS_DEMO_USERS_AND_GROUPS bool false Flag to enable or disable the creation of the demo users.   IDM_ADMIN_PASSWORD string  Password to set for the oCIS \u0026ldquo;admin\u0026rdquo; user. Either cleartext or an argon2id hash.   IDM_SVC_PASSWORD string  Password to set for the \u0026ldquo;idm\u0026rdquo; service user. Either cleartext or an argon2id hash.   IDM_REVASVC_PASSWORD string  Password to set for the \u0026ldquo;reva\u0026rdquo; service user. Either cleartext or an argon2id hash.   IDM_IDPSVC_PASSWORD string  Password to set for the \u0026ldquo;idp\u0026rdquo; service user. Either cleartext or an argon2id hash.   OCIS_ADMIN_USER_IDIDM_ADMIN_USER_ID string  ID of the user that should receive admin privileges. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  # Autogenerated# Filename: idm-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9239token:\u0026#34;\u0026#34;pprof:falsezpages:falseidm:ldaps_addr:127.0.0.1:9235cert:~/.ocis/idm/ldap.crtkey:~/.ocis/idm/ldap.keydatabase:~/.ocis/idm/ocis.boltdbcreate_demo_users:falseservice_user_passwords:admin_password:\u0026#34;\u0026#34;idm_password:\u0026#34;\u0026#34;reva_password:\u0026#34;\u0026#34;idp_password:\u0026#34;\u0026#34;admin_user_id:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDIDM_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEIDM_TRACING_TYPE string  The type of tracing."},{"id":110,"href":"/services/idp/configuration/","title":"Service Configuration","parent":"IDP","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114  # Autogenerated# Filename: idp-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9134token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:9130root:/tls_cert:~/.ocis/idp/server.crttls_key:~/.ocis/idp/server.keytls:falsereva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;machine_auth_api_key:\u0026#34;\u0026#34;asset:asset:\u0026#34;\u0026#34;idp:iss:https://localhost:9200identity_manager:ldapuri_base_path:\u0026#34;\u0026#34;sign_in_uri:\u0026#34;\u0026#34;signed_out_uri:\u0026#34;\u0026#34;authorization_endpoint_uri:\u0026#34;\u0026#34;insecure:falsetrusted_proxy:[]allow_scope:[]allow_client_guests:falseallow_dynamic_client_registration:falseencrypt_secret_file:~/.ocis/idp/encryption.keylisten:\u0026#34;\u0026#34;identifierdefaultbannerlogo:\u0026#34;\u0026#34;identifierdefaultsigninpagetext:\u0026#34;\u0026#34;identifierdefaultusernamehinttext:\u0026#34;\u0026#34;identifieruilocales:[]signing_kid:private-keysigning_method:PS256signing_private_key_files:- ~/.ocis/idp/private-key.pemvalidation_keys_path:\u0026#34;\u0026#34;cookiebackenduri:\u0026#34;\u0026#34;cookienames:[]access_token_duration_seconds:300id_token_duration_seconds:300refresh_token_duration_seconds:2592000dynamic_client_secret_duration_seconds:0clients:- id:webname:ownCloud Web apptrusted:truesecret:\u0026#34;\u0026#34;redirect_uris:- \u0026#39;{{OCIS_URL}}/\u0026#39;- \u0026#39;{{OCIS_URL}}/oidc-callback.html\u0026#39;- \u0026#39;{{OCIS_URL}}/oidc-silent-redirect.html\u0026#39;origins:- \u0026#39;{{OCIS_URL}}\u0026#39;application_type:\u0026#34;\u0026#34;- id:xdXOt13JKxym1B1QcEncf2XDkLAexMBFwiT9j6EfhhHFJhs2KM9jbjTmf8JBXE69name:ownCloud desktop apptrusted:falsesecret:UBntmLjC2yYCeHwsyj73Uwo9TAaecAetRwMw0xYcvNL9yRdLSUi0hUAHfvCHFeFhredirect_uris:- http://127.0.0.1- http://localhostorigins:[]application_type:native- id:e4rAsNUSIUs0lF4nbv9FmCeUkTlV9GdgTLDH1b5uie7syb90SzEVrbN7HIpmWJeDname:ownCloud Android apptrusted:falsesecret:dInFYGV33xKzhbRmpqQltYNdfLdJIfJ9L5ISoKhNoT9qZftpdWSP71VrpGR9pmoDredirect_uris:- oc://android.owncloud.comorigins:[]application_type:native- id:mxd5OQDk6es5LzOzRvidJNfXLUZS2oN3oUFeXPP8LpPrhx3UroJFduGEYIBOxkY1name:ownCloud iOS apptrusted:falsesecret:KFeFWWEZO9TkisIQzR3fo7hfiMXlOpaqP8CFuTbSHzV1TUuGECglPxpiVKJfOXIxredirect_uris:- oc://ios.owncloud.com- oc.ios://ios.owncloud.comorigins:[]application_type:nativeldap:uri:ldaps://localhost:9235cacert:~/.ocis/idm/ldap.crtbind_dn:uid=idp,ou=sysusers,o=libregraph-idmbind_password:\u0026#34;\u0026#34;base_dn:ou=users,o=libregraph-idmscope:sublogin_attribute:uidemail_attribute:mailname_attribute:displayNameuuid_attribute:uiduuid_attribute_type:textuser_enabled_attribute:ownCloudUserEnabledfilter:\u0026#34;\u0026#34;objectclass:inetOrgPerson   Environment Variables        Name Type Default Value Description     IDP_PASSWORD_RESET_URI string  The URI where a user can reset their password.   OCIS_TRACING_ENABLEDIDP_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEIDP_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTIDP_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORIDP_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELIDP_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYIDP_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORIDP_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEIDP_LOG_FILE string  The path to the log file. Activates logging to this file if set.   IDP_DEBUG_ADDR string 127.0.0.1:9134 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   IDP_DEBUG_TOKEN string  Token to secure the metrics endpoint.   IDP_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   IDP_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   IDP_HTTP_ADDR string 127.0.0.1:9130 The bind address of the HTTP service.   IDP_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   IDP_TRANSPORT_TLS_CERT string ~/.ocis/idp/server.crt Path/File name of the TLS server certificate (in PEM format) for the IDP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idp.   IDP_TRANSPORT_TLS_KEY string ~/.ocis/idp/server.key Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the IDP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idp.   IDP_TLS bool false Enable/Disable HTTPS for the IDP service.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_MACHINE_AUTH_API_KEYIDP_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary for the access to resources from other services.   IDP_ASSET_PATH string  Serve IDP assets from a path on the filesystem instead of the builtin assets.   OCIS_URLOCIS_OIDC_ISSUERIDP_ISS string https://localhost:9200 The OIDC issuer URL to use.   IDP_IDENTITY_MANAGER string ldap The identity manager implementation to use. Supported identity managers are \u0026rsquo;ldap\u0026rsquo;, \u0026lsquo;cs3\u0026rsquo;, \u0026rsquo;libregraph\u0026rsquo; and \u0026lsquo;guest\u0026rsquo;.   IDP_URI_BASE_PATH string  IDP uri base path (defaults to \u0026ldquo;\u0026rdquo;).   IDP_SIGN_IN_URI string  IDP sign-in url.   IDP_SIGN_OUT_URI string  IDP sign-out url.   IDP_ENDPOINT_URI string  URL of the IDP endpoint.   LDAP_INSECUREIDP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments.   IDP_ALLOW_CLIENT_GUESTS bool false Allow guest clients to access oCIS.   IDP_ALLOW_DYNAMIC_CLIENT_REGISTRATION bool false Allow dynamic client registration.   IDP_ENCRYPTION_SECRET_FILE string ~/.ocis/idp/encryption.key Path to the encryption secret file, if unset, a new certificate will be autogenerated upon each restart, thus invalidating all existing sessions. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idp.   IDP_SIGNING_KID string private-key Value of the KID (Key ID) field which is used in created tokens to uniquely identify the signing-private-key.   IDP_SIGNING_METHOD string PS256 Signing method of IDP requests like \u0026lsquo;PS256\u0026rsquo;   IDP_SIGNING_PRIVATE_KEY_FILES []string [~/.ocis/idp/private-key.pem] Private key files for signing IDP requests. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idp.   IDP_VALIDATION_KEYS_PATH string  Path to validation keys for IDP requests.   IDP_ACCESS_TOKEN_EXPIRATION uint64 300 \u0026lsquo;Access token lifespan in seconds (time before an access token is expired).\u0026rsquo;   IDP_ID_TOKEN_EXPIRATION uint64 300 ID token lifespan in seconds (time before an ID token is expired).   IDP_REFRESH_TOKEN_EXPIRATION uint64 2592000 Refresh token lifespan in seconds (time before an refresh token is expired). This also limits the duration of an idle offline session.   IDP_DYNAMIC_CLIENT_SECRET_DURATION uint64 0 Lifespan in seconds of a dynamically registered OIDC client.   LDAP_URIIDP_LDAP_URI string ldaps://localhost:9235 Url of the LDAP service to use as IDP.   LDAP_CACERTIDP_LDAP_TLS_CACERT string ~/.ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idp.   LDAP_BIND_DNIDP_LDAP_BIND_DN string uid=idp,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server.   LDAP_BIND_PASSWORDIDP_LDAP_BIND_PASSWORD string  Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;.   LDAP_USER_BASE_DNIDP_LDAP_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users.   LDAP_USER_SCOPEIDP_LDAP_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   IDP_LDAP_LOGIN_ATTRIBUTE string uid LDAP User attribute to use for login like \u0026lsquo;uid\u0026rsquo;.   LDAP_USER_SCHEMA_MAILIDP_LDAP_EMAIL_ATTRIBUTE string mail LDAP User email attribute like \u0026lsquo;mail\u0026rsquo;.   LDAP_USER_SCHEMA_USERNAMEIDP_LDAP_NAME_ATTRIBUTE string displayName LDAP User name attribute like \u0026lsquo;displayName\u0026rsquo;.   LDAP_USER_SCHEMA_IDIDP_LDAP_UUID_ATTRIBUTE string uid LDAP User uuid attribute like \u0026lsquo;uid\u0026rsquo;.   IDP_LDAP_UUID_ATTRIBUTE_TYPE string text LDAP User uuid attribute type like \u0026rsquo;text\u0026rsquo;.   LDAP_USER_ENABLED_ATTRIBUTEIDP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP Attribute to use as a flag telling if the user is enabled or disabled.   LDAP_USER_FILTERIDP_LDAP_FILTER string  LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;.   LDAP_USER_OBJECTCLASSIDP_LDAP_OBJECTCLASS string inetOrgPerson LDAP User ObjectClass like \u0026lsquo;inetOrgPerson\u0026rsquo;.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114  # Autogenerated# Filename: idp-config-example."},{"id":111,"href":"/services/nats/configuration/","title":"Service Configuration","parent":"NATS","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  # Autogenerated# Filename: nats-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9234token:\u0026#34;\u0026#34;pprof:falsezpages:falsenats:host:127.0.0.1port:9233clusterid:ocis-clusterstore_dir:~/.ocis/natstls_cert:~/.ocis/nats/tls.crttls_key:~/.ocis/nats/tls.keytls_skip_verify_client_cert:falseenable_tls:false   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELNATS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYNATS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORNATS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILENATS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   NATS_DEBUG_ADDR string 127.0.0.1:9234 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   NATS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   NATS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   NATS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   NATS_NATS_HOST string 127.0.0.1 Bind address.   NATS_NATS_PORT int 9233 Bind port.   NATS_NATS_CLUSTER_ID string ocis-cluster ID of the NATS cluster.   NATS_NATS_STORE_DIR string ~/.ocis/nats The directory where the filesystem storage will store NATS JetStream data. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/nats.   NATS_TLS_CERT string ~/.ocis/nats/tls.crt Path/File name of the TLS server certificate (in PEM format) for the NATS listener. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/nats.   NATS_TLS_KEY string ~/.ocis/nats/tls.key Path/File name for the TLS certificate key (in PEM format) for the NATS listener. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/nats.   OCIS_INSECURENATS_TLS_SKIP_VERIFY_CLIENT_CERT bool false Whether the NATS server should skip the client certificate verification during the TLS handshake.   OCIS_EVENTS_ENABLE_TLSNATS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  # Autogenerated# Filename: nats-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9234token:\u0026#34;\u0026#34;pprof:falsezpages:falsenats:host:127.0.0.1port:9233clusterid:ocis-clusterstore_dir:~/.ocis/natstls_cert:~/.ocis/nats/tls.crttls_key:~/.ocis/nats/tls.keytls_skip_verify_client_cert:falseenable_tls:false   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELNATS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYNATS_LOG_PRETTY bool false Activates pretty log output."},{"id":112,"href":"/services/notifications/configuration/","title":"Service Configuration","parent":"Notifications","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  # Autogenerated# Filename: notifications-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9174token:\u0026#34;\u0026#34;pprof:falsezpages:falseocis_url:https://localhost:9200notifications:SMTP:smtp_host:\u0026#34;\u0026#34;smtp_port:1025smtp_sender:ownCloud \u0026lt;noreply@example.com\u0026gt;smtp_username:\u0026#34;\u0026#34;smtp_password:\u0026#34;\u0026#34;insecure:falsesmtp_authentication:nonesmtp_encryption:noneevents:endpoint:127.0.0.1:9233cluster:ocis-clustergroup:notificationstls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falsemachine_auth_api_key:\u0026#34;\u0026#34;email_template_path:\u0026#34;\u0026#34;reva_gateway:127.0.0.1:9142grpc_client_tls:null   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELNOTIFICATIONS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYNOTIFICATIONS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORNOTIFICATIONS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILENOTIFICATIONS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   NOTIFICATIONS_DEBUG_ADDR string 127.0.0.1:9174 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   NOTIFICATIONS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   NOTIFICATIONS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   NOTIFICATIONS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   OCIS_URLNOTIFICATIONS_WEB_UI_URL string https://localhost:9200 The public facing URL of the oCIS Web UI, used e.g. when sending notification eMails   NOTIFICATIONS_SMTP_HOST string  SMTP host to connect to.   NOTIFICATIONS_SMTP_PORT int 1025 Port of the SMTP host to connect to.   NOTIFICATIONS_SMTP_SENDER string ownCloud \u0026lt;noreply@example.com\u0026gt; Sender address of emails that will be sent.   NOTIFICATIONS_SMTP_USERNAME string  Username for the SMTP host to connect to.   NOTIFICATIONS_SMTP_PASSWORD string  Password for the SMTP host to connect to.   NOTIFICATIONS_SMTP_INSECURE bool false Allow insecure connections to the SMTP server.   NOTIFICATIONS_SMTP_AUTHENTICATION string none Authentication method for the SMTP communication. Possible values are \u0026rsquo;login\u0026rsquo;, \u0026lsquo;plain\u0026rsquo;, \u0026lsquo;crammd5\u0026rsquo;, \u0026rsquo;none\u0026rsquo;   NOTIFICATIONS_SMTP_ENCRYPTION string none Encryption method for the SMTP communication. Possible values are \u0026lsquo;starttls\u0026rsquo;, \u0026lsquo;ssl\u0026rsquo;, \u0026lsquo;ssltls\u0026rsquo;, \u0026rsquo;tls\u0026rsquo; and \u0026rsquo;none\u0026rsquo;.   NOTIFICATIONS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   NOTIFICATIONS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   NOTIFICATIONS_EVENTS_GROUP string notifications Name of the event group / queue on the event system.   OCIS_INSECURENOTIFICATIONS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   NOTIFICATIONS_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSNOTIFICATIONS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   OCIS_MACHINE_AUTH_API_KEYNOTIFICATIONS_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary to access resources from other services.   OCIS_EMAIL_TEMPLATE_PATHNOTIFICATIONS_EMAIL_TEMPLATE_PATH string  Path to Email notification templates overriding embedded ones.   REVA_GATEWAY string 127.0.0.1:9142 CS3 gateway used to look up user metadata     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  # Autogenerated# Filename: notifications-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9174token:\u0026#34;\u0026#34;pprof:falsezpages:falseocis_url:https://localhost:9200notifications:SMTP:smtp_host:\u0026#34;\u0026#34;smtp_port:1025smtp_sender:ownCloud \u0026lt;noreply@example.com\u0026gt;smtp_username:\u0026#34;\u0026#34;smtp_password:\u0026#34;\u0026#34;insecure:falsesmtp_authentication:nonesmtp_encryption:noneevents:endpoint:127.0.0.1:9233cluster:ocis-clustergroup:notificationstls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falsemachine_auth_api_key:\u0026#34;\u0026#34;email_template_path:\u0026#34;\u0026#34;reva_gateway:127.0.0.1:9142grpc_client_tls:null   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELNOTIFICATIONS_LOG_LEVEL string  The log level."},{"id":113,"href":"/services/ocdav/configuration/","title":"Service Configuration","parent":"ocDAV","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  # Autogenerated# Filename: ocdav-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9163token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:0protocol:tcpprefix:\u0026#34;\u0026#34;token_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsewebdav_namespace:/users/{{.Id.OpaqueId}}files_namespace:/users/{{.Id.OpaqueId}}shares_namespace:/Sharespublic_url:https://localhost:9200insecure:falsegateway_request_timeout:84300machine_auth_api_key:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDOCDAV_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEOCDAV_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTOCDAV_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTOROCDAV_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELOCDAV_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYOCDAV_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLOROCDAV_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEOCDAV_LOG_FILE string  The path to the log file. Activates logging to this file if set.   OCDAV_DEBUG_ADDR string 127.0.0.1:9163 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   OCDAV_DEBUG_TOKEN string  Token to secure the metrics endpoint.   OCDAV_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   OCDAV_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   OCDAV_HTTP_ADDR string 127.0.0.1:0 The bind address of the HTTP service.   OCDAV_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service.   OCDAV_HTTP_PREFIX string  A URL path prefix for the handler.   OCIS_JWT_SECRETOCDAV_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCDAV_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   OCDAV_WEBDAV_NAMESPACE string /users/{{.Id.OpaqueId}} Jail requests to /dav/webdav into this CS3 namespace. Supports template layouting with CS3 User properties.   OCDAV_FILES_NAMESPACE string /users/{{.Id.OpaqueId}} Jail requests to /dav/files/{username} into this CS3 namespace. Supports template layouting with CS3 User properties.   OCDAV_SHARES_NAMESPACE string /Shares The human readable path for the share jail. Relative to a users personal space root. Upcased intentionally.   OCIS_URLOCDAV_PUBLIC_URL string https://localhost:9200 URL where oCIS is reachable for users.   OCIS_INSECUREOCDAV_INSECURE bool false Allow insecure connections to the GATEWAY service.   OCDAV_GATEWAY_REQUEST_TIMEOUT int64 84300 Request timeout in seconds for requests from the oCDAV service to the GATEWAY service.   OCIS_MACHINE_AUTH_API_KEYOCDAV_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary for the access to resources from other services.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  # Autogenerated# Filename: ocdav-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9163token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:0protocol:tcpprefix:\u0026#34;\u0026#34;token_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsewebdav_namespace:/users/{{.Id.OpaqueId}}files_namespace:/users/{{.Id.OpaqueId}}shares_namespace:/Sharespublic_url:https://localhost:9200insecure:falsegateway_request_timeout:84300machine_auth_api_key:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDOCDAV_TRACING_ENABLED bool false Activates tracing."},{"id":114,"href":"/services/ocs/configuration/","title":"Service Configuration","parent":"Ocs","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  # Autogenerated# Filename: ocs-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;cache:store:\u0026#34;\u0026#34;nodes:[]database:\u0026#34;\u0026#34;table:\u0026#34;\u0026#34;ttl:0ssize:0debug:addr:127.0.0.1:9114token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:9110root:/ocscors:allow_origins:- \u0026#39;*\u0026#39;allow_methods:- GET- POST- PUT- PATCH- DELETE- OPTIONSallow_headers:- Authorization- Origin- Content-Type- Accept- X-Requested-Withallow_credentials:truetls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;token_manager:jwt_secret:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDOCS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEOCS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTOCS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTOROCS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELOCS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYOCS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLOROCS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEOCS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   OCIS_CACHE_STOREOCS_CACHE_STOREOCIS_CACHE_STORE_TYPEOCS_CACHE_STORE_TYPE string  The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;ocmem\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_CACHE_STORE_NODESOCS_CACHE_STORE_NODESOCIS_CACHE_STORE_ADDRESSESOCS_CACHE_STORE_ADDRESSES []string [] A comma separated list of nodes to access the configured store. This has no effect when \u0026lsquo;in-memory\u0026rsquo; stores are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   OCS_CACHE_STORE_DATABASE string  The database name the configured store should use.   OCS_CACHE_STORE_TABLE string  The database table the store should use.   OCIS_CACHE_STORE_TTLOCS_CACHE_STORE_TTL Duration 0s Time to live for events in the store. The duration can be set as number followed by a unit identifier like s, m or h. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks).   OCIS_CACHE_STORE_SIZEOCS_CACHE_STORE_SIZE int 0 The maximum quantity of items in the store. Only applies when store type \u0026lsquo;ocmem\u0026rsquo; is configured. Defaults to 512.   OCS_DEBUG_ADDR string 127.0.0.1:9114 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   OCS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   OCS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   OCS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   OCS_HTTP_ADDR string 127.0.0.1:9110 The bind address of the HTTP service.   OCS_HTTP_ROOT string /ocs Subdirectory that serves as the root for this HTTP service.   OCIS_CORS_ALLOW_ORIGINSOCS_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSOCS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSOCS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSOCS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   OCIS_JWT_SECRETOCS_JWT_SECRET string  The secret to mint and validate jwt tokens.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  # Autogenerated# Filename: ocs-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;cache:store:\u0026#34;\u0026#34;nodes:[]database:\u0026#34;\u0026#34;table:\u0026#34;\u0026#34;ttl:0ssize:0debug:addr:127.0.0.1:9114token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:9110root:/ocscors:allow_origins:- \u0026#39;*\u0026#39;allow_methods:- GET- POST- PUT- PATCH- DELETE- OPTIONSallow_headers:- Authorization- Origin- Content-Type- Accept- X-Requested-Withallow_credentials:truetls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;token_manager:jwt_secret:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDOCS_TRACING_ENABLED bool false Activates tracing."},{"id":115,"href":"/services/policies/configuration/","title":"Service Configuration","parent":"Policies","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  # Autogenerated# Filename: policies-config-example.yamlgrpc:addr:127.0.0.1:9125tls:nulldebug:addr:127.0.0.1:9129token:\u0026#34;\u0026#34;pprof:falsezpages:falsetoken_manager:jwt_secret:\u0026#34;\u0026#34;events:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falsereva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;grpc_client_tls:nullmachine_auth_api_key:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;engine:timeout:10spolicies:[]postprocessing:query:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     POLICIES_GRPC_ADDR string 127.0.0.1:9125 The bind address of the GRPC service.   POLICIES_DEBUG_ADDR string 127.0.0.1:9129 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   POLICIES_DEBUG_TOKEN string  Token to secure the metrics endpoint.   POLICIES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   POLICIES_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   OCIS_JWT_SECRETPOLICIES_JWT_SECRET string  The secret to mint and validate jwt tokens.   POLICIES_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   POLICIES_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECUREPOLICIES_EVENTS_TLS_INSECURE bool false Whether the server should skip the client certificate verification during the TLS handshake.   POLICIES_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided POLICIES_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSPOLICIES_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_MACHINE_AUTH_API_KEYPOLICIES_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary for the access to resources from other services.   OCIS_LOG_LEVELPOLICIES_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYPOLICIES_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORPOLICIES_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEPOLICIES_LOG_FILE string  The path to the log file. Activates logging to this file if set.   POLICIES_ENGINE_TIMEOUT Duration 10s Sets the timeout the rego expression evaluation can take. The timeout can be set as number followed by a unit identifier like ms, s, etc. Rules default to deny if the timeout was reached.   POLICIES_POSTPROCESSING_QUERY string  Defines the \u0026lsquo;Complete Rules\u0026rsquo; variable defined in the rego rule set this step uses for its evaluation. Defaults to deny if the variable was not found.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  # Autogenerated# Filename: policies-config-example.yamlgrpc:addr:127.0.0.1:9125tls:nulldebug:addr:127.0.0.1:9129token:\u0026#34;\u0026#34;pprof:falsezpages:falsetoken_manager:jwt_secret:\u0026#34;\u0026#34;events:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falsereva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;grpc_client_tls:nullmachine_auth_api_key:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;engine:timeout:10spolicies:[]postprocessing:query:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     POLICIES_GRPC_ADDR string 127."},{"id":116,"href":"/services/postprocessing/configuration/","title":"Service Configuration","parent":"Postprocessing","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # Autogenerated# Filename: postprocessing-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;postprocessing:events:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falsesteps:[]virusscan:falsedelayprocessing:0s   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELPOSTPROCESSING_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYPOSTPROCESSING_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORPOSTPROCESSING_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEPOSTPROCESSING_LOG_FILE string  The path to the log file. Activates logging to this file if set.   POSTPROCESSING_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   POSTPROCESSING_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECUREPOSTPROCESSING_EVENTS_TLS_INSECURE bool false Whether the ocis server should skip the client certificate verification during the TLS handshake.   POSTPROCESSING_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided POSTPROCESSING_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSPOSTPROCESSING_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services.   POSTPROCESSING_STEPS []string [] A comma separated list of postprocessing steps, processed in order of their appearance. Currently supported values by the system are: \u0026lsquo;virusscan\u0026rsquo;, \u0026lsquo;policies\u0026rsquo; and \u0026lsquo;delay\u0026rsquo;. Custom steps are allowed. See the documentation for instructions.   POSTPROCESSING_VIRUSSCAN bool false After uploading a file but before making it available for download, virus scanning the file can be enabled. Needs as prerequisite the antivirus service to be enabled and configured.   POSTPROCESSING_DELAY Duration 0s After uploading a file but before making it available for download, a delay step can be added. Intended for developing purposes only. The duration can be set as number followed by a unit identifier like s, m or h. If a duration is set but the keyword \u0026lsquo;delay\u0026rsquo; is not explicitely added to \u0026lsquo;POSTPROCESSING_STEPS\u0026rsquo;, the delay step will be processed as last step. In such a case, a log entry will be written on service startup to remind the admin about that situation.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # Autogenerated# Filename: postprocessing-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;postprocessing:events:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falsesteps:[]virusscan:falsedelayprocessing:0s   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELPOSTPROCESSING_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYPOSTPROCESSING_LOG_PRETTY bool false Activates pretty log output."},{"id":117,"href":"/services/proxy/configuration/","title":"Service Configuration","parent":"Proxy","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159  # Autogenerated# Filename: proxy-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9205token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:0.0.0.0:9200root:/tls_cert:~/.ocis/proxy/server.crttls_key:~/.ocis/proxy/server.keytls:truereva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;grpc_client_tls:nullrole_quotas:{}policies:- name:ocisroutes:- endpoint:/service:com.owncloud.web.webunprotected:true- endpoint:/.well-known/webfingerservice:com.owncloud.web.webfingerunprotected:true- endpoint:/.well-known/openid-configurationservice:com.owncloud.web.idpunprotected:true- endpoint:/branding/logoservice:com.owncloud.web.web- endpoint:/konnect/service:com.owncloud.web.idpunprotected:true- endpoint:/signin/service:com.owncloud.web.idpunprotected:true- endpoint:/archiverservice:com.owncloud.web.frontend- endpoint:/ocs/v2.php/apps/notifications/api/v1/notificationsservice:com.owncloud.userlog.userlog- type:regexendpoint:/ocs/v[12].php/cloud/user/signing-keyservice:com.owncloud.web.ocs- type:regexendpoint:/ocs/v[12].php/configservice:com.owncloud.web.frontendunprotected:true- endpoint:/ocs/service:com.owncloud.web.frontend- type:queryendpoint:/remote.php/?preview=1service:com.owncloud.web.webdav- method:REPORTendpoint:/remote.php/dav/service:com.owncloud.web.webdav- method:REPORTendpoint:/remote.php/webdavservice:com.owncloud.web.webdav- method:REPORTendpoint:/dav/spacesservice:com.owncloud.web.webdav- type:queryendpoint:/dav/?preview=1service:com.owncloud.web.webdav- type:queryendpoint:/webdav/?preview=1service:com.owncloud.web.webdav- endpoint:/remote.php/service:com.owncloud.web.ocdav- endpoint:/dav/service:com.owncloud.web.ocdav- endpoint:/webdav/service:com.owncloud.web.ocdav- endpoint:/statusservice:com.owncloud.web.ocdavunprotected:true- endpoint:/status.phpservice:com.owncloud.web.ocdavunprotected:true- endpoint:/index.php/service:com.owncloud.web.ocdav- endpoint:/apps/service:com.owncloud.web.ocdav- endpoint:/dataservice:com.owncloud.web.frontendunprotected:true- endpoint:/app/listservice:com.owncloud.web.frontendunprotected:true- endpoint:/app/service:com.owncloud.web.frontend- endpoint:/graph/service:com.owncloud.graph.graph- endpoint:/api/v0/settingsservice:com.owncloud.web.settingsoidc:issuer:https://localhost:9200insecure:falseaccess_token_verify_method:jwtuser_info_cache:store:memoryaddresses:[]database:proxytable:userinfottl:10ssize:0jwks:refresh_interval:60refresh_timeout:10refresh_limit:60refresh_unknown_kid:truerewrite_well_known:falsetoken_manager:jwt_secret:\u0026#34;\u0026#34;role_assignment:driver:defaultoidc_role_mapper:role_claim:rolesrole_mapping:admin:ocisAdminguest:ocisGuestspaceadmin:ocisSpaceAdminuser:ocisUserpolicy_selector:static:policy:ocisclaims:nullregex:nullpre_signed_url:allowed_http_methods:- GETenabled:trueaccount_backend:cs3user_oidc_claim:preferred_usernameuser_cs3_claim:usernamemachine_auth_api_key:\u0026#34;\u0026#34;auto_provision_accounts:falseenable_basic_auth:falseinsecure_backends:falsebackend_https_cacert:\u0026#34;\u0026#34;auth_middleware:credentials_by_user_agent:{}policies_middleware:query:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDPROXY_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEPROXY_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTPROXY_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORPROXY_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELPROXY_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYPROXY_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORPROXY_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEPROXY_LOG_FILE string  The path to the log file. Activates logging to this file if set.   PROXY_DEBUG_ADDR string 127.0.0.1:9205 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   PROXY_DEBUG_TOKEN string  Token to secure the metrics endpoint.   PROXY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   PROXY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   PROXY_HTTP_ADDR string 0.0.0.0:9200 The bind address of the HTTP service.   PROXY_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   PROXY_TRANSPORT_TLS_CERT string ~/.ocis/proxy/server.crt Path/File name of the TLS server certificate (in PEM format) for the external http services. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/proxy.   PROXY_TRANSPORT_TLS_KEY string ~/.ocis/proxy/server.key Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the external http services. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/proxy.   PROXY_TLS bool true Enable/Disable HTTPS for the external HTTP services.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_URLOCIS_OIDC_ISSUERPROXY_OIDC_ISSUER string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP.   OCIS_INSECUREPROXY_OIDC_INSECURE bool false Disable TLS certificate validation for connections to the IDP. Note that this is not recommended for production environments.   PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD string jwt Sets how OIDC access tokens should be verified. Possible values are \u0026rsquo;none\u0026rsquo; and \u0026lsquo;jwt\u0026rsquo;. When using \u0026rsquo;none\u0026rsquo;, no special validation apart from using it for accessing the IPD\u0026rsquo;s userinfo endpoint will be done. When using \u0026lsquo;jwt\u0026rsquo;, it tries to parse the access token as a jwt token and verifies the signature using the keys published on the IDP\u0026rsquo;s \u0026lsquo;jwks_uri\u0026rsquo;.   OCIS_CACHE_STOREPROXY_OIDC_USERINFO_CACHE_STOREOCIS_CACHE_STORE_TYPEPROXY_OIDC_USERINFO_CACHE_TYPE string memory The type of the userinfo cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;ocmem\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_CACHE_STORE_NODESPROXY_OIDC_USERINFO_CACHE_NODESOCIS_CACHE_STORE_ADDRESSESPROXY_OIDC_USERINFO_CACHE_ADDRESSES []string [] A comma separated list of nodes to access the configured store. This has no effect when \u0026lsquo;in-memory\u0026rsquo; stores are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   PROXY_OIDC_USERINFO_CACHE_DATABASE string proxy The database name the configured store should use.   PROXY_OIDC_USERINFO_CACHE_TABLE string userinfo The database table the store should use.   OCIS_CACHE_STORE_TTLPROXY_OIDC_USERINFO_CACHE_TTL Duration 10s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. The duration can be set as number followed by a unit identifier like s, m or h. Defaults to \u0026rsquo;10s\u0026rsquo; (10 seconds).   OCIS_CACHE_STORE_SIZEPROXY_OIDC_USERINFO_CACHE_SIZE int 0 The maximum quantity of items in the user info cache. Only applies when store type \u0026lsquo;ocmem\u0026rsquo; is configured. Defaults to 512.   PROXY_OIDC_JWKS_REFRESH_INTERVAL uint64 60 The interval for refreshing the JWKS (JSON Web Key Set) in minutes in the background via a new HTTP request to the IDP.   PROXY_OIDC_JWKS_REFRESH_TIMEOUT uint64 10 The timeout in seconds for an outgoing JWKS request.   PROXY_OIDC_JWKS_REFRESH_RATE_LIMIT uint64 60 Limits the rate in seconds at which refresh requests are performed for unknown keys. This is used to prevent malicious clients from imposing high network load on the IDP via ocis.   PROXY_OIDC_JWKS_REFRESH_UNKNOWN_KID bool true If set to \u0026rsquo;true\u0026rsquo;, the JWKS refresh request will occur every time an unknown KEY ID (KID) is seen. Always set a \u0026lsquo;refresh_limit\u0026rsquo; when enabling this.   PROXY_OIDC_REWRITE_WELLKNOWN bool false Enables rewriting the /.well-known/openid-configuration to the configured OIDC issuer. Needed by the Desktop Client, Android Client and iOS Client to discover the OIDC provider.   OCIS_JWT_SECRETPROXY_JWT_SECRET string  The secret to mint and validate JWT tokens.   PROXY_ROLE_ASSIGNMENT_DRIVER string default The mechanism that should be used to assign roles to user upon login. Supported values: \u0026lsquo;default\u0026rsquo; or \u0026lsquo;oidc\u0026rsquo;. \u0026lsquo;default\u0026rsquo; will assign the role \u0026lsquo;user\u0026rsquo; to users which don\u0026rsquo;t have a role assigned at the time they login. \u0026lsquo;oidc\u0026rsquo; will assign the role based on the value of a claim (configured via PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM) from the users OIDC claims.   PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM string roles The OIDC claim used to create the users role assignment.   PROXY_ENABLE_PRESIGNEDURLS bool true Allow OCS to get a signing key to sign requests.   PROXY_ACCOUNT_BACKEND_TYPE string cs3 Account backend the PROXY service should use. Currently only \u0026lsquo;cs3\u0026rsquo; is possible here.   PROXY_USER_OIDC_CLAIM string preferred_username The name of an OpenID Connect claim that is used for resolving users with the account backend. The value of the claim must hold a per user unique, stable and non re-assignable identifier. The availability of claims depends on your Identity Provider. There are common claims available for most Identity providers like \u0026rsquo;email\u0026rsquo; or \u0026lsquo;preferred_user\u0026rsquo; but you can also add your own claim.   PROXY_USER_CS3_CLAIM string username The name of a CS3 user attribute (claim) that should be mapped to the \u0026lsquo;user_oidc_claim\u0026rsquo;. Supported values are \u0026lsquo;username\u0026rsquo;, \u0026lsquo;mail\u0026rsquo; and \u0026lsquo;userid\u0026rsquo;.   OCIS_MACHINE_AUTH_API_KEYPROXY_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary to access resources from other services.   PROXY_AUTOPROVISION_ACCOUNTS bool false Set this to \u0026rsquo;true\u0026rsquo; to automatically provision users that do not yet exist in the users service on-demand upon first sign-in. To use this a write-enabled libregraph user backend needs to be setup an running.   PROXY_ENABLE_BASIC_AUTH bool false Set this to true to enable \u0026lsquo;basic authentication\u0026rsquo; (username/password).   PROXY_INSECURE_BACKENDS bool false Disable TLS certificate validation for all HTTP backend connections.   PROXY_HTTPS_CACERT string  Path/File for the root CA certificate used to validate the server’s TLS certificate for https enabled backend services.   PROXY_POLICIES_QUERY string  Defines the \u0026lsquo;Complete Rules\u0026rsquo; variable defined in the rego rule set this step uses for its evaluation. Rules default to deny if the variable was not found.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159  # Autogenerated# Filename: proxy-config-example."},{"id":118,"href":"/services/search/configuration/","title":"Service Configuration","parent":"Search","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Autogenerated# Filename: search-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9224token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9220tls:nullreva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;grpc_client_tls:nullevents:endpoint:127.0.0.1:9233cluster:ocis-clusterasync_uploads:falsenum_consumers:0debounce_duration:1000tls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falseengine:type:blevebleve:data_path:~/.ocis/searchextractor:type:basiccs3_allow_insecure:falsetika:tika_url:http://127.0.0.1:9998machine_auth_api_key:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSEARCH_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESEARCH_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSEARCH_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSEARCH_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSEARCH_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSEARCH_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSEARCH_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESEARCH_LOG_FILE string  The path to the log file. Activates logging to this file if set.   SEARCH_DEBUG_ADDR string 127.0.0.1:9224 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   SEARCH_DEBUG_TOKEN string  Token to secure the metrics endpoint.   SEARCH_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   SEARCH_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   SEARCH_GRPC_ADDR string 127.0.0.1:9220 The bind address of the GRPC service.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   SEARCH_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   SEARCH_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   STORAGE_USERS_OCIS_ASYNC_UPLOADSSEARCH_EVENTS_ASYNC_UPLOADS bool false Enable asynchronous file uploads.   SEARCH_EVENTS_NUM_CONSUMERS int 0 The amount of concurrent event consumers to start. Event consumers are used for searching files. Multiple consumers increase parallelisation, but will also increase CPU and memory demands. The default value is 0.   SEARCH_EVENTS_REINDEX_DEBOUNCE_DURATION int 1000 The duration in milliseconds the reindex debouncer waits before triggering a reindex of a space that was modified.   OCIS_INSECURESEARCH_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   SEARCH_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SEARCH_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSSEARCH_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services.   SEARCH_ENGINE_TYPE string bleve Defines which search engine to use. Defaults to \u0026lsquo;bleve\u0026rsquo;. Supported values are: \u0026lsquo;bleve\u0026rsquo;.   SEARCH_ENGINE_BLEVE_DATA_PATH string ~/.ocis/search The directory where the filesystem will store search data. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/search.   SEARCH_EXTRACTOR_TYPE string basic Defines the content extraction engine. Defaults to \u0026lsquo;basic\u0026rsquo;. Supported values are: \u0026lsquo;basic\u0026rsquo; and \u0026rsquo;tika\u0026rsquo;.   OCIS_INSECURESEARCH_EXTRACTOR_CS3SOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the CS3 source.   SEARCH_EXTRACTOR_TIKA_TIKA_URL string http://127.0.0.1:9998 URL of the tika server.   OCIS_MACHINE_AUTH_API_KEYSEARCH_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary for the access to resources from other services.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Autogenerated# Filename: search-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9224token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9220tls:nullreva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;grpc_client_tls:nullevents:endpoint:127.0.0.1:9233cluster:ocis-clusterasync_uploads:falsenum_consumers:0debounce_duration:1000tls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falseengine:type:blevebleve:data_path:~/.ocis/searchextractor:type:basiccs3_allow_insecure:falsetika:tika_url:http://127.0.0.1:9998machine_auth_api_key:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSEARCH_TRACING_ENABLED bool false Activates tracing."},{"id":119,"href":"/services/settings/configuration/","title":"Service Configuration","parent":"Settings","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  # Autogenerated# Filename: settings-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9194token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:9190tls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;root:/cors:allow_origins:- \u0026#39;*\u0026#39;allow_methods:- GET- POST- PUT- PATCH- DELETE- OPTIONSallow_headers:- Authorization- Origin- Content-Type- Accept- X-Requested-Withallow_credentials:truegrpc:addr:127.0.0.1:9191tls:nullgrpc_client_tls:nullstore_type:metadatadata_path:~/.ocis/settingsmetadata_config:gateway_addr:127.0.0.1:9215storage_addr:127.0.0.1:9215system_user_id:\u0026#34;\u0026#34;system_user_idp:internalsystem_user_api_key:\u0026#34;\u0026#34;bundles_path:\u0026#34;\u0026#34;admin_user_id:\u0026#34;\u0026#34;token_manager:jwt_secret:\u0026#34;\u0026#34;set_default_assignments:false   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSETTINGS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESETTINGS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSETTINGS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSETTINGS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSETTINGS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSETTINGS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSETTINGS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESETTINGS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   SETTINGS_DEBUG_ADDR string 127.0.0.1:9194 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   SETTINGS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   SETTINGS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   SETTINGS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   SETTINGS_HTTP_ADDR string 127.0.0.1:9190 The bind address of the HTTP service.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   SETTINGS_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   OCIS_CORS_ALLOW_ORIGINSSETTINGS_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSSETTINGS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSSETTINGS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSSETTINGS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   SETTINGS_GRPC_ADDR string 127.0.0.1:9191 The bind address of the GRPC service.   SETTINGS_STORE_TYPE string metadata Store type configures the persistency driver. Supported values are \u0026ldquo;metadata\u0026rdquo; and \u0026ldquo;filesystem\u0026rdquo;.   SETTINGS_DATA_PATH string ~/.ocis/settings The directory where the filesystem storage will store ocis settings. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/settings.   STORAGE_GATEWAY_GRPC_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   STORAGE_GRPC_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   OCIS_SYSTEM_USER_IDSETTINGS_SYSTEM_USER_ID string  ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_IDPSETTINGS_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user.   OCIS_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   SETTINGS_BUNDLES_PATH string  The path to a JSON file with a list of bundles. If not definied, the default bundles will be loaded.   OCIS_ADMIN_USER_IDSETTINGS_ADMIN_USER_ID string  ID of the user that should receive admin privileges. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand.   OCIS_JWT_SECRETSETTINGS_JWT_SECRET string  The secret to mint and validate jwt tokens.   SETTINGS_SETUP_DEFAULT_ASSIGNMENTSIDM_CREATE_DEMO_USERS bool false The default role assignments the demo users should be setup.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  # Autogenerated# Filename: settings-config-example."},{"id":120,"href":"/services/sharing/configuration/","title":"Service Configuration","parent":"Sharing","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73  # Autogenerated# Filename: sharing-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9151token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9150tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;events:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_cert_path:\u0026#34;\u0026#34;enable_tls:falseskip_user_groups_in_token:falseuser_sharing_driver:jsoncs3user_sharing_drivers:jsoncs3:provider_addr:127.0.0.1:9215system_user_id:\u0026#34;\u0026#34;system_user_idp:internalsystem_user_api_key:\u0026#34;\u0026#34;cache_ttl:0json:file:~/.ocis/storage/shares.jsoncs3:provider_addr:127.0.0.1:9215system_user_id:\u0026#34;\u0026#34;system_user_idp:internalsystem_user_api_key:\u0026#34;\u0026#34;owncloudsql:db_username:ownclouddb_password:\u0026#34;\u0026#34;db_host:mysqldb_port:3306db_name:ownclouduser_storage_mount_id:\u0026#34;\u0026#34;public_sharing_driver:jsoncs3public_sharing_drivers:json:file:~/.ocis/storage/publicshares.jsonjsoncs3:provider_addr:127.0.0.1:9215system_user_id:\u0026#34;\u0026#34;system_user_idp:internalsystem_user_api_key:\u0026#34;\u0026#34;cs3:provider_addr:127.0.0.1:9215system_user_id:\u0026#34;\u0026#34;system_user_idp:internalsystem_user_api_key:\u0026#34;\u0026#34;public_sharing_writeableshare_must_have_password:false   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSHARING_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESHARING_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSHARING_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSHARING_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSHARING_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSHARING_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSHARING_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESHARING_LOG_FILE string  The path to the log file. Activates logging to this file if set.   SHARING_DEBUG_ADDR string 127.0.0.1:9151 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   SHARING_DEBUG_TOKEN string  Token to secure the metrics endpoint.   SHARING_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   SHARING_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   SHARING_GRPC_ADDR string 127.0.0.1:9150 The bind address of the GRPC service.   SHARING_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETSHARING_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   SHARING_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   SHARING_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECURESHARING_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   SHARING_EVENTS_TLS_ROOT_CA_CERT string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SHARING_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSSHARING_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   SHARING_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   SHARING_USER_DRIVER string jsoncs3 Driver to be used to persist shares. Supported values are \u0026lsquo;jsoncs3\u0026rsquo;, \u0026lsquo;json\u0026rsquo;, \u0026lsquo;cs3\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;.   SHARING_USER_JSONCS3_PROVIDER_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   OCIS_SYSTEM_USER_IDSHARING_USER_JSONCS3_SYSTEM_USER_ID string  ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_IDPSHARING_USER_JSONCS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user.   OCIS_SYSTEM_USER_API_KEYSHARING_USER_JSONCS3_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   SHARING_USER_JSONCS3_CACHE_TTL int 0 TTL for the internal caches in seconds.   SHARING_USER_JSON_FILE string ~/.ocis/storage/shares.json Path to the JSON file where shares will be persisted. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage.   SHARING_USER_CS3_PROVIDER_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   OCIS_SYSTEM_USER_IDSHARING_USER_CS3_SYSTEM_USER_ID string  ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_IDPSHARING_USER_CS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user.   OCIS_SYSTEM_USER_API_KEYSHARING_USER_CS3_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   SHARING_USER_OWNCLOUDSQL_DB_USERNAME string owncloud Username for the database.   SHARING_USER_OWNCLOUDSQL_DB_PASSWORD string  Password for the database.   SHARING_USER_OWNCLOUDSQL_DB_HOST string mysql Hostname or IP of the database server.   SHARING_USER_OWNCLOUDSQL_DB_PORT int 3306 Port that the database server is listening on.   SHARING_USER_OWNCLOUDSQL_DB_NAME string owncloud Name of the database to be used.   SHARING_USER_OWNCLOUDSQL_USER_STORAGE_MOUNT_ID string  Mount ID of the ownCloudSQL users storage for mapping ownCloud 10 shares.   SHARING_PUBLIC_DRIVER string jsoncs3 Driver to be used to persist public shares. Supported values are \u0026lsquo;jsoncs3\u0026rsquo;, \u0026lsquo;json\u0026rsquo; and \u0026lsquo;cs3\u0026rsquo;.   SHARING_PUBLIC_JSON_FILE string ~/.ocis/storage/publicshares.json Path to the JSON file where public share meta-data will be stored. This JSON file contains the information about public shares that have been created. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage.   SHARING_PUBLIC_JSONCS3_PROVIDER_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   OCIS_SYSTEM_USER_IDSHARING_PUBLIC_JSONCS3_SYSTEM_USER_ID string  ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_IDPSHARING_PUBLIC_JSONCS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user.   OCIS_SYSTEM_USER_API_KEYSHARING_PUBLIC_JSONCS3_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   SHARING_PUBLIC_CS3_PROVIDER_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   OCIS_SYSTEM_USER_IDSHARING_PUBLIC_CS3_SYSTEM_USER_ID string  ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_IDPSHARING_PUBLIC_CS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user.   OCIS_SYSTEM_USER_API_KEYSHARING_PUBLIC_CS3_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORDSHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD bool false Set this to true if you want to enforce passwords on Uploader, Editor or Contributor shares. If not using the global OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD, you must define the FRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD in the frontend service.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73  # Autogenerated# Filename: sharing-config-example."},{"id":121,"href":"/services/storage-publiclink/configuration/","title":"Service Configuration","parent":"Storage-Publiclink","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  # Autogenerated# Filename: storage-publiclink-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9179token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9178tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsestorage_provider:mount_id:7993447f-687f-490d-875c-ac95e89a62a4   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_PUBLICLINK_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_PUBLICLINK_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_PUBLICLINK_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_PUBLICLINK_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSTORAGE_PUBLICLINK_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSTORAGE_PUBLICLINK_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSTORAGE_PUBLICLINK_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESTORAGE_PUBLICLINK_LOG_FILE string  The path to the log file. Activates logging to this file if set.   STORAGE_PUBLICLINK_DEBUG_ADDR string 127.0.0.1:9179 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   STORAGE_PUBLICLINK_DEBUG_TOKEN string  Token to secure the metrics endpoint.   STORAGE_PUBLICLINK_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   STORAGE_PUBLICLINK_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   STORAGE_PUBLICLINK_GRPC_ADDR string 127.0.0.1:9178 The bind address of the GRPC service.   STORAGE_PUBLICLINK_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETSTORAGE_PUBLICLINK_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   STORAGE_PUBLICLINK_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   STORAGE_PUBLICLINK_STORAGE_PROVIDER_MOUNT_ID string 7993447f-687f-490d-875c-ac95e89a62a4 Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  # Autogenerated# Filename: storage-publiclink-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9179token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9178tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsestorage_provider:mount_id:7993447f-687f-490d-875c-ac95e89a62a4   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_PUBLICLINK_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_PUBLICLINK_TRACING_TYPE string  The type of tracing."},{"id":122,"href":"/services/storage-shares/configuration/","title":"Service Configuration","parent":"Storage-Shares","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  # Autogenerated# Filename: storage-shares-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9156token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9154tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsemount_id:7639e57c-4433-4a12-8201-722fd0009154readonly:falseuser_share_provider_endpoint:localhost:9150   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_SHARES_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_SHARES_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_SHARES_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_SHARES_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSTORAGE_SHARES_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSTORAGE_SHARES_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSTORAGE_SHARES_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESTORAGE_SHARES_LOG_FILE string  The path to the log file. Activates logging to this file if set.   STORAGE_SHARES_DEBUG_ADDR string 127.0.0.1:9156 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   STORAGE_SHARES_DEBUG_TOKEN string  Token to secure the metrics endpoint.   STORAGE_SHARES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   STORAGE_SHARES_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   STORAGE_SHARES_GRPC_ADDR string 127.0.0.1:9154 The bind address of the GRPC service.   STORAGE_SHARES_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETSTORAGE_SHARES_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   STORAGE_SHARES_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   STORAGE_SHARES_MOUNT_ID string 7639e57c-4433-4a12-8201-722fd0009154 Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   STORAGE_SHARES_READ_ONLY bool false Set this storage to be read-only.   STORAGE_SHARES_USER_SHARE_PROVIDER_ENDPOINT string localhost:9150 GRPC endpoint of the SHARING service.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  # Autogenerated# Filename: storage-shares-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9156token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9154tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsemount_id:7639e57c-4433-4a12-8201-722fd0009154readonly:falseuser_share_provider_endpoint:localhost:9150   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_SHARES_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_SHARES_TRACING_TYPE string  The type of tracing."},{"id":123,"href":"/services/storage-system/configuration/","title":"Service Configuration","parent":"Storage-System","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  # Autogenerated# Filename: storage-system-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9217token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9215tls:nullprotocol:tcphttp:addr:127.0.0.1:9216protocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;system_user_id:\u0026#34;\u0026#34;system_user_api_key:\u0026#34;\u0026#34;skip_user_groups_in_token:falsecache:store:memorynodes:[]database:systemdriver:ocisdrivers:ocis:metadata_backend:xattrsroot:~/.ocis/storage/metadatamax_acquire_lock_cycles:20lock_cycle_duration_factor:30data_server_url:http://localhost:9216/data   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_SYSTEM_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_SYSTEM_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_SYSTEM_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_SYSTEM_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSTORAGE_SYSTEM_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSTORAGE_SYSTEM_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSTORAGE_SYSTEM_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESTORAGE_SYSTEM_LOG_FILE string  The path to the log file. Activates logging to this file if set.   STORAGE_SYSTEM_DEBUG_ADDR string 127.0.0.1:9217 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   STORAGE_SYSTEM_DEBUG_TOKEN string  Token to secure the metrics endpoint   STORAGE_SYSTEM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling   STORAGE_SYSTEM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   STORAGE_SYSTEM_GRPC_ADDR string 127.0.0.1:9215 The bind address of the GRPC service.   STORAGE_SYSTEM_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service.   STORAGE_SYSTEM_HTTP_ADDR string 127.0.0.1:9216 The bind address of the HTTP service.   STORAGE_SYSTEM_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service.   OCIS_JWT_SECRETSTORAGE_SYSTEM_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_SYSTEM_USER_ID string  ID of the oCIS storage-system system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   STORAGE_SYSTEM_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   OCIS_CACHE_STORESTORAGE_SYSTEM_CACHE_STOREOCIS_CACHE_STORE_TYPE string memory Store implementation for the cache. Supported values are \u0026lsquo;memory\u0026rsquo; (default), \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo; and \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_CACHE_STORE_NODESSTORAGE_SYSTEM_CACHE_NODESOCIS_CACHE_STORE_ADDRESS []string [] A comma separated list of nodes to access the configured store. This has no effect when the \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   STORAGE_SYSTEM_CACHE_DATABASE string system The database name the configured store should use.   STORAGE_SYSTEM_DRIVER string ocis The driver which should be used by the service.   OCIS_DECOMPOSEDFS_METADATA_BACKENDSTORAGE_SYSTEM_OCIS_METADATA_BACKEND string xattrs The backend to use for storing metadata. Supported values are \u0026lsquo;xattrs\u0026rsquo; and \u0026lsquo;ini\u0026rsquo;. The setting \u0026lsquo;xattrs\u0026rsquo; uses extended attributes to store file metadata while \u0026lsquo;ini\u0026rsquo; uses a dedicated file to store file metadata. Defaults to \u0026lsquo;xattrs\u0026rsquo;.   STORAGE_SYSTEM_OCIS_ROOT string ~/.ocis/storage/metadata Path for the directory where the STORAGE-SYSTEM service stores it\u0026rsquo;s persistent data. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage.   STORAGE_SYSTEM_OCIS_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used.   STORAGE_SYSTEM_OCIS_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used.   STORAGE_SYSTEM_DATA_SERVER_URL string http://localhost:9216/data URL of the data server, needs to be reachable by other services using this service.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  # Autogenerated# Filename: storage-system-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9217token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9215tls:nullprotocol:tcphttp:addr:127.0.0.1:9216protocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;system_user_id:\u0026#34;\u0026#34;system_user_api_key:\u0026#34;\u0026#34;skip_user_groups_in_token:falsecache:store:memorynodes:[]database:systemdriver:ocisdrivers:ocis:metadata_backend:xattrsroot:~/.ocis/storage/metadatamax_acquire_lock_cycles:20lock_cycle_duration_factor:30data_server_url:http://localhost:9216/data   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_SYSTEM_TRACING_ENABLED bool false Activates tracing."},{"id":124,"href":"/services/storage-users/configuration/","title":"Service Configuration","parent":"Storage-Users","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97  # Autogenerated# Filename: storage-users-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9159token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9157tls:nullprotocol:tcphttp:addr:127.0.0.1:9158protocol:tcpprefix:datatoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsedriver:ocisdrivers:ocis:metadata_backend:xattrsroot:~/.ocis/storage/usersuser_layout:\u0026#39;{{.Id.OpaqueId}}\u0026#39;permissions_endpoint:127.0.0.1:9191personalspacealias_template:\u0026#39;{{.SpaceType}}/{{.User.Username | lower}}\u0026#39;generalspacealias_template:\u0026#39;{{.SpaceType}}/{{.SpaceName | replace \u0026#34; \u0026#34; \u0026#34;-\u0026#34; | lower}}\u0026#39;share_folder:/Sharesmax_acquire_lock_cycles:20lock_cycle_duration_factor:30async_uploads:falsemax_quota:0s3ng:metadata_backend:xattrsroot:~/.ocis/storage/usersuser_layout:\u0026#39;{{.Id.OpaqueId}}\u0026#39;permissions_endpoint:127.0.0.1:9191region:defaultaccess_key:\u0026#34;\u0026#34;secret_key:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;bucket:\u0026#34;\u0026#34;personalspacealias_template:\u0026#39;{{.SpaceType}}/{{.User.Username | lower}}\u0026#39;generalspacealias_template:\u0026#39;{{.SpaceType}}/{{.SpaceName | replace \u0026#34; \u0026#34; \u0026#34;-\u0026#34; | lower}}\u0026#39;share_folder:/Sharesmax_acquire_lock_cycles:20lock_cycle_duration_factor:30owncloudsql:root:~/.ocis/storage/owncloudshare_folder:/Sharesuser_layout:\u0026#39;{{.Username}}\u0026#39;upload_info_dir:~/.ocis/storage/uploadinfodb_username:ownclouddb_password:ownclouddb_host:\u0026#34;\u0026#34;db_port:3306db_name:owncloudusers_provider_endpoint:localhost:9144data_server_url:http://localhost:9158/datadata_gateway_url:https://localhost:9200/datatransfer_expires:86400events:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_cert_path:\u0026#34;\u0026#34;enable_tls:falsenum_consumers:0cache:store:memorynodes:[]database:usersmount_id:\u0026#34;\u0026#34;expose_data_server:falsereadonly:falseupload_expiration:86400tasks:purge_trash_bin:user_id:\u0026#34;\u0026#34;personal_delete_before:720h0m0sproject_delete_before:720h0m0s   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_USERS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_USERS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_USERS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_USERS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSTORAGE_USERS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSTORAGE_USERS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSTORAGE_USERS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESTORAGE_USERS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   STORAGE_USERS_DEBUG_ADDR string 127.0.0.1:9159 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   STORAGE_USERS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   STORAGE_USERS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   STORAGE_USERS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   STORAGE_USERS_GRPC_ADDR string 127.0.0.1:9157 The bind address of the GRPC service.   STORAGE_USERS_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service.   STORAGE_USERS_HTTP_ADDR string 127.0.0.1:9158 The bind address of the HTTP service.   STORAGE_USERS_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service.   OCIS_JWT_SECRETSTORAGE_USERS_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   STORAGE_USERS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   STORAGE_USERS_DRIVER string ocis The storage driver which should be used by the service. Defaults to \u0026lsquo;ocis\u0026rsquo;, Supported values are: \u0026lsquo;ocis\u0026rsquo;, \u0026lsquo;s3ng\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;. The \u0026lsquo;ocis\u0026rsquo; driver stores all data (blob and meta data) in an POSIX compliant volume. The \u0026lsquo;s3ng\u0026rsquo; driver stores metadata in a POSIX compliant volume and uploads blobs to the s3 bucket.   OCIS_DECOMPOSEDFS_METADATA_BACKENDSTORAGE_USERS_OCIS_METADATA_BACKEND string xattrs The backend to use for storing metadata. Supported values are \u0026lsquo;xattrs\u0026rsquo; and \u0026lsquo;ini\u0026rsquo;. The setting \u0026lsquo;xattrs\u0026rsquo; uses extended attributes to store file metadata while \u0026lsquo;ini\u0026rsquo; uses a dedicated file to store file metadata. Defaults to \u0026lsquo;xattrs\u0026rsquo;.   STORAGE_USERS_OCIS_ROOT string ~/.ocis/storage/users The directory where the filesystem storage will store blobs and metadata. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage/users.   STORAGE_USERS_OCIS_USER_LAYOUT string {{.Id.OpaqueId}} Template string for the user storage layout in the user directory.   STORAGE_USERS_PERMISSION_ENDPOINT,STORAGE_USERS_OCIS_PERMISSIONS_ENDPOINT string 127.0.0.1:9191 Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;.   STORAGE_USERS_OCIS_PERSONAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.User.Username | lower}} Template string to construct personal space aliases.   STORAGE_USERS_OCIS_GENERAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.SpaceName | replace \u0026quot; \u0026quot; \u0026quot;-\u0026quot; | lower}} Template string to construct general space aliases.   STORAGE_USERS_OCIS_SHARE_FOLDER string /Shares Name of the folder jailing all shares.   STORAGE_USERS_OCIS_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used.   STORAGE_USERS_OCIS_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used.   STORAGE_USERS_OCIS_ASYNC_UPLOADS bool false Enable asynchronous file uploads.   OCIS_SPACES_MAX_QUOTASTORAGE_USERS_OCIS_MAX_QUOTA uint64 0 Set a global max quota for spaces in bytes. A value of 0 equals unlimited. If not using the global OCIS_SPACES_MAX_QUOTA, you must define the FRONTEND_MAX_QUOTA in the frontend service.   STORAGE_USERS_S3NG_METADATA_BACKEND string xattrs The backend to use for storing metadata. Supported values are \u0026lsquo;xattrs\u0026rsquo; and \u0026lsquo;ini\u0026rsquo;. The setting \u0026lsquo;xattrs\u0026rsquo; uses extended attributes to store file metadata while \u0026lsquo;ini\u0026rsquo; uses a dedicated file to store file metadata. Defaults to \u0026lsquo;xattrs\u0026rsquo;.   STORAGE_USERS_S3NG_ROOT string ~/.ocis/storage/users The directory where the filesystem storage will store metadata for blobs. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage/users.   STORAGE_USERS_S3NG_USER_LAYOUT string {{.Id.OpaqueId}} Template string for the user storage layout in the user directory.   STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_S3NG_PERMISSIONS_ENDPOINT string 127.0.0.1:9191 Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;.   STORAGE_USERS_S3NG_REGION string default Region of the S3 bucket.   STORAGE_USERS_S3NG_ACCESS_KEY string  Access key for the S3 bucket.   STORAGE_USERS_S3NG_SECRET_KEY string  Secret key for the S3 bucket.   STORAGE_USERS_S3NG_ENDPOINT string  Endpoint for the S3 bucket.   STORAGE_USERS_S3NG_BUCKET string  Name of the S3 bucket.   STORAGE_USERS_S3NG_PERSONAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.User.Username | lower}} Template string to construct personal space aliases.   STORAGE_USERS_S3NG_GENERAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.SpaceName | replace \u0026quot; \u0026quot; \u0026quot;-\u0026quot; | lower}} Template string to construct general space aliases.   STORAGE_USERS_S3NG_SHARE_FOLDER string /Shares Name of the folder jailing all shares.   STORAGE_USERS_S3NG_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used.   STORAGE_USERS_S3NG_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used.   STORAGE_USERS_OWNCLOUDSQL_DATADIR string ~/.ocis/storage/owncloud The directory where the filesystem storage will store SQL migration data. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage/owncloud.   STORAGE_USERS_OWNCLOUDSQL_SHARE_FOLDER string /Shares Name of the folder jailing all shares.   STORAGE_USERS_OWNCLOUDSQL_LAYOUT string {{.Username}} Path layout to use to navigate into a users folder in an owncloud data directory   STORAGE_USERS_OWNCLOUDSQL_UPLOADINFO_DIR string ~/.ocis/storage/uploadinfo The directory where the filesystem will store uploads temporarily. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage/uploadinfo.   STORAGE_USERS_OWNCLOUDSQL_DB_USERNAME string owncloud Username for the database.   STORAGE_USERS_OWNCLOUDSQL_DB_PASSWORD string owncloud Password for the database.   STORAGE_USERS_OWNCLOUDSQL_DB_HOST string  Hostname or IP of the database server.   STORAGE_USERS_OWNCLOUDSQL_DB_PORT int 3306 Port that the database server is listening on.   STORAGE_USERS_OWNCLOUDSQL_DB_NAME string owncloud Name of the database to be used.   STORAGE_USERS_OWNCLOUDSQL_USERS_PROVIDER_ENDPOINT string localhost:9144 Endpoint of the users provider.   STORAGE_USERS_DATA_SERVER_URL string http://localhost:9158/data URL of the data server, needs to be reachable by the data gateway provided by the frontend service or the user if directly exposed.   STORAGE_USERS_DATA_GATEWAY_URL string https://localhost:9200/data URL of the data gateway server   STORAGE_USERS_TRANSFER_EXPIRES int64 86400 the time after which the token for upload postprocessing expires   STORAGE_USERS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   STORAGE_USERS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECURESTORAGE_USERS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   STORAGE_USERS_EVENTS_TLS_ROOT_CA_CERT string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided STORAGE_USERS_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSSTORAGE_USERS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   STORAGE_USERS_EVENTS_NUM_CONSUMERS int 0 The amount of concurrent event consumers to start. Event consumers are used for post-processing files. Multiple consumers increase parallelisation, but will also increase CPU and memory demands. The setting has no effect when the STORAGE_USERS_OCIS_ASYNC_UPLOADS is set to false. The default and minimum value is 1.   OCIS_CACHE_STORESTORAGE_USERS_CACHE_STORESTORAGE_USERS_CACHE_STORE_TYPE string memory Store implementation for the cache. Supported values are \u0026lsquo;memory\u0026rsquo; (default), \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, and \u0026rsquo;etcd\u0026rsquo;. See the text description for details.   OCIS_CACHE_STORE_NODESSTORAGE_USERS_CACHE_STORE_NODESOCIS_CACHE_STORE_ADDRESSSTORAGE_USERS_CACHE_STORE_ADDRESSSTORAGE_USERS_CACHE_NODES []string [] A comma separated list of nodes to access the configured store. This has no effect when the \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   STORAGE_USERS_CACHE_DATABASE string users The database name the configured store should use.   STORAGE_USERS_MOUNT_ID string  Mount ID of this storage.   STORAGE_USERS_EXPOSE_DATA_SERVER bool false Exposes the data server directly to users and bypasses the data gateway. Ensure that the data server address is reachable by users.   STORAGE_USERS_READ_ONLY bool false Set this storage to be read-only.   STORAGE_USERS_UPLOAD_EXPIRATION int64 86400 Duration in seconds after which uploads will expire.   OCIS_ADMIN_USER_IDSTORAGE_USERS_PURGE_TRASH_BIN_USER_ID string  ID of the user who collects all necessary information for deletion.   STORAGE_USERS_PURGE_TRASH_BIN_PERSONAL_DELETE_BEFORE Duration 720h0m0s Specifies the period of time in which items that have been in the personal trash-bin for longer than this value should be deleted. A value of 0 means no automatic deletion. The value is human-readable, valid values are \u0026lsquo;24h\u0026rsquo;, \u0026lsquo;60m\u0026rsquo;, \u0026rsquo;60s\u0026rsquo; etc.   STORAGE_USERS_PURGE_TRASH_BIN_PROJECT_DELETE_BEFORE Duration 720h0m0s Specifies the period of time in which items that have been in the project trash-bin for longer than this value should be deleted. A value of 0 means no automatic deletion. The value is human-readable, valid values are \u0026lsquo;24h\u0026rsquo;, \u0026lsquo;60m\u0026rsquo;, \u0026rsquo;60s\u0026rsquo; etc.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97  # Autogenerated# Filename: storage-users-config-example."},{"id":125,"href":"/services/store/configuration/","title":"Service Configuration","parent":"Store","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  # Autogenerated# Filename: store-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9464token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9460tls:nullgrpc_client_tls:nulldata_path:~/.ocis/store   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORE_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORE_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORE_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORE_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSTORE_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSTORE_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSTORE_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESTORE_LOG_FILE string  The path to the log file. Activates logging to this file if set.   STORE_DEBUG_ADDR string 127.0.0.1:9464 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   STORE_DEBUG_TOKEN string  Token to secure the metrics endpoint.   STORE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   STORE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   STORE_GRPC_ADDR string 127.0.0.1:9460 The bind address of the GRPC service.   STORE_DATA_PATH string ~/.ocis/store The directory where the filesystem storage will store ocis settings. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/store.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  # Autogenerated# Filename: store-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9464token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9460tls:nullgrpc_client_tls:nulldata_path:~/.ocis/store   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORE_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORE_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;."},{"id":126,"href":"/services/thumbnails/configuration/","title":"Service Configuration","parent":"Thumbnails","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  # Autogenerated# Filename: thumbnails-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9189token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9185tls:nullhttp:addr:127.0.0.1:9186tls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;root:/thumbnailsgrpc_client_tls:nullthumbnail:resolutions:- 16x16- 32x32- 64x64- 128x128- 1080x1920- 1920x1080- 2160x3840- 3840x2160- 4320x7680- 7680x4320filesystem_storage:root_directory:~/.ocis/thumbnailswebdav_allow_insecure:falsecs3_allow_insecure:falsereva_gateway:127.0.0.1:9142font_map_file:\u0026#34;\u0026#34;transfer_secret:\u0026#34;\u0026#34;data_endpoint:http://127.0.0.1:9186/thumbnails/data   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDTHUMBNAILS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPETHUMBNAILS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTTHUMBNAILS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORTHUMBNAILS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELTHUMBNAILS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYTHUMBNAILS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORTHUMBNAILS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILETHUMBNAILS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   THUMBNAILS_DEBUG_ADDR string 127.0.0.1:9189 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   THUMBNAILS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   THUMBNAILS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   THUMBNAILS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   THUMBNAILS_GRPC_ADDR string 127.0.0.1:9185 The bind address of the GRPC service.   THUMBNAILS_HTTP_ADDR string 127.0.0.1:9186 The bind address of the HTTP service.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   THUMBNAILS_HTTP_ROOT string /thumbnails Subdirectory that serves as the root for this HTTP service.   THUMBNAILS_RESOLUTIONS []string [16x16 32x32 64x64 128x128 1080x1920 1920x1080 2160x3840 3840x2160 4320x7680 7680x4320] The supported target resolutions in the format WidthxHeight e.g. 32x32. You can define any resolution as required and separate multiple resolutions by blank or comma.   THUMBNAILS_FILESYSTEMSTORAGE_ROOT string ~/.ocis/thumbnails The directory where the filesystem storage will store the thumbnails. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/thumbnails.   OCIS_INSECURETHUMBNAILS_WEBDAVSOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the webdav source.   OCIS_INSECURETHUMBNAILS_CS3SOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the CS3 source.   REVA_GATEWAY string 127.0.0.1:9142 CS3 gateway used to look up user metadata   THUMBNAILS_TXT_FONTMAP_FILE string  The path to a font file for txt thumbnails.   THUMBNAILS_TRANSFER_TOKEN string  The secret to sign JWT to download the actual thumbnail file.   THUMBNAILS_DATA_ENDPOINT string http://127.0.0.1:9186/thumbnails/data The HTTP endpoint where the actual thumbnail file can be downloaded.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  # Autogenerated# Filename: thumbnails-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9189token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9185tls:nullhttp:addr:127.0.0.1:9186tls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;root:/thumbnailsgrpc_client_tls:nullthumbnail:resolutions:- 16x16- 32x32- 64x64- 128x128- 1080x1920- 1920x1080- 2160x3840- 3840x2160- 4320x7680- 7680x4320filesystem_storage:root_directory:~/."},{"id":127,"href":"/services/userlog/configuration/","title":"Service Configuration","parent":"Userlog","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  # Autogenerated# Filename: userlog-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:\u0026#34;\u0026#34;token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:0root:/cors:allow_origins:- \u0026#39;*\u0026#39;allow_methods:- GETallow_headers:- Authorization- Origin- Content-Type- Accept- X-Requested-Withallow_credentials:truetls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;grpc_client_tls:nulltoken_manager:jwt_secret:\u0026#34;\u0026#34;machine_auth_api_key:\u0026#34;\u0026#34;reva_gateway:127.0.0.1:9142translation_path:\u0026#34;\u0026#34;events:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falsepersistence:store:memorynodes:[]database:userlogtable:eventsttl:336h0m0ssize:0   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELUSERLOG_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYUSERLOG_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORUSERLOG_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEUSERLOG_LOG_FILE string  The path to the log file. Activates logging to this file if set.   USERLOG_DEBUG_ADDR string  Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   USERLOG_DEBUG_TOKEN string  Token to secure the metrics endpoint.   USERLOG_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   USERLOG_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   USERLOG_HTTP_ADDR string 127.0.0.1:0 The bind address of the HTTP service.   USERLOG_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   OCIS_CORS_ALLOW_ORIGINSUSERLOG_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSUSERLOG_CORS_ALLOW_METHODS []string [GET] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSUSERLOG_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSUSERLOG_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   OCIS_JWT_SECRETUSERLOG_JWT_SECRET string  The secret to mint and validate jwt tokens.   OCIS_MACHINE_AUTH_API_KEYUSERLOG_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary to access resources from other services.   REVA_GATEWAY string 127.0.0.1:9142 CS3 gateway used to look up user metadata   USERLOG_TRANSLATION_PATH string  (optional) Set this to a path with custom translations to overwrite the builtin translations. See the documentation for more details.   USERLOG_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   USERLOG_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECUREUSERLOG_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   USERLOG_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSUSERLOG_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   OCIS_PERSISTENT_STOREUSERLOG_STOREUSERLOG_STORE_TYPE string memory The type of the userlog store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;ocmem\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_PERSISTENT_STORE_NODESUSERLOG_STORE_ADDRESSES []string [] A comma separated list of nodes to access the configured store. This has no effect when \u0026lsquo;in-memory\u0026rsquo; stores are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   USERLOG_STORE_DATABASE string userlog The database name the configured store should use.   USERLOG_STORE_TABLE string events The database table the store should use.   OCIS_PERSISTENT_STORE_TTLUSERLOG_STORE_TTL Duration 336h0m0s Time to live for events in the store. The duration can be set as number followed by a unit identifier like s, m or h. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks).   OCIS_PERSISTENT_STORE_SIZEUSERLOG_STORE_SIZE int 0 The maximum quantity of items in the store. Only applies when store type \u0026lsquo;ocmem\u0026rsquo; is configured. Defaults to 512.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  # Autogenerated# Filename: userlog-config-example.yamllog:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:\u0026#34;\u0026#34;token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:0root:/cors:allow_origins:- \u0026#39;*\u0026#39;allow_methods:- GETallow_headers:- Authorization- Origin- Content-Type- Accept- X-Requested-Withallow_credentials:truetls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;grpc_client_tls:nulltoken_manager:jwt_secret:\u0026#34;\u0026#34;machine_auth_api_key:\u0026#34;\u0026#34;reva_gateway:127.0.0.1:9142translation_path:\u0026#34;\u0026#34;events:endpoint:127.0.0.1:9233cluster:ocis-clustertls_insecure:falsetls_root_ca_certificate:\u0026#34;\u0026#34;enable_tls:falsepersistence:store:memorynodes:[]database:userlogtable:eventsttl:336h0m0ssize:0   Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELUSERLOG_LOG_LEVEL string  The log level."},{"id":128,"href":"/services/users/configuration/","title":"Service Configuration","parent":"Users","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75  # Autogenerated# Filename: users-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9145token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc:addr:127.0.0.1:9144tls:nullprotocol:tcptoken_manager:jwt_secret:\u0026#34;\u0026#34;reva:address:127.0.0.1:9142tls:mode:\u0026#34;\u0026#34;cacert:\u0026#34;\u0026#34;skip_user_groups_in_token:falsedriver:ldapdrivers:ldap:uri:ldaps://localhost:9235ca_cert:~/.ocis/idm/ldap.crtinsecure:falsebind_dn:uid=reva,ou=sysusers,o=libregraph-idmbind_password:\u0026#34;\u0026#34;user_base_dn:ou=users,o=libregraph-idmgroup_base_dn:ou=groups,o=libregraph-idmuser_scope:subgroup_scope:subuser_substring_filter_type:anyuser_filter:\u0026#34;\u0026#34;group_filter:\u0026#34;\u0026#34;user_object_class:inetOrgPersongroup_object_class:groupOfNamesidp:https://localhost:9200disable_user_mechanism:noneldap_disabled_users_group_dn:cn=DisabledUsersGroup,ou=groups,o=libregraph-idmuser_schema:id:ownclouduuidid_is_octet_string:falsemail:maildisplay_name:displaynameuser_name:uiduser_enabled:ownCloudUserEnabledgroup_schema:id:ownclouduuidid_is_octet_string:falsemail:maildisplay_name:cngroup_name:cnmember:memberowncloudsql:db_username:ownclouddb_password:secretdb_host:mysqldb_port:3306db_name:owncloudidp:https://localhost:9200nobody:90join_username:falsejoin_owncloud_uuid:falseenable_medial_search:false   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDUSERS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEUSERS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTUSERS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORUSERS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELUSERS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYUSERS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORUSERS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEUSERS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   USERS_DEBUG_ADDR string 127.0.0.1:9145 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   USERS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   USERS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   USERS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   USERS_GRPC_ADDR string 127.0.0.1:9144 The bind address of the GRPC service.   USERS_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service.   OCIS_JWT_SECRETUSERS_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   USERS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   USERS_DRIVER string ldap The driver which should be used by the users service. Supported values are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;.   LDAP_URIUSERS_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo;   LDAP_CACERTUSERS_LDAP_CACERT string ~/.ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   LDAP_INSECUREUSERS_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments.   LDAP_BIND_DNUSERS_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server.   LDAP_BIND_PASSWORDUSERS_LDAP_BIND_PASSWORD string  Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;.   LDAP_USER_BASE_DNUSERS_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users.   LDAP_GROUP_BASE_DNUSERS_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups.   LDAP_USER_SCOPEUSERS_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_GROUP_SCOPEUSERS_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_USER_SUBSTRING_FILTER_TYPEUSERS_LDAP_USER_SUBSTRING_FILTER_TYPE string any Type of substring search filter to use for substring searches for users. Possible values: \u0026lsquo;initial\u0026rsquo; for doing prefix only searches, \u0026lsquo;final\u0026rsquo; for doing suffix only searches or \u0026lsquo;any\u0026rsquo; for doing full substring searches   LDAP_USER_FILTERUSERS_LDAP_USER_FILTER string  LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;.   LDAP_GROUP_FILTERUSERS_LDAP_GROUP_FILTER string  LDAP filter to add to the default filters for group searches.   LDAP_USER_OBJECTCLASSUSERS_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter like \u0026lsquo;inetOrgPerson\u0026rsquo;.   LDAP_GROUP_OBJECTCLASSUSERS_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter like \u0026lsquo;groupOfNames\u0026rsquo;.   OCIS_URLOCIS_OIDC_ISSUERUSERS_IDP_URL string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider.   LDAP_DISABLE_USER_MECHANISMUSERS_LDAP_DISABLE_USER_MECHANISM string none An option to control the behavior for disabling users. Valid options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed.   LDAP_DISABLED_USERS_GROUP_DNUSERS_LDAP_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;.   LDAP_USER_SCHEMA_IDUSERS_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for users. This should be a stable globally unique id like a UUID.   LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGUSERS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user ID\u0026rsquo;s.   LDAP_USER_SCHEMA_MAILUSERS_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users.   LDAP_USER_SCHEMA_DISPLAYNAMEUSERS_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users.   LDAP_USER_SCHEMA_USERNAMEUSERS_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users.   LDAP_USER_ENABLED_ATTRIBUTEUSERS_LDAP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP attribute to use as a flag telling if the user is enabled or disabled.   LDAP_GROUP_SCHEMA_IDUSERS_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique ID for groups. This should be a stable globally unique ID like a UUID.   LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGUSERS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s.   LDAP_GROUP_SCHEMA_MAILUSERS_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty).   LDAP_GROUP_SCHEMA_DISPLAYNAMEUSERS_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute).   LDAP_GROUP_SCHEMA_GROUPNAMEUSERS_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups.   LDAP_GROUP_SCHEMA_MEMBERUSERS_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members.   USERS_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database.   USERS_OWNCLOUDSQL_DB_PASSWORD string secret Password for the database user.   USERS_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server.   USERS_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection.   USERS_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database.   USERS_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider.   USERS_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided.   USERS_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames   USERS_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user IDs.   USERS_OWNCLOUDSQL_ENABLE_MEDIAL_SEARCH bool false Allow \u0026lsquo;medial search\u0026rsquo; when searching for users instead of just doing a prefix search. This allows finding \u0026lsquo;Alice\u0026rsquo; when searching for \u0026rsquo;lic\u0026rsquo;.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75  # Autogenerated# Filename: users-config-example."},{"id":129,"href":"/services/web/configuration/","title":"Service Configuration","parent":"Web","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69  # Autogenerated# Filename: web-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9104token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:9100tls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;root:/cache_ttl:604800asset:path:~/.ocis/web/assetsfile:\u0026#34;\u0026#34;web:path:\u0026#34;\u0026#34;theme_server:https://localhost:9200theme_path:/themes/owncloud/theme.jsonconfig:server:https://localhost:9200oidc:metadata_url:https://localhost:9200/.well-known/openid-configurationauthority:https://localhost:9200client_id:webresponse_type:codescope:openid profile emailapps:- files- search- text-editor- pdf-viewer- external- admin-settingsapplications:[]external_apps:- id:previewpath:web-app-previewconfig:mimeTypes:- image/tiff- image/bmp- image/x-ms-bmpoptions:previewFileMimeTypes:- image/gif- image/png- image/jpeg- text/plain- image/tiff- image/bmp- image/x-ms-bmptoken_manager:jwt_secret:\u0026#34;\u0026#34;gateway_addr:127.0.0.1:9142   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDWEB_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEWEB_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTWEB_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORWEB_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELWEB_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYWEB_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORWEB_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEWEB_LOG_FILE string  The path to the log file. Activates logging to this file if set.   WEB_DEBUG_ADDR string 127.0.0.1:9104 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   WEB_DEBUG_TOKEN string  Token to secure the metrics endpoint.   WEB_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   WEB_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   WEB_HTTP_ADDR string 127.0.0.1:9100 The bind address of the HTTP service.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   WEB_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   WEB_CACHE_TTL int 604800 Cache policy in seconds for ownCloud Web assets.   WEB_ASSET_PATH string ~/.ocis/web/assets Serve ownCloud Web assets from a path on the filesystem instead of the builtin assets.   WEB_UI_CONFIG string  Read the ownCloud Web configuration from this file.   WEB_UI_PATH string  Read the ownCloud Web configuration from this file path.   OCIS_URLWEB_UI_THEME_SERVER string https://localhost:9200 URL to load themes from. Will be prepended to the theme path.   WEB_UI_THEME_PATH string /themes/owncloud/theme.json URL path to load themes from. The theme server will be prepended.   OCIS_URLWEB_UI_CONFIG_SERVER string https://localhost:9200 URL, where the oCIS APIs are reachable for ownCloud Web.   WEB_OIDC_METADATA_URL string https://localhost:9200/.well-known/openid-configuration URL for the OIDC well-known configuration endpoint. Defaults to the oCIS API URL + \u0026ldquo;/.well-known/openid-configuration\u0026rdquo;.   OCIS_URLOCIS_OIDC_ISSUERWEB_OIDC_AUTHORITY string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP.   WEB_OIDC_CLIENT_ID string web OIDC client ID, which ownCloud Web uses. This client needs to be set up in your IDP.   WEB_OIDC_RESPONSE_TYPE string code OIDC response type to use for authentication.   WEB_OIDC_SCOPE string openid profile email OIDC scopes to request during authentication to authorize access to user details. Defaults to \u0026lsquo;openid profile email\u0026rsquo;. Values are separated by blank. More example values but not limited to are \u0026lsquo;address\u0026rsquo; or \u0026lsquo;phone\u0026rsquo; etc.   OCIS_JWT_SECRETWEB_JWT_SECRET string  The secret to mint and validate jwt tokens.   WEB_GATEWAY_GRPC_ADDR string 127.0.0.1:9142 The bind address of the GRPC service.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69  # Autogenerated# Filename: web-config-example."},{"id":130,"href":"/services/webdav/configuration/","title":"Service Configuration","parent":"WebDAV","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  # Autogenerated# Filename: webdav-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9119token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc_client_tls:nullhttp:addr:127.0.0.1:9115root:/cors:allow_origins:- \u0026#39;*\u0026#39;allow_methods:- GET- POST- PUT- PATCH- DELETE- OPTIONSallow_headers:- Authorization- Origin- Content-Type- Accept- X-Requested-Withallow_credentials:truetls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;ocis_public_url:https://127.0.0.1:9200webdav_namespace:/users/{{.Id.OpaqueId}}reva_gateway:127.0.0.1:9142reva_gateway_tls_mode:\u0026#34;\u0026#34;reva_gateway_tls_cacert:\u0026#34;\u0026#34;   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDWEBDAV_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEWEBDAV_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTWEBDAV_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORWEBDAV_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELWEBDAV_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYWEBDAV_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORWEBDAV_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEWEBDAV_LOG_FILE string  The path to the log file. Activates logging to this file if set.   WEBDAV_DEBUG_ADDR string 127.0.0.1:9119 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   WEBDAV_DEBUG_TOKEN string  Token to secure the metrics endpoint.   WEBDAV_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   WEBDAV_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   WEBDAV_HTTP_ADDR string 127.0.0.1:9115 The bind address of the HTTP service.   WEBDAV_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   OCIS_CORS_ALLOW_ORIGINSWEBDAV_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSWEBDAV_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSWEBDAV_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSWEBDAV_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   OCIS_URLOCIS_PUBLIC_URL string https://127.0.0.1:9200 URL, where oCIS is reachable for users.   WEBDAV_WEBDAV_NAMESPACE string /users/{{.Id.OpaqueId}} CS3 path layout to use when forwarding /webdav requests   REVA_GATEWAY string 127.0.0.1:9142 CS3 gateway used to look up user metadata   REVA_GATEWAY_TLS_MODE string  TLS mode for grpc connection to the CS3 gateway endpoint. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   REVA_GATEWAY_TLS_CACERT string  The root CA certificate used to validate the gateway\u0026rsquo;s TLS certificate.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  # Autogenerated# Filename: webdav-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:9119token:\u0026#34;\u0026#34;pprof:falsezpages:falsegrpc_client_tls:nullhttp:addr:127.0.0.1:9115root:/cors:allow_origins:- \u0026#39;*\u0026#39;allow_methods:- GET- POST- PUT- PATCH- DELETE- OPTIONSallow_headers:- Authorization- Origin- Content-Type- Accept- X-Requested-Withallow_credentials:truetls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;ocis_public_url:https://127."},{"id":131,"href":"/services/webfinger/configuration/","title":"Service Configuration","parent":"Webfinger","content":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  # Autogenerated# Filename: webfinger-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:0token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:0root:/cors:allow_origins:- \u0026#39;*\u0026#39;allow_methods:[]allow_headers:[]allow_credentials:falsetls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;instances:- claim:subregex:.+href:\u0026#39;{{.OCIS_URL}}\u0026#39;titles:en:oCIS Instancebreak:falserelations:- http://openid.net/specs/connect/1.0/issuer- http://webfinger.owncloud/rel/server-instanceidp:\u0026#34;\u0026#34;ocis_url:https://localhost:9200   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDWEBFINGER_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEWEBFINGER_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTWEBFINGER_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORWEBFINGER_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELWEBFINGER_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYWEBFINGER_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORWEBFINGER_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEWEBFINGER_LOG_FILE string  The path to the log file. Activates logging to this file if set.   WEBFINGER_DEBUG_ADDR string 127.0.0.1:0 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   WEBFINGER_DEBUG_TOKEN string  Token to secure the metrics endpoint.   WEBFINGER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   WEBFINGER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   WEBFINGER_HTTP_ADDR string 127.0.0.1:0 The bind address of the HTTP service.   WEBFINGER_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   OCIS_CORS_ALLOW_ORIGINSWEBFINGER_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSWEBFINGER_CORS_ALLOW_METHODS []string [] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSWEBFINGER_CORS_ALLOW_HEADERS []string [] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSWEBFINGER_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   WEBFINGER_RELATIONS []string [http://openid.net/specs/connect/1.0/issuer http://webfinger.owncloud/rel/server-instance] A comma-separated list of relation URIs or registered relation types to add to webfinger responses.   OCIS_URLOCIS_OIDC_ISSUERWEBFINGER_OIDC_ISSUER string  The identity provider href for the openid-discovery relation.   OCIS_URLWEBFINGER_OWNCLOUD_SERVER_INSTANCE_URL string https://localhost:9200 The URL for the legacy ownCloud server instance relation (not to be confused with the product ownCloud Server). It defaults to the OCIS_URL but can be overridden to support some reverse proxy corner cases. To shard the deployment, multiple instances can be configured in the configuration file.     ","description":"Example YAML Config     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  # Autogenerated# Filename: webfinger-config-example.yamltracing:enabled:falsetype:\u0026#34;\u0026#34;endpoint:\u0026#34;\u0026#34;collector:\u0026#34;\u0026#34;log:level:\u0026#34;\u0026#34;pretty:falsecolor:falsefile:\u0026#34;\u0026#34;debug:addr:127.0.0.1:0token:\u0026#34;\u0026#34;pprof:falsezpages:falsehttp:addr:127.0.0.1:0root:/cors:allow_origins:- \u0026#39;*\u0026#39;allow_methods:[]allow_headers:[]allow_credentials:falsetls:enabled:falsecert:\u0026#34;\u0026#34;key:\u0026#34;\u0026#34;instances:- claim:subregex:.+href:\u0026#39;{{.OCIS_URL}}\u0026#39;titles:en:oCIS Instancebreak:falserelations:- http://openid.net/specs/connect/1.0/issuer- http://webfinger.owncloud/rel/server-instanceidp:\u0026#34;\u0026#34;ocis_url:https://localhost:9200   Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDWEBFINGER_TRACING_ENABLED bool false Activates tracing."},{"id":132,"href":"/services/settings/","title":"Settings","parent":"Services","content":"Abstract     When using oCIS, the requirement to store settings arises. This extension provides functionality for other extensions to register new settings within oCIS. It is responsible for storing the respective settings values as well.\n graph TD ows ---|\"listSettingsBundles(),\nsaveSettingsValue(value)\"| os[ocis-settings] owc ---|\"listSettingsValues()\"| sdk[oC SDK] sdk --- sdks{ocis-settings\navailable?} sdks ---|\"yes\"| os sdks ---|\"no\"| defaults[Use set of\ndefault values] oa[oCIS services\ne.g. ocis-accounts] ---|\"saveSettingsBundle(bundle)\"| os  The diagram shows how the settings service integrates into oCIS:\nSettings management:\n oCIS services can register settings bundles with the ocis-settings service.  Settings usage:\n Extensions can query ocis-settings for settings values of a user.  Table of Contents        Service Configuration      Settings Bundles      Settings Values      Releasing      Glossary      ","description":"Abstract     When using oCIS, the requirement to store settings arises. This extension provides functionality for other extensions to register new settings within oCIS. It is responsible for storing the respective settings values as well.\n graph TD ows ---|\"listSettingsBundles(),\nsaveSettingsValue(value)\"| os[ocis-settings] owc ---|\"listSettingsValues()\"| sdk[oC SDK] sdk --- sdks{ocis-settings\navailable?} sdks ---|\"yes\"| os sdks ---|\"no\"| defaults[Use set of\ndefault values] oa[oCIS services\ne.g. ocis-accounts] ---|\"saveSettingsBundle(bundle)\"| os  The diagram shows how the settings service integrates into oCIS:"},{"id":133,"href":"/services/sharing/","title":"Sharing","parent":"Services","content":"Abstract     This service implements the CS3 LinkAPI to manage public links as well as the CollaborationAPI to manage user and group shares.\nTable of Contents        Service Configuration      ","description":"Abstract     This service implements the CS3 LinkAPI to manage public links as well as the CollaborationAPI to manage user and group shares.\nTable of Contents        Service Configuration      "},{"id":134,"href":"/ocis/storage/","title":"Storage","parent":"oCIS - ownCloud Infinite Scale","content":"Overview     OCIS wraps reva and adds an opinionated configuration to provide two core services for the oCIS platform:\n A Spaces Registry that acts as a dictionary for storage Spaces and their metadata A Spaces Provider that organizes Resources in storage Spaces and persists them in an underlying Storage System  Clients will use the Spaces Registry to poll or get notified about changes in all Spaces a user has access to. Every Space has a dedicated /dav/spaces/\u0026lt;spaceid\u0026gt; WebDAV endpoint that is served by a Spaces Provider which uses a specific reva storage driver to wrap an underlying Storage System.\n The dashed lines in the diagram indicate requests that are made to authenticate requests or lookup the storage provider:\n After authenticating a request, the proxy may either use the CS3 userprovider or the accounts service to fetch the user information that will be minted into the x-access-token. The gateway will verify the JWT signature of the x-access-token or try to authenticate the request itself, e.g. using a public link token.   The bottom part is lighter because we will deprecate it in favor of using only the CS3 user and group providers after moving some account functionality into reva and glauth. The metadata storage is not registered in the reva gateway to separate metadata necessary for running the service from data that is being served directly.  Endpoints and references     In order to reason about the request flow, two aspects in the architecture need to be understood well:\n What kind of namespaces are presented at the different WebDAV and CS3 endpoints? What kind of resource references are exposed or required: path or id based?    ","description":"Overview     OCIS wraps reva and adds an opinionated configuration to provide two core services for the oCIS platform:\n A Spaces Registry that acts as a dictionary for storage Spaces and their metadata A Spaces Provider that organizes Resources in storage Spaces and persists them in an underlying Storage System  Clients will use the Spaces Registry to poll or get notified about changes in all Spaces a user has access to."},{"id":135,"href":"/services/store/","title":"Store","parent":"Services","content":"Abstract     This service provides \u0026hellip;\nTable of Contents        Service Configuration      ","description":"Abstract     This service provides \u0026hellip;\nTable of Contents        Service Configuration      "},{"id":136,"href":"/services/thumbnails/","title":"Thumbnails","parent":"Services","content":"Abstract     The thumbnail service generates thumbnails for image files.\nTable of Contents        Service Configuration      ","description":"Abstract     The thumbnail service generates thumbnails for image files.\nTable of Contents        Service Configuration      "},{"id":137,"href":"/services/userlog/","title":"Userlog","parent":"Services","content":"Abstract     The userlog service is a mediator between the eventhistory service and clients who want to be informed about user related events. It provides an API to retrieve those.\nTable of Contents        Service Configuration      Prerequisites     Running the userlog service without running the eventhistory service is not possible.\nStoring     The userlog service persists information via the configured store in USERLOG_STORE_TYPE. Possible stores are:\n mem: Basic in-memory store and the default. ocmem: Advanced in-memory store allowing max size. redis: Stores data in a configured redis cluster. etcd: Stores data in a configured etcd cluster. nats-js: Stores data using key-value-store feature of nats jetstream noop: Stores nothing. Useful for testing. Not recommended in productive enviroments.   Note that in-memory stores are by nature not reboot persistent. Though usually not necessary, a database name and a database table can be configured for event stores if the event store supports this. Generally not applicapable for stores of type in-memory. These settings are blank by default which means that the standard settings of the configured store applies. The userlog service can be scaled if not using in-memory stores and the stores are configured identically over all instances.  Configuring     For the time being, the configuration which user related events are of interest is hardcoded and cannot be changed.\nRetrieving     The userlog service provides an API to retrieve configured events. For now, this API is mostly following the oc10 notification GET API.\nDeleting     To delete events for an user, use a DELETE request to ocs/v2.php/apps/notifications/api/v1/notifications containing the IDs to delete.\nTranslations     The userlog service has embedded translations sourced via transifex to provide a basic set of translated languages. These embedded translations are available for all deployment scenarios. In addition, the service supports custom translations, though it is currently not possible to just add custom translations to embedded ones. If custom translations are configured, the embedded ones are not used. To configure custom translations, the USERLOG_TRANSLATION_PATH environment variable needs to point to a base folder that will contain the translation files. This path must be available from all instances of the userlog service, a shared storage is recommended. Translation files must be of type .po or .mo. For each language, the filename needs to be userlog.po (or userlog.mo) and stored in a folder structure defining the language code. In general the path/name pattern for a translation file needs to be:\n{USERLOG_TRANSLATION_PATH}/{language-code}/LC_MESSAGES/userlog.po The language code pattern is composed of language[_territory] where language is the base language and _territory is optional and defines a country.\nFor example, for the language de_DE, one needs to place the corresponding translation files to {USERLOG_TRANSLATION_PATH}/de_DE/LC_MESSAGES/userlog.po.\nTranslation Rules      If a requested language code is not available, the service tries to fall back to the base language if available. For example, if de_DE is not available, the service tries to fall back to translations in the de folder. If the base language de is also not available, the service falls back to the system\u0026rsquo;s default English (en), which is the source of the texts provided by the code.  ","description":"Abstract     The userlog service is a mediator between the eventhistory service and clients who want to be informed about user related events. It provides an API to retrieve those.\nTable of Contents        Service Configuration      Prerequisites     Running the userlog service without running the eventhistory service is not possible.\nStoring     The userlog service persists information via the configured store in USERLOG_STORE_TYPE."},{"id":138,"href":"/services/web/","title":"Web","parent":"Services","content":"Abstract     The web service embeds ownCloud Web to provide a UI for ownCloud Infinite Scale.\nTable of Contents        Service Configuration      Releasing      ","description":"Abstract     The web service embeds ownCloud Web to provide a UI for ownCloud Infinite Scale.\nTable of Contents        Service Configuration      Releasing      "},{"id":139,"href":"/services/webdav/","title":"WebDAV","parent":"Services","content":"Abstract     This service provides preview (thumbnails) endpoints on the WebDAV API and therefore extends the main WebDAV API provided by the [oCDAV service]({{ ../../ocdav }}).\nTable of Contents        Service Configuration      ","description":"Abstract     This service provides preview (thumbnails) endpoints on the WebDAV API and therefore extends the main WebDAV API provided by the [oCDAV service]({{ ../../ocdav }}).\nTable of Contents        Service Configuration      "},{"id":140,"href":"/services/idm/configuration_hints/","title":"Configuration Hints","parent":"IDM","content":"TLS Server Certificates     By default IDM generates a self-signed certificate and key on first startup to be able to provide TLS protected services. The certificate is stored in idm/ldap.crt inside the oCIS base data directory. The key is in idm/ldap.key in the same directory. You can use a custom server certificate by setting the IDM_LDAPS_CERT and IDM_LDAPS_KEY.\nDefault / Demo Users     On startup IDM creates a set of default services users that are needed internally to provide access to IDM to other oCIS services. These users are stored in a separate subtree. The base DN of that subtree is: ou=sysusers,o=libregraph-idm. The service users are:\n uid=libregraph,ou=sysusers,o=libregraph-idm: This is the only user with write access to the LDAP tree. It is used by the Graph service to look up, create, delete and modify users and groups. uid=idp,ou=sysusers,o=libregraph-idm: This user is used by the IDP service to perform user lookups for authentication. uid=reva,ou=sysusers,o=libregraph-idm: This user is used by the \u0026ldquo;reva\u0026rdquo; services user, group and auth-basic.  IDM is also able to create Demo Users upon startup.\nAccess via LDAP command line tools     For testing purposes it is sometimes helpful to query IDM using the ldap command line clients. To e.g. list all users, this command can be used:\nldapsearch -x -H ldaps://127.0.0.1:9235 -x -D uid=libregraph,ou=sysusers,o=libregraph-idm -w idm -b o=libregraph-idm objectclass=inetorgperson When using the default configuration with the self-signed server certificate, you might need to switch off the certificate validation using the LDAPTL_REQCERT env variable:\nLDAPTLS_REQCERT=never ldapsearch -x -H ldaps://127.0.0.1:9235 -x -D uid=libregraph,ou=sysusers,o=libregraph-idm -w idm -b o=libregraph-idm objectclass=inetorgperson ","description":"TLS Server Certificates     By default IDM generates a self-signed certificate and key on first startup to be able to provide TLS protected services. The certificate is stored in idm/ldap.crt inside the oCIS base data directory. The key is in idm/ldap.key in the same directory. You can use a custom server certificate by setting the IDM_LDAPS_CERT and IDM_LDAPS_KEY.\nDefault / Demo Users     On startup IDM creates a set of default services users that are needed internally to provide access to IDM to other oCIS services."},{"id":141,"href":"/apis/http/graph/spaces/","title":"Spaces","parent":"LibreGraph","content":"   Spaces API  Example Space   Creating Spaces  Create a single space POST /drives   Reading Spaces  List all spaces GET /drives List My Spaces GET /me/drives List my spaces with filters GET /me/drives/$filter=\u0026lt;attribute\u0026gt; \u0026lt;comparison operator\u0026gt; \u0026lt;value\u0026gt;  Example filters   List my spaces with ordering GET /me/drives/$orderby=\u0026lt;key\u0026gt; \u0026lt;order\u0026gt;  Ordering examples     Modifying Spaces  Set the space quota to 5GB PATCH /drives/{drive-id} Change the space name, subtitle and alias PATCH /drives/{drive-id}   Disabling / Deleting Spaces  Disable a space DELETE /drives/{drive-id} Restore a space PATCH /drives/{drive-id} Permanently delete a space DELETE /drives/{drive-id}        Spaces API     The Spaces API is implementing a subset of the functionality of the MS Graph Drives resource.\nExample Space     The JSON representation of a Drive, as handled by the Spaces API, looks like this:\n{ \u0026#34;driveAlias\u0026#34;: \u0026#34;project/mars\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-24T21:19:26.417055+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Mars\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;89ad5ad2-5fdb-4877-b8c9-601a9670b925\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 999853685, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 1000000000, \u0026#34;used\u0026#34;: 146315 }, \u0026#34;root\u0026#34;: { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;910af0061161c42d8d1224df6c4a2527\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925\u0026#34;, \u0026#34;permissions\u0026#34;: [ { \u0026#34;grantedToIdentities\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;: [ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925\u0026#34; }, \u0026#34;special\u0026#34;: [ { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;f97829324f63ce778095334cfeb0097b\\\u0026#34;\u0026#34;, \u0026#34;file\u0026#34;: { \u0026#34;mimeType\u0026#34;: \u0026#34;image/jpeg\u0026#34; }, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925!40171bea-3263-47a8-80ef-0ca20c37f45a\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2022-02-15T17:11:50.000000496+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Mars_iStock-MR1805_20161221.jpeg\u0026#34;, \u0026#34;size\u0026#34;: 146250, \u0026#34;specialFolder\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;image\u0026#34; }, \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925%2189ad5ad2-5fdb-4877-b8c9-601a9670b925/.space/Mars_iStock-MR1805_20161221.jpeg\u0026#34; }, { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;ff38b31d8f109a4fbb98ab34499a3379\\\u0026#34;\u0026#34;, \u0026#34;file\u0026#34;: { \u0026#34;mimeType\u0026#34;: \u0026#34;text/markdown\u0026#34; }, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925!e2167612-7578-46e2-8ed7-971481037bc1\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-24T21:10:23.661841+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;readme.md\u0026#34;, \u0026#34;size\u0026#34;: 65, \u0026#34;specialFolder\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;readme\u0026#34; }, \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925%2189ad5ad2-5fdb-4877-b8c9-601a9670b925/.space/readme.md\u0026#34; } ], \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$89ad5ad2-5fdb-4877-b8c9-601a9670b925\u0026#34; } Creating Spaces     Create a single space POST /drives     Create a new space with properties.\nRequest  curl -L -X POST \u0026#39;https://localhost:9200/graph/v1.0/drives/\u0026#39; \\ -H \u0026#39;Content-Type: application/json\u0026#39; \\ --data-raw \u0026#39;{ \u0026#34;Name\u0026#34;: \u0026#34;Marketing\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Marketing team resources\u0026#34;, \u0026#34;quota\u0026#34;: { \u0026#34;total\u0026#34;: 5368709120 } }\u0026#39;   Response - 201 Created  { \u0026#34;description\u0026#34;:\u0026#34;Marketing team resources\u0026#34;, \u0026#34;driveAlias\u0026#34;:\u0026#34;project/marketing\u0026#34;, \u0026#34;driveType\u0026#34;:\u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;:\u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;:\u0026#34;2023-01-18T17:13:48.385204589+01:00\u0026#34;, \u0026#34;name\u0026#34;:\u0026#34;Marketing\u0026#34;, \u0026#34;owner\u0026#34;:{ \u0026#34;user\u0026#34;:{ \u0026#34;displayName\u0026#34;:\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;:\u0026#34;535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } }, \u0026#34;quota\u0026#34;:{ \u0026#34;total\u0026#34;:5368709120 }, \u0026#34;root\u0026#34;:{ \u0026#34;eTag\u0026#34;:\u0026#34;\\\u0026#34;f91e56554fd9305db81a93778c0fae96\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;:\u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;permissions\u0026#34;:[ { \u0026#34;grantedToIdentities\u0026#34;:[ { \u0026#34;user\u0026#34;:{ \u0026#34;displayName\u0026#34;:\u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;:\u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;:[ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;:\u0026#34;https://localhost:9200/dav/spaces/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }, \u0026#34;webUrl\u0026#34;:\u0026#34;https://localhost:9200/f/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }    Reading Spaces     GET https://ocis.url/graph/{version}/{me/}drives/?{query-parameters}    Component Description     {version} The version of the LibreGraph API used by the client.   {/me} The me component of the part is optional. If used, you only see spaces where the acting user is a regular member of.   {query-parameters} Optional parameters for the request to customize the response.    List all spaces GET /drives     Returns a list of all available spaces, even ones where the acting user is not a regular member of. You need elevated permissions to do list all spaces. If you don\u0026rsquo;t have the elevated permissions, the result is the same like GET /me/drives.\n The ownCloud spaces concept draws a strict line between users which can work with the content of a space and others who have the permission to manage the space. A user which is able to manage quota and space metadata does not necessarily need to be able to access the content of a space.\nSpace Admin\nThere is a global user role \u0026ldquo;Space Admin\u0026rdquo; which grants users some global permissions to manage space quota and some space metadata. This Role enables the user also to disable, restore and delete spaces. He cannot manage space members.\nSpace Manager\nThe \u0026ldquo;Space Manager\u0026rdquo; is a user which is a regular member of a space because he has been invited. In addition to being part of a space the user can also manage the memberships of the space.\n  List My Spaces GET /me/drives     Returns a list of all spaces where the user is a regular member of.\nRequest  curl -L -k -X GET 'https://localhost:9200/graph/v1.0/me/drives/'  Response - 200 OK  { \u0026#34;value\u0026#34;: [ { \u0026#34;driveAlias\u0026#34;: \u0026#34;personal/admin\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;personal\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$some-admin-user-id-0000-000000000000\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-17T21:37:17.692033183+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 4497686528, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 0, \u0026#34;used\u0026#34;: 0 }, \u0026#34;root\u0026#34;: { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;4b65d2cbce79b2ecc45f876cc6e460d8\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$some-admin-user-id-0000-000000000000\u0026#34;, \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$some-admin-user-id-0000-000000000000\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$some-admin-user-id-0000-000000000000\u0026#34; }, { \u0026#34;driveAlias\u0026#34;: \u0026#34;virtual/shares\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;virtual\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;a0ca6a90-a365-4782-871e-d44447bbc668$a0ca6a90-a365-4782-871e-d44447bbc668\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Shares\u0026#34;, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 0, \u0026#34;state\u0026#34;: \u0026#34;exceeded\u0026#34;, \u0026#34;total\u0026#34;: 0, \u0026#34;used\u0026#34;: 0 }, \u0026#34;root\u0026#34;: { \u0026#34;eTag\u0026#34;: \u0026#34;DECAFC00FEE\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;a0ca6a90-a365-4782-871e-d44447bbc668$a0ca6a90-a365-4782-871e-d44447bbc668\u0026#34;, \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/a0ca6a90-a365-4782-871e-d44447bbc668$a0ca6a90-a365-4782-871e-d44447bbc668\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/a0ca6a90-a365-4782-871e-d44447bbc668$a0ca6a90-a365-4782-871e-d44447bbc668\u0026#34; } ] }    List my spaces with filters GET /me/drives/$filter=\u0026lt;attribute\u0026gt; \u0026lt;comparison operator\u0026gt; \u0026lt;value\u0026gt;     Returns a list of all project spaces where the user is a regular member of. The filter query parameter supports the eq(equals) comparison operator. Possible filter attributes are:\n   Attribute Description     driveType The space type. Values could be project, personal, virtual, mountpoint   id The space id. The value needs to be a space ID    Example filters     Filter by space type project  curl -L -k -X GET 'https://localhost:9200/graph/v1.0/me/drives/$filter=driveType eq project'\nThis returns a list of spaces of type project.\n Filter by space type mountpoint  curl -L -k -X GET 'https://localhost:9200/graph/v1.0/me/drives/$filter=driveType eq mountpoint'\nThis returns a list of spaces of type mountpoint.\n Filter by space id  curl -L -k -X GET 'https://localhost:9200/graph/v1.0/me/drives/$filter=id eq some-space-id'\nThis returns one space with the id from the filter if it exists.\n  List my spaces with ordering GET /me/drives/$orderby=\u0026lt;key\u0026gt; \u0026lt;order\u0026gt;     Returns a list of all spaces ordered by the specified key. Possible order keys are\n   key Description     name The space name   lastModifiedDateTime The last modified date and time of the space    Both sort orders are supported, asc (ascending) and desc (descending).\nOrdering examples     Sort by name  curl -L -k -X GET 'https://localhost:9200/graph/v1.0/me/drives/$orderby=name asc'\nThis returns a list of spaces ordered by name ascending.\n Sort by date  curl -L -k -X GET 'https://localhost:9200/graph/v1.0/me/drives/$orderby=lastModifiedDateTime desc'\nThis returns a list of spaces ordered by the last modified date starting with the latest one.\n  Modifying Spaces     Modify the properties of a space. You need elevated permissions to execute this request.\nSet the space quota to 5GB PATCH /drives/{drive-id}     To limit the quota of a space you need to set the quota.total value. The API response will give back all actual quota properties.\n{ \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 5368709120, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 5368709120, \u0026#34;used\u0026#34;: 0 } }    Attribute Description     remaining The remaining disk space in bytes. If the quota is not limited, this will show the total available disk space.   state The state of the space in regards to quota usage. This can be used for visual indicators. It can be normal(\u0026lt;75%), nearing(between 75% and 89%), critical(between 90% and 99%) and exceeded(100%).   total The space id. The value needs to be a space ID.   used The used disk space in bytes.    Request  curl -L -k -X PATCH \u0026#39;https://localhost:9200/graph/v1.0/drives/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#39; \\ -H \u0026#39;Content-Type: application/json\u0026#39; \\ --data-raw \u0026#39;{ \u0026#34;quota\u0026#34;: { \u0026#34;total\u0026#34;: 5368709120 } }\u0026#39;   Response - 200 OK  { \u0026#34;description\u0026#34;: \u0026#34;Marketing team resources\u0026#34;, \u0026#34;driveAlias\u0026#34;: \u0026#34;project/marketing\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-18T17:13:48.385204589+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Marketing\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 5368709120, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 5368709120, \u0026#34;used\u0026#34;: 0 }, \u0026#34;root\u0026#34;: { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;f91e56554fd9305db81a93778c0fae96\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;permissions\u0026#34;: [ { \u0026#34;grantedToIdentities\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;: [ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }    Change the space name, subtitle and alias PATCH /drives/{drive-id}     You can change multiple space properties in one request as long as you submit a valid JSON body. Please be aware that some properties need different permissions.\nRequest  curl -L -k -X PATCH \u0026#39;https://localhost:9200/graph/v1.0/drives/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#39; \\ -H \u0026#39;Content-Type: application/json\u0026#39; \\ --data-raw \u0026#39;{ \u0026#34;name\u0026#34;: \u0026#34;Mars\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Mission to mars\u0026#34;, \u0026#34;driveAlias\u0026#34;: \u0026#34;project/mission-to-mars\u0026#34; }\u0026#39;   Response - 200 OK  { \u0026#34;description\u0026#34;: \u0026#34;Mission to mars\u0026#34;, \u0026#34;driveAlias\u0026#34;: \u0026#34;project/mission-to-mars\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-19T14:17:36.094283+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Mars\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 15, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 15, \u0026#34;used\u0026#34;: 0 }, \u0026#34;root\u0026#34;: { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;f5fee4fdfeedd6f98956500779eee15e\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;permissions\u0026#34;: [ { \u0026#34;grantedToIdentities\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;: [ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }    Disabling / Deleting Spaces     Disable a space DELETE /drives/{drive-id}     This operation will make the space content unavailable for all space members. No data will be deleted.\nRequest  curl -L -k -X DELETE \u0026#39;https://localhost:9200/graph/v1.0/drives/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff/\u0026#39;   Response - 204 No Content  This response has no body value.\nA disabled space will appear in listings with a root.deleted.state=trashed property. The space description and the space image will not be readable anymore.\n{ \u0026#34;description\u0026#34;: \u0026#34;Marketing team resources\u0026#34;, \u0026#34;driveAlias\u0026#34;: \u0026#34;project/marketing\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-19T14:17:36.094283+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Marketing\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;total\u0026#34;: 15 }, \u0026#34;root\u0026#34;: { \u0026#34;deleted\u0026#34;: { \u0026#34;state\u0026#34;: \u0026#34;trashed\u0026#34; }, \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;f5fee4fdfeedd6f98956500779eee15e\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;permissions\u0026#34;: [ { \u0026#34;grantedToIdentities\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;: [ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }    Restore a space PATCH /drives/{drive-id}     This operation will make the space content available again to all members. No content will be changed.\nTo restore a space, the Header Restore: T needs to be set. Request  curl -L -X PATCH \u0026#39;https://localhost:9200/graph/v1.0/drives/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff/\u0026#39; \\ -H \u0026#39;Restore: T\u0026#39; \\ -H \u0026#39;Content-Type: text/plain\u0026#39; \\ --data-raw \u0026#39;{}\u0026#39;  This request needs an empty body (\u0026ndash;data-raw \u0026lsquo;{}\u0026rsquo;) to fulfil the standard libregraph specificiation even when the body is not needed.   Response - 200 OK  { \u0026#34;description\u0026#34;: \u0026#34;Marketing team resources\u0026#34;, \u0026#34;driveAlias\u0026#34;: \u0026#34;project/marketing\u0026#34;, \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2023-01-19T14:17:36.094283+01:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Marketing\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 15, \u0026#34;state\u0026#34;: \u0026#34;normal\u0026#34;, \u0026#34;total\u0026#34;: 15, \u0026#34;used\u0026#34;: 0 }, \u0026#34;root\u0026#34;: { \u0026#34;eTag\u0026#34;: \u0026#34;\\\u0026#34;f5fee4fdfeedd6f98956500779eee15e\\\u0026#34;\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34;, \u0026#34;permissions\u0026#34;: [ { \u0026#34;grantedToIdentities\u0026#34;: [ { \u0026#34;user\u0026#34;: { \u0026#34;displayName\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;some-admin-user-id-0000-000000000000\u0026#34; } } ], \u0026#34;roles\u0026#34;: [ \u0026#34;manager\u0026#34; ] } ], \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }, \u0026#34;webUrl\u0026#34;: \u0026#34;https://localhost:9200/f/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#34; }    Permanently delete a space DELETE /drives/{drive-id}     This operation will delete a space and all its data permanently. This is restricted to spaces which are already disabled.\nTo delete a space, the Header Purge: T needs to be set.\nRequest  curl -L -X DELETE \u0026#39;https://localhost:9200/graph/v1.0/drives/storage-users-1$535aa42d-a3c7-4329-9eba-5ef48fcaa3ff\u0026#39; \\ -H \u0026#39;Purge: T\u0026#39;  This request will delete a space and all its content permanently. This operation cannot be reverted.   Response - 204 No Content  This response has no body value.  Response - 400 Bad Request  The space to be deleted was not disabled before.\n{ \u0026#34;error\u0026#34;: { \u0026#34;code\u0026#34;: \u0026#34;invalidRequest\u0026#34;, \u0026#34;innererror\u0026#34;: { \u0026#34;date\u0026#34;: \u0026#34;2023-01-24T19:57:19Z\u0026#34;, \u0026#34;request-id\u0026#34;: \u0026#34;f62af40f-bc18-475e-acd7-e9008d6bd326\u0026#34; }, \u0026#34;message\u0026#34;: \u0026#34;error: bad request: can\u0026#39;t purge enabled space\u0026#34; } }    ","description":"Spaces API  Example Space   Creating Spaces  Create a single space POST /drives   Reading Spaces  List all spaces GET /drives List My Spaces GET /me/drives List my spaces with filters GET /me/drives/$filter=\u0026lt;attribute\u0026gt; \u0026lt;comparison operator\u0026gt; \u0026lt;value\u0026gt;  Example filters   List my spaces with ordering GET /me/drives/$orderby=\u0026lt;key\u0026gt; \u0026lt;order\u0026gt;  Ordering examples     Modifying Spaces  Set the space quota to 5GB PATCH /drives/{drive-id} Change the space name, subtitle and alias PATCH /drives/{drive-id}   Disabling / Deleting Spaces  Disable a space DELETE /drives/{drive-id} Restore a space PATCH /drives/{drive-id} Permanently delete a space DELETE /drives/{drive-id}        Spaces API     The Spaces API is implementing a subset of the functionality of the MS Graph Drives resource."},{"id":142,"href":"/services/idp/theming/","title":"Theming","parent":"IDP","content":"   Intro Customizing assets  Static assets CSS Containers  What pages to theme   Components Images Locales   Building assets      Intro     Our default IDP UI is built with the LibreGraph Connect React app. Even though this app comes already with a simple theming options, we have compiled our own edited version of the app with more advanced changes than the default theming offers. Because of that, it is not possible at the moment to do any kind of easy theming and including custom theme means again compiling custom assets.\nCustomizing assets     Depending on what changes you wish to do with the theme, there are several files you can edit. All of them are located in the idp/ui folder.\nStatic assets     If you wish to add static assets like images, CSS, etc., you can add them to idp/ui/public/static. The public folder also contains the index.html file which can be adjusted to your needs.\nCSS     LibreGraph Connect is built with kpop, a collection of React UI components. To include any custom styles on top of that collection, you can define them in the idp/ui/src/app.css file. These rules will take precedence over the kpop.\nContainers     Layouts of all pages are located in the idp/ui/src/containers folder. By editing any of files in that folder, you can do any kind of changes in the layout and create advanced themes. It is, however, important to be careful when touching this code as it imports also actions which are responsible for the login flow.\nWhat pages to theme      Login  Login - login form used to authenticate the users Consent - consent page used to authorise apps for already signed-in users Chooseaccount - page with a list of accounts to choose from   Goodbye  Goodbyescreen - goodbye message displayed to users after they signed out   Welcome  Welcomescreen - welcome message displayed to users after they signed in    Components     idp/ui/src/components folder contains all custom components which are then imported into containers.\nImages     Every image placed in idp/ui/src/images can be directly import into components or containers and will be optimized when compiling assets.\nLocales     If you need to edit or add new locales, you can do so with json files in the idp/ui/src/locales folder. If adding new locale, make sure to add it also in the index.js file in the same folder.\nBuilding assets     In order to build all assets, run pnpm build in the idp folder. This script will compile all assets and output them into idp/assets folder.\nAt this point, you have two possible ways how to deploy your new theme:\n run make generate in the root folder of your oCIS clone and generate the new assets start the IDP service directly with custom assets by specifying the env var IDP_ASSET_PATH  ","description":"Intro Customizing assets  Static assets CSS Containers  What pages to theme   Components Images Locales   Building assets      Intro     Our default IDP UI is built with the LibreGraph Connect React app. Even though this app comes already with a simple theming options, we have compiled our own edited version of the app with more advanced changes than the default theming offers."},{"id":143,"href":"/ocis/adr/0021-service-accounts/","title":"21. Service accounts","parent":"Architecture Decisions","content":" Status: proposed Deciders: @butonic, @C0rby Date: 2023-01-18  Context and Problem Statement     There are three levels of security checks in a microservice web application that uses OpenID Connect:\n scope claims limit the possible operations to what the user (or admin on behalf of the organization) consented to service authorization limit the possible operations to what specific services are allowed to do, on behalf of users or even without them permission checks limit the possible operations to the relationships between subject, permission and resource allow  This ADR deals with a prerequisite for service authorization: service accounts.\nSome services need access to file content without a user being logged in. We currently pass the owner or manager of a space in events which allows the search service to impersonate that user to extract metadata from the changed resource. There are two problems with this:\n The service could get all permissions of the user and gain write permission There is a race condition where the user in the event might no longer have read permission, causing the index to go stale  The race condition will become more of an issue when we start working on a workflow engine.\nHow can we grant services the least amount of permissions required for their purpose?\nDecision Drivers      It should be possible to represent this as servicePrincipals in the libregraph API, similar to the MS Graph servicePrincipal. Services should check permissions using the oCIS permissions or reva auth service, we don\u0026rsquo;t want to introduce a new mechanism for this  Considered Options      Service Accounts Impersonate Space-Owners  Decision Outcome     Chosen option: Service Accounts\nConsequences      Good, because it allows provisioning permissions for services Good, because it uses existing CS3 concepts Good, because it uses the existing permissions service Good, because it can be mapped to libre graph permissions Bad, because we have to make the reva auth manager aware of CS3 USER_TYPE_SERVICE Bad, because we have to provision and manage service accounts on init Bad, because external APIs may need to filter out service accounts Bad, because we need to persist service accounts in addition to normal user accounts  Pros and Cons of the Options     Service Accounts     Make the reva auth manager and registry aware of CS3 users of type USER_TYPE_SERVICE. Then we can provision service accounts at oCIS initialization and use the permissions service to check permissions. When assigning permissions we use the permission constraints to define the scope of permissions, see Permission Checks for more details.\nTo authenticate service accounts the static reva auth registry needs to be configured with a new auth provider for type service. The actual provider can use a plain JSON file or JSONCS3 that is provisioned once with ocis init. TODO Furthermore, the user provider needs to be able to return users for service accounts.\n Good, because we could replace machine auth with specific service accounts and no longer have to distribute a shared secret everywhere Bad, because we don\u0026rsquo;t know if a there are places in the code that try to look up a user with USER_TYPE_SERVICE at the cs3 users service \u0026hellip; they might not exist there \u0026hellip; or do we have to implement a userregistry, similar to the authregistry? Bad, because we have to provision and manage service accounts on init Bad, because we have to write code to manage service accounts or at least filter them out in the admin ui  Impersonate Space-Owners     We could implement a new auth manager that can authenticate space owners, a CS3 user type we introduced for project spaces which \u0026lsquo;have no owner\u0026rsquo;, only one or more managers.\n Good, because it reuses the space owner user type Bad, because the space owner always has write permisson Bad, because we don\u0026rsquo;t know if a there are places in the code that try to look up a user with USER_TYPE_SPACE_OWNER at the cs3 users service \u0026hellip; they might not exist there \u0026hellip; or do we have to implement a userregistry, similar to the authregistry? Bad, because it feels like another hack and does not protect against compromized services that try to execute operations that the user did not consent to.  Links      MS Graph servicePrincipal reva auth managers - lacks docs for auth_machine, to be found in the code  Permission checks     When checking permissions we do not check for global permissions but for the concrete permission. Global permissions describe permissions that are used when assigning permissions, e.g. the index service account has the read permission constrained to tenant. The concrete permission check always contains a resource and a specific permission like Resource.Read or Space.Delete. That we currently check if a user has the delete-all-spaces permission is wrong. It should instead check if the user has the permission Space.Delete on a specific space. The permissions service can implement the check by taking the permission constraint into account.\nAnother example would be a Resource.Read check for a specific resource. Normal users like the demo users Einstein and Marie would have the permission Resource.ReadWrite with the constraint ALL (which limits them to all files they own and that have been shared with them). The permissions service can return true. Service accounts like the indexer would have Resource.Read with the constraint TENANT and thus be granted read access to all resources.\nIn the storage drive implementation we can check the ACLs first (which would allow service accounts that are known to the underlying storage system, e.g. EOS to access the resource) and then make a call to the permissions service. At least for the Read Resource permission. Other permission checks can be introduced as needed.\nThe permission names and constraints are different from the MS Graph API. Giving permission like Files.ReadWrite.All a different meaning, depending on the type of user (for normal users it means all files they have access to, for service accounts it means all files in the organization) is a source of confusion which only gets worse when there are two different UUIDs for this.\n","description":"Status: proposed Deciders: @butonic, @C0rby Date: 2023-01-18  Context and Problem Statement     There are three levels of security checks in a microservice web application that uses OpenID Connect:\n scope claims limit the possible operations to what the user (or admin on behalf of the organization) consented to service authorization limit the possible operations to what specific services are allowed to do, on behalf of users or even without them permission checks limit the possible operations to the relationships between subject, permission and resource allow  This ADR deals with a prerequisite for service authorization: service accounts."},{"id":144,"href":"/ocis/deployment/ocis_hello/","title":"oCIS with Hello extension","parent":"Deployment","content":"   Overview Server Deployment  Requirements Install oCIS and Traefik   Local setup      Overview      oCIS running behind Traefik as reverse proxy oCIS Hello extension runs beside the main oCIS stack and providing the Hello functionality Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup  Find this example on GitHub\nThe docker stack consists of 3 containers. One of them is Traefik, a proxy which is terminating SSL and forwards the requests to oCIS in the internal docker network.\nThe next container is oCIS itself in a configuration like the oCIS with Traefik example, except that for this example a custom proxy and web UI configuration is used to enable the oCIS Hello extension.\nThe oCIS Hello extension is running in another container and enables you to use its functionality from within ownCloud Web.\nServer Deployment     Requirements      Linux server with docker and docker-compose installed two domains set up and pointing to your server  ocis.* for serving oCIS traefik.* for serving the Traefik dashboard    See also example server setup\nInstall oCIS and Traefik       Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\n  Go to the deployment example\ncd ocis/deployment/examples/ocis_hello\n  Open the .env file in a text editor.\nThe file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # Domain of oCIS, where you can find the frontend. Defaults to \u0026#34;ocis.owncloud.test\u0026#34; OCIS_DOMAIN= # oCIS admin user password. Defaults to \u0026#34;admin\u0026#34;. ADMIN_PASSWORD= # The demo users should not be created on a production instance # because their passwords are public. Defaults to \u0026#34;false\u0026#34;. DEMO_USERS= ### oCIS Hello settings ### # oCIS Hello version. Defaults to \u0026#34;latest\u0026#34; OCIS_HELLO_DOCKER_TAG= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default oCIS will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oCIS frontend in OCIS_DOMAIN=, e.g. OCIS_DOMAIN=ocis.owncloud.test.\nSet the initial admin user password in ADMIN_PASSWORD=, it defaults to admin.\nBy default the oCIS Hello extension will be started in the latest version. If you want to start a specific version of oCIS Hello set the version to OCIS_HELLO_DOCKER_TAG=. Available versions can be found on Docker Hub.\nNow you have configured everything and can save the file.\n  Start the docker stack\ndocker-compose up -d\n  You now can visit oCIS and are able to switch to the Hello extension by using the application switcher on the top right corner of ownCloud Web. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n  Local setup     For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 ocis.owncloud.test 127.0.0.1 traefik.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nOpen https://ocis.owncloud.test in your browser and accept the invalid certificate warning. You are now able to switch to the Hello extension by using the application switcher on the top right corner of ownCloud Web. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n","description":"Overview Server Deployment  Requirements Install oCIS and Traefik   Local setup      Overview      oCIS running behind Traefik as reverse proxy oCIS Hello extension runs beside the main oCIS stack and providing the Hello functionality Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup  Find this example on GitHub"},{"id":145,"href":"/ocis/deployment/ocis_keycloak/","title":"oCIS with Keycloak","parent":"Deployment","content":"   Overview Server Deployment  Requirements Install oCIS and Traefik   Local setup      Overview      oCIS and Keycloak running behind Traefik as reverse proxy Keycloak acting as the IDP for oCIS Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup  Find this example on GitHub\nThe docker stack consists 4 containers. One of them is Traefik, a proxy which is terminating ssl and forwards the requests to oCIS in the internal docker network. It is also responsible for redirecting requests on the OIDC discovery endpoints (e.g. .well-known/openid-configuration) to the correct destination in Keycloak.\nKeycloak add two containers: Keycloak itself and a PostgreSQL as database. Keycloak will be configured as oCIS\u0026rsquo; IDP instead of the internal IDP LibreGraph Connect\nThe other container is oCIS itself, running all services in one container. In this example oCIS uses the oCIS storage driver\nServer Deployment     Requirements      Linux server with docker and docker-compose installed Three domains set up and pointing to your server  ocis.* for serving oCIS keycloak.* for serving Keycloak traefik.* for serving the Traefik dashboard    See also example server setup\nInstall oCIS and Traefik       Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\n  Go to the deployment example\ncd ocis/deployments/examples/ocis_keycloak\n  Open the .env file in a text editor.\nThe file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # Domain of oCIS, where you can find the frontend. Defaults to \u0026#34;ocis.owncloud.test\u0026#34; OCIS_DOMAIN= # ownCloud Web openid connect client id. Defaults to \u0026#34;ocis-web\u0026#34; OCIS_OIDC_CLIENT_ID= ### Keycloak ### # Domain of Keycloak, where you can find the management and authentication frontend. Defaults to \u0026#34;keycloak.owncloud.test\u0026#34; KEYCLOAK_DOMAIN= # Realm which to be used with oCIS. Defaults to \u0026#34;oCIS\u0026#34; KEYCLOAK_REALM= # Admin user login name. Defaults to \u0026#34;admin\u0026#34; KEYCLOAK_ADMIN_USER= # Admin user login password. Defaults to \u0026#34;admin\u0026#34; KEYCLOAK_ADMIN_PASSWORD= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default oCIS will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oCIS frontend in OCIS_DOMAIN=, e.g. OCIS_DOMAIN=ocis.owncloud.test.\nIf you want to change the OIDC client id of th ownCloud Web frontend, you can do this by setting the name to OCIS_OIDC_CLIENT_ID=.\nSet your domain for the Keycloak administration panel and authentication endpoints to KEYCLOAK_DOMAIN= e.g. KEYCLOAK_DOMAIN=keycloak.owncloud.test.\nChanging the used Keycloak realm can be done by setting KEYCLOAK_REALM=. This defaults to the oCIS realm KEYCLOAK_REALM=oCIS. The oCIS realm will be automatically imported on startup and includes our demo users.\nYou probably should secure your Keycloak admin account by setting KEYCLOAK_ADMIN_USER= and KEYCLOAK_ADMIN_PASSWORD= to values other than admin.\nNow you have configured everything and can save the file.\n  Start the docker stack\ndocker-compose up -d\n  You now can visit oCIS, Keycloak and Traefik dashboard on your configured domains. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n  Local setup     For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 ocis.owncloud.test 127.0.0.1 traefik.owncloud.test 127.0.0.1 keycloak.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nOpen https://keycloak.owncloud.test in your browser and accept the invalid certificate warning.\nOpen https://ocis.owncloud.test in your browser and accept the invalid certificate warning. You now can login to oCIS with the demo users. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n","description":"Overview Server Deployment  Requirements Install oCIS and Traefik   Local setup      Overview      oCIS and Keycloak running behind Traefik as reverse proxy Keycloak acting as the IDP for oCIS Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup  Find this example on GitHub\nThe docker stack consists 4 containers."},{"id":146,"href":"/ocis/deployment/ocis_ldap/","title":"oCIS with LDAP","parent":"Deployment","content":"   Overview Server Deployment  Requirements Install this example   Local setup      Overview      Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup OpenLDAP server with demo users LDAP admin interface to edit users oCIS running behind Traefik as reverse proxy  oCIS is using the LDAP server as user backend    Find this example on GitHub\nServer Deployment     Requirements      Linux server with docker and docker-compose installed four domains set up and pointing to your server  ocis.* for serving oCIS ldap .* for serving the LDAP management UI traefik.* for serving the Traefik dashboard    See also example server setup\nInstall this example       Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\n  Go to the deployment example\ncd ocis/deployment/examples/ocis_ldap\n  Open the .env file in a text editor.\nThe file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # Domain of oCIS, where you can find the frontend. Defaults to \u0026#34;ocis.owncloud.test\u0026#34; OCIS_DOMAIN= # JWT secret which is used for the storage provider. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;Pive-Fumkiu4\u0026#34; OCIS_JWT_SECRET= # JWT secret which is used for uploads to create transfer tokens. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;replace-me-with-a-transfer-secret\u0026#34; STORAGE_TRANSFER_SECRET= # Machine auth api key secret. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;change-me-please\u0026#34; OCIS_MACHINE_AUTH_API_KEY= ### LDAP server settings ### # Password of LDAP user \u0026#34;cn=admin,dc=owncloud,dc=com\u0026#34;. Defaults to \u0026#34;admin\u0026#34; LDAP_ADMIN_PASSWORD= ### LDAP manager settings ### # Domain of LDAP manager. Defaults to \u0026#34;ldap.owncloud.test\u0026#34; LDAP_MANAGER_DOMAIN= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default oCIS will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oCIS frontend in OCIS_DOMAIN=, e.g. OCIS_DOMAIN=cloud.owncloud.test.\nThe OpenLDAP server in this example deployment has an admin users, which is also used as bind user in order to keep these examples simple. You can change the default password \u0026ldquo;admin\u0026rdquo; to a different one by setting it to LDAP_ADMIN_PASSWORD=....\nSet your domain for the LDAP manager UI in LDAP_MANAGER_DOMAIN=, e.g. ldap.owncloud.test.\nGrant the oCIS Admin role to the admin user from your LDAP in OCIS_ADMIN_USER_ID:. You need to enter the uuid of LDAP user.\n In the .ldif file in this example, the admin user id is base64 encoded. You need to decode it to make it work.  Now you have configured everything and can save the file.\n  Start the docker stack\ndocker-compose up -d\n  You now can visit oCIS and Traefik dashboard on your configured domains. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n  Local setup     For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 cloud.owncloud.test 127.0.0.1 keycloak.owncloud.test 127.0.0.1 ldap.owncloud.test 127.0.0.1 traefik.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nOpen https://ocis.owncloud.test in your browser and accept the invalid certificate warning. You now can login to oCIS with the default users, which also can be found here: Getting started. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n","description":"Overview Server Deployment  Requirements Install this example   Local setup      Overview      Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup OpenLDAP server with demo users LDAP admin interface to edit users oCIS running behind Traefik as reverse proxy  oCIS is using the LDAP server as user backend    Find this example on GitHub"},{"id":147,"href":"/ocis/deployment/ocis_s3/","title":"oCIS with S3 storage backend (MinIO)","parent":"Deployment","content":"   Overview Server Deployment  Requirements Install oCIS and Traefik   Local setup      Overview      oCIS running behind Traefik as reverse proxy MinIO as S3 compatible storage provider oCIS is configured to use S3 as user storage provider Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup  Find this example on GitHub\nThe docker stack consists 3 containers. One of them is Traefik, a proxy which is terminating SSL and forwards the requests to oCIS in the internal docker network.\nThe next container is oCIS itself in a configuration like the oCIS with Traefik example, except that it will use S3 as user storage.\nThe last container is MinIO, providing a S3 compatible API, where oCIS will store its data.\nServer Deployment     Requirements      Linux server with docker and docker-compose installed Three domains set up and pointing to your server  ocis.* for serving oCIS minio.* for accessing the MinIO S3 bucket in the browser traefik.* for serving the Traefik dashboard    See also example server setup\nInstall oCIS and Traefik       Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\n  Go to the deployment example\ncd ocis/deployments/examples/ocis_s3\n  Open the .env file in a text editor.\nThe file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # Domain of oCIS, where you can find the frontend. Defaults to \u0026#34;ocis.owncloud.test\u0026#34; OCIS_DOMAIN= # oCIS admin user password. Defaults to \u0026#34;admin\u0026#34;. ADMIN_PASSWORD= # The demo users should not be created on a production instance # because their passwords are public. Defaults to \u0026#34;false\u0026#34;. DEMO_USERS= ### MINIO / S3 settings ### # Domain of MinIO where the Web UI is accessible. Defaults to \u0026#34;minio.owncloud.test\u0026#34;. MINIO_DOMAIN= # S3 bucket name, where oCIS stores its data in. Defaults to \u0026#34;ocis-bucket\u0026#34;. MINIO_BUCKET= # S3 bucket access key, which oCIS uses to authenticate. Defaults to \u0026#34;ocis\u0026#34;. MINIO_ACCESS_KEY= # S3 bucket access key secret, which oCIS uses to authenticate. Defaults to \u0026#34;ocis-secret-key\u0026#34;. MINIO_SECRET_KEY= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default oCIS will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oCIS frontend in OCIS_DOMAIN=, e.g. OCIS_DOMAIN=ocis.owncloud.test.\nSet the initial admin user password in ADMIN_PASSWORD=, it defaults to admin.\nSet your domain for the MinIO frontend in MINIO_DOMAIN=, e.g. MINIO_DOMAIN=minio.owncloud.test. If you are using other S3-compatible providers you need to configure the respective endpoint here.\nIf you like you can change the default name of the S3 bucket by setting MINIO_BUCKET= to a different value.\nYou also must override the S3 bucket credentials in MINIO_ACCESS_KEY and MINIO_SECRET_KEY in order to secure your MinIO instance. Choose some random strings e.g. from the output of openssl rand -base64 32.\nNow you have configured everything and can save the file.\n  Start the docker stack\ndocker-compose up -d\n  You now can visit oCIS and are able to use it just normally. If you log into the web UI of MinIO, you will see blobs of files you uploaded. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n  Local setup     For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 ocis.owncloud.test 127.0.0.1 traefik.owncloud.test 127.0.0.1 minio.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nOpen https://ocis.owncloud.test in your browser and accept the invalid certificate warning. You now can use oCIS normally and should now upload a file. Open https://minio.owncloud.test in your browser and accept the invalid certificate warning, after that you will see blobs of files you have uploaded to oCIS. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n","description":"Overview Server Deployment  Requirements Install oCIS and Traefik   Local setup      Overview      oCIS running behind Traefik as reverse proxy MinIO as S3 compatible storage provider oCIS is configured to use S3 as user storage provider Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup  Find this example on GitHub"},{"id":148,"href":"/ocis/deployment/ocis_traefik/","title":"oCIS with Traefik","parent":"Deployment","content":"   Overview Server Deployment  Requirements Install oCIS and Traefik   Local setup      Overview      oCIS running behind Traefik as reverse proxy Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup  Find this example on GitHub\nThe docker stack consists of three containers. One of them is Traefik, a proxy which is terminating ssl and forwards the requests to oCIS in the internal docker network.\nThe other one is oCIS itself running all extensions in one container. In this example, oCIS uses its internal IDP LibreGraph Connect and the oCIS storage driver\nThe last one is Inbucket a mail service to view the notification mails oCIS generates.\nServer Deployment     Requirements      Linux server with docker and docker-compose installed Three domains set up and pointing to your server  ocis.* for serving oCIS traefik.* for serving the Traefik dashboard mail.* for serving the Inbucket mail service    See also example server setup\nInstall oCIS and Traefik       Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\n  Go to the deployment example\ncd ocis/deployments/examples/ocis_traefik\n  Open the .env file in a text editor.\nThe file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # Domain of oCIS, where you can find the frontend. Defaults to \u0026#34;ocis.owncloud.test\u0026#34; OCIS_DOMAIN= # oCIS admin user password. Defaults to \u0026#34;admin\u0026#34;. ADMIN_PASSWORD= # The demo users should not be created on a production instance # because their passwords are public. Defaults to \u0026#34;false\u0026#34;. DEMO_USERS= ### Email / Inbucket settings ### # Inbucket / Mail domain. Defaults to \u0026#34;mail.owncloud.test\u0026#34; INBUCKET_DOMAIN= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default ocis will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oCIS frontend in OCIS_DOMAIN=, e.g. OCIS_DOMAIN=ocis.owncloud.test.\nSet the initial admin user password in ADMIN_PASSWORD=, it defaults to admin.\nNow you have configured everything and can save the file.\n  Start the docker stack\ndocker-compose up -d\n  You now can visit oCIS, Traefik dashboard and Inbucket on your configured domains. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n  Local setup     For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 ocis.owncloud.test 127.0.0.1 traefik.owncloud.test 127.0.0.1 mail.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nOpen https://ocis.owncloud.test in your browser and accept the invalid certificate warning. You now can login to oCIS with the default users, which also can be found here: Getting started. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n","description":"Overview Server Deployment  Requirements Install oCIS and Traefik   Local setup      Overview      oCIS running behind Traefik as reverse proxy Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup  Find this example on GitHub\nThe docker stack consists of three containers. One of them is Traefik, a proxy which is terminating ssl and forwards the requests to oCIS in the internal docker network."},{"id":149,"href":"/ocis/deployment/ocis_wopi/","title":"oCIS with WOPI server","parent":"Deployment","content":"   Overview Server Deployment  Requirements Install oCIS and Traefik   Local setup Local setup for web development      Overview      oCIS, Wopi server, Collabora and OnlyOffice running behind Traefik as reverse proxy Collabora and OnlyOffice enable you to edit documents in your browser Wopi server acts as a bridge to make the oCIS storage accessible to Collabora and OnlyOffice Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup  Find this example on GitHub\nThe docker stack consists of 10 containers. One of them is Traefik, a proxy which is terminating SSL and forwards the requests to oCIS in the internal docker network.\nThe next container is oCIS itself in a configuration like the oCIS with Traefik example, except that for this example a custom mimetype configuration is used.\nThere are three oCIS app driver containers that register Collabora and OnlyOffice at the app registry.\nThe last four containers are the WOPI server, Collabora and OnlyOffice.\nServer Deployment     Requirements      Linux server with docker and docker-compose installed Three domains set up and pointing to your server  ocis.* for serving oCIS collabora.* for serving Collabora onlyoffice.* for serving OnlyOffice wopiserver.* for serving the WOPI server traefik.* for serving the Traefik dashboard    See also example server setup\nInstall oCIS and Traefik       Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\n  Go to the deployment example\ncd ocis/deployments/examples/ocis_wopi\n  Open the .env file in a text editor.\nThe file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # Domain of oCIS, where you can find the frontend. Defaults to \u0026#34;ocis.owncloud.test\u0026#34; OCIS_DOMAIN= # oCIS admin user password. Defaults to \u0026#34;admin\u0026#34;. ADMIN_PASSWORD= # The demo users should not be created on a production instance # because their passwords are public. Defaults to \u0026#34;false\u0026#34;. DEMO_USERS= ### Wopi server settings ### # cs3org wopi server version. Defaults to \u0026#34;v8.3.3\u0026#34; WOPISERVER_DOCKER_TAG= # cs3org wopi server domain. Defaults to \u0026#34;wopiserver.owncloud.test\u0026#34; WOPISERVER_DOMAIN= # JWT secret which is used for the documents to be request by the Wopi client from the cs3org Wopi server. Must be change in order to have a secure Wopi server. Defaults to \u0026#34;LoremIpsum567\u0026#34; WOPI_JWT_SECRET= ### Collabora settings ### # Domain of Collabora, where you can find the frontend. Defaults to \u0026#34;collabora.owncloud.test\u0026#34; COLLABORA_DOMAIN= # Admin user for Collabora. Defaults to blank, provide one to enable access COLLABORA_ADMIN_USER= # Admin password for Collabora. Defaults to blank, provide one to enable access COLLABORA_ADMIN_PASSWORD= ### OnlyOffice settings ### # Domain of OnlyOffice, where you can find the frontend. Defaults to \u0026#34;onlyoffice.owncloud.test\u0026#34; ONLYOFFICE_DOMAIN= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default oCIS will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oCIS frontend in OCIS_DOMAIN=, e.g. OCIS_DOMAIN=ocis.owncloud.test.\nSet the initial admin user password in ADMIN_PASSWORD=, it defaults to admin.\nBy default the CS3Org WOPI server will also be started in the latest version. If you want to start a specific version of it, you can set the version to WOPISERVER_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the CS3Org WOPI server in WOPISERVER_DOMAIN=, where all office suites can download the files via the WOPI protocol.\nYou also must override the default WOPI JWT secret in order to have a secure setup. Do this by setting WOPI_JWT_SECRET to a long and random string.\nNow it\u0026rsquo;s time to set up Collabora and you need to configure the domain of Collabora in COLLABORA_DOMAIN=.\nIf you want to use the Collabora admin panel you need to set the username and password for the administrator in COLLABORA_ADMIN_USER= and COLLABORA_ADMIN_PASSWORD=.\nNext up is OnlyOffice, which also needs a domain in ONLYOFFICE_DOMAIN=.\nNow you have configured everything and can save the file.\n  Start the docker stack\ndocker-compose up -d\n  You now can visit oCIS and are able to open an office document in your browser. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\n  Local setup     For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 ocis.owncloud.test 127.0.0.1 traefik.owncloud.test 127.0.0.1 collabora.owncloud.test 127.0.0.1 onlyoffice.owncloud.test 127.0.0.1 wopiserver.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nOpen https://collabora.owncloud.test, https://onlyoffice.owncloud.test and https://wopiserver.owncloud.test in your browser and accept the invalid certificate warning.\nOpen https://ocis.owncloud.test in your browser and accept the invalid certificate warning. You are now able to open an office document in your browser. You may need to wait some minutes until all services are fully ready, so make sure that you try to reload the pages from time to time.\nLocal setup for web development     In case you want to run ownCloud Web from a development branch together with this deployment example (e.g. for feature development for the app provider frontend) you can use this deployment example with the local setup and some additional steps as described below.\n Clone the ownCloud Web repository on your development machine. Run pnpm \u0026amp;\u0026amp; pnpm build:w for web, so that it creates and continuously updates the dist folder for web. Add the dist folder as read only volume to volumes section of the ocis service in the docker-compose.yml file: - /your/local/path/to/web/dist/:/web/dist:roMake sure to point to the dist folder inside your local copy of the web repository. Set the oCIS environment variable WEB_ASSET_PATH in the environment section of the ocis service, so that it uses your mounted dist folder for the web assets, instead of the assets that are embedded into oCIS. WEB_ASSET_PATH:\u0026#34;/web/dist\u0026#34; Start the deployment example as described above in the Local setup section.  For app provider frontend development in web you can find the source code in web/packages/web-app-external. Some parts of the integration live in web/packages/web-app-files.\n","description":"Overview Server Deployment  Requirements Install oCIS and Traefik   Local setup Local setup for web development      Overview      oCIS, Wopi server, Collabora and OnlyOffice running behind Traefik as reverse proxy Collabora and OnlyOffice enable you to edit documents in your browser Wopi server acts as a bridge to make the oCIS storage accessible to Collabora and OnlyOffice Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup  Find this example on GitHub"},{"id":150,"href":"/ocis/deployment/oc10_ocis_parallel/","title":"Parallel deployment of oC10 and oCIS","parent":"Deployment","content":"   Overview Server Deployment  Requirements Install this example   Local setup      Overview      This setup reflects stage 6 of the oC10 to oCIS migration plan Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup OpenLDAP server with demo users LDAP admin interface to edit users Keycloak as OpenID Connect provider in federation with the LDAP server ownCloud 10 with MariaDB and Redis  ownCloud 10 is configured to synchronize users from the LDAP server ownCloud 10 is used to use OpenID Connect for authentication with Keycloak   oCIS running behind Traefik as reverse proxy  oCIS is using the ownCloudSQL storage driver on the same files and same database as ownCloud 10 oCIS is using Keycloak as OpenID Connect provider oCIS is using the LDAP server as user backend   All requests to both oCIS and oC10 are routed through the oCIS proxy and will be routed based on an OIDC claim to one of them. Therefore admins can change on a user basis in the LDAP which backend is used.  Find this example on GitHub\nServer Deployment     Requirements      Linux server with docker and docker-compose installed four domains set up and pointing to your server  cloud.* for serving oCIS keycloak.* for serving Keycloak ldap .* for serving the LDAP management UI traefik.* for serving the Traefik dashboard    See also example server setup\nInstall this example       Clone oCIS repository\ngit clone https://github.com/owncloud/ocis.git\n  Go to the deployment example\ncd ocis/deployment/examples/oc10_ocis_parallel\n  Open the .env file in a text editor The file by default looks like this:\n# If you\u0026#39;re on a internet facing server please comment out following line. # It skips certificate validation for various parts of oCIS and is needed if you use self signed certificates. INSECURE=true ### Traefik settings ### TRAEFIK_LOG_LEVEL= # Serve Traefik dashboard. Defaults to \u0026#34;false\u0026#34;. TRAEFIK_DASHBOARD= # Domain of Traefik, where you can find the dashboard. Defaults to \u0026#34;traefik.owncloud.test\u0026#34; TRAEFIK_DOMAIN= # Basic authentication for the dashboard. Defaults to user \u0026#34;admin\u0026#34; and password \u0026#34;admin\u0026#34; TRAEFIK_BASIC_AUTH_USERS= # Email address for obtaining LetsEncrypt certificates, needs only be changed if this is a public facing server TRAEFIK_ACME_MAIL= ### shared oCIS / oC10 settings ### # Domain of oCIS / oC10, where you can find the frontend. Defaults to \u0026#34;cloud.owncloud.test\u0026#34; CLOUD_DOMAIN= ### oCIS settings ### # oCIS version. Defaults to \u0026#34;latest\u0026#34; OCIS_DOCKER_TAG= # JWT secret which is used for the storage provider. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;Pive-Fumkiu4\u0026#34; OCIS_JWT_SECRET= # JWT secret which is used for uploads to create transfer tokens. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;replace-me-with-a-transfer-secret\u0026#34; STORAGE_TRANSFER_SECRET= # Machine auth api key secret. Must be changed in order to have a secure oCIS. Defaults to \u0026#34;change-me-please\u0026#34; OCIS_MACHINE_AUTH_API_KEY= ### oCIS settings ### # oC10 version. Defaults to \u0026#34;latest\u0026#34; OC10_DOCKER_TAG= # client secret which the openidconnect app uses to authenticate to Keycloak. Defaults to \u0026#34;oc10-oidc-secret\u0026#34; OC10_OIDC_CLIENT_SECRET= # app which will be shown when opening the ownCloud 10 UI. Defaults to \u0026#34;files\u0026#34; but also could be set to \u0026#34;web\u0026#34; OWNCLOUD_DEFAULT_APP= # if set to \u0026#34;false\u0026#34; (default) links will be opened in the classic UI, if set to \u0026#34;true\u0026#34; ownCloud Web is used OWNCLOUD_WEB_REWRITE_LINKS= ### LDAP settings ### # password for the LDAP admin user \u0026#34;cn=admin,dc=owncloud,dc=com\u0026#34;, defaults to \u0026#34;admin\u0026#34; LDAP_ADMIN_PASSWORD= # Domain of the LDAP management frontend. Defaults to \u0026#34;ldap.owncloud.test\u0026#34; LDAP_MANAGER_DOMAIN= ### Keycloak ### # Domain of Keycloak, where you can find the management and authentication frontend. Defaults to \u0026#34;keycloak.owncloud.test\u0026#34; KEYCLOAK_DOMAIN= # Realm which to be used with oC10 and oCIS. Defaults to \u0026#34;owncloud\u0026#34; KEYCLOAK_REALM= # Admin user login name. Defaults to \u0026#34;admin\u0026#34; KEYCLOAK_ADMIN_USER= # Admin user login password. Defaults to \u0026#34;admin\u0026#34; KEYCLOAK_ADMIN_PASSWORD= You are installing oCIS on a server and Traefik will obtain valid certificates for you so please remove INSECURE=true or set it to false.\nIf you want to use the Traefik dashboard, set TRAEFIK_DASHBOARD to true (default is false and therefore not active). If you activate it, you must set a domain for the Traefik dashboard in TRAEFIK_DOMAIN= e.g. TRAEFIK_DOMAIN=traefik.owncloud.test.\nThe Traefik dashboard is secured by basic auth. Default credentials are the user admin with the password admin. To set your own credentials, generate a htpasswd (e.g. by using an online tool or a cli tool).\nTraefik will issue certificates with LetsEncrypt and therefore you must set an email address in TRAEFIK_ACME_MAIL=.\nBy default oCIS will be started in the latest version. If you want to start a specific version of oCIS set the version to OCIS_DOCKER_TAG=. Available versions can be found on Docker Hub.\nSet your domain for the oC10 and oCIS frontend in CLOUD_DOMAIN=, e.g. CLOUD_DOMAIN=cloud.owncloud.test.\nBy default ownCloud 10 will be started in the latest version. If you want to start a specific version of oCIS set the version to OC10_DOCKER_TAG=. Available versions can be found on Docker Hub.\nYou can switch the default application of ownCloud 10 by settingOWNCLOUD_DEFAULT_APP=files in oder to have the classic UI as frontend, which is also the default. If you prefer ownCloud Web as the default application in ownCloud 10 just set OWNCLOUD_DEFAULT_APP=web.\nIn oder to change the default link open action which defaults to the classic UI (OWNCLOUD_WEB_REWRITE_LINKS=false) you can set it to OWNCLOUD_WEB_REWRITE_LINKS=true. This will lead to links being opened in ownCloud Web.\nThe OpenLDAP server in this example deployment has an admin users, which is also used as bind user in order to keep these examples simple. You can change the default password \u0026ldquo;admin\u0026rdquo; to a different one by setting it to LDAP_ADMIN_PASSWORD=....\nSet your domain for the LDAP manager UI in LDAP_MANAGER_DOMAIN=, e.g. ldap.owncloud.test.\nSet your domain for the Keycloak administration panel and authentication endpoints to KEYCLOAK_DOMAIN= e.g. KEYCLOAK_DOMAIN=keycloak.owncloud.test.\nChanging the used Keycloak realm can be done by setting KEYCLOAK_REALM=. This defaults to the ownCloud realm KEYCLOAK_REALM=owncloud. The ownCloud realm will be automatically imported on startup and includes our demo users.\nYou probably should secure your Keycloak admin account by setting KEYCLOAK_ADMIN_USER= and KEYCLOAK_ADMIN_PASSWORD= to values other than admin.\nNow you have configured everything and can save the file.\n  Start the docker stack\ndocker-compose up -d\n  You now can visit the cloud, oC10 or oCIS depending on the user configuration. Marie defaults to oC10 and Richard and Einstein default to oCIS, but you can change the ownCloud selector at any time in the LDAP management UI.\n  Local setup     For a more simple local ocis setup see Getting started\nThis docker stack can also be run locally. One downside is that Traefik can not obtain valid SSL certificates and therefore will create self-signed ones. This means that your browser will show scary warnings. Another downside is that you can not point DNS entries to your localhost. So you have to add static host entries to your computer.\nOn Linux and macOS you can add them to your /etc/hosts file and on Windows to C:\\Windows\\System32\\Drivers\\etc\\hosts file like this:\n127.0.0.1 cloud.owncloud.test 127.0.0.1 keycloak.owncloud.test 127.0.0.1 ldap.owncloud.test 127.0.0.1 traefik.owncloud.test After that you\u0026rsquo;re ready to start the application stack:\ndocker-compose up -d\nYou now can visit the cloud, oC10 or oCIS depending on the user configuration. Marie defaults to oC10 and Richard and Einstein default to oCIS, but you can change the ownCloud selector at any time in the LDAP management UI.\n","description":"Overview Server Deployment  Requirements Install this example   Local setup      Overview      This setup reflects stage 6 of the oC10 to oCIS migration plan Traefik generating self-signed certificates for local setup or obtaining valid SSL certificates for a server setup OpenLDAP server with demo users LDAP admin interface to edit users Keycloak as OpenID Connect provider in federation with the LDAP server ownCloud 10 with MariaDB and Redis  ownCloud 10 is configured to synchronize users from the LDAP server ownCloud 10 is used to use OpenID Connect for authentication with Keycloak   oCIS running behind Traefik as reverse proxy  oCIS is using the ownCloudSQL storage driver on the same files and same database as ownCloud 10 oCIS is using Keycloak as OpenID Connect provider oCIS is using the LDAP server as user backend   All requests to both oCIS and oC10 are routed through the oCIS proxy and will be routed based on an OIDC claim to one of them."},{"id":151,"href":"/ocis/deployment/kubernetes/","title":"Kubernetes","parent":"Deployment","content":"   What is Kubernetes  References and further reads How does oCIS fit in the Kubernetes model   What is Minikube What is kubectl What are Helm Charts, and why they are useful for oCIS  Installing Helm   Setting up Minikube oCIS charts  Run oCIS        What is Kubernetes     Formally described as:\n Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation.\n source\nWithout getting too deep in definitions, and for the purpose of compactness, Kubernetes can be summarized as a way of managing containers that run applications to ensure that there is no downtime and an optimal usage of resources. It provides with a framework in which to run distributed systems.\nKubernetes provides you with:\n Service discovery and load balancing: Kubernetes can expose a container using the DNS name or using their own IP address. If traffic to a container is high, Kubernetes is able to load balance and distribute the network traffic so that the deployment is stable. Storage orchestration: Kubernetes allows you to automatically mount a storage system of your choice, such as local storages, public cloud providers, and more. Automated rollouts and rollbacks: You can describe the desired state for your deployed containers using Kubernetes, and it can change the actual state to the desired state at a controlled rate. For example, you can automate Kubernetes to create new containers for your deployment, remove existing containers and adopt all their resources to the new container. Automatic bin packing: You provide Kubernetes with a cluster of nodes that it can use to run containerized tasks. You tell Kubernetes how much CPU and memory (RAM) each container needs. Kubernetes can fit containers onto your nodes to make the best use of your resources. Self-healing: Kubernetes restarts containers that fail, replaces containers, kills containers that don\u0026rsquo;t respond to your user-defined health check, and doesn\u0026rsquo;t advertise them to clients until they are ready to serve. Secret and configuration management: Kubernetes lets you store and manage sensitive information, such as passwords, OAuth tokens, and SSH keys. You can deploy and update secrets and application configuration without rebuilding your container images, and without exposing secrets in your stack configuration.  extracted from k8s docs\nIf that is still too abstract, here is an ELI5 writeup.\nReferences and further reads      Marcel Wunderlich\u0026rsquo;s 4 series articles on Kubernetes clarifying its declarative nature, deep diving into ingress networking, storage and monitoring.  How does oCIS fit in the Kubernetes model     oCIS was designed with running on Kubernetes in mind. We set up to adopt the Twelve-Factor App principles regarding configuration, with almost every aspect of oCIS being modifiable via environment variables. This comes in handy when you especially have a look at how a helm chart\u0026rsquo;s (we will introduce this concept shortly) list of values looks like.\nWhat is Minikube     Minikube lets you run a Kubernetes cluster locally. It is the most approachable way to test a deployment. It requires no extra configuration on any cloud platform, as everything runs on your local machine. For the purpose of these docs, this is the first approach we chose to run oCIS and will develop on how to set it up.\nWhat is kubectl     kubectl is the command-line tool for Kubernetes. It allows users to run commands against a k8s cluster the user has access to. It supports for having multiple contexts for as many clusters as you have access to. In these docs we will setup 2 contexts, a minikube and a GCP context.\nWhat are Helm Charts, and why they are useful for oCIS     Helm is the equivalent of a package manager for Kubernetes. It can be described as a layer on top of how you would write pods, deployments or any other k8s resource declaration.\nInstalling Helm     Follow the official installation guide.\nSetting up Minikube     For a guide on how to set minikube up follow the official minikube start guide for your specific OS.\noCIS charts     We have not yet published the oCIS Helm charts, therefore you need to clone the git repository manually. It currently also does not support to be run on Kind or Minikube clusters. For known issues and planned features, please have a look at the GitHub issue tracker.\nConfiguration options are described here.\nRun oCIS      clone the charts: git clone https://github.com/owncloud/ocis-charts.git /var/tmp/ocis-charts cd into the charts root: cd /var/tmp/ocis-charts/charts/ocis install the package: helm install ocis . (you need to set configuration values in almost all cases) verify the application is running in the cluster: kubectl get pods  ","description":"What is Kubernetes  References and further reads How does oCIS fit in the Kubernetes model   What is Minikube What is kubectl What are Helm Charts, and why they are useful for oCIS  Installing Helm   Setting up Minikube oCIS charts  Run oCIS        What is Kubernetes     Formally described as:\n Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation."},{"id":152,"href":"/architecture/","title":"Architecture","parent":"ownCloud","content":"In the architecture part of the documentation we collect useful developer documentation on different aspects of the architecture. We are using mermaid.js to collaborate on the necessary diagrams.\nPictures tell more than a thousand words.\n","description":"In the architecture part of the documentation we collect useful developer documentation on different aspects of the architecture. We are using mermaid.js to collaborate on the necessary diagrams.\nPictures tell more than a thousand words."},{"id":153,"href":"/clients/web/docs/releasing/","title":"Releasing","parent":"ownCloud Web","content":"   Releasing ownCloud Web  Versioning Release Guide Next steps        Releasing ownCloud Web     OwnCloud Web can be hosted standalone, as ownCloud 10 app or as part of oCIS.\nVersioning     We follow the Semantic Versioning scheme. Therefore, each change is of one of the possible types: Bugfix, Change, Enhancement, Security.\nThe highest type before a new release determines the version update number, so if it\u0026rsquo;s only Bugfix and Security changes the next release will be a PATCH version bump, if there\u0026rsquo;s at least one Enhancement within the changes this leads to a MINOR version bump, while Change type changes make for a new MAJOR release version.\nRelease Guide      Create a branch release-$version in https://github.com/owncloud/web. Create a folder in changelog for the release version and date mkdir $major.$minor.$patchVersion_YYYY-MM-DD. Move all changelog items from the changelog/unreleased/ folder to the $major.$minor.$patchVersion_YYYY-MM-DD folder. Update the version in packages/web-integration-oc10/appinfo/info.xml Update the version in package.json Commit your changes. After merging, wait for the CI to run on the merge commit. Go to the Releases section and click \u0026ldquo;Draft a new Release\u0026rdquo;. Use v$major.$minor.$patch as a tag (the v prefix is important) and publish it. The tag and the Release artifacts will be created automatically.  Next steps      The ownCloud 10 app gets created as part of the release pipeline and will be part of the release assets. For oCIS the release assets need to be updated. For that we have prepared a separate ocis-web release guide.  ","description":"Releasing ownCloud Web  Versioning Release Guide Next steps        Releasing ownCloud Web     OwnCloud Web can be hosted standalone, as ownCloud 10 app or as part of oCIS.\nVersioning     We follow the Semantic Versioning scheme. Therefore, each change is of one of the possible types: Bugfix, Change, Enhancement, Security.\nThe highest type before a new release determines the version update number, so if it\u0026rsquo;s only Bugfix and Security changes the next release will be a PATCH version bump, if there\u0026rsquo;s at least one Enhancement within the changes this leads to a MINOR version bump, while Change type changes make for a new MAJOR release version."},{"id":154,"href":"/clients/web/releasing/","title":"Releasing","parent":"ownCloud Web","content":"   Releasing ownCloud Web  Versioning Release Guide Next steps        Releasing ownCloud Web     OwnCloud Web can be hosted standalone, as ownCloud 10 app or as part of oCIS.\nVersioning     We follow the Semantic Versioning scheme. Therefore, each change is of one of the possible types: Bugfix, Change, Enhancement, Security.\nThe highest type before a new release determines the version update number, so if it\u0026rsquo;s only Bugfix and Security changes the next release will be a PATCH version bump, if there\u0026rsquo;s at least one Enhancement within the changes this leads to a MINOR version bump, while Change type changes make for a new MAJOR release version.\nRelease Guide      Create a branch release-$version in https://github.com/owncloud/web. Create a folder in changelog for the release version and date mkdir $major.$minor.$patchVersion_YYYY-MM-DD. Move all changelog items from the changelog/unreleased/ folder to the $major.$minor.$patchVersion_YYYY-MM-DD folder. Update the version in packages/web-integration-oc10/appinfo/info.xml Update the version in package.json Commit your changes. After merging, wait for the CI to run on the merge commit. Go to the Releases section and click \u0026ldquo;Draft a new Release\u0026rdquo;. Use v$major.$minor.$patch as a tag (the v prefix is important) and publish it. The tag and the Release artifacts will be created automatically.  Next steps      The ownCloud 10 app gets created as part of the release pipeline and will be part of the release assets. For oCIS the release assets need to be updated. For that we have prepared a separate ocis-web release guide.  ","description":"Releasing ownCloud Web  Versioning Release Guide Next steps        Releasing ownCloud Web     OwnCloud Web can be hosted standalone, as ownCloud 10 app or as part of oCIS.\nVersioning     We follow the Semantic Versioning scheme. Therefore, each change is of one of the possible types: Bugfix, Change, Enhancement, Security.\nThe highest type before a new release determines the version update number, so if it\u0026rsquo;s only Bugfix and Security changes the next release will be a PATCH version bump, if there\u0026rsquo;s at least one Enhancement within the changes this leads to a MINOR version bump, while Change type changes make for a new MAJOR release version."},{"id":155,"href":"/architecture/upload-processing/","title":"Upload processing","parent":"Architecture","content":"Uploads are handled by a dedicated service that uses TUS.io for rusumable uploads. When all bytes have been transferred the upload is finalized by making the file available in file listings and for download.\nThe finalization may be asynchronous when mandatory workflow steps are involved.\nLegacy PUT upload      %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocdav participant storageprovider participant dataprovider Client-+ocdav: PUT /dav/spaces/{spaceid}/newfile.bin ocdav-+storageprovider: InitiateFileUpload storageprovider---ocdav: OK, Protocol simple, UploadEndpoint: /data, Token: {jwt} Note right of ocdav: The {jwt} contains the internal actual target, eg.:\nhttp://localhost:9158/data/simple/91cc9882-db71-4b37-b694-a522850fcee1 ocdav-+dataprovider: PUT /data\nX-Reva-Transfer: {jwt} dataprovider---ocdav: 201 Created ocdav---Client: 201 Created  TUS upload     %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocdav participant storageprovider participant datagateway participant dataprovider Client-+ocdav: POST /dav/spaces/{spaceid}\nUpload-Metadata: {base64 encoded filename etc}\nTUS-Resumable: 1.0.0 ocdav-+storageprovider: InitiateFileUpload storageprovider---ocdav: OK, Protocol tus, UploadEndpoint: /data, Token: {jwt} Note right of ocdav: The {jwt} contains the internal actual target, eg.:\nhttp://localhost:9158/data/tus/24d893f5-b942-4bc7-9fb0-28f49f980160 ocdav---Client: 201 Created\nLocation: /data/{jwt}\nTUS-Resumable: 1.0.0 Client-+datagateway: PATCH /data/{jwt}\nTUS-Resumable: 1.0.0\nUpload-Offset: 0 Note over datagateway: unwrap the {jwt} target datagateway-+dataprovider: PATCH /data/tus/24d893f5-b942-4bc7-9fb0-28f49f980160\nX-Reva-Transfer: {jwt} Note over dataprovider: storage driver\nhandles request dataprovider---datagateway: 204 No Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 datagateway---Client: 204 No Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976  TUS upload with async postprocessing     %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocdav participant storageprovider participant datagateway participant dataprovider participant nats Client-+ocdav: POST /dav/spaces/{spaceid}\nUpload-Metadata: {base64 encoded filename etc}\nTUS-Resumable: 1.0.0 ocdav-+storageprovider: InitiateFileUpload storageprovider---ocdav: OK, Protocol tus, UploadEndpoint: /data, Token: {jwt} Note right of ocdav: The {jwt} contains the internal actual target, eg.:\nhttp://localhost:9158/data/tus/24d893f5-b942-4bc7-9fb0-28f49f980160 ocdav---Client: 201 Created\nLocation: /data/{jwt}\nTUS-Resumable: 1.0.0 Client-+datagateway: PATCH /data/{jwt}\nTUS-Resumable: 1.0.0\nUpload-Offset: 0 Note over datagateway: unwrap the {jwt} target datagateway-+dataprovider: PATCH /data/tus/24d893f5-b942-4bc7-9fb0-28f49f980160\nX-Reva-Transfer: {jwt} Note over dataprovider: storage driver\nhandles request dataprovider-)nats: emit all-bytes-received event nats-)processing: all-bytes-received({uploadid}) event Note over dataprovider: TODO: A lot of time may pass here, we could use\nthe `Prefer: respond-async` header to return early\nwith a 202 Accepted status and a Location header\nto a websocket endpoint alt success processing-)nats: emit processing-finished({uploadid}) event nats-)dataprovider: processing-finished({uploadid}) event dataprovider---datagateway: 204 No Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 datagateway---Client: 204 No Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 else failure activate dataprovider activate datagateway processing-)nats: emit processing-aborted({uploadid}) event nats-)dataprovider: processing-aborted({uploadid}) event Note over dataprovider: FIXME: What HTTP status code should we report?\n422 Unprocessable Content is just a proposal, see\nhttps://httpwg.org/specs/rfc9110.html#status.422 dataprovider---datagateway: 422 Unprocessable Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 datagateway---Client: 422 Unprocessable Content\nTUS-Resumable: 1.0.0\nUpload-Offset: 363976 end  Async TUS upload with postprocessing     This might be a TUS extension or a misunderstanding on our side of what tus can do for us. Clients should send a Prefer: respond-async header to allow the server to return early when postprocessing might take longer. The PATCH requests can then return status 202 Accepted and a Location header to a websocket that clients can use to track the processing / upload progress.\nTODO there is a conflict with the TUS.io POST request with the creation extension, as that also returns a Location header which carries the upload URL. We would need another header to transport the websocket location. Maybe Websocket-Location or Progress-Location?\n","description":"Uploads are handled by a dedicated service that uses TUS.io for rusumable uploads. When all bytes have been transferred the upload is finalized by making the file available in file listings and for download.\nThe finalization may be asynchronous when mandatory workflow steps are involved.\nLegacy PUT upload      %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg."},{"id":156,"href":"/architecture/protocol-changes/","title":"Protocol changes","parent":"Architecture","content":"The spaces concept allows clients to look up the space endpoints a user has access to and then do individual sync discoveries. Technically, we introduce an indirection that allows clients to rely on server provided URLs instead of hardcoded /webdav or /dav/files/{username} paths, that may change over time.\nSpace discovery      %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant Graph participant SpaceA participant SpaceB links Client: {\"web\": \"https://owncloud.dev/clients/web/\", \"RClone\": \"https://owncloud.dev/clients/rclone/\"} link Graph: Documentation @ https://owncloud.dev/extensions/graph/ Note left of Client: First, a clients looksup the spaces a user has access to opt space lookup Client-+Graph: GET /me/drives Graph---Client: 200 OK JSON list of spaces, say A, B and C, each with a dedicated webDavURL, etag and quota end Note left of Client: Then it can do a parallelsync discovery on spaceswhose etag changed par Client to Space A Client-+SpaceA: PROPFIND {webDavURL for Space A} SpaceA---Client: 207 Multistatus PROPFIND response and Client to Space B Client-+SpaceB: PROPFIND {webDavURL for space B} SpaceB---Client: 207 Multistatus PROPFIND response end  New /dav/spaces/{spaceid} endpoint with spaceid and a relative path     The ocDAV service is responsible for translating ownCloud flavoured WebDAV into CS3 API calls.\nGeneral view\nA PROPFIND finds its way to a storage provider like this:\n%%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocDAV participant StorageProvider Note right of Client: {spaceid} identifies the space\n{relative/path} is relative to the space root Client-+ocDAV: PROPFIND /dav/space/{spaceid}/{relative/path} Note right of ocDAV: translate ownCloud flavoured webdav\ninto CS3 API requests ocDAV-+StorageProvider: ListContainer({spaceid}, path: {relative/path}) StorageProvider---ocDAV: []ResourceInfo ocDAV---Client: 207 Multistatus  While the above is a simplification to get an understanding of what needs to go where, there are several places where sharding can happen.\nProxy can do user based routing\nThe ocis proxy authenticates requests and can forward requests to different backends, depending on the logged-in user or cookies. For example multiple ocdav services can be configured to shard users based on username or affiliation.\n%%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant proxy participant ocDAV1 as ocDAV [a-k] participant ocDAV2 as ocDAV [l-z] Note right of Client: {spaceid} identifies the space\n{relative/path} is relative to the space root Client-+proxy: PROPFIND /dav/space/{spaceid}/{relative/path} alt username starting with a-k proxy-+ocDAV1: PROPFIND /dav/space/{spaceid}/{relative/path} Note right of ocDAV1: translate ownCloud flavoured webdav\ninto CS3 API requests ocDAV1---Client: 207 Multistatus else username starting with l-z proxy-+ocDAV2: PROPFIND /dav/space/{spaceid}/{relative/path} ocDAV2---Client: 207 Multistatus end  Gateway can do path or storage provider id based routing\nThe reva gateway acts as a facade to multiple storage providers that can be configured with the storage registry:\n%%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant ocDAV participant Gateway participant StorageRegistry participant StorageProvider1 as StorageProvider [a-k] participant StorageProvider2 as StorageProvider [l-z] Note right of ocDAV: translate ownCloud flavoured webdav\ninto CS3 API requests ocDAV-+Gateway: ListContainer({spaceid}, path: {relative/path}) Note right of Gateway: find address of the storage provider\nthat is responsible for the space Gateway-+StorageRegistry: ListStorageProviders({spaceid}) StorageRegistry---Gateway: []ProviderInfo Note right of Gateway: forward request to\ncorrect storage provider alt username starting with a-k Gateway-+StorageProvider1: ListContainer({spaceid}, path: {relative/path}) StorageProvider1---Gateway: []ResourceInfo else username starting with l-z Gateway-+StorageProvider2: ListContainer({spaceid}, path: {relative/path}) StorageProvider2---Gateway: []ResourceInfo end Gateway---ocDAV: []ResourceInfo  Old /dav/files/{username} endpoint with username and a path relative to the users home     PROPFIND request against old webdav endpoints\nTo route a PROPFIND request against the old webdav endpoints like /dav/files/username, ocdav first has to build a CS3 namespace prefix, e.g. /users/{{.Id.OpaqueId}} to the users home.\n%%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocDAV participant Gateway opt old /dav/files/{username} endpoint with username and a path relative to the users home Note right of Client: translate ownCloud flavoured webdav\ninto CS3 API requests Client-+ocDAV: PROPFIND /dav/files/{username}/{relative/path} Note right of ocDAV: translate ownCloud flavoured webdav\ninto CS3 API requests ocDAV-+Gateway: GetUser({username}) Gateway---ocDAV: User Note right of ocDAV: build path prefix to user home ocDAV-+ocDAV: {namespace/prefix} = ApplyLayout({path layout}, User), eg. /users/e/einstein Note right of ocDAV: look up the space responsible for a path ocDAV-+Gateway: ListStorageSpaces(path: {namespace/prefix}/{relative/path}) Gateway---ocDAV: []StorageSpace Note right of ocDAV: make actual request with space and relative path ocDAV-+Gateway: ListContainer({spaceid}, path: {relative/path}) Gateway---ocDAV: []ResourceInfo ocDAV---Client: 207 Multistatus end  Handling legacy global namespace webdav endpoints\nThe reason ocis uses a path based lookup instead of looking up the current users home using the user id and a space type filter is, because there are deployments that use a global namespace at the legacy /webdav endpoint. To support these use cases, the gateway allows looking up spaces using their mount path.\n%%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg. https://mermaid.live sequenceDiagram participant Client participant ocDAV participant Gateway Note right of Client: translate ownCloud flavoured webdav\ninto CS3 API requests alt old /dav/files/{username} endpoint with username and a path relative to the users home Client-+ocDAV: PROPFIND /dav/files/{username}/{relative/path} Note right of ocDAV: look up {username} in URL path ocDAV-+Gateway: GetUser({username}) Gateway---ocDAV: User Note right of ocDAV:build namespace prefix to user home ocDAV-+ocDAV: {namespace/prefix} = ApplyLayout({namespace layout}, User), eg. /users/e/einstein else legacy /webdav/ endpoint with a path relative to the users home Client-+ocDAV: PROPFIND /webdav/{relative/path} Note right of ocDAV: use currently logged in user ocDAV-+ocDAV: ContextGetUser() Note right of ocDAV: build namespace prefix to user home ocDAV-+ocDAV: {namespace/prefix} = ApplyLayout({namespace layout}, User), eg. /users/e/einstein else legacy /webdav/ endpoint with a path relative to a global namespace Client-+ocDAV: PROPFIND /webdav/{relative/path} Note right of ocDAV: omit namespace prefix by using empty layout template ocDAV-+ocDAV: {namespace/prefix} = ApplyLayout(\"/\", u), always returns \"/\" end Note right of ocDAV: look up the space responsible for a path ocDAV-+Gateway: ListStorageSpaces(path: {namespace/prefix}/{relative/path}) Gateway---ocDAV: []StorageSpace Note right of ocDAV: make actual request with space and relative path ocDAV-+Gateway: ListContainer({spaceid}, path: {relative/path}) Gateway---ocDAV: []ResourceInfo ocDAV---Client: 207 Multistatus  ","description":"The spaces concept allows clients to look up the space endpoints a user has access to and then do individual sync discoveries. Technically, we introduce an indirection that allows clients to rely on server provided URLs instead of hardcoded /webdav or /dav/files/{username} paths, that may change over time.\nSpace discovery      %%{init: {\"sequence\": { \"showSequenceNumbers\":true, \"messageFontFamily\":\"courier\", \"messageFontWeight\":\"normal\", \"messageFontSize\":\"11\"}}}%% %% font weight is a css bug: https://github.com/mermaid-js/mermaid/issues/1976 %% edit this diagram by pasting it into eg."},{"id":157,"href":"/architecture/services-communication/","title":"Services Communication","parent":"Architecture","content":" ","description":" "},{"id":158,"href":"/ocis/storage-backends/cephfs/","title":"cephfs","parent":"Storage backends","content":"   Development Architecture Implemented Aspects Future work      oCIS intends to make the aspects of existing storage systems available as transparently as possible, but the static sync algorithm of the desktop client relies on some form of recursive change time propagation on the server side to detect changes. While this can be bolted on top of existing file systems with inotify, the kernel audit or a fuse based overlay filesystem, a storage system that already implements this aspect is preferable. Aside from EOS, cephfs supports a recursive change time that oCIS can use to calculate an etag for the webdav API.\nDevelopment     The cephfs development happens in a Reva branch and is currently driven by CERN.\nArchitecture     In the original approach the driver was based on the localfs driver, relying on a locally mounted cephfs. It would interface with it using the POSIX apis. This has been changed to directly call the Ceph API using https://github.com/ceph/go-ceph. It allows using the ceph admin APIs to create sub-volumes for user homes and maintain a file id to path mapping using symlinks.\nImplemented Aspects     The recursive change time built ino cephfs is used to implement the etag propagation expected by the ownCloud clients. This allows oCIS to pick up changes that have been made by external tools, bypassing any oCIS APIs.\nLike other filesystems cephfs uses inodes and like most other filesystems inodes are reused. To get stable file identifiers the current cephfs driver assigns every node a file id and maintains a custom fileid to path mapping in a system directory:\n/tmp/cephfs $ tree -a . ├── reva │ └── einstein │ ├── Pictures │ └── welcome.txt └── .reva_hidden ├── .fileids │ ├── 50BC39D364A4703A20C58ED50E4EADC3_570078 -\u0026gt; /tmp/cephfs/reva/einstein │ ├── 571EFB3F0ACAE6762716889478E40156_570081 -\u0026gt; /tmp/cephfs/reva/einstein/Pictures │ └── C7A1397524D0419B38D04D539EA531F8_588108 -\u0026gt; /tmp/cephfs/reva/einstein/welcome.txt └── .uploads Versions are not file but snapshot based, a native feature of cephfs. The driver maps entries in the native cephfs .snap folder to the CS3 api recycle bin concept and makes them available in the web UI using the versions sidebar. Snapshots can be triggered by users themselves or on a schedule.\nTrash is not implemented, as cephfs has no native recycle bin and instead relies on the snapshot functionality that can be triggered by end users. It should be possible to automatically create a snapshot before deleting a file. This needs to be explored.\nShares are mapped to ACLs supported by cephfs. The share manager is used to persist the intent of a share and can be used to periodically verify or reset the ACLs on cephfs.\nFuture work      The spaces concept matches cephfs sub-volumes. We can implement the CreateStorageSpace call with that, keep track of the list of storage spaces using symlinks, like for the id based lookup. The share manager needs a persistence layer. Currently we persist using a single json file. As it basically provides two lists, shared with me and shared with others, we could persist them directly on cephfs!  If needed for redundancy, the share manager can be run multiple times, backed by the same cephfs To save disk io the data can be cached in memory, and invalidated using stat requests.   A good tradeoff would be a folder for each user with a json file for each list. That way, we only have to open and read a single file when the user want\u0026rsquo;s to list the shares. To allow deprovisioning a user the data should be sharded by userid. That way all share information belonging to a user can easily be removed from the system. If necessary it can also be restored easily by copying the user specific folder back in place. For consistency over metadata any file blob data, backups can be done using snapshots. An example where einstein has shared a file with marie would look like this on disk:  /tmp/cephfs $ tree -a . ├── reva │ └── einstein │ ├── Pictures │ └── welcome.txt ├── .reva_hidden │ ├── .fileids │ │ ├── 50BC39D364A4703A20C58ED50E4EADC3_570078 -\u0026gt; /tmp/cephfs/reva/einstein │ │ ├── 571EFB3F0ACAE6762716889478E40156_570081 -\u0026gt; /tmp/cephfs/reva/einstein/Pictures │ │ └── C7A1397524D0419B38D04D539EA531F8_588108 -\u0026gt; /tmp/cephfs/reva/einstein/welcome.txt │ └── .uploads └── .reva_share_manager ├── einstein │ └── sharedWithOthers.json └── marie └── sharedWithMe.json  The fileids should not be based on the path and instead use a uuid that is also persisted in the extended attributes to allow rebuilding the index from scratch if necessary.  ","description":"Development Architecture Implemented Aspects Future work      oCIS intends to make the aspects of existing storage systems available as transparently as possible, but the static sync algorithm of the desktop client relies on some form of recursive change time propagation on the server side to detect changes. While this can be bolted on top of existing file systems with inotify, the kernel audit or a fuse based overlay filesystem, a storage system that already implements this aspect is preferable."},{"id":159,"href":"/ocis/flow-docs/","title":"Flow documentation","parent":"oCIS - ownCloud Infinite Scale","content":"","description":""},{"id":160,"href":"/ocis/storage-backends/dcfsnfs/","title":"Decomposed FS on NFS","parent":"Storage backends","content":"   NFS Server Setup NFS Client Mount oCIS Start using the NFS Share      oCIS\u0026rsquo; default storage backend is the Decomposed FS. The Decomposed FS can be set up to run on a NFS share. That way the same storage can be provided over the network to other nodes running oCIS.\nThis document summarizes a few important considerations of the NFS setup and describes a tested setup. The test has not covered concurrent access of data from different nodes yet.\nNFS Server Setup     This document covers the linux kernel NFS server on a standard Linux running on x86_64.\nThe NFS server needs to be set up in a way that it supports extended file attributes.\nExtended attributes are supported by NFS starting with Kernel version 5.9, which means that the server with the NFS server has to run a kernel with that or a higher version number. To check that, run the command uname -a on the NFS server and compare the displayed version number.\nThe NFS server in the test setup was configured with the following line in the config file /etc/exports:\n/space/nfstest 192.168.178.0/24(rw,root_squash,async,subtree_check,anonuid=0,anongid=100,all_squash)\nThis exports the directory /space/nfstest to the internal network with certain options.\nImportant:\n The share needs to be exported with the async option for proper NFS performance.  NFS Client Mount     The nodes that run oCIS need to mount the NFS storage to a local mount point.\nThe test setup uses the client mount command: mount -t nfs -o nfsvers=4 192.168.178.28:/space/nfstest /mnt/ocisdata/\nIt sets the NFS version to 4, which is important to support extended attributes.\nAfter successfully mounting the storage on the client, it can be checked if the NFS setup really supports extended attributes properly using the following commands.\nsetfattr -n user.test -v \u0026quot;xattr test string\u0026quot; ocisdata/foo to write an extended attribute to a file, and getfattr -d ocisdata/foo to list all the attributes a file has set.\n The NFS server setup can be optimized considering system administrative-, performance- and security options. This is not (yet) covered in this documentation.  oCIS Start using the NFS Share     The oCIS server can be instructed to set up the decomposed FS at a certain path by setting the environment variable OCIS_BASE_DATA_PATH.\nThe test setup started an oCIS tech preview single binary release using this start command:\n./ocis init OCIS_BASE_DATA_PATH=/mnt/ocisdata/ OCIS_LOG_LEVEL=debug OCIS_INSECURE=true PROXY_HTTP_ADDR=0.0.0.0:9200 OCIS_URL=https://hostname:9200 ./ocis server This starts oCIS and a decomposed FS skeleton file system structure is set up on the NFS share.\nThe oCIS instance is passing a smoke test.\n","description":"NFS Server Setup NFS Client Mount oCIS Start using the NFS Share      oCIS\u0026rsquo; default storage backend is the Decomposed FS. The Decomposed FS can be set up to run on a NFS share. That way the same storage can be provided over the network to other nodes running oCIS.\nThis document summarizes a few important considerations of the NFS setup and describes a tested setup."},{"id":161,"href":"/architecture/efficient-stat-polling/","title":"Efficient Stat Polling","parent":"Architecture","content":"The fallback sync mechanism uses the ETag to determine which part of a sync tree needs to be checked by recursively descending into folders whose ETag has changed. The ETag can be calculated using a stat() call in the filesystem and we are going to explore how many stat() calls are necessary and how the number might be reduced.\nETag propagation     What does ETag propagation mean? Whenever a file changes its content or metadata the ETag or \u0026ldquo;entity tag\u0026rdquo; changes. In the early days of ownCloud it was decided to extend this behavior to folders as well, which is outside of any WebDAV RFC specification. Nevertheless, here we are, using the ETag to reflect changes, not only on WebDAV resources but also WebDAV collections. The server will propagate the ETag change up to the root of the tree.\n graph TD linkStyle default interpolate basis subgraph final ETag propagation ert3(( etag:N )) --- el3(( etag:O )) \u0026 er3(( etag:N )) er3 --- erl3(( etag:O )) \u0026 err3(( etag:N )) end subgraph first ETag propagation ert2(( etag:O )) --- el2(( etag:O )) \u0026 er2(( etag:N )) er2 --- erl2(( etag:O )) \u0026 err2(( etag:N )) end subgraph initial file change ert(( etag:O )) --- el(( etag:O )) \u0026 er(( etag:O )) er --- erl(( etag:O )) \u0026 err(( etag:N )) end  The old etag:O is replaced by propagating the new etag:N up to the root, where the client will pick it up and explore the tree by comparing the old ETags known to him with the state of the current ETags on the server. This form of sync is called state based sync.\nSingle user sync     To let the client detect changes in the drive (a tree of files and folders) of a user, we rely on the ETag of every node in the tree. The discovery phase starts at the root of the tree and checks if the ETag has changed since the last discovery:\n if it is still the same nothing has changed inside the tree if it changed the client will compare the ETag of all immediate children and recursively descend into every node that changed  This works, because the server side will propagate ETag changes in the tree up to the root.\ngraph TD linkStyle default interpolate basis ec( client ) --|\"stat()\"|ert subgraph ert(( )) --- el(( )) \u0026 er(( )) er --- erl(( )) \u0026 err(( )) end  Multiple users     On an ocis server there is not one user but many. Each of them may have one or more clients running. In the worst case all of them polling the ETag of his home root node every 30 seconds.\nKeep in mind that etags are only propagated inside each distinct tree. No sharing is considered yet.\ngraph TD linkStyle default interpolate basis ec( client ) --|\"stat()\"|ert subgraph ert(( )) --- el(( )) \u0026 er(( )) er --- erl(( )) \u0026 err(( )) end mc( client ) --|\"stat()\"|mrt subgraph mrt(( )) --- ml(( )) \u0026 mr(( )) mr --- mrl(( )) \u0026 mrr(( )) end fc( client ) --|\"stat()\"|frt subgraph frt(( )) --- fl(( )) \u0026 fr(( )) fr --- frl(( )) \u0026 frr(( )) end  Sharing     Storage providers are responsible for persisting shares as close to the storage as possible.\nOne implementation may persist shares using ACLs, another might use custom extended attributes. The chosen implementation is storage specific and always a tradeoff between various requirements. Yet, the goal is to treat the storage provider as the single source of truth for all metadata.\nIf users can bypass the storage provider using e.g. ssh additional mechanisms needs to make sure no inconsistencies arise:\n the ETag must still be propagated in a tree, eg using inotify, a policy engine or workflows triggered by other means deleted files should land in the trash (e.g. rm could be wrapped to move files to trash) overwriting files should create a new version \u0026hellip; other than a fuse fs I see no way of providing this for normal posix filesystems. Other storage backends that use the s3 protocol might provide versions natively.  The storage provider is also responsible for keeps track of references e.g. using a shadow tree that users normally cannot see or representing them as symbolic links in the filesystem (Beware of symbolic link cycles. The clients are currently unaware of them and would flood the filesystem).\nTo prevent write amplification ETags must not propagate across references. When a file that was shared by einstein changes the ETag must not be propagated into any share recipients tree.\ngraph TD linkStyle default interpolate basis ec( einsteins client ) --|\"stat()\"|ert subgraph ml --- mlr(( )) mrt(( )) --- ml(( )) \u0026 mr(( )) mr --- mrl(( )) \u0026 mrr(( )) end mlr -. reference .- er subgraph ert(( )) --- el(( )) \u0026 er(( )) er --- erl(( )) \u0026 err(( )) end mc( maries client ) --|\"stat()\"|mrt  But how can Marie\u0026rsquo;s client detect the change?\nWe are trading writes for reads: the client needs to stat the own tree \u0026amp; all shares or entry points into other storage trees.\nIt would require client changes that depend on the server side actually having an endpoint that can efficiently list all entry points into storages a user has access to including their current etag.\nBut having to list n storages might become a bottleneck anyway, so we are going to have the gateway calculate a virtual root ETag for all entry points a user has access to and cache that.\nServer Side Stat Polling     Every client polls the virtual root ETag (every 30 sec). The gateway will cache the virtual root ETag of every storage for 30 sec as well. That way every storage provider is only stated once every 30 sec (can be throttled dynamically to adapt to storage io load).\ngraph TD linkStyle default interpolate basis ec( client ) --|\"stat()\"|evr subgraph gateway caching virtual etags evr(( )) mvr(( )) fvr(( )) end evr --- ert mvr --- mrt fvr --- frt subgraph ert(( )) --- el(( )) \u0026 er(( )) er --- erl(( )) \u0026 err(( )) end mc( client ) --|\"stat()\"|mvr subgraph mrt(( )) --- ml(( )) \u0026 mr(( )) ml --- mlm(( )) mr --- mrl(( )) \u0026 mrr(( )) end mlm -.- er mvr -.- er fc( client ) --|\"stat()\"|fvr subgraph frt(( )) --- fl(( )) \u0026 fr(( )) fr --- frl(( )) \u0026 frr(( )) end  Since the active clients will poll the etag for all active users the gateway will have their ETag cached. This is where sharing comes into play: The gateway also needs to stat the ETag of all other entry points \u0026hellip; or mount points. That may increase the number of stat like requests to storage providers by an order of magnitude.\nRam considerations     For a single machine using a local posix storage the linux kernel already caches the inodes that contain the metadata that is necessary to calculate the ETag (even extended attributes are supported). With 4k inodes 256 nodes take 1Mb of RAM, 1k inodes take 4Mb and 1M inodes take 4Gb to completely cache the file metadata. For distributed filesystems a dedicated cache might make sense to prevent hammering it with stat like requests to calculate ETags.\nBandwidth considerations     The bandwidth for a single machine might be another bottleneck. Consider a propfind request with roughly 500 bytes and a response with roughly 800 bytes in size:\n At 100Mbit (~10Mb/s) you can receive 20 000 PROPFIND requests At 1000Mbit (~100Mb/s) you can receive 200 000 PROPFIND requests At 10Gbit (~1Gb/s) you can receive 2 000 000 PROPFIND requests  This can be scaled by adding more gateways and sharding users because these components are stateless.\nShare mount point polling cache     What can we do to reduce the number of stat calls to storage providers. Well, the gateway queries the share manager for all mounted shares of a user (or all entry points, not only the users own root/home). The share references contain the storage provider that contains the share. If every user has its own storage provider id the gateway could check in its own cache if the storage root etag has changed. It will be up-to-date because another client likely already polled for its etag. This would reduce the number of necessary stat requests to active storages.\nActive share node cache invalidation     We can extend the lifetime of share ETag cache entries and only invalidate them when the root of the storage that contains them changes its ETag. That would reduce the number of stat requests to the number of active users.\nPush notifications     We can further enhance this by sending push notifications when the root of a storage changes. Which is becoming increasingly necessary for mobile devices anyway.\n","description":"The fallback sync mechanism uses the ETag to determine which part of a sync tree needs to be checked by recursively descending into folders whose ETag has changed. The ETag can be calculated using a stat() call in the filesystem and we are going to explore how many stat() calls are necessary and how the number might be reduced.\nETag propagation     What does ETag propagation mean? Whenever a file changes its content or metadata the ETag or \u0026ldquo;entity tag\u0026rdquo; changes."},{"id":162,"href":"/ocis/deployment/bridge/","title":"Bridge","parent":"Deployment","content":"   Current status How to do it  Install the owncloud 10 graphapi app Enable the graphapi app Grab ocis! Start ocis glauth  configure it Run it! Check it is up and running   Start ocis storage-gateway, storage-authbasic and storage-userprovider Start ocis storage-userprovider Start ocis idp  Set environment variables Run it! Check it is up and running   Start ocis proxy Start ocis-web  Run it!   Patch owncloud Install the owncloud 10 openidconnect app   Next steps      We are planning to build a bridge from ownCloud 10 to ocis. The idea is to have a reverse proxy in front of ownCloud 10 that will forward requests to ownCloud 10 or ocis-reva, depending on the migration status of the logged-in user.\nThis document is a work in progress of the current setup.\nCurrent status     Using ocis and the ownCloud 10 graphapi app it is possible today to use an existing owncloud 10 instance as a user backend and storage backend for ocis.\nHow to do it     Install the owncloud 10 graphapi app     In an owncloud 10 apps folder\n$ git clone git@github.com:owncloud/graphapi.git $ cd graphapi $ composer install Enable the graphapi app     occ a:e graphapi No configuration necessary. You can test with curl:\n$ curl https://cloud.ocis.test/index.php/apps/graphapi/v1.0/users -u admin -s | jq Enter host password for user \u0026#39;admin\u0026#39;: { \u0026#34;value\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;admin\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;admin\u0026#34;, \u0026#34;mail\u0026#34;: null }, { \u0026#34;id\u0026#34;: \u0026#34;demo\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Demo\u0026#34;, \u0026#34;mail\u0026#34;: null }, ... ], \u0026#34;@odata.nextLink\u0026#34;: \u0026#34;https://cloud.ocis.test/apps/graphapi/v1.0/users?$top=10\u0026amp;$skip=10\u0026#34; }   The MS graph api actually asks for Bearer auth, but in order to check users passwords during an LDAP bind we are exploiting ownClouds authentication implementation that will grant access when Basic auth is used. An LDAP Bind you may ask? Read on!  Grab ocis!     $ git clone git@github.com:owncloud/ocis.git $ cd ocis $ make -C ocis build This should give you an ocis/bin/ocis binary. Try listing the help with ocis/bin/ocis --help.\n You can check out a custom branch and build a custom binary which can then be used for the steps below.  Start ocis glauth     We are going to use the built binary and ownCloud 10 graphapi app to turn ownCloud 10 into the datastore for an LDAP proxy.\nconfigure it     While ocis can be configured using environment variables, e.g. for a docker compose setup we are going to use a more traditional config file here. Create a config file for ocis in either /etc/ocis, $HOME/.ocis or ./.config. You can use .json, .yaml or .toml. I will use toml here, because \u0026hellip; reasons.\n[glauth.backend] datastore = \u0026#34;owncloud\u0026#34; # switch to the owncloud datastore servers = [\u0026#34;https://cloud.ocis.test/apps/graphapi/v1.0\u0026#34;] # the graph api endpoint to connect to basedn = \u0026#34;dc=ocis,dc=test\u0026#34; # base dn to construct the LDAP dn. The user `admin` will become `cn=admin,dc=ocis,dc=test`   There is a bug in the config merging for environment variables, cli flags and config files causing log settings not to be picked up from the config file when specifying --extensions. That is why I will\n configure most of the config in a file, adjust logging using OCIS_LOG_* environment variables and specify which extension to run using ocis/bin/ocis server --extensions \u0026quot;comma, separated, list, of, extensions\u0026quot;.    Run it!     For now, we only start the glauth extension:\n$ OCIS_LOG_PRETTY=true OCIS_LOG_COLOR=true ocis/bin/ocis server --extensions \u0026#34;glauth\u0026#34; Check it is up and running     You should now be able to list accounts from your ownCloud 10 oc_accounts table using:\n$ ldapsearch -x -H ldap://127.0.0.1:9125 -b dc=ocis,dc=test -D \u0026#34;cn=admin,dc=ocis,dc=test\u0026#34; -W \u0026#39;(objectclass=posixaccount)\u0026#39; Groups should work as well:\n$ ldapsearch -x -H ldap://127.0.0.1:9125 -b dc=ocis,dc=test -D \u0026#34;cn=admin,dc=ocis,dc=test\u0026#34; -W \u0026#39;(objectclass=posixgroup)\u0026#39;   This is currently a readonly implementation and minimal to the use-case of authenticating users with an IDP.  Start ocis storage-gateway, storage-authbasic and storage-userprovider     We are going to set up reva to authenticate users against our glauth LDAP proxy. This allows us to log in and use the reva cli. The ocis storage-gateway starts the reva gateway which will authenticate basic auth requests using the storage-authbasic service. Furthermore, users have to be available in the storage-userprovider to retrieve displayname, email address and other user metadata.\nTo configure LDAP to use our glauth we add this section to the config file:\n[storage.reva.ldap] idp = \u0026#34;https://ocis.ocis.test\u0026#34; basedn = \u0026#34;dc=ocis,dc=test\u0026#34; binddn = \u0026#34;cn=admin,dc=ocis,dc=test\u0026#34; # an admin user in your oc10 bindpassword = \u0026#34;secret\u0026#34; userschema = { uid = \u0026#34;uid\u0026#34;, displayname = \u0026#34;givenname\u0026#34; } # TODO make glauth return an ownclouduuid and displayname attribute Now we can start all necessary services.\n$ OCIS_LOG_PRETTY=true OCIS_LOG_COLOR=true ocis/bin/ocis server --extensions \u0026#34;glauth, storage-gateway, storage-authbasic, storage-userprovider\u0026#34;   Here I ran out of time. I tried to verify this step with the reva cli: cmd/reva/reva -insecure -host localhost:9142 login basic but it tries to create the user home, which cannot be disabled in a config file: https://github.com/owncloud/ocis/issues/2416#issuecomment-901197053\nstarting STORAGE_GATEWAY_DISABLE_HOME_CREATION_ON_LOGIN=true OCIS_LOG_LEVEL=debug OCIS_LOG_PRETTY=true OCIS_LOG_COLOR=true ocis/bin/ocis server --extensions \u0026quot;storage-gateway, storage-authbasic, storage-userprovider\u0026quot; let me login:\n✗ cmd/reva/reva -insecure -host localhost:9142 reva-cli v1.11.0-27-g95b1f2ee (rev-95b1f2ee) Please use `exit` or `Ctrl-D` to exit this program. \u0026gt;\u0026gt; login basic username: jfd password: OK \u0026gt;\u0026gt; whoami id:\u0026lt;idp:\u0026#34;https://ocis.ocis.test\u0026#34; opaque_id:\u0026#34;jfd\u0026#34; type:USER_TYPE_PRIMARY \u0026gt; username:\u0026#34;jfd\u0026#34; mail:\u0026#34;jfd@butonic.de\u0026#34; display_name:\u0026#34;J\\303\\266rn\u0026#34; uid_number:99 gid_number:99 \u0026gt;\u0026gt; exit I hope https://github.com/owncloud/ocis/pull/2024 fixes the parsing order of things.\neverything below this is outdated\n\u0026hellip; gotta run\n  Start ocis storage-userprovider     ocis/bin/ocis storage-userprovider --ldap-port 19126 --ldap-user-schema-uid uid --ldap-user-schema-displayName givenName --addr :19144 TODO clone git clone git@github.com:cs3org/cs3apis.git\nquery users using grpcurl\ngrpcurl -import-path ./cs3apis/ -proto ./cs3apis/cs3/identity/user/v1beta1/user_api.proto -plaintext localhost:19144 cs3.identity.user.v1beta1.UserAPI/FindUsers ERROR: Code: Unauthenticated Message: auth: core access token not found Start ocis idp     Set environment variables     The built-in libregraph/lico needs environment variables to configure the LDAP server:\nexport OCIS_URL=https://ocis.ocis.test export IDP_LDAP_URI=ldap://127.0.0.1:9125 export IDP_LDAP_BASE_DN=\u0026#34;dc=ocis,dc=test\u0026#34; export IDP_LDAP_BIND_DN=\u0026#34;cn=admin,dc=ocis,dc=test\u0026#34; export IDP_LDAP_BIND_PASSWORD=\u0026#34;its-a-secret\u0026#34; export IDP_LDAP_SCOPE=sub export IDP_LDAP_LOGIN_ATTRIBUTE=uid export IDP_LDAP_NAME_ATTRIBUTE=givenName Don\u0026rsquo;t forget to use an existing user with admin permissions (only admins are allowed to list all users via the graph api) and the correct password.\nRun it!     You can now bring up ocis/bin/ocis idp with:\n$ ocis/bin/ocis idp server --iss http://127.0.0.1:9130 --signing-kid gen1-2020-02-27 ocis/bin/ocis idp needs to know\n --iss http://127.0.0.1:9130 the issuer, which must be a reachable http endpoint. For testing an ip works. For openid connect HTTPS is NOT optional. This URL is exposed in the http://127.0.0.1:9130/.well-known/openid-configuration endpoint and clients need to be able to connect to it, securely. We will change this when introducing the proxy. --signing-kid gen1-2020-02-27 a signature key id, otherwise the jwks key has no name, which might cause problems with clients. a random key is ok, but it should change when the actual signing key changes.    TODO: the port in the --iss needs to be changed when hiding the idp behind the proxy TODO: the signing keys and encryption keys should be precreated so they are reused between restarts. Otherwise all client sessions will become invalid when restarting the IdP.    Check it is up and running      Try getting the configuration:  $ curl http://127.0.0.1:9130/.well-known/openid-configuration Check if the login works at http://127.0.0.1:9130/signin/v1/identifier   If you later get a Unable to find a key for (algorithm, kid):PS256, ) Error make sure you did set a --signing-kid when starting ocis/bin/ocis idp by checking it is present in http://127.0.0.1:9130/konnect/v1/jwks.json  Start ocis proxy      Everything below this hint is outdated. Next steps are roughly:\n directly after glauth start the ocis storage-userporvider?  how to verify that works? https://github.com/fullstorydev/grpcurl   start proxy  the ocis ipd url can be changed to https when do we hide oc10 behind ocis? -\u0026gt; advanced bridge at the end? for now run it without touching the existing oc10 instance   start web  verify the login works, but how?  TODO the login works, but then the capabilities requests will fail \u0026hellip; unless we make the proxy answer them by talking to oc10?      Other ideas:\n the owncloud backend in glauth also works with the user provisioning api \u0026hellip; no changes to a running production instance? db access could be done with a read only account as well\u0026hellip;    Start ocis-web     Run it!     Point ocis-web to your owncloud domain and tell it where to find the openid connect issuing authority:\n$ bin/web server --web-config-server https://cloud.example.com --oidc-authority https://192.168.1.100:9130 --oidc-metadata-url https://192.168.1.100:9130/.well-known/openid-configuration --oidc-client-id ocis ocis-web needs to know\n --web-config-server https://cloud.example.com is ownCloud url with webdav and ocs endpoints (oc10 or ocis) --oidc-authority https://192.168.1.100:9130 the openid connect issuing authority, in our case oidc-idp, running on port 9130 --oidc-metadata-url https://192.168.1.100:9130/.well-known/openid-configuration the openid connect configuration endpoint, typically the issuer host with .well-known/openid-configuration, but there are cases when another endpoint is used, e.g. ping identity provides multiple endpoints to separate domains --oidc-client-id ocis the client id we will register later with ocis-idp in idp OIDC client settings  Patch owncloud     While the UserSession in ownCloud 10 is currently used to test all available IAuthModule implementations, it immediately logs out the user when an exception occurs. However, existing owncloud 10 instances use the oauth2 app to create Bearer tokens for mobile and desktop clients.\nTo give the openidconnect app a chance to verify the tokens we need to change the code a bit. See https://github.com/owncloud/core/pull/37043 for a possible solution.\n Note: The PR is hot \u0026hellip; as in younger than this list of steps. And it messes with authentication. Use with caution.\n Install the owncloud 10 openidconnect app     In an owncloud 10 apps folder\n$ git clone git@github.com:owncloud/openidconnect.git $ cd openidconnect $ composer install After enabling the app configure it in config/oidc.config.php\n$CONFIG = [ \u0026#39;openid-connect\u0026#39; =\u0026gt; [ \u0026#39;provider-url\u0026#39; =\u0026gt; \u0026#39;https://192.168.1.100:9130\u0026#39;, \u0026#39;client-id\u0026#39; =\u0026gt; \u0026#39;ocis\u0026#39;, \u0026#39;loginButtonName\u0026#39; =\u0026gt; \u0026#39;OpenId Connect @ Konnectd\u0026#39;, ], \u0026#39;debug\u0026#39; =\u0026gt; true, // if using self-signed certificates  // allow the different domains access to the ocs and webdav endpoints:  \u0026#39;cors.allowed-domains\u0026#39; =\u0026gt; [ \u0026#39;https://cloud.example.com\u0026#39;, \u0026#39;http://localhost:9100\u0026#39;, ], ]; In the above configuration replace\n provider-url with the URL to your ocis-idp issuer https://cloud.example.com with the URL to your ownCloud 10 instance http://localhost:9100 with the URL to your ownCloud Web instance   Note: By default the openidconnect app will use the email of the user to match the user from the oidc userinfo endpoint with the ownCloud account. So make sure your users have a unique primary email.\n Next steps     Aside from the above todos these are the next steps\n tie it all together behind ocis-proxy create an ocis bridge command that runs all the ocis services in one step with a properly preconfigured idp OIDC client ocis-idp for ownCloud Web and the owncloud 10 openidconnect app, as well as a randomized --signing-kid.  ","description":"Current status How to do it  Install the owncloud 10 graphapi app Enable the graphapi app Grab ocis! Start ocis glauth  configure it Run it! Check it is up and running   Start ocis storage-gateway, storage-authbasic and storage-userprovider Start ocis storage-userprovider Start ocis idp  Set environment variables Run it! Check it is up and running   Start ocis proxy Start ocis-web  Run it!"},{"id":163,"href":"/ocis/development/build/","title":"Build","parent":"Development","content":"   Build requirements Get the sources Build the oCIS binary Build a local oCIS docker image      Build requirements     see Development - Getting Started\nGet the sources     git clone https://github.com/owncloud/ocis.git cd ocis Build the oCIS binary     You only need to run following command if you have changed protobuf definitions or the frontend part in one of the extensions. Run the command in the root directory of the repository. Otherwise you can skip this step and proceed to build the oCIS binary. This will usually modify multiple embed.go files because we embed the frontend build output in these embed.go files and a timestamp will be updated and also minor differences are expected between different Node.js versions.\nmake generate The next step is to build the actual oCIS binary. Therefore you need to navigate to the subdirectory ocis and start the build process.\ncd ocis make build After the build process finished, you can find the binary within the bin/ folder (in ocis/bin relative to the oCIS repository root folder).\nTry to run it: ./bin/ocis h\nBuild a local oCIS docker image     If you are developing and want to run your local changes in a docker or docker-compose setup, you have to build an image locally.\nTherefore run following commands in the root of the oCIS repository:\ndocker build -t owncloud/ocis:dev . Then you can test as usual via\ndocker run --rm -ti owncloud/ocis:dev ","description":"Build requirements Get the sources Build the oCIS binary Build a local oCIS docker image      Build requirements     see Development - Getting Started\nGet the sources     git clone https://github.com/owncloud/ocis.git cd ocis Build the oCIS binary     You only need to run following command if you have changed protobuf definitions or the frontend part in one of the extensions."},{"id":164,"href":"/ocis/storage-backends/eos/","title":"EOS","parent":"Storage backends","content":"   Docker dev environment for eos storage  1. Start eos \u0026amp; ocis containers 2. LDAP support 3. Home storage 4. Users storage 5. Metadata storage 6. Accounts service   Verification Further exploration Cleaning up Troubleshooting  Docker-compose exits right away Where are the logs ? How do I update a service in the ocis container? Creation and upload of files does not work Uploading big files appears to hang Running out of space quickly        oCIS can be configured to run on top of eos. While the eos documentation does cover a lot of topics, it leaves out some details that you may have to either pull from various docker containers, the forums or even the source itself.\nThis document is a work in progress of the current setup.\nDocker dev environment for eos storage     We begin with the docker-compose.yml found in https://github.com/owncloud/ocis/tree/master/ocis/ and switch it to eos-storage.\n1. Start eos \u0026amp; ocis containers     Start the eos cluster and ocis via the compose stack.\ndocker-compose up -d   The first time the ocis container starts up, it will compile ocis from scratch which can take a while. To follow progress, run docker-compose logs -f --tail=10 ocis  2. LDAP support     Configure the OS to resolve users and groups using ldap\ndocker-compose exec -d ocis /start-ldap Check that the OS in the ocis container can now resolve einstein or the other demo users\n$ docker-compose exec ocis id einstein uid=20000(einstein) gid=30000(users) groups=30000(users),30001(sailing-lovers),30002(violin-haters),30007(physics-lovers)   If the user is not found at first you might need to wait a few more minutes in case the ocis container is still compiling.  We also need to restart the storage-userprovider service, so it picks up the changed environment. Without a restart it is not able to resolve users from LDAP.\ndocker-compose exec ocis ./bin/ocis kill storage-userprovider docker-compose exec ocis ./bin/ocis run storage-userprovider 3. Home storage     Kill the home storage. By default it uses the ocis storage driver. We need to switch it to the eoshome driver:\ndocker-compose exec ocis ./bin/ocis kill storage-home docker-compose exec -e STORAGE_HOME_DRIVER=eoshome ocis ./bin/ocis run storage-home 4. Users storage     Kill the users storage. By default it uses the ocis storage driver. We need to switch it to the eos driver:\ndocker-compose exec ocis ./bin/ocis kill storage-users docker-compose exec -e STORAGE_USERS_DRIVER=eos ocis ./bin/ocis run storage-users 5. Metadata storage     First we need to create the metadata root in eos and set an owner:\ndocker-compose exec ocis eos mkdir -p /eos/dockertest/ocis/metadata docker-compose exec ocis eos chown 2:2 /eos/dockertest/ocis/metadata   The uid and gid 2 are referencing the user daemon inside the ocis container. That user is also configured when restarting the accounts service later. For production systems you should create a dedicated user for the metadata storage.  Kill the metadata storage. By default it uses the ocis storage driver. We need to switch it to the eos driver:\ndocker-compose exec ocis ./bin/ocis kill storage-system docker-compose exec -e STORAGE_SYSTEM_DRIVER=eos -e STORAGE_SYSTEM_ROOT=/eos/dockertest/ocis/metadata ocis ./bin/ocis run storage-system 6. Accounts service     Kill the accounts service. By default it uses the ocis storage driver. We need to switch it to the eos driver:\ndocker-compose exec ocis ./bin/ocis kill accounts docker-compose exec -e ACCOUNTS_SERVICE_USER_USERNAME=daemon -e ACCOUNTS_SERVICE_USER_UID=2 -e ACCOUNTS_SERVICE_USER_GID=2 ocis ./bin/ocis run accounts Verification     Login with einstein / relativity, upload a file to einsteins home and verify the file is there using\ndocker-compose exec ocis eos ls -l /eos/dockertest/reva/users/4/4c510ada-c86b-4815-8820-42cdf82c3d51/ -rw-r--r-- 1 einstein users 10 Jul 1 15:24 newfile.txt If the problem persists, please check the troubleshooting section about uploads.\nFurther exploration     EOS has a built-in shell that you can enter using\n$ docker-compose exec mgm-master eos # --------------------------------------------------------------------------- # EOS Copyright (C) 2011-2019 CERN/Switzerland # This program comes with ABSOLUTELY NO WARRANTY; for details type `license\u0026#39;. # This is free software, and you are welcome to redistribute it # under certain conditions; type `license\u0026#39; for details. # --------------------------------------------------------------------------- EOS_INSTANCE=eostest EOS_SERVER_VERSION=4.6.5 EOS_SERVER_RELEASE=1 EOS_CLIENT_VERSION=4.6.5 EOS_CLIENT_RELEASE=1 EOS Console [root://localhost] |/\u0026gt; help access Access Interface accounting Accounting Interface acl Acl Interface archive Archive Interface attr Attribute Interface backup Backup Interface clear Clear the terminal cd Change directory chmod Mode Interface chown Chown Interface config Configuration System console Run Error Console cp Cp command debug Set debug level exit Exit from EOS console file File Handling fileinfo File Information find Find files/directories newfind Find files/directories (new implementation) fs File System configuration fsck File System Consistency Checking fuse Fuse Mounting fusex Fuse(x) Administration geosched Geoscheduler Interface group Group configuration health Health information about system help Display this text info Retrieve file or directory information inspector Interact with File Inspector io IO Interface json Toggle JSON output flag for stdout license Display Software License ls List a directory ln Create a symbolic link map Path mapping interface member Check Egroup membership mkdir Create a directory motd Message of the day mv Rename file or directory node Node configuration ns Namespace Interface pwd Print working directory quit Exit from EOS console quota Quota System configuration reconnect Forces a re-authentication of the shell recycle Recycle Bin Functionality rmdir Remove a directory rm Remove a file role Set the client role route Routing interface rtlog Get realtime log output from mgm \u0026amp; fst servers silent Toggle silent flag for stdout space Space configuration stagerrm Remove disk replicas of a file if it has tape replicas stat Run \u0026#39;stat\u0026#39; on a file or directory squash Run \u0026#39;squashfs\u0026#39; utility function test Run performance test timing Toggle timing flag for execution time measurement touch Touch a file token Token interface tracker Interact with File Tracker transfer Transfer Interface version Verbose client/server version vid Virtual ID System Configuration whoami Determine how we are mapped on server side who Statistics about connected users ? Synonym for \u0026#39;help\u0026#39; .q Exit from EOS console EOS Console [root://localhost] |/\u0026gt; But this is a different adventure. See the links at the top of this page for other sources of information on eos.\nCleaning up     To clean up and start completely from scratch, run docker-compose down -v. Then delete the local \u0026ldquo;bin\u0026rdquo; folder as root which contains the ocis binaries compiled by the \u0026ldquo;ocis\u0026rdquo; docker.\nTroubleshooting     Docker-compose exits right away     When running docker-compose up -d ocis exits right away.\nYou can check the error code using docker-compose ps and investigate further by running only ocis again using docker-compose up ocis (without -d so you can see what is going on in the foreground). One reason might be that the binary was already built but does not match the container env. Try running make clean before running docker-compose up ocis so it gets built inside the container.\nWhere are the logs ?     The ocis logs can be accessed using docker-compose logs ocis. Add -f for following.\nHow do I update a service in the ocis container?      docker-compose exec ocis make clean build to update the binary docker-compose exec ocis ./bin/ocis kill \u0026lt;service\u0026gt; to kill the service docker-compose exec ocis ./bin/ocis run \u0026lt;service\u0026gt; to start the service. Do not forget to set any env vars, e.g. docker-compose exec -e STORAGE_HOME_DRIVER=eoshome -e STORAGE_DRIVER_EOS_LAYOUT=\u0026quot;{{substr 0 1 .Id.OpaqueId}}/{{.Id.OpaqueId}}\u0026quot; ocis ./bin/ocis run storage-home  Creation and upload of files does not work     If the upload did not work, please check the status of the eos space using the command docker-compose exec mgm-master eos fs ls. In case the default space appears as offline, run docker-compose exec mgm-master eos space set default on.\nUploading big files appears to hang     Please note that the uploads first go into the \u0026ldquo;ocis\u0026rdquo; docker and land in its \u0026ldquo;/tmp\u0026rdquo; folder, then gets copied over to the EOS docker using xrdcopy. This is why uploading first transfers all bytes and then seem to hang for a while during the final copy.\nRunning out of space quickly     The EOS dockers are configured with replication, so every file uploaded there will be replicated 4 times, so make sure there is enough physical space on disk when testing.\nAlso please note that older failed uploads might still be present in the \u0026ldquo;/tmp\u0026rdquo; directory of the \u0026ldquo;ocis\u0026rdquo; container.\n","description":"Docker dev environment for eos storage  1. Start eos \u0026amp; ocis containers 2. LDAP support 3. Home storage 4. Users storage 5. Metadata storage 6. Accounts service   Verification Further exploration Cleaning up Troubleshooting  Docker-compose exits right away Where are the logs ? How do I update a service in the ocis container? Creation and upload of files does not work Uploading big files appears to hang Running out of space quickly        oCIS can be configured to run on top of eos."},{"id":165,"href":"/apis/http/graph/users/","title":"Users","parent":"LibreGraph","content":"   Users API  Reading users  GET /me GET /users GET /users?$expand=memberOf GET /users/{userid or accountname} GET /users/{userid or accountname}?$expand=memberOf   Creating / Updating Users  POST /users  Request Body Response   DELETE /users/{id} PATCH /users/{id}   Change password  POST /me/changePassword  Request Body            Users API     The Users API is implementing a subset of the functionality of the MS Graph User resource The JSON representation of a User handled by the Users API looks like this:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;einstein@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;einstein\u0026#34; } Our implementation currently supports only a limited set of Attributes of Users:\n   Attribute Description     displayName The full name of the user, usually a combination of given name and last name   mail The user\u0026rsquo;s email address   onPremisesSamAccountName The loginname/account name of the user   id An unique, stable readonly identifier for the user that stays the same for the whole lifetime of the User, usually a UUID   passwordProfile Contains the password of the users. This is only present when updating or creating users. It is never returned by the API    Reading users     GET /me     Returns the user object of the currently signed-in user\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/me\u0026#39; -u user:password Response:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;einstein@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;einstein\u0026#34; } GET /users     Returns a list of all users\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/users\u0026#39; -u user:password Response:\n{ \u0026#34;value\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;einstein@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;einstein\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;Maurice Moss\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;058bff95-6708-4fe5-91e4-9ea3d377588b\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;moss@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;moss\u0026#34; } ] } GET /users?$expand=memberOf     Returns a list of all users\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/users?$expand=memberOf\u0026#39; -u user:password Response:\n{ \u0026#34;value\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;einstein@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;einstein\u0026#34;, \u0026#34;memberOf\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;509a9dcd-bb37-4f4f-a01a-19dca27d9cfa\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;sailing-lovers\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;6040aa17-9c64-4fef-9bd0-77234d71bad0\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;violin-haters\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;dd58e5ec-842e-498b-8800-61f2ec6f911f\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;physics-lovers\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;262982c1-2362-4afa-bfdf-8cbfef64a06e\u0026#34; } ], }, { \u0026#34;displayName\u0026#34;: \u0026#34;Maurice Moss\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;058bff95-6708-4fe5-91e4-9ea3d377588b\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;moss@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;moss\u0026#34;, \u0026#34;memberOf\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;509a9dcd-bb37-4f4f-a01a-19dca27d9cfa\u0026#34; } ], } ] } GET /users/{userid or accountname}     Example:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/users/058bff95-6708-4fe5-91e4-9ea3d377588b\u0026#39; -u user:password Response:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Maurice Moss\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;058bff95-6708-4fe5-91e4-9ea3d377588b\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;moss@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;moss\u0026#34; } GET /users/{userid or accountname}?$expand=memberOf     Example:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/users/058bff95-6708-4fe5-91e4-9ea3d377588b?$expand=memberOf\u0026#39; -u user:password Response:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Maurice Moss\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;058bff95-6708-4fe5-91e4-9ea3d377588b\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;moss@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;moss\u0026#34;, \u0026#34;memberOf\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;509a9dcd-bb37-4f4f-a01a-19dca27d9cfa\u0026#34; } ], } Creating / Updating Users     POST /users     Use this to create a new user.\nRequest Body     Note the missing \u0026quot;id\u0026quot; Attribute. It will be generated by the server:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Example User\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;example@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;example\u0026#34;, \u0026#34;passwordProfile\u0026#34;: { \u0026#34;password\u0026#34;: \u0026#34;ThePassword\u0026#34; } } Response     When successful, the response will return the new user, without the password, but including the newly allocated \u0026quot;id\u0026quot;:\n{ \u0026#34;displayName\u0026#34;:\u0026#34;Example User\u0026#34;, \u0026#34;id\u0026#34;:\u0026#34;c067b139-c91c-4e47-8be6-669156a0587b\u0026#34;, \u0026#34;mail\u0026#34;:\u0026#34;example@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;:\u0026#34;example\u0026#34; } DELETE /users/{id}     Example:\ncurl -k --request DELETE \u0026#39;https://localhost:9200/graph/v1.0/users/c067b139-c91c-4e47-8be6-669156a0587b\u0026#39; -u user:password When successful the API returns no response body and the HTTP status code 204 (No Content)\nPATCH /users/{id}     Updating attributes of a single user can be done with a patch request. The Request Body contains the new values of the attributes to be updated. E.g. to update the displayName Attribute:\ncurl -k --header \u0026#34;Content-Type: application/json\u0026#34; \\ --request PATCH --data \u0026#39;{\u0026#34;displayName\u0026#34;: \u0026#34;Test User\u0026#34; }\u0026#39; \\ \u0026#39;https://localhost:9200/graph/v1.0/users/c54b0588-7157-4521-bb52-c1c8ca84ea71\u0026#39; -u user:password Similar to creating a user via POST, the PATCH request will return the user object containing the new attribute values.\nChange password     POST /me/changePassword     Users can change their own password by sending a POST request to /me/changePassword\nRequest Body     { \u0026#34;currentPassword\u0026#34;: \u0026#34;current\u0026#34;, \u0026#34;newPassword\u0026#34;: \u0026#34;new\u0026#34; } When successful the API returns no response body and the HTTP status code 204 (No Content)\ncurl -i -k --header \u0026#34;Content-Type: application/json\u0026#34; \\ --request POST --data \u0026#39;{\u0026#34;currentPassword\u0026#34;: \u0026#34;current\u0026#34;, \u0026#34;newPassword\u0026#34;: \u0026#34;new\u0026#34; }\u0026#39; \\ \u0026#39;https://localhost:9200/graph/v1.0/me/changePassword\u0026#39; -u user:current ","description":"Users API  Reading users  GET /me GET /users GET /users?$expand=memberOf GET /users/{userid or accountname} GET /users/{userid or accountname}?$expand=memberOf   Creating / Updating Users  POST /users  Request Body Response   DELETE /users/{id} PATCH /users/{id}   Change password  POST /me/changePassword  Request Body            Users API     The Users API is implementing a subset of the functionality of the MS Graph User resource The JSON representation of a User handled by the Users API looks like this:"},{"id":166,"href":"/ocis/development/beta-testplan/","title":"Beta testplan","parent":"Development","content":"Beta Testing     This document is supposed to give you some ideas how and what to test on ocis. It\u0026rsquo;s not meant to be an extensive list of all tests to be done, rather it should help you, as beta-tester, to get started and enable you to get creative and create your own test-cases. Derive from these examples, be creative, do unusual and unconventional things, to try to break things.\nOne option to create new test-cases and to stress the system is to examine what the API acceptance-tests or the web-UI does, examine the requests and do something a bit different with curl. This is also a good way to find out how APIs work that are not already fully documented.\nSome cases have suggested setup steps, but feel free to use other setups. This can include:\n different deployment methods (e.g. running single binary, docker-container, docker-compose setup, individual services in own docker containers) different identity managers (e.g. different external LDAP, internal IDM) different reverse proxies (e.g. traefik) different OpenIDConnect IDPs (e.g builtin IDP, keycloak, AzureAD)  for some functionalities you will need an LDAP server where the IDP and oCIS both get the users from keycloak example service configuration   different storage systems (decomposedFS on local POSIX (default), decomposedFS on NFS, S3 )  It\u0026rsquo;s a good idea to test ocis in the same environment where you are planning to use it later (with the LDAP server, storage system, etc. of your organisation).\nrun oCIS     For a quick start, please have a look into the getting started documentation of oCIS If you would like to access oCIS remotely please refer to the Basic Remote Setup section.\nadditional tips      to allow basic auth (e.g. to easily access oCIS using curl commands) you have to set PROXY_ENABLE_BASIC_AUTH=true environment variable if you cannot use real SSL Certificates set OCIS_INSECURE=true as environment variable  Testplan     user / groups from LDAP     Prerequisite:\n connect ocis to your preferred LDAP server create users and groups in LDAP start ocis with basic auth  documentation resources:\n configure ocis with LDAP sharing API is compatible to ownCloud 10 webDav operations     Test Case Expected Result Comment     share file / folder to a group member of the group can access shared item    share file / folder to a group, remove member from group in LDAP removed member should not have access to the shared item    share file / folder to a group with different permissions, as receiver try to violate the permissions receiver should not be able to violate the permissions    try to login with wrong credentials login should not be possible    set a quota in LDAP, upload files till the quota is exceeded upload should work till quota is full, uploads should not work when quota is full    try to access files / folders of other users access should not be possible    try to share with non-existing users and groups sharing should not be possible    try to share with user/groups-names that contain special characters sharing should be possible, access shares with that user does not create any problems     other sharing     should be tried in various ways and in different environments\ndocumentation resources:\n sharing API is compatible to ownCloud 10 webDav operations     Test Case Expected Result Comment     share a file/folder with the same name from different users receiver can accept and access both file/folders and distinguish them    share a file/folder with the same name but different permissions from different users receiver can access both file/folders according to the permissions    share a file/folder with the same name but different locations from one user receiver can accept and access both file/folders and distinguish them    share a file/folder back to the sharer sharing back should not be possible    re-share a file/folder with different permissions sharing with lower permissions is possible, but not with higher    decline received share shared resource should not be shown to the receiver     parallel deployment      configure ocis with LDAP setup oC10 and ocis in parallel create users and groups in LDAP  documentation resources:\n sharing API is compatible to ownCloud 10     Test Case Expected Result Comment     share file / folder to a group in one implementation (use different permissions), access the items with the other implementation, try to violate the permissions receiver should not be able to violate the permissions    share file / folder to a group, remove member from group in LDAP, try to access items with the removed member from both implementations removed member should not have access to the shared item     Spaces     Prerequisite:\n start ocis with basic auth variable declaration, for curl examples:  SERVER_URI=https://localhost:9200 GRAPH_API_PATH=graph/v1.0 SHARE_API_PATH=ocs/v2.php/apps/files_sharing/api/v1/shares USER=admin PASSWORD=admin  create a new user curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$GRAPH_API_PATH/users\u0026quot; -X POST -d'{\u0026quot;displayName\u0026quot;:\u0026quot;Example User\u0026quot;,\u0026quot;mail\u0026quot;:\u0026quot;example@example.org\u0026quot;,\u0026quot;onPremisesSamAccountName\u0026quot;:\u0026quot;example\u0026quot;,\u0026quot;passwordProfile\u0026quot;:{\u0026quot;password\u0026quot;:\u0026quot;ThePassword\u0026quot;}}' give the user the \u0026ldquo;Space Admin\u0026rdquo; role  get the id of the user: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/users/\u0026lt;user-name\u0026gt; | jq '.id' assign role user to role: curl -k -u $USER:$PASSWORD $SERVER_URI/api/v0/settings/assignments-add -d'{\u0026quot;account_uuid\u0026quot;:\u0026quot;\u0026lt;user-id\u0026gt;\u0026quot;,\u0026quot;role_id\u0026quot;:\u0026quot;2aadd357-682c-406b-8874-293091995fdd\u0026quot;}   create a space: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$GRAPH_API_PATH/drives\u0026quot; -X POST -d'{\u0026quot;Name\u0026quot;:\u0026quot;Space for finance\u0026quot;,\u0026quot;driveType\u0026quot;:\u0026quot;project\u0026quot;, \u0026quot;description\u0026quot;:\u0026quot;we need some space\u0026quot;}' list spaces: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/me/drives disable a space: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X DELETE delete a space: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X DELETE -H'Purge: T' restore a space: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X PATCH -d\u0026quot;{}\u0026quot; -H\u0026quot;Restore: true\u0026quot; rename the space: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X PATCH -d'{\u0026quot;name\u0026quot;:\u0026quot;नेपालि नाम\u0026quot;}' change description of the space: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X PATCH -d'{\u0026quot;description\u0026quot;:\u0026quot;this contains important data\u0026quot;}' change quota of the space curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X PATCH -d'{\u0026quot;quota\u0026quot;:{\u0026quot;total\u0026quot;:\u0026lt;bytes\u0026gt;}}' change image of space:  upload an image file to the .spaces folder: curl -k -u $USER:$PASSWORD https://localhost:9200/dav/spaces/\u0026lt;space-id\u0026gt;/.space/\u0026lt;file-name\u0026gt; -T \u0026lt;path-of-local-image\u0026gt; -v note the id provided in the Oc-Fileid header set the image as \u0026ldquo;special-folder\u0026rdquo;: curl -k -u $USER:$PASSWORD $SERVER_URI/$GRAPH_API_PATH/drives/\u0026lt;space-id\u0026gt; -X PATCH -d'{\u0026quot;special\u0026quot;:[{\u0026quot;specialFolder\u0026quot;:{\u0026quot;name\u0026quot;:\u0026quot;image\u0026quot;},\u0026quot;id\u0026quot;:\u0026quot;\u0026lt;oc-fileid\u0026gt;\u0026quot;}]}'   share a space: curl -k -u $USER:$PASSWORD $SERVER_URI/$SHARE_API_PATH -d'space_ref=\u0026lt;space-id\u0026gt;\u0026amp;shareType=7\u0026amp;shareWith=\u0026lt;receiver-username\u0026gt;\u0026amp;role=\u0026lt;role\u0026gt;'  Roles:  viewer editor manager     share a resource within a space curl -k -u $USER:$PASSWORD $SERVER_URI/$SHARE_API_PATH -d'shareType=0\u0026amp;shareWith=\u0026lt;receiver-username\u0026gt;\u0026amp;space_ref=\u0026lt;space-id\u0026gt;%2F\u0026lt;resource\u0026gt;\u0026amp;permissions=\u0026lt;permissions\u0026gt;  possible permissions  1 = read 2 = update 4 = create 8 = delete 15 = read/write 16 = share 31 = All permissions     WebDAV  root: https://\u0026lt;server-uri\u0026gt;/dav/spaces/\u0026lt;space-id\u0026gt; example commands for operations       Test Case Expected Result Comment     create a space space should exist    create a space with special characters as a name \u0026amp; description space should exist    create a space, delete the space space should not exist    create a space, share the space with a user space should be accessible    create a space, share the space with a group space should be accessible, space content is shared among all users    create a space, share the space with a group, disable the space space should not be accessible    create a space, share the space with a user, disable the space, restore the space space should be accessible    create a space, disable the space, delete the space, restore the space it should not be possible to restore the space    create a space, disable the space, try to share the space sharing the space should not be possible    create a space, try to delete the space it should not be possible to delete an enabled space    create \u0026amp; share a space with a group with viewer role, do CRUD file/folder operations with WebDAV space content is readable but neither space not content should not be writable    create \u0026amp; share a space with a group with editor role, do CRUD file/folder operations with WebDAV space and content should be writable    create a space, try CRUD file/folder operations with WebDAV on the space with a user that its not shared with space and content should not be accessible    create a space with a quota, share the space, upload files till the quota is exceeded upload should work till quota is full, uploads should not work when quota is full    share file/folders from inside a space (see other sharing section) sharing works and obeys the permissions    create a space, rename the space new name should be displayed in API calls and web    create a space, change description of the space new description should be displayed in API calls and web    create a space, set quota, change quota of the space new quota is obeyed    create a space, set quota, change quota of the space to a value that is lower than the sum of data already stored new quota is obeyed, new files cannot be uploaded    try the various space operations with invalid data good error output, server does not crash    try the various space operations without the correct permissions operations are not possible without sufficient permissions    try the various space operations on personal and virtual spaces server should not crash, good error responses    try the various space operations sending invalid data (invalid numbers, wrong types, invalid JSON, etc.) server should not crash, good error responses     Web     Prerequisite:\n connect ocis to your preferred LDAP server create users and groups in LDAP Use your preferred browser (Firefox 94-96, Chrome 92-97, Opera 81-82, Edge 96-97, Safari 14-15) to access the built-in webUI (by default: https://localhost:9200)     Test Case Expected Result Comment     Login with the created user User logs in.    Create a text file. Text editor can open, file is saved.    Create a text file with special characters as name file is created if the name is legal otherwise an error is displayed    Modify a text file. File can be modified, no problems found.    Rename a file. File is renamed.    Upload a file. File is uploaded, no problems found.    Upload multiple files at once. Files are uploaded, no problems found.    delete all content of a folder at once. Folder is cleaned, items are visible in the trashbin    Overwrite a file by uploading a new version. File is uploaded and overwritten, file versions are displayed    Overwrite a file by uploading a new version, restore the original version. File is restored correctly    upload a huge file File is uploaded, no problems found.    upload a huge file, cancel the upload, restart the upload Upload continues at the position where it was cancelled, file is uploaded completely.    Remove a file. File is removed correctly, it appears in the trashbin.    Restore the deleted file from trashbin File is restored correctly    Remove multiple files that have the same name but are located in different folders Files are removed correctly, they appear in the trashbin.    Restore some of the deleted files from trashbin Files are restored correctly in the correct folders.    Restore some of the deleted files from trashbin, but delete the original containing folder before Files are restored correctly    Clean files from the trashbin files are permanently deleted    Create a lot of files, delete a lot of files, empty the trashbin trashbin is cleaned    Move a file inside a folder. There are not problems on the process.    Move a file inside a folder that already contains a file with the same name File is not moved, content in the destination is not overwritten    Create a folder. Folder is created, no MKCOL problems appear.    Create a folder with special characters as name Folder is created if the name is legal otherwise an error is displayed    Create a folder with a name of an already existing file/folder Folder is not created, an error is displayed    Create a folder with a lot of subfolders, use special characters in the name Folder is created, no MKCOL problems appear.    Delete a folder. Folder is removed.    Move a folder inside another. No problems while moving the folder.    open images in mediaviewer files are displayed correctly.    open videos in mediaviewer files are displayed correctly.    switch through videos and images in mediaviewer files are displayed correctly.    Share a file by public link. Link is created and can be accessed.    Share a folder by public link. Link is created and can be accessed.    Share a file with another user. It is shared correctly.    Share a folder with another user. It is shared correctly.    Share a file with a group. It is shared correctly.    Share a folder with a group. It is shared correctly.    Share a folder with userB giving edit permissions. As userB do CRUD operations on items inside the received folder userB doesn\u0026rsquo;t find any problem while interacting with files.    Use your mobile device to access the UI All elements reachable    do tests mentioned in the spaces section using the web-UI      Desktop Client     Prerequisite:\n install the desktop client on your preferred OS start ocis connect a new account in the desktop client to ocis e.g. https://localhost:9200 if you are running the server and the client on the same machine accept the self-signed certificate you will be redirected to the browser, accept the certificate there also login as any user allow the \u0026ldquo;ownCloud desktop app\u0026rdquo; to access ocis select a folder to sync     Test Case Expected Result Comment     Set up two clients with the same user. Change files, add some, delete some, move some, create folders. Changes sync properly in both clients without errors.    Share a file using contextual menu with userB. Option to share appears in the contextual menu and file is correctly shared.     Mobile Clients (iOS || Android)     Prerequisite:\n install the ownCloud app on your mobile start oCIS as described in Basic Remote Setup connect a new account in the mobile client to ocis accept the self-signed certificate you will be redirected to the browser, accept the certificate there also login as any user allow the mobile app to access ocis     Test Case Expected Result Comment     Connect to server, see files, download one. No problems while downloading.    Upload a file using mobile client. No problems while uploading.    Share a file with userB using mobile client. File is correctly shared.     other WebDAV clients     Prerequisite:\n start ocis with basic auth     Test Case Expected Result Comment     use ocis as webDAV external storage in ownCloud 10 resource access works    access webDAV with your file-manager that will not give you a good UX, but ocis should not crash Urls: https://\u0026lt;ocis-server\u0026gt;/remote.php/webdav \u0026amp; https://\u0026lt;ocis-server\u0026gt;/remote.php/dav/files/\u0026lt;username\u0026gt;   access webDAV with the \u0026ldquo;remote-files\u0026rdquo; function of LibreOffice files are accessible and can be written back     Tips for testing     WebDav     WebDav is accessible under different path\n old: https://\u0026lt;ocis-server\u0026gt;/remote.php/webdav new: https://\u0026lt;ocis-server\u0026gt;/remote.php/dav/files/\u0026lt;username\u0026gt; spaces: https://\u0026lt;ocis-server\u0026gt;/dav/spaces/\u0026lt;space-id\u0026gt;  WebDav specifications can be found on http://webdav.org/\nhere some general WebDav request examples:\nvariable declaration:\nSERVER_URI=https://localhost:9200 API_PATH=remote.php/webdav USER=admin PASSWORD=admin  list content of root folder: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/\u0026quot; -X PROPFIND list content of sub-folder: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/f1\u0026quot; -X PROPFIND create a folder: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/folder\u0026quot; -X MKCOL delete a resource: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/folder\u0026quot; -X DELETE rename / move a resource: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/folder\u0026quot; -X MOVE -H \u0026quot;Destination: $SERVER_URI/$API_PATH/renamed\u0026quot; copy a resource: curl -k -u $USER:$PASSWORD \u0026quot;$SERVER_URI/$API_PATH/folder\u0026quot; -X COPY -H \u0026quot;Destination: $SERVER_URI/$API_PATH/folder-copy\u0026quot;  decode HTTPS traffic with wireshark     To decode the HTTPS traffic we need the keys that were used to encrypt the traffic. Those keys are kept secret by the clients, but we can request the clients to save them in a specific file, so that wireshark can use them to decrypt the traffic again.\n create key file: touch /tmp/sslkey.log start wireshark set log filename  navigate to Edit=\u0026gt;Preferences=\u0026gt;Protocols=\u0026gt;TLS in the field (Pre)-Master-Secret log filename enter /tmp/sslkey.log   decode as HTTP  navigate to Analyze=\u0026gt;Decode As\u0026hellip; click the + button set Field: TLS Port; Value=9200; Type: Integer, base 10; Default (none); Current HTTP (adjust the port if you are using another one than 9200)   start recording  use port 9200 as capture filter to only record ocis packages use http as display filter to see only decoded traffic   run test-software with SSLKEYLOGFILE=/tmp/sslkey.log as env. variable e.g.  curl: SSLKEYLOGFILE=/tmp/sslkey.log curl -k -u admin:admin https://localhost:9200/ocs/v1.php/cloud/users Browser: SSLKEYLOGFILE=/tmp/sslkey.log firefox LibreOffice: SSLKEYLOGFILE=/tmp/sslkey.log libreoffice acceptance tests: SSLKEYLOGFILE=/tmp/sslkey.log make test-acceptance-api ...    format output      piping xml results to xmllint gives you nice formats. E.g. curl -k --user marie:radioactivity \u0026quot;https://localhost:9200/ocs/v1.php/apps/files_sharing/api/v1/shares\u0026quot; | xmllint --format - piping json results to jq gives you nice formats. E.g. curl -k --user marie:radioactivity \u0026quot;https://localhost:9200/ocs/v1.php/apps/files_sharing/api/v1/shares?format=json\u0026quot; | jq  create edge cases      Big List of Naughty Strings  ","description":"Beta Testing     This document is supposed to give you some ideas how and what to test on ocis. It\u0026rsquo;s not meant to be an extensive list of all tests to be done, rather it should help you, as beta-tester, to get started and enable you to get creative and create your own test-cases. Derive from these examples, be creative, do unusual and unconventional things, to try to break things."},{"id":167,"href":"/ocis/development/testing/","title":"Testing","parent":"Development","content":"   Testing with test suite in docker  Run full test suite Run single feature test oCIS image to be tested (or: skip build and take existing image) Test log output Cleanup   Testing with test suite natively installed  Run ocis Run the test-acceptance-from-core-api tests Run the test-acceptance-api tests use existing tests for BDD   Running tests for parallel deployment  Setup the parallel deployment environment Getting the test helpers Run the acceptance tests        To run tests in the test suite you have two options. You may go the easy way and just run the test suite in docker. But for some tasks you could also need to install the test suite natively, which requires a little more setup since PHP and some dependencies need to be installed.\nBoth ways to run tests with the test suites are described here.\nTesting with test suite in docker     Let\u0026rsquo;s see what is available. Invoke the following command from within the root of the oCIS repository.\nmake -C tests/acceptance/docker help Basically we have two sources for feature tests and test suites:\n oCIS feature test and test suites tests and test suites transferred from ownCloud, they have prefix coreApi  At the moment both can be applied to oCIS since the api of oCIS is designed to be compatible with ownCloud.\nAs a storage backend, we offer oCIS native storage, also called \u0026ldquo;ocis\u0026rdquo;. This stores files directly on disk. Along with that we also provide S3 storage driver.\nYou can invoke two types of test suite runs:\n run a full test suite, which consists of multiple feature tests run a single feature or single scenario in a feature  Run full test suite     The names of the full test suite make targets have the same naming as in the CI pipeline. The available local ocis specific test suites are apiAccountsHashDifficulty, apiArchiver, apiContract, apiGraph, apiSpaces, apiSpacesShares, apiCors, apiAsyncUpload. They can be run with ocis storage and S3 storage.\n Note: In order to see the tests log attach show-test-logs in the command\n For example make -C tests/acceptance/docker localApiTests-apiAccountsHashDifficulty-ocis runs the same tests as the localApiTests-apiAccountsHashDifficulty-ocis CI pipeline, which runs the oCIS test suite \u0026ldquo;apiAccountsHashDifficulty\u0026rdquo; against an oCIS with ocis storage.\nFor example make -C tests/acceptance/docker localApiTests-apiAccountsHashDifficulty-s3ng runs the oCIS test suite \u0026ldquo;apiAccountsHashDifficulty\u0026rdquo; against an oCIS with s3 storage.\n Note: To run the tests from apiAsyncUpload suite you need to provide extra environment variable POSTPROCESSING_DELAY\n For example make -C tests/acceptance/docker Core-API-Tests-ocis-storage-3 runs the same tests as the Core-API-Tests-ocis-storage-3 CI pipeline, which runs the third (out of ten) test suite transferred from ownCloud against an oCIS with ocis storage.\nFor example make -C tests/acceptance/docker Core-API-Tests-s3ng-storage-3 runs the third (out of ten) test suite transferred from ownCloud against an oCIS with s3 storage.\nRun single feature test     The single feature tests can also be run against the different storage backends. Therefore, multiple make targets with the schema test--feature-exist. To select a single feature you have to add an additional BEHAT_FEATURE=... parameter when invoking the make command:\nmake -C tests/acceptance/docker test-ocis-feature-ocis-storage BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiAccountsHashDifficulty/addUser.feature:21\u0026#39; This must be pointing to a valid feature definition.\nTo run a single scenario in a feature, then mention the line number of the scenario:\nmake -C tests/acceptance/docker test-ocis-feature-ocis-storage BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiAccountsHashDifficulty/addUser.feature:21\u0026#39; Similarly, with S3 storage,\n run a whole feature  make -C tests/acceptance/docker test-ocis-feature-s3ng-storage BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiAccountsHashDifficulty/addUser.feature\u0026#39;  run a single scenario  make -C tests/acceptance/docker test-ocis-feature-s3ng-storage BEHAT_FEATURE=\u0026#39;tests/acceptance/features/apiAccountsHashDifficulty/addUser.feature:21\u0026#39; In the same way for the tests transferred from oc10 can be run as\n run a whole feature  make -C tests/acceptance/docker test-core-feature-ocis-storage BEHAT_FEATURE=\u0026#39;tests/acceptance/features/coreApiAuth/webDavAuth.feature\u0026#39;  run a single scenario  make -C tests/acceptance/docker test-core-feature-ocis-storage BEHAT_FEATURE=\u0026#39;tests/acceptance/features/coreApiAuth/webDavAuth.feature:13\u0026#39;  Note: the tests transferred from oc10 start with coreApi\n oCIS image to be tested (or: skip build and take existing image)     By default, the tests will be run against the docker image built from your current working state of the oCIS repository. For some purposes it might also be handy to use an oCIS image from Docker Hub. Therefore, you can provide the optional flag OCIS_IMAGE_TAG=... which must contain an available docker tag of the owncloud/ocis registry on Docker Hub (e.g. \u0026rsquo;latest\u0026rsquo;).\nmake -C tests/acceptance/docker localApiTests-apiAccountsHashDifficulty-ocis OCIS_IMAGE_TAG=latest Test log output     While a test is running or when it is finished, you can attach to the logs generated by the tests.\nmake -C tests/acceptance/docker show-test-logs   The log output is opened in less. You can navigate up and down with your cursors. By pressing \u0026ldquo;F\u0026rdquo; you can follow the latest line of the output.  Cleanup     During testing we start a redis and oCIS docker container. These will not be stopped automatically. You can stop them with:\nmake -C tests/acceptance/docker clean Testing with test suite natively installed     We have two sets of tests:\n  test-acceptance-from-core-api set was transferred from core repository The suite name of all tests transferred from the core starts with \u0026ldquo;core\u0026rdquo;\n  test-acceptance-api set was created for ocis. Mainly for testing spaces features\n  Run ocis     Create an up-to-date ocis binary by building oCIS\nTo start ocis:\nIDM_ADMIN_PASSWORD=admin \\ ocis/bin/ocis init --insecure true OCIS_INSECURE=true PROXY_ENABLE_BASIC_AUTH=true \\ ocis/bin/ocis server PROXY_ENABLE_BASIC_AUTH will allow the acceptance tests to make requests against the provisioning api (and other endpoints) using basic auth.\nRun the test-acceptance-from-core-api tests     make test-acceptance-from-core-api \\ TEST_SERVER_URL=https://localhost:9200 \\ TEST_WITH_GRAPH_API=true \\ TEST_OCIS=true \\ Note: This command only works for suites that start with core\nRun the test-acceptance-api tests     make test-acceptance-api \\ TEST_SERVER_URL=https://localhost:9200 \\ TEST_WITH_GRAPH_API=true \\ TEST_OCIS=true \\ Make sure to adjust the settings TEST_SERVER_URL according to your environment.\nTo run a single feature add BEHAT_FEATURE=\u0026lt;feature file\u0026gt;\nexample: BEHAT_SUITE=tests/acceptance/features/apiGraph/createUser.feature\nTo run a single test add BEHAT_FEATURE=\u0026lt;file.feature:(line number)\u0026gt;\nexample: BEHAT_SUITE=tests/acceptance/features/apiGraph/createUser.feature:12\nTo run a single suite add BEHAT_SUITE=\u0026lt;test suite\u0026gt;\nexample: BEHAT_SUITE=apiGraph\nTo run tests with a different storage driver set STORAGE_DRIVER to the correct value. It can be set to OCIS or OWNCLOUD and uses OWNCLOUD as the default value.\nuse existing tests for BDD     As a lot of scenarios from test-acceptance-from-core-api are written for oC10, we can use those tests for Behaviour driven development in ocis. Every scenario that does not work in oCIS with \u0026ldquo;ocis\u0026rdquo; storage, is listed in tests/acceptance/expected-failures-API-on-OCIS-storage.md with a link to the related issue.\nThose scenarios are run in the ordinary acceptance test pipeline in CI. The scenarios that fail are checked against the expected failures. If there are any differences then the CI pipeline fails.\nThe tests are not currently run in CI with the OWNCLOUD or EOS storage drivers, so there are no expected-failures files for those.\nIf you want to work on a specific issue\n  locally run each of the tests marked with that issue in the expected failures file.\nE.g.:\nmake test-acceptance-from-core-api \\ TEST_SERVER_URL=https://localhost:9200 \\ TEST_OCIS=true \\ TEST_WITH_GRAPH_API=true \\ STORAGE_DRIVER=OCIS \\ BEHAT_FEATURE=\u0026#39;tests/acceptance/features/coreApiVersions/fileVersions.feature:147\u0026#39;   the tests will fail, try to understand how and why they are failing\n  fix the code\n  go back to 1. and repeat till the tests are passing.\n  remove those tests from the expected failures file\n  make a PR that has the fixed code, and the relevant lines removed from the expected failures file.\n  Running tests for parallel deployment     Setup the parallel deployment environment     Instruction on setup is available here\nEdit the .env file and uncomment this line:\nCOMPOSE_FILE=docker-compose.yml:testing/docker-compose-additions.yml Start the docker stack with the following command:\ndocker-compose up -d Getting the test helpers     All the test helpers are located in the core repo.\ngit clone https://github.com/owncloud/core.git Run the acceptance tests     Run the acceptance tests with the following command from the root of the oCIS repository:\nmake test-paralleldeployment-api \\ TEST_SERVER_URL=\u0026#34;https://cloud.owncloud.test\u0026#34; \\ TEST_OC10_URL=\u0026#34;http://localhost:8080\u0026#34; \\ TEST_PARALLEL_DEPLOYMENT=true \\ TEST_OCIS=true \\ TEST_WITH_LDAP=true \\ PATH_TO_CORE=\u0026#34;\u0026lt;path_to_core\u0026gt;\u0026#34; \\ SKELETON_DIR=\u0026#34;\u0026lt;path_to_core\u0026gt;/apps/testing/data/apiSkeleton\u0026#34; Replace \u0026lt;path_to_core\u0026gt; with the actual path to the root directory of core repo that you have cloned earlier.\nIn order to run a single test, use the BEHAT_FEATURE environment variable.\nmake test-paralleldeployment-api \\ ... \\ BEHAT_FEATURE=\u0026#34;tests/parallelDeployAcceptance/features/apiShareManagement/acceptShares.feature\u0026#34; ","description":"Testing with test suite in docker  Run full test suite Run single feature test oCIS image to be tested (or: skip build and take existing image) Test log output Cleanup   Testing with test suite natively installed  Run ocis Run the test-acceptance-from-core-api tests Run the test-acceptance-api tests use existing tests for BDD   Running tests for parallel deployment  Setup the parallel deployment environment Getting the test helpers Run the acceptance tests        To run tests in the test suite you have two options."},{"id":168,"href":"/ocis/storage/spaces/","title":"Spaces","parent":"Storage","content":"   Editing a Storage Space  Updating a space property Updating a space description Quotas  Quota Enforcement  Considerations       Storage Spaces Shares Notes      Editing a Storage Space     The OData specification allows for a mirage of ways of addressing an entity. We will support addressing a Drive entity by its unique identifier, which is the one the graph-api returns when listing spaces, and its format is:\n{ \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!b6e2c9cc-9dbe-42f0-b522-4f2d3e175e9c\u0026#34; } This is an extract of an element of the list spaces response. An entire object has the following shape:\n{ \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!b6e2c9cc-9dbe-42f0-b522-4f2d3e175e9c\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2021-10-07T11:06:43.245418+02:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;marketing\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;ddc2004c-0977-11eb-9d3f-a793888cd0f8\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;total\u0026#34;: 65536 }, \u0026#34;root\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!b6e2c9cc-9dbe-42f0-b522-4f2d3e175e9c\u0026#34;, \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157!b6e2c9cc-9dbe-42f0-b522-4f2d3e175e9c\u0026#34; } } Updating a space property     Having introduced the above, one can refer to a Drive with the following URL format:\n\u0026#39;https://localhost:9200/graph/v1.0/drives/1284d238-aa92-42ce-bdc4-0b0000009157!07c26b3a-9944-4f2b-ab33-b0b326fc7570 Updating an entity attribute:\ncurl -X PATCH \u0026#39;https://localhost:9200/graph/v1.0/drives/1284d238-aa92-42ce-bdc4-0b0000009157!07c26b3a-9944-4f2b-ab33-b0b326fc7570\u0026#39; -d \u0026#39;{\u0026#34;name\u0026#34;:\u0026#34;42\u0026#34;}\u0026#39; -v The previous URL resource path segment (1284d238-aa92-42ce-bdc4-0b0000009157!07c26b3a-9944-4f2b-ab33-b0b326fc7570) is parsed and handed over to the storage registry in order to apply the patch changes in the body, in this case update the space name attribute to 42. Since space names are not unique we only support addressing them by their unique identifiers, any other query would render too ambiguous and explode in complexity.\nUpdating a space description     Since every space is the root of a webdav directory, following some conventions we can make use of this to set a default storage description and image. In order to do so, every space is created with a hidden .space folder at its root, which can be used to store such data.\ncurl -k -X PUT https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157\\!07c26b3a-9944-4f2b-ab33-b0b326fc7570/.space/description.md -d \u0026#34;Add a description to your spaces\u0026#34; -u admin:admin Verify the description was updated:\n❯ curl -k https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157\\!07c26b3a-9944-4f2b-ab33-b0b326fc7570/.space/description.md -u admin:admin Add a description to your spaces This feature makes use of the internal storage layout and is completely abstracted from the end user.\nQuotas     Spaces capacity (quota) is independent of the Storage quota. As a Space admin you can set the quota for all users of a space, and as such, there are no limitations and is up to the admin to make a correct use of this.\nIt is possible to have a space quota greater than the storage quota. A Space may also have \u0026ldquo;infinite\u0026rdquo; quota, meaning a single space without quota can occupy the entirety of a disk.\nQuota Enforcement     Creating a Space with a quota of 10 bytes:\ncurl -k -X POST 'https://localhost:9200/graph/v1.0/drives' -u admin:admin -d '{\u0026quot;name\u0026quot;:\u0026quot;marketing\u0026quot;, \u0026quot;quota\u0026quot;: {\u0026quot;total\u0026quot;: 10}}' -v\n/var/tmp/ocis/storage/users ├── blobs ├── nodes │ ├── 627981c2-2a71-4adf-b680-177e245afdda │ ├── 9541e7c3-8fda-4b49-b697-e7e51457cf5a │ ├── b5692345-108d-4b80-9747-3a7e9739ad57 │ └── root │ ├── 118351d7-67a4-4cdf-b495-6093d1e572ed -\u0026gt; ../627981c2-2a71-4adf-b680-177e245afdda │ └── ddc2004c-0977-11eb-9d3f-a793888cd0f8 -\u0026gt; ../b5692345-108d-4b80-9747-3a7e9739ad57 ├── spaces │ ├── personal │ │ └── b5692345-108d-4b80-9747-3a7e9739ad57 -\u0026gt; ../../nodes/b5692345-108d-4b80-9747-3a7e9739ad57 │ ├── project │ │ └── 627981c2-2a71-4adf-b680-177e245afdda -\u0026gt; ../../nodes/627981c2-2a71-4adf-b680-177e245afdda │ └── share ├── trash └── uploads Verify the new space has 10 bytes, and none of it is used:\n{ \u0026#34;driveType\u0026#34;: \u0026#34;project\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!627981c2-2a71-4adf-b680-177e245afdda\u0026#34;, \u0026#34;lastModifiedDateTime\u0026#34;: \u0026#34;2021-10-15T11:16:26.029188+02:00\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;marketing\u0026#34;, \u0026#34;owner\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;ddc2004c-0977-11eb-9d3f-a793888cd0f8\u0026#34; } }, \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 10, \u0026#34;total\u0026#34;: 10, \u0026#34;used\u0026#34;: 0 }, \u0026#34;root\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;1284d238-aa92-42ce-bdc4-0b0000009157!627981c2-2a71-4adf-b680-177e245afdda\u0026#34;, \u0026#34;webDavUrl\u0026#34;: \u0026#34;https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157!627981c2-2a71-4adf-b680-177e245afdda\u0026#34; } } Upload a 6 bytes file:\ncurl -k -X PUT https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157\\!627981c2-2a71-4adf-b680-177e245afdda/6bytes.txt -d \u0026quot;012345\u0026quot; -u admin:admin -v\nQuery the quota again:\n{ \u0026#34;quota\u0026#34;: { \u0026#34;remaining\u0026#34;: 4, \u0026#34;total\u0026#34;: 10, \u0026#34;used\u0026#34;: 6 } } Now attempt to upload 5 bytes to the space:\ncurl -k -X PUT https://localhost:9200/dav/spaces/1284d238-aa92-42ce-bdc4-0b0000009157\\!627981c2-2a71-4adf-b680-177e245afdda/5bytes.txt -d \u0026quot;01234\u0026quot; -u admin:admin -v\nThe request will fail with 507 Insufficient Storage:\nHTTP/1.1 507 Insufficient Storage \u0026lt; Access-Control-Allow-Origin: * \u0026lt; Content-Length: 0 \u0026lt; Content-Security-Policy: default-src \u0026#39;none\u0026#39;; \u0026lt; Date: Fri, 15 Oct 2021 09:24:46 GMT \u0026lt; Vary: Origin \u0026lt; X-Content-Type-Options: nosniff \u0026lt; X-Download-Options: noopen \u0026lt; X-Frame-Options: SAMEORIGIN \u0026lt; X-Permitted-Cross-Domain-Policies: none \u0026lt; X-Robots-Tag: none \u0026lt; X-Xss-Protection: 1; mode=block \u0026lt; * Connection #0 to host localhost left intact * Closing connection 0 Considerations      If a Space quota is updated to unlimited, the upper limit is the entire available space on disk  The current implementation in oCIS might not yet fully reflect this concept. Feel free to add links to ADRs, PRs and Issues in short warning boxes like this.    Storage Spaces     A storage space is a logical concept. It organizes a set of resources in a hierarchical tree. It has a single owner (user or group), a quota, permissions and is identified by a storage space id.\n Examples would be every user\u0026rsquo;s personal storage space, project storage spaces or group storage spaces. While they all serve different purposes and may or may not have workflows like antivirus scanning enabled, we need a way to identify and manage these subtrees in a generic way. By creating a dedicated concept for them this becomes easier and literally makes the codebase cleaner. A storage Spaces Registry then allows listing the capabilities of storage spaces, e.g. free space, quota, owner, syncable, root etag, upload workflow steps, \u0026hellip;\nFinally, a logical storage space id is not tied to a specific spaces provider. If the storage driver supports it, we can import existing files including their file id, which makes it possible to move storage spaces between spaces providers to implement storage classes, e.g. with or without archival, workflows, on SSDs or HDDs.\nShares     To be clarified: we are aware that storage spaces may be too \u0026lsquo;heavyweight\u0026rsquo; for ad hoc sharing with groups. That being said, there is no technical reason why group shares should not be treated like storage spaces that users can provision themselves. They would share the quota with the users home or personal storage space and the share initiator would be the sole owner. Technically, the mechanism of treating a share like a new storage space would be the same. This obviously also extends to user shares and even file individual shares that would be wrapped in a virtual collection. It would also become possible to share collections of arbitrary files in a single storage space, e.g. the ten best pictures from a large album.\nNotes     We can implement ListStorageSpaces by either\n iterating over the root of the storage and treating every folder following the \u0026lt;user_layout\u0026gt; as a home storage space, iterating over the root of the storage and treating every folder following a new \u0026lt;project_layout\u0026gt; as a project storage space, or iterating over the root of the storage and treating every folder following a generic \u0026lt;layout\u0026gt; as a storage space for a configurable space type, or we allow configuring a map of space type to layout (based on the CreateStorageSpaceRequest) which would allow things like  home=/var/lib/ocis/storage/home/{{substr 0 1 .Owner.Username}}/{{.Owner.Username}} spaces=/spaces/var/lib/ocis/storage/projects/{{.Name}} ","description":"Editing a Storage Space  Updating a space property Updating a space description Quotas  Quota Enforcement  Considerations       Storage Spaces Shares Notes      Editing a Storage Space     The OData specification allows for a mirage of ways of addressing an entity. We will support addressing a Drive entity by its unique identifier, which is the one the graph-api returns when listing spaces, and its format is:"},{"id":169,"href":"/ocis/storage_registry_discovery/","title":"Storage Registry Discovery","parent":"oCIS - ownCloud Infinite Scale","content":"Introduction     In order for an oCIS client to access oCIS storage spaces for an End-User, the client needs to know where the oCIS instance is. oCIS uses WebFinger RFC7033 to locate the oCIS instance for an End-User.\nThis discovery is optional. If the client has another way of discovering the OpenID instance, e.g. when logging in with a username a static domain might be configured or the domain in the URL might be used.\nFor guest accounts that do not have an OIDC issuer or whose IdP is not part of a trusted federation clients may fall back to a local IdP.\nUser Input using E-Mail Address Syntax     To find the oCIS instance for the given user input in the form of an e-mail address joe@example.com, the WebFinger parameters are as follows:\n   WebFinger Parameter Value     resource acct:joe@example.com   host example.com   rel http://owncloud.com/specs/ocis/1.0/instance    Note that in this case, the acct: scheme is prepended to the identifier.\nThe client (relying party) would make the following WebFinger request to discover the oCIS instance location (with line wraps within lines for display purposes only):\nGET /.well-known/webfinger ?resource=acct%3Ajoe%40example.com \u0026amp;rel=http%3A%2F%2Fowncloud.com%2Fspecs%2Focis%2F1.0%2Finstance HTTP/1.1 Host: example.com HTTP/1.1 200 OK Content-Type: application/jrd+json { \u0026#34;subject\u0026#34;: \u0026#34;acct:joe@example.com\u0026#34;, \u0026#34;links\u0026#34;: [ { \u0026#34;rel\u0026#34;: \u0026#34;http://owncloud.com/specs/ocis/1.0/instance\u0026#34;, \u0026#34;href\u0026#34;: \u0026#34;https://cloud.example.com\u0026#34; } ] }   Note: the example.com domain is derived from the email.   The https://cloud.example.com domain above would point to the ocis instance. TODO that ins ocis web \u0026hellip; not the registry \u0026hellip; hmmmm maybe introduce an ocis provider which then has an /.well-known/ocis-configuration, similar to /.well-known/openid-configuration? It would contain\n the ocis domain, e.g. https://cloud.example.com the web endpoint, e.g. https://cloud.example.com the registry / drives endpoint, e.g. https://cloud.example.com/graph/v0.1/drives/me see Add draft of adr for spaces API. #1827  example:\nHTTP/1.1 200 OK Content-Type: application/json { \u0026#34;instance\u0026#34;: \u0026#34;https://cloud.example.com\u0026#34;, \u0026#34;graph_endpoint\u0026#34;: \u0026#34;https://cloud.example.com/graph/v0.0\u0026#34;, \u0026#34;ocis_web_config\u0026#34;: \u0026#34;https://cloud.example.com/web/config.json\u0026#34;, \u0026#34;issuer\u0026#34;: \u0026#34;https://idp.example.com\u0026#34;, } graph_endpoint is the open-graph-api endpoint that is used to list storage spaces at e.g. https://cloud.example.com/graph/v0.1/me/drives.\nocis_web_config points ocis web to the config for the instance. Maybe we can add more config in the /.well-known/ocis-configuration to replace the config.json? Is this the new status.php? How safe is it to expose all this info \u0026hellip;?\nThe issuer could be used to detect the issuer that is used if no other issuer is found \u0026hellip; might be a fallback_issuer, but actually we may decide to skid the OIDC discovery and rely on this property. Maybe we need it if no IdP is present yet or the /.well-known/openid-configuration is not set up / reachable.\n  Obtaining oCIS Provider Configuration Information     Using the instance location discovered as described above or by other means, the oCIS Provider\u0026rsquo;s configuration information can be retrieved.\noCIS Providers supporting Discovery MUST make a JSON document available at the path formed by concatenating the string /.well-known/openid-configuration to the instance. The syntax and semantics of .well-known are defined in RFC5785 and apply to the instance value when it contains no path component. ocis-configuration MUST point to a JSON document compliant with this specification and MUST be returned using the application/json content type.\noCIS Provider Configuration Request     An oCIS Provider Configuration Document MUST be queried using an HTTP GET request at the previously specified path.\nThe client (relying party) would make the following request to the instance https://example.com to obtain its Configuration information, since the Issuer contains no path component:\nGET /.well-known/openid-configuration HTTP/1.1 Host: example.com If the Issuer value contains a path component, any terminating / MUST be removed before appending /.well-known/openid-configuration. The RP would make the following request to the Issuer https://example.com/issuer1 to obtain its Configuration information, since the Issuer contains a path component:\nGET /issuer1/.well-known/openid-configuration HTTP/1.1 Host: example.com Using path components enables supporting multiple issuers per host. This is required in some multi-tenant hosting configurations. This use of .well-known is for supporting multiple issuers per host; unlike its use in RFC 5785 [RFC5785], it does not provide general information about the host.\n","description":"Introduction     In order for an oCIS client to access oCIS storage spaces for an End-User, the client needs to know where the oCIS instance is. oCIS uses WebFinger RFC7033 to locate the oCIS instance for an End-User.\nThis discovery is optional. If the client has another way of discovering the OpenID instance, e.g. when logging in with a username a static domain might be configured or the domain in the URL might be used."},{"id":170,"href":"/clients/web/backend-oc10/","title":"Setup with ownCloud 10","parent":"ownCloud Web","content":"   Prerequisites Setting up the ownCloud Server  Adjusting config.php Setting up OAuth2 Setting up Web   Running Web Running acceptance tests      Prerequisites     Decide on which host and port Web will be served, for example https://web-host:9100/web-path/. In this document, we will refer to the following:\n \u0026lt;web-url\u0026gt; as the full URL, for example https://web-host:9100/web-path/ \u0026lt;web-domain\u0026gt; as the protocol, domain and port, for example: https://web-host:9100  Setting up the ownCloud Server     Make sure you have an ownCloud Server already installed.\nAdjusting config.php     Add the following entries to config/config.php:\n tell ownCloud where Web is located:  \u0026#39;web.baseUrl\u0026#39; =\u0026gt; \u0026#39;\u0026lt;web-url\u0026gt;\u0026#39;,  add a CORS domain entry for Web in config.php:  \u0026#39;cors.allowed-domains\u0026#39; =\u0026gt; [\u0026#39;\u0026lt;web-domain\u0026gt;\u0026#39;], Setting up OAuth2     To connect to the ownCloud server, it is necessary to set it up with OAuth2.\nInstall and enable the oauth2 app:\n% occ market:install oauth2 % occ app:enable oauth2 Login as administrator in the ownCloud Server web interface and go to the \u0026ldquo;User Authentication\u0026rdquo; section in the admin settings and add an entry for Web as follows:\n pick an arbitrary name for the client set the redirection URI to \u0026lt;web-url\u0026gt;/oidc-callback.html make sure to take note of the client identifier value as it will be needed in the Web configuration later on  Setting up Web     In the local Web checkout, copy the config/config.json.sample-oc10 file to config/config.json and adjust it accordingly:\n Set the \u0026ldquo;server\u0026rdquo; key to the URL of the ownCloud server including path. If the URL contains a path, please also add a trailing slash there. Set the \u0026ldquo;clientId\u0026rdquo; key to the client identifier as copied from the \u0026ldquo;User Authentication\u0026rdquo; section before. Adjust \u0026ldquo;url\u0026rdquo; and \u0026ldquo;authUrl\u0026rdquo; using the ownCloud server URL as prefix for both Optionally adjust \u0026ldquo;apps\u0026rdquo; for the list of apps to be loaded. These match the app names inside the \u0026ldquo;apps\u0026rdquo; folder.  Running Web      if running from source, make sure to build Web first run by launching a rollup dev server pnpm serve when working on the Web code, rollup will recompile the code automatically  Running acceptance tests     For testing, please refer to the testing docs\n","description":"Prerequisites Setting up the ownCloud Server  Adjusting config.php Setting up OAuth2 Setting up Web   Running Web Running acceptance tests      Prerequisites     Decide on which host and port Web will be served, for example https://web-host:9100/web-path/. In this document, we will refer to the following:\n \u0026lt;web-url\u0026gt; as the full URL, for example https://web-host:9100/web-path/ \u0026lt;web-domain\u0026gt; as the protocol, domain and port, for example: https://web-host:9100  Setting up the ownCloud Server     Make sure you have an ownCloud Server already installed."},{"id":171,"href":"/clients/web/docs/backend-oc10/","title":"Setup with ownCloud 10","parent":"ownCloud Web","content":"   Prerequisites Setting up the ownCloud Server  Adjusting config.php Setting up OAuth2 Setting up Web   Running Web Running acceptance tests      Prerequisites     Decide on which host and port Web will be served, for example https://web-host:9100/web-path/. In this document, we will refer to the following:\n \u0026lt;web-url\u0026gt; as the full URL, for example https://web-host:9100/web-path/ \u0026lt;web-domain\u0026gt; as the protocol, domain and port, for example: https://web-host:9100  Setting up the ownCloud Server     Make sure you have an ownCloud Server already installed.\nAdjusting config.php     Add the following entries to config/config.php:\n tell ownCloud where Web is located:  \u0026#39;web.baseUrl\u0026#39; =\u0026gt; \u0026#39;\u0026lt;web-url\u0026gt;\u0026#39;,  add a CORS domain entry for Web in config.php:  \u0026#39;cors.allowed-domains\u0026#39; =\u0026gt; [\u0026#39;\u0026lt;web-domain\u0026gt;\u0026#39;], Setting up OAuth2     To connect to the ownCloud server, it is necessary to set it up with OAuth2.\nInstall and enable the oauth2 app:\n% occ market:install oauth2 % occ app:enable oauth2 Login as administrator in the ownCloud Server web interface and go to the \u0026ldquo;User Authentication\u0026rdquo; section in the admin settings and add an entry for Web as follows:\n pick an arbitrary name for the client set the redirection URI to \u0026lt;web-url\u0026gt;/oidc-callback.html make sure to take note of the client identifier value as it will be needed in the Web configuration later on  Setting up Web     In the local Web checkout, copy the config/config.json.sample-oc10 file to config/config.json and adjust it accordingly:\n Set the \u0026ldquo;server\u0026rdquo; key to the URL of the ownCloud server including path. If the URL contains a path, please also add a trailing slash there. Set the \u0026ldquo;clientId\u0026rdquo; key to the client identifier as copied from the \u0026ldquo;User Authentication\u0026rdquo; section before. Adjust \u0026ldquo;url\u0026rdquo; and \u0026ldquo;authUrl\u0026rdquo; using the ownCloud server URL as prefix for both Optionally adjust \u0026ldquo;apps\u0026rdquo; for the list of apps to be loaded. These match the app names inside the \u0026ldquo;apps\u0026rdquo; folder.  Running Web      if running from source, make sure to build Web first run by launching a rollup dev server pnpm serve when working on the Web code, rollup will recompile the code automatically  Running acceptance tests     For testing, please refer to the testing docs\n","description":"Prerequisites Setting up the ownCloud Server  Adjusting config.php Setting up OAuth2 Setting up Web   Running Web Running acceptance tests      Prerequisites     Decide on which host and port Web will be served, for example https://web-host:9100/web-path/. In this document, we will refer to the following:\n \u0026lt;web-url\u0026gt; as the full URL, for example https://web-host:9100/web-path/ \u0026lt;web-domain\u0026gt; as the protocol, domain and port, for example: https://web-host:9100  Setting up the ownCloud Server     Make sure you have an ownCloud Server already installed."},{"id":172,"href":"/ocis/development/extensions/","title":"Extensions","parent":"Development","content":"oCIS is all about files, sync and share - but most of the time there is more you want to do with your files, e.g. having a different view on your photo collection or editing your offices files in an online file editor. ownCloud 10 faced the same problem and solved it with applications, which can extend the functionality of ownCloud 10 in a wide range. Since oCIS is different in its architecture compared to ownCloud 10, we had to come up with a similar (yet slightly different) solution. To extend the functionality of oCIS, you can write or install extensions. An extension is basically any running code which integrates into oCIS and provides functionality to oCIS and its users. Because extensions are just microservices providing an API, you can technically choose any programming language you like - a huge improvement to ownCloud 10, where it was nearly impossible to use a different programming language than PHP.\nWe will now introduce you to the oCIS extension system and show you how you can create a custom extension yourself.\nExtension examples     Technically every service in oCIS is an extension, even if oCIS would not really work without some of them. Therefore, you can draw inspiration from any of the plenty of extensions in the oCIS monorepo.\nBesides these \u0026ldquo;default\u0026rdquo; extensions in the oCIS monorepo, there are two more extensions you should be aware of:\n Hello WOPI server  Differences between the extensions maintained inside the oCIS monorepo and the ones maintained in their own repository are:\n extensions inside the oCIS monorepo are all written in Go, whereas other extensions may choose the programming language freely extensions inside the oCIS monorepo heavily share tooling to reduce maintenance efforts, whereas other extensions may use different tooling (e.g. a different CI system) extensions inside the oCIS monorepo will be all build into one binary and started with the ocis server command. All other extensions must be started individually besides oCIS.  For quickstart purposes we also offer a template project which can be used to generate all the boilerplate code for you. But you also can decide to use your own project layout or even a different programming language.\nIntegration into oCIS     Depending on the functionality of your extension, you might need to integrate with one or multiple of the components of oCIS mentioned below.\nownCloud Web     If your extension is not just doing something in the background, you will need a UI in order to allow the user to interact with your extension. You could just provide your own web frontend for that purpose, but for a better user experience you can easily integrate into the web frontend of oCIS, the new ownCloud Web.\nownCloud Web allows you to write an extension for itself and therefore offers a seamless user experience. Upon login, the user will be able to use the application switcher to switch between the files view, settings and other available and installed extensions, yours included. Furthermore it is also possible to register your extension for different file actions. As an example, you could offer your extension to the user for creating and editing office documents. The user will then be able to create or open a file with your application directly from the files view. How to provide create an extension for ownCloud Web can be seen best in the Hello extension, whereas plain file handling without any web frontend is available in the WOPI server extension.\nTo make ownCloud Web pick up your extension, you need to activate it in the configuration like seen in the Hello extension.\nFor a consistent look and feel, ownCloud Web uses an external design library, the ownCloud design system. Since its classes and components are available through the wrapping web runtime, we highly recommend you to leverage it in your extension as well.\nSettings     An extension likely has some behaviour which the user can configure. Fundamental configuration will often be done by administrators during deployment, via configuration files or by setting environment variables. But for other settings, which are supposed to change more often or which are even user specific, this is not a viable way. Therefore you need to offer the users a UI where they can configure your extension to their liking. Because implementing something like this is a repetitive task among extensions, oCIS already offers the settings extensions which does that for your extension. Your extension just needs to register settings bundles, respective permissions and finally read the current values from the settings service. You can read more on that on the settings extension and see how oCIS Hello uses these settings.\nProxy     The Proxy is an API gateway and acts as the single connection point where all external request from users and devices need to pass through.\nTo make sure that requests can reach your extension\u0026rsquo;s API, you need to register one or multiple endpoints at the proxy. The registration is an easy task and can be seen best on the oCIS Hello example.\nAs files in ownCloud must always stay private (unless you share them with your friends or coworkers), requests to oCIS have an authenticated user context. This user context is also available to your extension and can be used to interact with the user\u0026rsquo;s files. How to get the user context and authentication can be seen on the oCIS Hello example.\nStorage     oCIS leverages the CS3 APIs and CS3 REVA as a storage system because it offers a very flexible setup and supports a variety of storage backends like EOS, S3 and of course your local hard drive. REVA makes it easy to support more storage backends as needed.\nIf you need to interact with files directly, you have the full power of the CS3 APIs in your hand. With the user context and the user\u0026rsquo;s authentication token, which your extensions gets from the proxy, your extension can make these request in behalf of the user.\nIf your extension needs to store persistent data which is not supposed to live in the user\u0026rsquo;s home folder, there is also a so-called metadata storage, intended for exactly that purpose. You should always use the metadata storage in favor of the local filesystem for persistent files, because your extension will then automatically use the storage backend the oCIS admin decides to use. For a temporary cache it is perfectly fine to use the local filesystem.\n","description":"oCIS is all about files, sync and share - but most of the time there is more you want to do with your files, e.g. having a different view on your photo collection or editing your offices files in an online file editor. ownCloud 10 faced the same problem and solved it with applications, which can extend the functionality of ownCloud 10 in a wide range. Since oCIS is different in its architecture compared to ownCloud 10, we had to come up with a similar (yet slightly different) solution."},{"id":173,"href":"/ocis/storage-backends/","title":"Storage backends","parent":"oCIS - ownCloud Infinite Scale","content":"","description":""},{"id":174,"href":"/apis/http/graph/groups/","title":"Groups","parent":"LibreGraph","content":"   Groups API  Reading groups  GET /groups GET /groups?$expand=members GET /groups/{groupid} GET /groups/{groupid}?$expand=members   Getting Group Members  GET /groups/{groupid}/members   Creating / Updating Groups  POST /groups  Request Body Response   DELETE /groups/{id} PATCH /groups/{id}   Adding a single member to a group  POST /groups/{id}/members/$ref   Adding multiple members in a single request  PATCH /groups/{id}   Removing a member  DELETE /groups/{groupid}/members/{id}/$ref          Groups API     The Groups API is implementing a subset of the functionality of the MS Graph Group resource The JSON representation of a Group as handled by the Groups API looks like this:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;f0d97060-da16-4b0d-9fa4-d1ec43afc5f1\u0026#34; } Our implementation currently supports two Attributes for a Group:\n   Attribute Description     displayName The groups name   id An unique, stable readonly identifier for the group that stays the same for the whole lifetime of the Group, usually a UUID    Reading groups     GET /groups     Returns a list of all groups\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/groups\u0026#39; -u user:password Response:\n{ \u0026#34;value\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;38580a2e-7018-42ed-aff6-b2af0b4e9790\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a20f238-8a22-4458-902d-47674c317e5f\u0026#34; } ] } GET /groups?$expand=members     Returns a list of all groups including its members\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/groups?$expand=members\u0026#39; -u user:password Response:\n{ \u0026#34;value\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;38580a2e-7018-42ed-aff6-b2af0b4e9790\u0026#34;, \u0026#34;members\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;user1\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;2e7b7e23-6c42-4d34-81b0-2bed34e51983\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;user1@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;user1\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;user2\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;b45c9e35-0d95-4165-96bc-68bff4a316ed\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;user2@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;user2\u0026#34; } ] }, { \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a20f238-8a22-4458-902d-47674c317e5f\u0026#34;, \u0026#34;members\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;user3\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;026fbfef-79ef-4f5d-887b-9eaf42777239\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;user3@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;user3\u0026#34; } ] } ] } GET /groups/{groupid}     Example:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f\u0026#39; -u user:password Response:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a20f238-8a22-4458-902d-47674c317e5f\u0026#34; } GET /groups/{groupid}?$expand=members     Example:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f?$expand=members\u0026#39; -u user:password Response:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a20f238-8a22-4458-902d-47674c317e5f\u0026#34;, \u0026#34;members\u0026#34;: [ { \u0026#34;displayName\u0026#34;: \u0026#34;user3\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;026fbfef-79ef-4f5d-887b-9eaf42777239\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;user3@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;user3\u0026#34; } ] } Getting Group Members     GET /groups/{groupid}/members     Returns a list of User objects that are members of a group.\nExample:\ncurl -k \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f/members\u0026#39; -u user:password Response:\n[ { \u0026#34;displayName\u0026#34;: \u0026#34;Test User\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;c54b0588-7157-4521-bb52-c1c8ca84ea71\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;example@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;example\u0026#34; }, { \u0026#34;displayName\u0026#34;: \u0026#34;Albert Einstein\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;mail\u0026#34;: \u0026#34;einstein@example.org\u0026#34;, \u0026#34;onPremisesSamAccountName\u0026#34;: \u0026#34;einstein\u0026#34; } ] Creating / Updating Groups     POST /groups     Use this to create a new group. h\nRequest Body     Note the missing \u0026quot;id\u0026quot; Attribute. It will be generated by the server:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34; } Response     When successful, the response will return the new group including the newly allocated \u0026quot;id\u0026quot;:\n{ \u0026#34;displayName\u0026#34;: \u0026#34;Example Users\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;7a20f238-8a22-4458-902d-47674c317e5f\u0026#34; } DELETE /groups/{id}     Example:\ncurl -k --request DELETE \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f\u0026#39; -u user:password When successful the API returns no response body and the HTTP status code 204 (No Content)\nPATCH /groups/{id}     Updating attributes of a single group is supposed to be done with a patch request. This is however currently not fully implemented for our write-enabled backends. The PATCH request can however be used to add multiple members to a group at once. See below.\nAdding a single member to a group     POST /groups/{id}/members/$ref     The request body contains a single attribute \u0026ldquo;@odata.id\u0026rdquo; referencing the new member of the group by URI. Example:\ncurl -k --header \u0026#34;Content-Type: application/json\u0026#34; \\ --request POST --data \\ \u0026#39;{ \u0026#34;@odata.id\u0026#34;: \u0026#34;https://localhost:9200/graph/v1.0/users/4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34; }\u0026#39; \\ \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f/members/$ref\u0026#39; -u user:password When successful the API returns no response body and the HTTP status code 204 (No Content)\nAdding multiple members in a single request     PATCH /groups/{id}     The request body contains the attribute members@odata.bind holding a list of URI references for the new members. Example:\n{ \u0026#34;members@odata.bind\u0026#34;: [ \u0026#34;https://localhost:9200/graph/v1.0/users/4c510ada-c86b-4815-8820-42cdf82c3d51\u0026#34;, \u0026#34;https://localhost:9200/graph/v1.0/users/c54b0588-7157-4521-bb52-c1c8ca84ea71\u0026#34; ] } When successful the API returns no response body and the HTTP status code 204 (No Content)\nRemoving a member     DELETE /groups/{groupid}/members/{id}/$ref     Example\ncurl -k --request DELETE \\ \u0026#39;https://localhost:9200/graph/v1.0/groups/7a20f238-8a22-4458-902d-47674c317e5f/members/4c510ada-c86b-4815-8820-42cdf82c3d51/$ref\u0026#39; \\ -u user:password When successful the API returns no response body and the HTTP status code 204 (No Content)\n","description":"Groups API  Reading groups  GET /groups GET /groups?$expand=members GET /groups/{groupid} GET /groups/{groupid}?$expand=members   Getting Group Members  GET /groups/{groupid}/members   Creating / Updating Groups  POST /groups  Request Body Response   DELETE /groups/{id} PATCH /groups/{id}   Adding a single member to a group  POST /groups/{id}/members/$ref   Adding multiple members in a single request  PATCH /groups/{id}   Removing a member  DELETE /groups/{groupid}/members/{id}/$ref          Groups API     The Groups API is implementing a subset of the functionality of the MS Graph Group resource The JSON representation of a Group as handled by the Groups API looks like this:"},{"id":175,"href":"/services/web/releasing/","title":"Releasing","parent":"Web","content":"   Releasing  Package Hierarchy  Prerequisites Updating ocis-web          Releasing     The next generation Web Frontend is shipped as an oCIS Extension. The ocis-web extension is also embedded in the single binary and part of the ocis server command.\nTo update this package within all the deliveries, we need to update the package in the following chain from the bottom to the top.\nPackage Hierarchy      ocis  ocis-web  ocis-pkg ownCloud Web      Prerequisites     Before updating the assets, make sure that ownCloud Web has been released first and take note of its release tag name.\nUpdating ocis-web      Create a branch update-web-$version in the ocis repository Change into web package folder via cd web Inside web/, update the Makefile so that the WEB_ASSETS_VERSION variable references the currently released version of https://github.com/owncloud/web Move to the changelog (cd ../changelog/) and add a changelog file to the unreleased/ folder (You can copy an old web release changelog item as a template) Move to the repo root (cd ..)and update the WEB_COMMITID in the /.drone.env file to the commit id from the released version (unless the existing commit id is already newer) Optional: Test the changes locally by running cd ocis \u0026amp;\u0026amp; go run cmd/ocis/main.go server, visiting https://localhost:9200 and confirming everything renders correctly Commit your changes, push them and create a PR  ","description":"Releasing  Package Hierarchy  Prerequisites Updating ocis-web          Releasing     The next generation Web Frontend is shipped as an oCIS Extension. The ocis-web extension is also embedded in the single binary and part of the ocis server command.\nTo update this package within all the deliveries, we need to update the package in the following chain from the bottom to the top."},{"id":176,"href":"/ocis/migration/","title":"Migration","parent":"oCIS - ownCloud Infinite Scale","content":"The migration happens in subsequent stages while the service is online. First all users need to migrate to the new architecture, then the global namespace needs to be introduced. Finally, the data on disk can be migrated user by user by switching the storage driver.\n @jfd: It might be easier to introduce the spaces api in oc10 and then migrate to oCIS. We cannot migrate both at the same time, the architecture to oCIS (which will change fileids) and introduce a global namespace (which requires stable fileids to let clients handle moves without redownloading). Either we implement arbitrary mounting of shares in oCIS / reva or we make clients and oc10 spaces aware.   Migration Stages     Stage 0: pre migration     Is the pre-migration stage when having a functional ownCloud 10 instance.\nFAQ     Feel free to add your question as a PR to this document using the link at the top of this page!\n  Stage 1: introduce ownCloud Web     Install and introduce ownCloud Web and let users test it voluntarily to gain early feedback on the new UI.\nSteps     Deploy web and enable switching to and from it. For more details see: ownCloud 10 with ownCloud Web\nTODO allow limiting the web ui switch to an \u0026rsquo;early adopters\u0026rsquo; group\n Validation     Ensure switching back and forth between the classic ownCloud 10 web UI and ownCloud web works as at our https://demo.owncloud.com.\nRollback     Should there be problems with ownCloud web at this point it can simply be removed from the menu and be undeployed.\nNotes      The ownCloud 10 demo instance uses OAuth to obtain a token for ownCloud web and currently always requires explicit consent. In oCIS the token is provided by the OpenID Connect Identity Provider, which may skip the consent step for trusted clients for a more seamless login experience. You may want to introduce OpenID Connect before enabling the new web UI. TODO make oauth2 in oc10 trust the new web ui, based on redirect_uri and CSRF so no explicit consent is needed?\nFAQ     Feel free to add your question as a PR to this document using the link at the top of this page!\n  Stage 2: introduce OpenID Connect     Basic auth requires us to properly store and manage user credentials. Something we would rather like to delegate to a tool specifically built for that task. While SAML and Shibboleth are protocols that solve that problem, they are limited to web clients. Desktop and mobile clients were an afterthought and keep running into timeouts. For these reasons, we decided to move to OpenID Connect as our primary authentication protocol.\nTODO @butonic add ADR for OpenID Connect and flesh out pros and cons of the above\n User impact     When introducing OpenID Connect, the clients will detect the new authentication scheme when their current way of authenticating returns an error. Users will then have to reauthorize at the OpenID Connect IdP, which again, may be configured to skip the consent step for trusted clients.\nSteps      There are multiple products that can be used as an OpenID Connect IdP. We test with LibreGraph Connect, which is also embedded in oCIS. Other alternatives include Keycloak or Ping. Please refer to the corresponding setup instructions for the product you intend to use.  TODO @butonic flesh out oCIS IDP documentation\n Add Openid Connect (OIDC) support to ownCloud 10.  Validation     When OpenID Connect support is enabled verify that all clients can login:\n web classic ownCloud web desktop android iOS  Rollback     Should there be problems with OpenID Connect at this point you can disable the app. Users will have to reauthenticate in this case.\nNotes      Legacy clients relying on Basic auth or app passwords need to be migrated to OpenId Connect to work with oCIS. For a transition period Basic auth in oCIS can be enabled with `PROXY_ENABLE_BASIC_AUTH=true`, but we strongly recommend adopting OpenID Connect for other tools as well. While OpenID Connect providers will send an iss and sub claim that relying parties (services like oCIS or ownCloud 10) can use to identify users we recommend introducing a dedicated, globally unique, persistent, non-reassignable user identifier like a UUID for every user. This ownclouduuid should be sent as an additional claim to save additional lookups on the server side. It will become the user id in oCIS, e.g. when searching for recipients the ownclouduuid will be used to persist permissions with the share manager. It has a different purpose than the ownCloud 10 username, which is used to login. Using UUIDs we can not only mitigate username collisions when merging multiple instances but also allow renaming usernames after the migration to oCIS has been completed.\nFAQ     Feel free to add your question as a PR to this document using the link at the top of this page!\n  Stage 3: introduce oCIS internally     Before letting oCIS handle end user requests we will first make it available in the internal network. By subsequently adding services we can add functionality and verify the services work as intended.\nStart oCIS backend and make read only tests on existing data using the owncloudsql storage driver which will read (and write)\n blobs from the same datadirectory layout as in ownCloud 10 metadata from the ownCloud 10 database: The oCIS share manager will read share information from the ownCloud database using an owncloud driver as well.  TODO @butonic add guide on how to configure owncloudsql\nTODO we need a share manager that can read from the ownCloud 10 database as well as from whatever new backend will be used for a pure oCIS setup. Currently, that would be the json file. Or that is migrated after all users have switched to oCIS. \u0026ndash; jfd\n User impact     None, only administrators will be able to explore oCIS during this stage.\nSteps and verifications     We are going to run and explore a series of services that will together handle the same requests as ownCloud 10. For initial exploration the oCIS binary is recommended. The services can later be deployed using a single oCIS runtime or in multiple containers.\nStorage provider for file metadata      Deploy OCIS storage provider with owncloudsql driver. Set read_only: true in the storage provider config. TODO @butonic add read only flag to storage drivers Use cli tool to list files using the CS3 api  File ID alternatives     Multiple ownCloud instances can be merged into one oCIS instance. To prevent the numeric ids from colliding, the file ids will be prefixed with a new storage space id which is used by oCIS to route requests to the correct storage provider. See Stage 8 below.\n Alternative 1 Add a routable prefix to fileids in oc10, and replicate the prefix in oCIS.\nStage-3.1     Let oc10 render file ids with prefixes: \u0026lt;instance name\u0026gt;$\u0026lt;numeric storageid\u0026gt;!\u0026lt;fileid\u0026gt;. This will allow clients to handle moved files.\nStage-3.2     Roll out new clients that understand the spaces API and know how to convert local sync pairs for legacy oc10 /webdav or /dav/files/\u0026lt;username\u0026gt; home folders into multiple sync pairs. One pair for /webdav/home or /dav/files/\u0026lt;username\u0026gt;/home and another pair for every accepted share. The shares will be accessible at /webdav/shares/ when the server side enables the spaces API. Files can be identified using \u0026lt;instance name\u0026gt;$\u0026lt;numeric storageid\u0026gt;!\u0026lt;fileid\u0026gt; and moved to the correct sync pair.\nStage-3.3     Enable spaces API in oc10:\n New clients will get a response from the spaces API and can set up new sync pairs. Legacy clients will still poll /webdav or /dav/files/\u0026lt;username\u0026gt; where they will see new subfolders instead of the users home. They will move down the users files into /home and shares into /shares. Custom sync pairs will no longer be available, causing the legacy client to leave local files in place. They can be picked up manually when installing a new client.     Alternative 2 An additional uuid property used only to detect moves. A lookup by uuid is not necessary for this. The /dav/meta endpoint would still take the fileid. Clients would use the uuid to detect moves and set up new sync pairs when migrating to a global namespace.\nStage-3.1     Generate a uuid for every file as a file property. Clients can submit a uuid when creating files. The server will create a uuid if the client did not provide one.\nStage-3.2     Roll out new clients that understand the spaces API and know how to convert local sync pairs for legacy oc10 /webdav or /dav/files/\u0026lt;username\u0026gt; home folders into multiple sync pairs. One pair for /webdav/home or /dav/files/\u0026lt;username\u0026gt;/home and another pair for every accepted share. The shares will be accessible at /webdav/shares/ when the server side enables the spaces API. Files can be identified using the uuid and moved to the correct sync pair.\nStage-4.1     When reading the files from oCIS return the same uuid. It can be migrated to an extended attribute or it can be read from oc10. If users change it the client will not be able to detect a move and maybe other weird stuff happens. What if the uuid gets lost on the server side due to a partial restore?\n    graph API endpoint      Deploy graph api to list spaces Use curl to list spaces using graph drives endpoint  owncloud flavoured WebDAV endpoint      Deploy ocdav Use curl to send PROPFIND  data provider for up and download      Deploy dataprovider Use curl to up and download files Use tus to upload files  Deploy \u0026hellip;\nshare manager     Deploy share manager with ownCloud driver\nreva gateway      Deploy gateway to authenticate requests? I guess we need that first\u0026hellip; Or we need the to mint a token. Might be a good exercise.  automated deployment     Finally, deploy oCIS with a config to set up everything running in a single oCIS runtime or in multiple containers.\nRollback     You can stop the oCIS process at any time.\nNotes      Multiple ownCloud instances can be merged into one oCIS instance. The file ids will be prefixed with a new storage space id which is used to route requests to the correct storage provider. FAQ     Feel free to add your question as a PR to this document using the link at the top of this page!\n  Stage 4: internal write access with oCIS     Test writing data with oCIS into the existing ownCloud 10 data directory using the owncloudsql storage driver.\nUser impact     Only administrators will be able to explore oCIS during this stage. End users should not be affected if the testing is limited to test users.\nSteps     Set read_only: false in the storage provider config.\nTODO @butonic add read only flag to storage drivers\n Verification     Rollback     Set read_only: true in the storage provider config.\nTODO @butonic add read only flag to storage drivers\n Notes      With write access it becomes possible to manipulate existing files and shares. FAQ     Feel free to add your question as a PR to this document using the link at the top of this page!\n  Stage-5: introduce user aware proxy     In the previous stages oCIS was only accessible for administrators with access to the network. To expose only a single service to the internet, oCIS comes with a user aware proxy that can be used to route requests to the existing ownCloud 10 installation or oCIS, based on the authenticated user. The proxy uses OIDC to identify the logged-in user and route them to the configured backend.\nUser impact     The IP address of the ownCloud host changes. There is no change for the file sync and share functionality when requests are handled by the oCIS codebase as it uses the same database and storage system as owncloud 10.\nSteps and verifications     Deploy oCIS proxy      Deploy the ocis proxy Verify the requests are routed based on the ownCloud 10 routing policy oc10 by default  Test user based routing      Change the routing policy for a user or an early adopters group to ocis TODO @butonic currently, the migration selector will use the ocis policy for users that have been added to the accounts service. IMO we need to evaluate a claim from the IdP. Verify the requests are routed based on the oCIS routing policy oc10 for \u0026lsquo;migrated\u0026rsquo; users.  At this point you are ready to rock \u0026amp; roll!\nLet ownCloud domain point to proxy      Update the dns to use the oCIS proxy instead of the ownCloud application servers directly. Let DNS propagate the change and monitor requests moving from the ownCloud application servers to the oCIS proxy. Verify the DNS change has propagated sufficiently. All requests should now use the oCIS Proxy.  Rollback     Should there be a problem with the oCIS routes the user can be routed to ownCloud by changing his routing policy. In case of unfixable problems with the proxy the DNS needs to be updated to use the ownCloud 10 application servers directly. This could also be done in a load balancer.\nNotes      The proxy is stateless, multiple instances can be deployed as needed. FAQ     Feel free to add your question as a PR to this document using the link at the top of this page!\n  Stage-6: parallel deployment     Running ownCloud 10 and oCIS in parallel is a crucial stage for the migration: it allows users access to group shares regardless of the system that is being used to access the data. A user by user migration with multiple domains would technically break group shares when users vanish because they (and their data) are no longer available in the old system.\nDepending on the amount of power users on an instance, the admin may want to allow users to voluntarily migrate to the oCIS backend. A monitoring system can be used to visualize the behavior for the two systems and gain trust in the overall stability and performance.\nUser impact     Since the underling data is still stored in the same systems, a similar or performance can be expected.\nSee TODO hmpf outdated didn\u0026rsquo;t we want to run them nightly? \u0026hellip; TODO @butonic update performance comparisons nightly\n Steps     There are several options to move users to the oCIS backend:\n Use a canary app to let users decide themselves Use an early adopters group with an opt-in Force migrate users in batch or one by one at the administrators will  Verification     The same verification steps as for the internal testing stage apply. Just from the outside.\nRollback     Until now, the oCIS configuration mimics ownCloud 10 and uses the old data directory layout and the ownCloud 10 database. Users can seamlessly be switched from ownCloud 10 to oCIS and back again.\nTODO @butonic we need a canary app that allows users to decide for themselves which backend to use\n  Notes     Running the two systems in parallel stage Try to keep the duration of this stage short. Until now we only added services and made the system more complex. oCIS aims to reduce the maintenance cost of an ownCloud instance. You will not get there if you keep both systems alive.\nFAQ     Feel free to add your question as a PR to this document using the link at the top of this page!\n  Stage-7: introduce spaces using ocis     To encourage users to switch you can promote the workspaces feature that is built into oCIS. The ownCloud 10 storage backend can be used for existing users. New users and group or project spaces can be provided by storage providers that better suit the underlying storage system.\nSteps     First, the admin needs to\n deploy a storage provider with the storage driver that best fits the underlying storage system and requirements. register the storage in the storage registry with a new storage id (we recommend a uuid).  Then a user with the necessary create storage space role can create a storage space and assign Managers.\nTODO @butonic a user with management permission needs to be presented with a list of storage spaces where he can see the amount of free space and decide on which storage provider the storage space should be created. For now a config option for the default storage provider for a specific type might be good enough.\n Verification     The new storage space should show up in the /graph/drives endpoint for the managers and the creator of the space.\nNotes     Depending on the requirements and acceptable tradeoffs, a database less deployment using the ocis or s3ng storage driver is possible. There is also a cephfs driver on the way, that directly works on the API level instead of POSIX.\nStage-8: shut down ownCloud 10     Disable ownCloud 10 in the proxy, all requests are now handled by oCIS, shut down oc10 web servers and redis (or keep for calendar \u0026amp; contacts only? rip out files from oCIS?)\nUser impact     All users are already sent to the oCIS backend. Shutting down ownCloud 10 will remove the old web UI, apps and functionality that is not yet present in ownCloud web. For example contacts and calendar.\nTODO @butonic recommend alternatives\n Steps      Shut down the apache servers that are running the ownCloud 10 PHP code. DO NOT SHUT DOWN THE DATABASE, YET!  Verification     The ownCloud 10 classic web UI should no longer be reachable.\nRollback     Redeploy ownCloud 10.\nNotes      The database needs to remain online until the storage layer and share metadata have been migrated as well. One thing at a time. FAQ     Feel free to add your question as a PR to this document using the link at the top of this page!\n  Stage 9: storage migration     To get rid of the database we will move the metadata from the old ownCloud 10 database into dedicated storage providers. This can happen in a user by user fashion. group drives can properly be migrated to group, project or workspaces in this stage.\nUser impact     Noticeable performance improvements because we effectively shard the storage logic and persistence layer.\nSteps      User by user storage migration from owncloud or ownclouds3 driver to ocis/s3ng/cephfs\u0026hellip; currently this means copying the metadata from one storage provider to another using the cs3 api. Change the responsible storage provider for a storage space (e.g. a user home, a group or project space are a workspace) in the storage registry.  TODO @butonic implement ownclouds3 based on s3ng TODO @butonic implement tiered storage provider for seamless migration TODO @butonic document how to manually do that until the storage registry can discover that on its own.\n Verification     Start with a test user, then move to early adopters and finally migrate all users.\nRollback     To switch the storage provider again the same storage space migration can be performed again: copy metadata and blob data using the CS3 api, then change the responsible storage provider in the storage registry.\nNotes      Multiple ownCloud instances can be merged into one oCIS instance. The file ids will be prefixed with a new storage space id which is used to route requests to the correct storage provider. The storage space migration will become a seamless feature in the future that allows administrators to move users to storage systems with different capabilities, to implement premium features, deprovisioning strategies or archiving.\nFAQ     Feel free to add your question as a PR to this document using the link at the top of this page!\n  Stage-10: share metadata migration     Migrate share data to yet to determine share manager backend and shut down ownCloud database.\nThe ownCloud 10 database still holds share information in the oc_share and oc_share_external tables. They are used to efficiently answer queries about who shared what with whom. In oCIS shares are persisted using a share manager and if desired these grants are also sent to the storage provider so it can set ACLs if possible. Only one system should be responsible for the shares, which in case of treating the storage as the primary source effectively turns the share manager into a cache.\nUser impact     Depending on chosen the share manager provider some sharing requests should be faster: listing incoming and outgoing shares is no longer bound to the ownCloud 10 database but to whatever technology is used by the share provider:\n For non HA scenarios they can be served from memory, backed by a simple json file. TODO: implement share manager with redis / nats / \u0026hellip; key value store backend: use the micro store interface please \u0026hellip;  Steps      Start new share manager Migrate metadata using the CS3 API (copy from old to new) Shut down old share manager Shut down ownCloud 10 database  TODO for HA implement share manager with redis / nats / \u0026hellip; key value store backend: use the micro store interface please \u0026hellip; TODO for batch migration implement share data migration cli with progress that reads all shares via the cs3 api from one provider and writes them into another provider TODO for seamless migration implement tiered/chained share provider that reads share data from the old provider and writes new shares to the new one TODO for storage provider as source of truth persist ALL share data in the storage provider. Currently, part is stored in the share manager, part is in the storage provider. We can keep both, but the share manager should directly persist its metadata to the storage system used by the storage provider so metadata is kept in sync\n Verification     After copying all metadata start a dedicated gateway and change the configuration to use the new share manager. Route a test user, a test group and early adopters to the new gateway. When no problems occur you can start the desired number of share managers and roll out the change to all gateways.\nTODO let the gateway write updates to multiple share managers \u0026hellip; or rely on the tiered/chained share manager provider to persist to both providers\n Rollback     To switch the share manager to the database one revert routing users to the new share manager. If you already shut down the old share manager start it again. Use the tiered/chained share manager provider in reverse configuration (new share provider as read only, old as write) and migrate the shares again. You can also restore a database backup if needed.\nStage-11     Profit! Well, on the one hand you do not need to maintain a clustered database setup and can rely on the storage system. On the other hand you are now in microservice wonderland and will have to relearn how to identify bottlenecks and scale oCIS accordingly. The good thing is that tools like jaeger and prometheus have evolved and will help you understand what is going on. But this is a different topic. See you on the other side!\nFAQ     Feel free to add your question as a PR to this document using the link at the top of this page!\n  Architectural differences     The fundamental difference between ownCloud 10 and oCIS is that the file metadata is moved from the database in the oc_filecache table (which is misnamed, as it actually is an index) to the storage provider who can place metadata as close to the underlying storage system as possible. In effect, the file metadata is sharded over multiple specialized services.\nData that will be migrated     Currently, oCIS focuses on file sync and share use cases.\nBlob data     In ownCloud 10 the files are laid out on disk in the data directory using the following layout:\ndata ├── einstein │ ├── cache │ ├── files │ │ ├── Photos │ │ │ └── Portugal.jpg │ │ ├── Projects │ │ │ └── Notes.md │ │ └── ownCloud Manual.pdf │ ├── files_external │ ├── files_trashbin │ │ ├── files │ │ │ ├── Documents.d1564687985 │ │ │ ├── TODO.txt.d1565721976 │ │ │ └── welcome.txt.d1564775872 │ │ └── versions │ │ │ ├── TODO.txt.v1564605543.d1565721976 │ │ │ └── TODO.txt.v1564775936.d1565721976 │ ├── files_versions │ │ ├── Projects │ │ │ ├── Notes.md.v1496912691 │ │ │ └── Notes.md.v1540305560 │ │ └── ownCloud Manual.pdf.v1396628249 │ ├── thumbnails │ │ └── 123 │ │ │ ├── 2048-1536-max.png │ │ │ └── 32-32.png // the file id, e.g. of /Photos/Portugal.jpg │ └── uploads ├── marie │ ├── cache │ ├── files │ ├── files_external │ ├── files_trashbin │ ├── files_versions │ └── thumbnails │ … ├── moss … The data directory may also contain subfolders for ownCloud 10 applications like avatars, gallery, files_external and cache.\nWhen an object storage is used as the primary storage all file blobs are stored by their file id and a prefix, e.g.: urn:oid:\u0026lt;fileid\u0026gt;.\nThe three types of blobs we need to migrate are stored in\n files for file blobs, the current file content, files_trashbin for trashed files (and their versions) and files_versions for file blobs of older versions.   Filecache table     In both cases the file metadata, including a full replication of the file tree, is stored in the oc_filecache table of an ownCloud 10 database. The primary key of a row is the file id. It is used to attach additional metadata like shares, tags, favorites or arbitrary file properties.\nThe filecache table itself has more metadata:\n   Field Type Null Key Default Extra Comment Migration     fileid bigint(20) NO PRI NULL auto_increment  MUST become the oCIS opaqueid of a file reference. ocis driver stores it in extended attributes and can use numbers as node ids on disk. for eos see note below table   storage int(11) NO MUL 0  the filecache holds metadata for multiple storages corresponds to an oCIS storage space   path varchar(4000) YES  NULL  the path relative to the storages root MUST become the path relative to the storage root. files prefix needs to be trimmed.   path_hash varchar(32) NO    *mysql once had problems indexing long paths, so we stored a hash for lookup by path. -   parent bigint(20) NO MUL 0  used to implement the hierarchy and listing children of a folder by id. redundant with path -   name varchar(250) YES  NULL  basename of path -   mimetype int(11) NO  0  joined with the oc_mimetypes table. only relevant for object storage deployments can be determined from blob / file extension   mimepart int(11) NO  0  \u0026quot; can be determined from blob / file extension   size bigint(20) NO  0  same as blob size unless encryption is used MAY become size, can be determined from blob   mtime bigint(20) NO  0  same as blob mtime for files MAY become mtime (can be determined from blob as well), for directories MUST become tmtime   encrypted int(11) NO  0  encrypted flag oCIS currently does not support encryption   etag varchar(40) YES  NULL  used to propagate changes in a tree MUST be migrated (or calculated in the same way) to prevent clients from syncing unnecessarily   unencrypted_size bigint(20) NO  0  same as blob size oCIS currently does not support encryption   storage_mtime bigint(20) NO  0  used to detect external storage changes oCIS delegates that to the storage providers and drivers   permissions int(11) YES  0  *used as the basis for permissions. synced from disk when running a file scan. * oCIS delegates that to the storage providers and drivers   checksum varchar(255) YES  NULL  same as blob checksum SHOULD become the checksum in the storage provider. eos calculates it itself, ocis driver stores it in extended attributes     Note: for EOS a hot migration only works seamlessly if file ids in oc10 are already read from eos. Otherwise, either a mapping from the oc10 filecache file id to the new eos file id has to be created under the assumption that these id sets do not intersect or files and corresponding shares need to be exported and imported offline to generate a new set of ids. While this will preserve public links, user, group and even federated shares, old internal links may still point to different files because they contain the oc10 fileid\n  share table     used to store\n Public links Private shares with users and groups Federated shares partly Guest shares     Field Type Null Key Default Extra Comment CS3 API     id int(11) NO PRI NULL auto_increment  ShareId.opaqueid string   share_type smallint(6) NO  0  in CS3 every type is handled by a dedicated API. See below the table does NOT map to Share.ShareType TODO clarify   share_with varchar(255) YES MUL NULL   Share.grantee Grantee   uid_owner varchar(64) NO     ShareId.owner UserID   parent int(11) YES  NULL   -   item_type varchar(64) NO MUL    Share.resource_id ResourceId   item_source varchar(255) YES MUL NULL   Share.resource_id ResourceId   item_target varchar(255) YES  NULL   Share.resource_id ResourceId   file_source bigint(20) YES MUL NULL  cannot store uuid style file ids from oCIS. when all users have migrated to oCIS the share manager needs to be updated / migrated to a version that does. Share.resource_id ResourceId   file_target varchar(512) YES  NULL   Share.resource_id ResourceId   permissions smallint(6) NO  0   Share.Permissions SharePermissions   stime bigint(20) NO  0   Share.ctime, Share.mtime   accepted smallint(6) NO  0   ReceivedShare.ShareState ShareState   expiration datetime YES  NULL  only used for the Link API and storage provider api, currently cannot be added using the Collaboration or OCM API Grant   token varchar(32) YES MUL NULL   PublicShare.token   mail_send smallint(6) NO  0   -   uid_initiator varchar(64) YES  NULL   ShareId.creator UserID   share_name varchar(64) YES  NULL  only exists for public shares PublicShare.display_name   attributes longtext YES  NULL  additional share attributes could be implemented using opaque data, but should be added to the CS3 api    In the CS3 API\n public links are handled by the PublicShareProvider using the Link API internal shares are handled by the UserShareProvider using the Collaboration API. This covers user and group shares. federated shares are handled by the OcmShareProvider using the OCM Share Provider AP aka. Open Cloud Mesh.   share_external     Used to store additional metadata for federated shares.\n   Field Type Null Key Default Extra Comment     id bigint(20) NO PRI NULL auto_increment    remote varchar(512) NO  NULL  Url of the remote owncloud instance   share_token varchar(64) NO  NULL  Public share token   password varchar(64) YES  NULL  Optional password for the public share   name varchar(64) NO  NULL  Original name on the remote server   owner varchar(64) NO  NULL  User that owns the public share on the remote server   user varchar(64) NO MUL NULL  Local user which added the external share   mountpoint varchar(4000) NO  NULL  Full path where the share is mounted   mountpoint_hash varchar(32) NO  NULL  md5 hash of the mountpoint   remote_id varchar(255) NO  -1     accepted int(11) NO  0      TODO document how the reva OCM service currently persists the data\n  trusted_servers     used to determine if federated shares can automatically be accepted\n   Field Type Null Key Default Extra Comment     id int(11) NO PRI NULL auto_increment    url varchar(512) NO  NULL  Url of trusted server   url_hash varchar(255) NO UNI   sha1 hash of the url without the protocol   token varchar(128) YES  NULL  token used to exchange the shared secret   shared_secret varchar(256) YES  NULL  shared secret used to authenticate   status int(11) NO  2  current status of the connection   sync_token varchar(512) YES  NULL  cardDav sync token    TODO clarify how OCM handles this and where we store / configure this. It seems related to trusted IdPs\n  user data     Users are migrated in two steps:\n They should all be authenticated using OpenID Connect, which already moves them to a common identity management system. To search share recipients, both, ownCloud 10 and oCIS need access to the same user directory using e.g. LDAP.  TODO add state to CS3 API, so we can \u0026lsquo;disable\u0026rsquo; users TODO how do we map (sub) admins? -\u0026gt; map to roles \u0026amp; permissions\n accounts:\n   Field Type Null Key Default Extra Comment     id bigint(20) unsigned NO PRI NULL auto_increment    email varchar(255) YES MUL NULL     user_id varchar(255) NO UNI NULL     lower_user_id varchar(255) NO UNI NULL     display_name varchar(255) YES MUL NULL     quota varchar(32) YES  NULL     last_login int(11) NO  0     backend varchar(64) NO  NULL     home varchar(1024) NO  NULL     state smallint(6) NO  0      users:\n   Field Type Null Key Default Extra Comment     uid varchar(64) NO PRI      password varchar(255) NO       displayname varchar(64) YES  NULL      groups:\nThe groups table really only contains the group name.\n   Field Type Null Key Default Extra     gid varchar(64) NO PRI       LDAP     TODO clarify if metadata from ldap \u0026amp; user_shibboleth needs to be migrated\n The dn -\u0026gt; owncloud internal username mapping that currently lives in the oc_ldap_user_mapping table needs to move into a dedicated ownclouduuid attribute in the LDAP server. The idp should send it as a claim so the proxy does not have to look up the user using LDAP again. The username cannot be changed in ownCloud 10 and the oCIS provisioning API will not allow changing it as well. When we introduce the graph api we may allow changing usernames when all clients have moved to that api.\nThe problem is that the username in owncloud 10 and in oCIS also need to be the same, which might not be the case when the ldap mapping used a different column. In that case we should add another owncloudusername attribute to the ldap server.\nactivities     dedicated service, not yet implemented, requires decisions about an event system \u0026ndash; jfd\n   Field Type Null Key Default Extra Comment     activity_id bigint(20) NO PRI NULL auto_increment    timestamp int(11) NO MUL 0     priority int(11) NO  0     type varchar(255) YES  NULL     user varchar(64) YES  NULL     affecteduser varchar(64) NO MUL NULL     app varchar(255) NO  NULL     subject varchar(255) NO  NULL     subjectparams longtext NO  NULL     message varchar(255) YES  NULL     messageparams longtext YES  NULL     file varchar(4000) YES  NULL     link varchar(4000) YES  NULL     object_type varchar(255) YES MUL NULL     object_id bigint(20) NO  0      Links     The data_exporter has logic that allows exporting and importing users, including shares. The model classes contain the exact mapping.\n ","description":"The migration happens in subsequent stages while the service is online. First all users need to migrate to the new architecture, then the global namespace needs to be introduced. Finally, the data on disk can be migrated user by user by switching the storage driver.\n @jfd: It might be easier to introduce the spaces api in oc10 and then migrate to oCIS. We cannot migrate both at the same time, the architecture to oCIS (which will change fileids) and introduce a global namespace (which requires stable fileids to let clients handle moves without redownloading)."},{"id":177,"href":"/ocis/flow-docs/login-flow/","title":"Login Flow","parent":"Flow documentation","content":"Login Flow     The following sequence diagram describes the openid connect auth code flow. The eight numbered steps and notes correspond to the openid connect auth code flow steps. Example requests are based on the spec as well:\n sequenceDiagram %% we have comments!! \\o/ %% this documents the login workflow %% examples taken from the oidc spec https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth %% TODO add PKCE, see https://developer.okta.com/blog/2019/08/22/okta-authjs-pkce#use-pkce-to-make-your-apps-more-secure participant user as User participant client as Client participant proxy as ocis-proxy participant idp as IdP participant glauth as ocis-glauth participant graph as ocis-graph participant accounts as ocis-accounts participant ldap as external LDAP server user-+client: What is the content of my home? client-+proxy: PROPFIND no (or expired) auth Note over client,proxy: ocis needs to know the IdP that is\nused to authenticate users. The\nproxy will redirect unauthenticated\nrequests to that IdP. proxy---client: 302 Found Note over client, idp: HTTP/1.1 302 Found\nLocation: https://server.example.com/authorize?\nresponse_type=code\u0026\nscope=openid%20profile%20email\n\u0026client_id=s6BhdRkqt3\n\u0026state=af0ifjsldkj\n\u0026redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb Note over client, idp: We should follow the OpenID Connect Discovery protocol Note over client, idp: Clients might fall back to the ocis server if the discovery failed.\nWe can provide a webfinger endpoint there to let guests use an idp\nthat is backed by the accounts service. Note over client, idp: For now, clients can only handle one IdP, which is configured in ocis. client--client: 1. Client prepares an Authentication Request\ncontaining the desired request parameters. client-+idp: 2. Client sends the request to the Authorization Server. Note over client, idp: GET /authorize?\nresponse_type=code\n\u0026scope=openid%20profile%20email\n\u0026client_id=s6BhdRkqt3\n\u0026state=af0ifjsldkj\n\u0026redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb HTTP/1.1\nHost: server.example.com Note over user, idp: 3. Authorization Server Authenticates the End-User. Note over idp,ldap: Either an IdP already exists or a new one is introduced. Since we are not yet using oidc discovery we can only use one IdP. alt all users managed by idp/ocis idp-+glauth: LDAP query/bind glauth-+graph: GET user with Basic Auth\nGraphAPI graph-+accounts: internal GRPC accounts---graph: response graph---glauth: OData response glauth---idp: LDAP result Note over accounts,ldap: In case internal users are managed\nin an external ldap they have to be\nsynced to the accounts service to\nshow up as recipients during sharing. else all users authenticated by an external idp idp-+ldap: LDAP query/bind ldap---idp: LDAP result alt guest accounts managed in ocis / lookup using glauth proxy: Note over idp,glauth: Idp is configured to use glauth as a\nsecond ldap server. idp-+glauth: LDAP query/bind glauth-+graph: GET user with Basic Auth\nGraphAPI graph-+accounts: internal GRPC accounts---graph: response graph---glauth: OData response glauth---idp: LDAP result else guest account provisioned by other means Note over accounts, ldap: In case guest accounts are managed\nin an existing ldap they need to be\nsynced to the accounts service to\nbe able to login and show up as\nrecipients during sharing. end end Note over user, idp: 4. Authorization Server obtains End-User Consent/Authorization. idp---client: 5. Authorization Server sends the End-User back\nto the Client with an Authorization Code. Note over client, idp: HTTP/1.1 302 Found\nLocation: https://client.example.org/cb?\ncode=SplxlOBeZQQYbYS6WxSbIA\u0026state=af0ifjsldkj client-+idp: 6. Client requests a response using the\nAuthorization Code at the Token Endpoint. Note over client, idp: POST /token HTTP/1.1\nHost: server.example.com\nContent-Type: application/x-www-form-urlencoded\ngrant_type=authorization_code\u0026code=SplxlOBeZQQYbYS6WxSbIA\n\u0026redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb idp---client: 7. Client receives a response that contains an\nID Token and Access Token in the response body. Note over client, idp: HTTP/1.1 200 OK\nContent-Type: application/json\nCache-Control: no-store\nPragma: no-cache\n{\n\"access_token\": \"SlAV32hkKG\",\n\"token_type\": \"Bearer\",\n\"refresh_token\": \"8xLOxBtZp8\",\n\"expires_in\": 3600,\n\"id_token\": \"a ... b.c ... d.e ... f\" // must be a JWT\n} client--client: 8. Client validates the ID token and\nretrieves the End-User's Subject Identifier. client-+proxy: PROPFIND With access token proxy---client: 207 Multi-Status client---user: List of Files X, Y, Z ...  ","description":"Login Flow     The following sequence diagram describes the openid connect auth code flow. The eight numbered steps and notes correspond to the openid connect auth code flow steps. Example requests are based on the spec as well:\n sequenceDiagram %% we have comments!! \\o/ %% this documents the login workflow %% examples taken from the oidc spec https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth %% TODO add PKCE, see https://developer.okta.com/blog/2019/08/22/okta-authjs-pkce#use-pkce-to-make-your-apps-more-secure participant user as User participant client as Client participant proxy as ocis-proxy participant idp as IdP participant glauth as ocis-glauth participant graph as ocis-graph participant accounts as ocis-accounts participant ldap as external LDAP server user-+client: What is the content of my home?"},{"id":178,"href":"/ocis/metrics/","title":"Metrics","parent":"oCIS - ownCloud Infinite Scale","content":"Metrics     This service provides some Prometheus metrics through the debug endpoint, you can optionally secure the metrics endpoint by some random token, which has to be configured either through the flag --debug-token or the environment variable OCIS_DEBUG_TOKEN mentioned above. By default, the metrics endpoint is bound to http://0.0.0.0:8001/metrics.\n go_gc_duration_seconds A summary of the GC invocation durations go_gc_duration_seconds_sum A summary of the GC invocation durations go_gc_duration_seconds_count A summary of the GC invocation durations go_goroutines Number of goroutines that currently exist go_info Information about the Go environment go_memstats_alloc_bytes Number of bytes allocated and still in use go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table go_memstats_frees_total Total number of frees go_memstats_gc_cpu_fraction The fraction of this program\u0026rsquo;s available CPU time used by the GC since the program started go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use go_memstats_heap_idle_bytes Number of heap bytes waiting to be used go_memstats_heap_inuse_bytes Number of heap bytes that are in use go_memstats_heap_objects Number of allocated objects go_memstats_heap_released_bytes Number of heap bytes released to OS go_memstats_heap_sys_bytes Number of heap bytes obtained from system go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection go_memstats_lookups_total Total number of pointer lookups go_memstats_mallocs_total Total number of mallocs go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place go_memstats_other_sys_bytes Number of bytes used for other system allocations go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator go_memstats_sys_bytes Number of bytes obtained from system go_threads Number of OS threads created promhttp_metric_handler_requests_in_flight Current number of scrapes being served promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code  ","description":"Metrics     This service provides some Prometheus metrics through the debug endpoint, you can optionally secure the metrics endpoint by some random token, which has to be configured either through the flag --debug-token or the environment variable OCIS_DEBUG_TOKEN mentioned above. By default, the metrics endpoint is bound to http://0.0.0.0:8001/metrics.\n go_gc_duration_seconds A summary of the GC invocation durations go_gc_duration_seconds_sum A summary of the GC invocation durations go_gc_duration_seconds_count A summary of the GC invocation durations go_goroutines Number of goroutines that currently exist go_info Information about the Go environment go_memstats_alloc_bytes Number of bytes allocated and still in use go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table go_memstats_frees_total Total number of frees go_memstats_gc_cpu_fraction The fraction of this program\u0026rsquo;s available CPU time used by the GC since the program started go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use go_memstats_heap_idle_bytes Number of heap bytes waiting to be used go_memstats_heap_inuse_bytes Number of heap bytes that are in use go_memstats_heap_objects Number of allocated objects go_memstats_heap_released_bytes Number of heap bytes released to OS go_memstats_heap_sys_bytes Number of heap bytes obtained from system go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection go_memstats_lookups_total Total number of pointer lookups go_memstats_mallocs_total Total number of mallocs go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place go_memstats_other_sys_bytes Number of bytes used for other system allocations go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator go_memstats_sys_bytes Number of bytes obtained from system go_threads Number of OS threads created promhttp_metric_handler_requests_in_flight Current number of scrapes being served promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code  "},{"id":179,"href":"/ocis/flow-docs/request-flow/","title":"Request Flow","parent":"Flow documentation","content":"Request Flow     The following sequence diagram describes the general request flow. It shows where account provisioning and token minting are happening:\n sequenceDiagram %% we have comments!! \\o/ participant user as User participant client as Client participant proxy as ocis-proxy participant idp as IdP participant accounts as ocis-accounts participant ldap as corporate LDAP server user-+client: What is the content of my home? client-+proxy: PROPFIND Bearer auth using oidc auth token Note over client,proxy: What is in a bearer token? The spec recommends opaque tokens. Treat it as random byte noise. Note over client,proxy: the proxy MUST authenticate users using ocis-accounts because it needs to decide where to send the request %% Mention introspection endpoint for opaque tokens %% idp uses jwt, so we can save a request %% either way the token can be used to look up the sub and iss of the user %% or is token check enough? proxy-+idp: GET /userinfo alt userinfo succeeds idp--proxy: 200 OK Note over proxy,accounts: Content-Type: application/json\n{\n\"sub\": \"248289761001\",\n\"name\": \"Jane Doe\",\n\"given_name\": \"Jane\",\n\"family_name\": \"Doe\",\n\"preferred_username\": \"j.doe\",\n\"email\": \"janedoe@example.com\",\n\"picture\": \"http://example.com/janedoe/me.jpg\"\n} %% see: https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse else userinfo fails idp---proxy: 401 Unauthorized Note over proxy,accounts: WWW-Authenticate: error=\"invalid_token\",\nerror_description=\"The Access Token expired\" proxy--client: 401 Unauthorized or 302 Found with redirect to idp Note over client: start at login flow\nor refresh the token end proxy-+accounts: TODO API call to exchange sub@iss with account UUID Note over proxy,accounts: does not autoprovision users. They are explicitly provisioned later. alt account exists or has been migrated accounts--proxy: existing account UUID else account does not exist opt oc10 endpoint is configured Note over proxy,oc10: Check if user exists in oc10 proxy-+oc10: GET /apps/graphapi/v1.0/users/\u0026lt;uuid\u0026gt; opt user exists in oc10 oc10---proxy: 200 %% TODO auth using internal token proxy-+oc10: PROPFIND Note over proxy,oc10: forward existing bearer auth oc10---proxy: Multistatus response proxy--client: Multistatus response client--user: List of Files X, Y, Z ... end end Note over proxy,accounts: provision a new account including displayname, email and sub@iss TODO only if the user is allowed to login, based on group membership in the ldap server proxy-proxy: generate new uuid proxy-+accounts: TODO create account with new generated uuid accounts---proxy: OK / error else account has been disabled accounts---proxy: account is disabled proxy--client: 401 Unauthorized or 302 Found with redirect to idp Note over client: start at login flow\nor refresh the token end proxy-proxy: store uuid in context %% what if oc10 does not support a certain request / API proxy-proxy: mint an internal jwt that includes the UUID and username using revas `x-access-token` header proxy-+reva: PROPFIND Token auth using internal JWT reva---proxy: Multistatus response proxy---client: Multistatus response client---user: List of Files X, Y, Z ...  ","description":"Request Flow     The following sequence diagram describes the general request flow. It shows where account provisioning and token minting are happening:\n sequenceDiagram %% we have comments!! \\o/ participant user as User participant client as Client participant proxy as ocis-proxy participant idp as IdP participant accounts as ocis-accounts participant ldap as corporate LDAP server user-+client: What is the content of my home? client-+proxy: PROPFIND Bearer auth using oidc auth token Note over client,proxy: What is in a bearer token?"},{"id":180,"href":"/ocis/flow-docs/public-upload-flow/","title":"Public upload Flow","parent":"Flow documentation","content":"Public Upload flow     The following diagram describes the flow of requests:\n ","description":"Public Upload flow     The following diagram describes the flow of requests:\n "},{"id":181,"href":"/clients/web/development/","title":"Development","parent":"ownCloud Web","content":"   Contributing to ownCloud web  Linting and tests Changelog items   Code Conventions  Early returns Translations TypeScript Dependencies        This is a collection of tips and conventions to follow when working on the ownCloud web frontend. It is a living document, please open a PR if you find something missing.\nContributing to ownCloud web     Everyone is invited to contribute. Simply fork the codebase, check the issues for a suitable one and open a pull request!\nLinting and tests     To make sure your pull request can be efficiently reviewed and won\u0026rsquo;t need a lot of changes down the road, please run the linter and the unit tests via pnpm lint --fix and pnpm test:unit locally. Our CI will run on pull requests and report back any problems after that. For a further introduction on how we handle testing, please head to the testing docs.\nChangelog items     In our project, we follow SemVer and keep a changelog for every change that influences the user experience (where \u0026ldquo;users\u0026rdquo; can be admins, end-users and extension developers). Some changes, like refactoring, updating dependencies or adding tests don\u0026rsquo;t require a changelog item.\nPlease add a changelog item to the changelog/unreleased/ folder, referencing the issue and pull request numbers, following the changelog item template.\nCode Conventions     Early returns     We\u0026rsquo;re trying to stick with early returns in our code to make it more performant and simpler to reason about it.\nTranslations     Use v-translate (or v-text in combination with computed properties) inside HTML tags (instead of a \u0026lt;translate tag=\u0026quot;h1\u0026quot;\u0026gt; or similar) in order to make reasoning about the DOM tree easier.\nTypeScript     We\u0026rsquo;re currently migrating our projects from JavaScript to TypeScript, providing for type safety. cleaner interfaces and making sure our IDEs can support us in reasoning about our (ever growing, complex) codebase.\nDependencies     To keep the bundle size small and reduce the risk of introducing security problems for our users, we try to limit the amount of dependencies in our projects and keep them as up-to-date as possible.\n","description":"Contributing to ownCloud web  Linting and tests Changelog items   Code Conventions  Early returns Translations TypeScript Dependencies        This is a collection of tips and conventions to follow when working on the ownCloud web frontend. It is a living document, please open a PR if you find something missing.\nContributing to ownCloud web     Everyone is invited to contribute."},{"id":182,"href":"/clients/web/docs/development/","title":"Development","parent":"ownCloud Web","content":"   Contributing to ownCloud web  Linting and tests Changelog items   Code Conventions  Early returns Translations TypeScript Dependencies        This is a collection of tips and conventions to follow when working on the ownCloud web frontend. It is a living document, please open a PR if you find something missing.\nContributing to ownCloud web     Everyone is invited to contribute. Simply fork the codebase, check the issues for a suitable one and open a pull request!\nLinting and tests     To make sure your pull request can be efficiently reviewed and won\u0026rsquo;t need a lot of changes down the road, please run the linter and the unit tests via pnpm lint --fix and pnpm test:unit locally. Our CI will run on pull requests and report back any problems after that. For a further introduction on how we handle testing, please head to the testing docs.\nChangelog items     In our project, we follow SemVer and keep a changelog for every change that influences the user experience (where \u0026ldquo;users\u0026rdquo; can be admins, end-users and extension developers). Some changes, like refactoring, updating dependencies or adding tests don\u0026rsquo;t require a changelog item.\nPlease add a changelog item to the changelog/unreleased/ folder, referencing the issue and pull request numbers, following the changelog item template.\nCode Conventions     Early returns     We\u0026rsquo;re trying to stick with early returns in our code to make it more performant and simpler to reason about it.\nTranslations     Use v-translate (or v-text in combination with computed properties) inside HTML tags (instead of a \u0026lt;translate tag=\u0026quot;h1\u0026quot;\u0026gt; or similar) in order to make reasoning about the DOM tree easier.\nTypeScript     We\u0026rsquo;re currently migrating our projects from JavaScript to TypeScript, providing for type safety. cleaner interfaces and making sure our IDEs can support us in reasoning about our (ever growing, complex) codebase.\nDependencies     To keep the bundle size small and reduce the risk of introducing security problems for our users, we try to limit the amount of dependencies in our projects and keep them as up-to-date as possible.\n","description":"Contributing to ownCloud web  Linting and tests Changelog items   Code Conventions  Early returns Translations TypeScript Dependencies        This is a collection of tips and conventions to follow when working on the ownCloud web frontend. It is a living document, please open a PR if you find something missing.\nContributing to ownCloud web     Everyone is invited to contribute."},{"id":183,"href":"/services/settings/bundles/","title":"Settings Bundles","parent":"Settings","content":"A Settings Bundle is a collection of settings, uniquely identified by the key of the extension registering the bundle and the key of the bundle itself. Its purpose is to let oCIS services define settings and make them available to users. They are dynamically rendered into forms, available in the frontend.\nAs of now we support five different types of settings:\n boolean integer string single choice list of integers or strings multiple choice list of integers or strings  Each Setting is uniquely identified by a key within the bundle. Some attributes depend on the chosen type of setting. Through the information provided with the attributes of the setting, the settings frontend dynamically renders form elements, allowing users to change their settings individually.\nExample     { \u0026#34;identifier\u0026#34;: { \u0026#34;extension\u0026#34;: \u0026#34;ocis-accounts\u0026#34;, \u0026#34;bundleKey\u0026#34;: \u0026#34;profile\u0026#34; }, \u0026#34;displayName\u0026#34;: \u0026#34;Profile\u0026#34;, \u0026#34;settings\u0026#34;: [ { \u0026#34;settingKey\u0026#34;: \u0026#34;lastname\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Lastname\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Input for lastname\u0026#34;, \u0026#34;stringValue\u0026#34;: { \u0026#34;placeholder\u0026#34;: \u0026#34;Set lastname\u0026#34; } }, { \u0026#34;settingKey\u0026#34;: \u0026#34;age\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Age\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Input for age\u0026#34;, \u0026#34;intValue\u0026#34;: { \u0026#34;min\u0026#34;: \u0026#34;16\u0026#34;, \u0026#34;max\u0026#34;: \u0026#34;200\u0026#34;, \u0026#34;step\u0026#34;: \u0026#34;2\u0026#34;, \u0026#34;placeholder\u0026#34;: \u0026#34;Set age\u0026#34; } }, { \u0026#34;settingKey\u0026#34;: \u0026#34;timezone\u0026#34;, \u0026#34;displayName\u0026#34;: \u0026#34;Timezone\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;User timezone\u0026#34;, \u0026#34;singleChoiceValue\u0026#34;: { \u0026#34;options\u0026#34;: [ { \u0026#34;stringValue\u0026#34;: \u0026#34;Europe/Berlin\u0026#34;, \u0026#34;displayValue\u0026#34;: \u0026#34;Europe/Berlin\u0026#34; }, { \u0026#34;stringValue\u0026#34;: \u0026#34;Asia/Kathmandu\u0026#34;, \u0026#34;displayValue\u0026#34;: \u0026#34;Asia/Kathmandu\u0026#34; } ] } } ] } ","description":"A Settings Bundle is a collection of settings, uniquely identified by the key of the extension registering the bundle and the key of the bundle itself. Its purpose is to let oCIS services define settings and make them available to users. They are dynamically rendered into forms, available in the frontend.\nAs of now we support five different types of settings:\n boolean integer string single choice list of integers or strings multiple choice list of integers or strings  Each Setting is uniquely identified by a key within the bundle."},{"id":184,"href":"/clients/web/backend-ocis/","title":"Setup with oCIS","parent":"ownCloud Web","content":"   Setting up Web Running Web Setting up oCIS Start oCIS Running tests      Setting up Web      Clone the repository Initally install all dependencies by running pnpm install Copy ./config/config.json.sample-ocis to ./config/config.json and adjust values if required  Running Web      Start bundling web with a watcher by running pnpm build:w  Setting up oCIS      Setup oCIS by following the setup instructions Start oCIS with local links to your bundled web frontend and config by running WEB_ASSET_PATH=../../web/dist WEB_UI_CONFIG=../../web/dist/config.json OCIS_INSECURE=true IDM_CREATE_DEMO_USERS=true ./bin/ocis server (and make sure to adjust paths as necessary)  Start oCIS      open https://localhost:9200 and accept the certificate when signing in, use one of the available demo users whenever code changes are made, you need to manually reload the browser page (no hot reload)  Running tests     For testing, please refer to the testing docs\n","description":"Setting up Web Running Web Setting up oCIS Start oCIS Running tests      Setting up Web      Clone the repository Initally install all dependencies by running pnpm install Copy ./config/config.json.sample-ocis to ./config/config.json and adjust values if required  Running Web      Start bundling web with a watcher by running pnpm build:w  Setting up oCIS      Setup oCIS by following the setup instructions Start oCIS with local links to your bundled web frontend and config by running WEB_ASSET_PATH=."},{"id":185,"href":"/clients/web/docs/backend-ocis/","title":"Setup with oCIS","parent":"ownCloud Web","content":"   Setting up Web Running Web Setting up oCIS Start oCIS Running tests      Setting up Web      Clone the repository Initally install all dependencies by running pnpm install Copy ./config/config.json.sample-ocis to ./config/config.json and adjust values if required  Running Web      Start bundling web with a watcher by running pnpm build:w  Setting up oCIS      Setup oCIS by following the setup instructions Start oCIS with local links to your bundled web frontend and config by running WEB_ASSET_PATH=../../web/dist WEB_UI_CONFIG=../../web/dist/config.json OCIS_INSECURE=true IDM_CREATE_DEMO_USERS=true ./bin/ocis server (and make sure to adjust paths as necessary)  Start oCIS      open https://localhost:9200 and accept the certificate when signing in, use one of the available demo users whenever code changes are made, you need to manually reload the browser page (no hot reload)  Running tests     For testing, please refer to the testing docs\n","description":"Setting up Web Running Web Setting up oCIS Start oCIS Running tests      Setting up Web      Clone the repository Initally install all dependencies by running pnpm install Copy ./config/config.json.sample-ocis to ./config/config.json and adjust values if required  Running Web      Start bundling web with a watcher by running pnpm build:w  Setting up oCIS      Setup oCIS by following the setup instructions Start oCIS with local links to your bundled web frontend and config by running WEB_ASSET_PATH=."},{"id":186,"href":"/ocis/development/debugging/","title":"Debugging","parent":"Development","content":"   Debugging  Start ocis  Use the debug binary and attach to the process as needed Start all services independently to replace one of them with a debug process   Gather error messages Managing dependencies and testing changes        Debugging     As a single binary for easy deployment running ocis server just forks itself to start all the services, which makes debugging those processes a little harder.\nUltimately, we want to be able to stop a single service using e.g. ocis kill web so that you can start the service you want to debug in debug mode. We need to change the way we fork processes though, otherwise the runtime will automatically restart a service if killed.\nStart ocis     For debugging there are two workflows that work well, depending on your preferences.\nUse the debug binary and attach to the process as needed     Run the debug binary with OCIS_LOG_LEVEL=debug bin/ocis-debug server and then find the service you want to debug using:\n# ps ax | grep ocis 12837 pts/1 Sl+ 0:00 bin/ocis-debug server 12845 pts/1 Sl 0:00 bin/ocis-debug graph 12847 pts/1 Sl 0:00 bin/ocis-debug reva-auth-bearer 12849 pts/1 Sl 0:00 bin/ocis-debug ocs 12850 pts/1 Sl 0:00 bin/ocis-debug reva-storage-oc-data 12863 pts/1 Sl 0:00 bin/ocis-debug webdav 12874 pts/1 Sl 0:00 bin/ocis-debug reva-frontend 12897 pts/1 Sl 0:00 bin/ocis-debug reva-sharing 12905 pts/1 Sl 0:00 bin/ocis-debug reva-gateway 12912 pts/1 Sl 0:00 bin/ocis-debug reva-storage-home 12920 pts/1 Sl 0:00 bin/ocis-debug reva-users 12929 pts/1 Sl 0:00 bin/ocis-debug glauth 12940 pts/1 Sl 0:00 bin/ocis-debug reva-storage-home-data 12948 pts/1 Sl 0:00 bin/ocis-debug idp 12952 pts/1 Sl 0:00 bin/ocis-debug proxy 12961 pts/1 Sl 0:00 bin/ocis-debug thumbnails 12971 pts/1 Sl 0:00 bin/ocis-debug reva-storage-oc 12981 pts/1 Sl 0:00 bin/ocis-debug web 12993 pts/1 Sl 0:00 bin/ocis-debug api 12998 pts/1 Sl 0:00 bin/ocis-debug registry 13004 pts/1 Sl 0:00 bin/ocis-debug web 13015 pts/1 Sl 0:00 bin/ocis-debug reva-auth-basic Then you can set a breakpoint in the service you need and attach to the process via processid. To debug the reva-sharing service the VS Code launch.json would look like this:\n{ \u0026#34;version\u0026#34;: \u0026#34;0.2.0\u0026#34;, \u0026#34;configurations\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;ocis attach\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;go\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;attach\u0026#34;, \u0026#34;mode\u0026#34;: \u0026#34;local\u0026#34;, \u0026#34;processId\u0026#34;: 12897 } ] } Start all services independently to replace one of them with a debug process      You can use this ./ocis.sh script to start all services independently, so they don\u0026rsquo;t get restarted by the runtime when you kill them:  #/bin/sh LOG_LEVEL=\u0026#34;debug\u0026#34; bin/ocis --log-level=$LOG_LEVEL micro \u0026amp; bin/ocis --log-level=$LOG_LEVEL glauth \u0026amp; bin/ocis --log-level=$LOG_LEVEL graph \u0026amp; #bin/ocis --log-level=$LOG_LEVEL hello \u0026amp; bin/ocis --log-level=$LOG_LEVEL idp \u0026amp; #bin/ocis --log-level=$LOG_LEVEL ocs \u0026amp; bin/ocis --log-level=$LOG_LEVEL web \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-auth-basic \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-auth-bearer \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-frontend \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-gateway \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-sharing \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-storage-home \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-storage-home-data \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-storage-oc \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-storage-oc-data \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-storage-root \u0026amp; bin/ocis --log-level=$LOG_LEVEL reva-users \u0026amp; #bin/ocis --log-level=$LOG_LEVEL webdav bin/ocis --log-level=$LOG_LEVEL proxy \u0026amp; Get the list of running processes:  # ps ax | grep ocis 12837 pts/1 Sl+ 0:00 bin/ocis-debug server 12845 pts/1 Sl 0:00 bin/ocis-debug graph 12847 pts/1 Sl 0:00 bin/ocis-debug reva-auth-bearer 12849 pts/1 Sl 0:00 bin/ocis-debug ocs 12850 pts/1 Sl 0:00 bin/ocis-debug reva-storage-oc-data 12863 pts/1 Sl 0:00 bin/ocis-debug webdav 12874 pts/1 Sl 0:00 bin/ocis-debug reva-frontend 12897 pts/1 Sl 0:00 bin/ocis-debug reva-sharing 12905 pts/1 Sl 0:00 bin/ocis-debug reva-gateway 12912 pts/1 Sl 0:00 bin/ocis-debug reva-storage-home 12920 pts/1 Sl 0:00 bin/ocis-debug reva-users 12929 pts/1 Sl 0:00 bin/ocis-debug glauth 12940 pts/1 Sl 0:00 bin/ocis-debug reva-storage-home-data 12948 pts/1 Sl 0:00 bin/ocis-debug idp 12952 pts/1 Sl 0:00 bin/ocis-debug proxy 12961 pts/1 Sl 0:00 bin/ocis-debug thumbnails 12971 pts/1 Sl 0:00 bin/ocis-debug reva-storage-oc 12981 pts/1 Sl 0:00 bin/ocis-debug web 12993 pts/1 Sl 0:00 bin/ocis-debug api 12998 pts/1 Sl 0:00 bin/ocis-debug registry 13004 pts/1 Sl 0:00 bin/ocis-debug web 13015 pts/1 Sl 0:00 bin/ocis-debug reva-auth-basic Kill the service you want to start in debug mode:  # kill 17628 Start the service you are interested in debug mode. When using make to build the binary there is already a bin/ocis-debug binary for you. When running an IDE tell it which service to start by providing the corresponding sub command, e.g. bin\\ocis-debug reva-frontend.  Gather error messages     We recommend you collect all related information in a single file or in a GitHub issue. Let us start with an error that pops up in the Web UI:\n Error while sharing. error sending a grpc stat request\n This popped up when I tried to add marie as a collaborator in ownCloud Web. That triggers a request to the server which I copied as curl. We can strip a lot of headers and the gist of it is:\n# curl \u0026#39;https://localhost:9200/ocs/v1.php/apps/files_sharing/api/v1/shares\u0026#39; -d \u0026#39;shareType=0\u0026amp;shareWith=marie\u0026amp;path=%2FNeuer+Ordner\u0026amp;permissions=1\u0026#39; -u einstein:relativity -k -v | xmllint -format - [... headers ...] \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;ocs\u0026gt; \u0026lt;meta\u0026gt; \u0026lt;status\u0026gt;error\u0026lt;/status\u0026gt; \u0026lt;statuscode\u0026gt;998\u0026lt;/statuscode\u0026gt; \u0026lt;message\u0026gt;error sending a grpc stat request\u0026lt;/message\u0026gt; \u0026lt;/meta\u0026gt; \u0026lt;/ocs\u0026gt;   The username and password only work when basic auth is available. Otherwise you have to obtain a bearer token, e.g. by grabbing it from the browser.   TODO add ocis cli tool to obtain a bearer token.  We also have a few interesting log entries:\n0:43PM INF home/jfd/go/pkg/mod/github.com/cs3org/reva@v0.0.2-0.20200318111623-a2f97d4aa741/internal/grpc/interceptors/log/log.go:69 \u0026gt; unary code=OK end=\u0026#34;18/Mar/2020:22:43:40 +0100\u0026#34; from=tcp://[::1]:44078 pid=17836 pkg=rgrpc start=\u0026#34;18/Mar/2020:22:43:40 +0100\u0026#34; time_ns=95841 traceid=b4eb9a9f45921f7d3632523ca32a42b0 uri=/cs3.storage.registry.v1beta1.RegistryAPI/GetStorageProvider user-agent=grpc-go/1.26.0 10:43PM ERR home/jfd/go/pkg/mod/github.com/cs3org/reva@v0.0.2-0.20200318111623-a2f97d4aa741/internal/grpc/interceptors/log/log.go:69 \u0026gt; unary code=Unknown end=\u0026#34;18/Mar/2020:22:43:40 +0100\u0026#34; from=tcp://[::1]:43910 pid=17836 pkg=rgrpc start=\u0026#34;18/Mar/2020:22:43:40 +0100\u0026#34; time_ns=586115 traceid=b4eb9a9f45921f7d3632523ca32a42b0 uri=/cs3.gateway.v1beta1.GatewayAPI/Stat user-agent=grpc-go/1.26.0 10:43PM ERR home/jfd/go/pkg/mod/github.com/cs3org/reva@v0.0.2-0.20200318111623-a2f97d4aa741/internal/http/services/owncloud/ocs/reqres.go:94 \u0026gt; error sending a grpc stat request error=\u0026#34;rpc error: code = Unknown desc = gateway: error calling Stat: rpc error: code = Unavailable desc = connection error: desc = \\\u0026#34;transport: Error while dialing dial tcp [::1]:9152: connect: connection refused\\\u0026#34;\u0026#34; pid=17832 pkg=rhttp traceid=b4eb9a9f45921f7d3632523ca32a42b0   TODO return the trace id in the response so we can correlate easier. For reva tracked in https://github.com/cs3org/reva/issues/587  The last line gives us a hint where the log message originated: .../github.com/cs3org/reva@v0.0.2-0.20200318111623-a2f97d4aa741/internal/http/services/owncloud/ocs/reqres.go:94. Which looks like this:\n89: // WriteOCSResponse handles writing ocs responses in json and xml 90: func WriteOCSResponse(w http.ResponseWriter, r *http.Request, res *Response, err error) { 91: var encoded []byte 92: 93: if err != nil { 94: appctx.GetLogger(r.Context()).Error().Err(err).Msg(res.OCS.Meta.Message) 95: } Ok, so this seems to be a convenience method that is called from multiple places and also handles errors. Unfortunately, this hides the actual source of the error. We could set a breakpoint in line 94 and reproduce the problem, which can be a lot harder than just clicking the share button or sending a curl request again. So let us see what else the log tells us.\nThe previous line tells us that a Stat request failed: uri=/cs3.gateway.v1beta1.GatewayAPI/Stat. This time the line is written by the grpc log interceptor. What else is there?\nThe first line tells us that looking up the responsible storage provider seems to have succeeded: uri=/cs3.storage.registry.v1beta1.RegistryAPI/GetStorageProvider.\nAt this point it your familiarity with the codebase starts to become a factor. If you are new you should probably go back to setting a break point on the log line and check the stack trace.\nDebug wherever the call trace leads you to \u0026hellip; good luck!\nManaging dependencies and testing changes     You can either run and manage the services independently, or you can update the go.mod file and replace dependencies with your local version.\nTo debug the reva frontend we need to add two replacements:\n// use the local ocis-reva repo replace github.com/owncloud/ocis-reva =\u0026gt; ../ocis-reva // also use the local reva repo replace github.com/cs3org/reva =\u0026gt; ../reva   The username and password only work when basic auth is available. Otherwise you have to obtain a bearer token, e.g. by grabbing it from the browser.  Rebuild ocis to make sure the dependency is used. It should be sufficient to just restart the service you want to debug.\n","description":"Debugging  Start ocis  Use the debug binary and attach to the process as needed Start all services independently to replace one of them with a debug process   Gather error messages Managing dependencies and testing changes        Debugging     As a single binary for easy deployment running ocis server just forks itself to start all the services, which makes debugging those processes a little harder."},{"id":187,"href":"/extensions/ocis_hello/grpc/","title":"GRPC API","parent":"Hello (example extension)","content":"   hello.proto  GreetRequest GreetResponse Hello   Scalar Value Types      hello.proto     GreetRequest        Field Type Label Description     name string      GreetResponse        Field Type Label Description     message string      Hello        Method Name Request Type Response Type Description     Greet GreetRequest GreetResponse     Scalar Value Types        .proto Type Notes C++ Java     double   double double   float   float float   int32  Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. int32 int   int64  Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. int64 long   uint32  Uses variable-length encoding. uint32 int   uint64  Uses variable-length encoding. uint64 long   sint32  Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int   sint64  Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long   fixed32  Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int   fixed64  Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long   sfixed32  Always four bytes. int32 int   sfixed64  Always eight bytes. int64 long   bool   bool boolean   string  A string must always contain UTF-8 encoded or 7-bit ASCII text. string String   bytes  May contain any arbitrary sequence of bytes. string ByteString    ","description":"hello.proto  GreetRequest GreetResponse Hello   Scalar Value Types      hello.proto     GreetRequest        Field Type Label Description     name string      GreetResponse        Field Type Label Description     message string      Hello        Method Name Request Type Response Type Description     Greet GreetRequest GreetResponse     Scalar Value Types        ."},{"id":188,"href":"/extensions/ocis_hello/running/","title":"Running","parent":"Hello (example extension)","content":"In order to use the Hello extension we need to configure and start oCIS first. After that we can run the Hello extension itself.\nConfigure and start oCIS     You can either start oCIS from a binary or build it from source.\nNo matter which way you choose, we need to create a configuration file for ownCloud Web, so that the Hello extension will be loaded in the frontend. Therefore create a file web-config.json with the following contents:\n{ \u0026#34;server\u0026#34;: \u0026#34;https://localhost:9200\u0026#34;, \u0026#34;theme\u0026#34;: \u0026#34;https://localhost:9200/themes/owncloud/theme.json\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;0.1.0\u0026#34;, \u0026#34;openIdConnect\u0026#34;: { \u0026#34;metadata_url\u0026#34;: \u0026#34;https://localhost:9200/.well-known/openid-configuration\u0026#34;, \u0026#34;authority\u0026#34;: \u0026#34;https://localhost:9200\u0026#34;, \u0026#34;client_id\u0026#34;: \u0026#34;web\u0026#34;, \u0026#34;response_type\u0026#34;: \u0026#34;code\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;openid profile email\u0026#34; }, \u0026#34;apps\u0026#34;: [\u0026#34;files\u0026#34;, \u0026#34;media-viewer\u0026#34;], \u0026#34;external_apps\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;settings\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/settings.js\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;accounts\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/accounts.js\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;hello\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/hello.js\u0026#34; } ], \u0026#34;options\u0026#34;: { \u0026#34;hideSearchBar\u0026#34;: true } } Please note the the regististration of our Hello extension in the external_apps section. It will trigger ownCloud Web to load hello.js, the frontend bundle generated in the frontend build step.\nThe frontend bundle will be requested from the oCIS proxy and requests to our Hello extension\u0026rsquo;s API will also be passed to the oCIS proxy first. Therefore the oCIS proxy needs to be configured to forward these requests to our Hello extension. We do this by using the existing proxy-example.json file from the oCIS proxy. Just add an extra endpoint at the end for the Hello extension.\n{ \u0026#34;endpoint\u0026#34;: \u0026#34;/api/v0/greet\u0026#34;, \u0026#34;backend\u0026#34;: \u0026#34;http://localhost:9105\u0026#34; }, { \u0026#34;endpoint\u0026#34;: \u0026#34;/hello.js\u0026#34;, \u0026#34;backend\u0026#34;: \u0026#34;http://localhost:9105\u0026#34; } In addition to all these we will also need to activate the config files we just created. Therefore set these two variables with the path to the respective config file.\nexport WEB_UI_CONFIG=\u0026lt;path to web-config.json\u0026gt; export PROXY_CONFIG_FILE=\u0026lt;path to ocis proxy config file\u0026gt; And finally start the oCIS server:\nocis server   oCIS currently has a bug. oCIS proxy will not pick up the proxy configuration file if it is started in the supervised mode by ocis server. Therefore you will need to apply the following workaround:\nRun ocis server with the environment variables mentioned above. Then open a new CLI and run ocis kill proxy. Set the same environment variables as above and run ocis proxy server. This starts the proxy in a non supervised mode and ensures that it picks up your custom routes in the proxy configuration file.\n  Start the extension     After oCIS is running, we can start the Hello extension.\nFor that just build ocis-hello binary.\ncd ocis-hello make build And Run the service\n./bin/hello server ","description":"In order to use the Hello extension we need to configure and start oCIS first. After that we can run the Hello extension itself.\nConfigure and start oCIS     You can either start oCIS from a binary or build it from source.\nNo matter which way you choose, we need to create a configuration file for ownCloud Web, so that the Hello extension will be loaded in the frontend."},{"id":189,"href":"/extensions/ocis_hello/settings/","title":"Settings","parent":"Hello (example extension)","content":"oCIS provides an settings extension that other extensions can use to make settings accessible to users.\nIn case of the Hello extension administrator users are able to change the greeter message.\nSettings are stored and presented to the user by the oCIS settings extension. It also exposes endpoints for registering and manipulating so called settings bundles.\nThe settings defined through settings bundles can be changed by authenticated users in ownCloud Web, if they have enough permissions to edit them. As a result, your service only has to register a settings bundle and permissions for it and oCIS settings takes care of everything else. Your service can simply use the settings values that were set by users.\nIn this chapter we want to show you how to register a settings bundle, the settings permissions and how to use the respective values that were set by users. We do this by customizing the greeter phrase from our greeter service in the Hello extension.\nYou can find the source code, especially how it\u0026rsquo;s integrated into the service, in the following files:\n pkg/service/v0/service.go for the requests pkg/command/server.go for the integration of registerSettingsBundles into the service start  Register a settings bundle and set the permissions     In order to register a settings bundle, you need to create a request message and then send it to the BundleService of oCIS settings through a gRPC call. The same applies for setting permissions on the setting bundles.\nCreate a bundle request     request := \u0026amp;settings.SaveBundleRequest{ Bundle: \u0026amp;settings.Bundle{ Id: bundleIDGreeting, Name: \u0026#34;greeting\u0026#34;, DisplayName: \u0026#34;Greeting\u0026#34;, Extension: \u0026#34;ocis-hello\u0026#34;, Type: settings.Bundle_TYPE_DEFAULT, Resource: \u0026amp;settings.Resource{ Type: settings.Resource_TYPE_SYSTEM, }, Settings: []*settings.Setting{ { Id: settingIDGreeterPhrase, Name: \u0026#34;phrase\u0026#34;, DisplayName: \u0026#34;Phrase\u0026#34;, Description: \u0026#34;Phrase for replies on the greet request\u0026#34;, Resource: \u0026amp;settings.Resource{ Type: settings.Resource_TYPE_SYSTEM, }, Value: \u0026amp;settings.Setting_StringValue{ StringValue: \u0026amp;settings.String{ Required: true, Default: \u0026#34;Hello\u0026#34;, MaxLength: 15, }, }, }, }, }, The request holds only one field, which is a SettingsBundle. It consists of an Identifier, a DisplayName and a list of Settings.\n The Extension and the ID of the bundle are required and have to be alphanumeric (- and _ are allowed as well). The ID has to stay stable - if you change it, existing settings will not be migrated to the new identifier. The DisplayName is required and may contain any UTF8 character. It will be shown in the settings user frontend in a generated form, so please try to be descriptive. You can change the DisplayName at any time. Settings is the list of settings you want to make available with this settings bundle. In this example, there is only one setting defined - a string setting for the phrase our greeter uses in the response. You can explore more types of settings in the settings package. All of them come with their own characteristics and validations. For the phrase setting we decided to set it to Required, so that it can\u0026rsquo;t be empty, and to set a MaxLength of 15 characters, so that the phrase is not too long. The ID of the setting is again particularly important, as this is used for referencing the setting in other requests. It has to fulfill the same rules as the other ID attributes. Please also take the time to set a Description, in order to provide accessibility in the generated forms as good as possible.  Send bundle request to oCIS settings     This request message can be sent to the BundleService of oCIS settings like this:\nsettings := settings.NewBundleService(\u0026#34;com.owncloud.api.settings\u0026#34;, mclient.DefaultClient) response, err := bundleService.SaveBundle(context.Background(), request) We run this request on every start of the Hello extension so that the settings service always has the most recent version of the settings bundle.\nCreate a permission settings request     In order to grant admins access to the setting we need to create a AddSettingToBundleRequest.\npermissionRequests := []*settings.AddSettingToBundleRequest{ { BundleId: ssvc.BundleUUIDRoleAdmin, Setting: \u0026amp;settings.Setting{ Id: \u0026#34;d5f42c4b-e1b6-4b59-8eca-fc4b9e9f2320\u0026#34;, Resource: \u0026amp;settings.Resource{ Type: settings.Resource_TYPE_SETTING, Id: settingIDGreeterPhrase, }, Name: \u0026#34;phrase-admin-read\u0026#34;, Value: \u0026amp;settings.Setting_PermissionValue{ PermissionValue: \u0026amp;settings.Permission{ Operation: settings.Permission_OPERATION_READWRITE, Constraint: settings.Permission_CONSTRAINT_OWN, }, }, }, }, } Send permission settings request     The AddSettingToBundleRequest then needs to be send to the settings service:\nresponse, err := bundleService.AddSettingToBundle(context.Background(), permissionRequests[i]) Use settings value     We registered the greeter phrase setting for a reason: We want to allow authenticated administrator users to customize how users are greeted by the Hello extension. In order to do this, we need to ask oCIS settings on every request, what the greeter phrase of the authenticated user is.\nAccount UUID     The settings request has one important prerequisite: As our service is stateless, we need to know the account UUID of the authenticated user the incoming POST request to our greeter service is coming from. As that POST request is coming through oCIS proxy, there is an HTTP header x-access-token that holds a JWT with the account UUID in it. We just have to dismantle the JWT to get the UUID. There is a middleware for that in ocis-pkg. You can look up the server configuration for that middleware in pkg/server/http/server.go. In essence, it dismantles the x-access-token, extracts the account UUID and makes it available in the context.\nIt can be subsequently retrieved from the context like this:\naccountID, ok := metadata.Get(ctx, middleware.AccountID) Create request     With the account UUID we can build an Identifier for the request to oCIS settings as follows:\nrq := settings.GetValueByUniqueIdentifiersRequest{ AccountUuid: accountID, SettingId: settingIDGreeterPhrase, } response, err := s.vsClient.GetValueByUniqueIdentifiers(context.Background(), \u0026amp;rq) In order to get the setting we need to know which user (AccountUuid) is requesting the settings value and which setting he is requesting (SettingId).\nSend request     This request message can be sent to the settings extension like this:\nvalueService := settings.NewValueService(\u0026#34;com.owncloud.api.settings\u0026#34;, mclient.DefaultClient) response, err := valueService.GetSettingsValue(ctx, request) The request gives us the default or customized greeting phrase, depending on wether it has already been changed by an administrator.\nConclusion     You have learned how to register settings bundles, how to get the account UUID of the authenticated user and how to query the settings service for settings values.\n","description":"oCIS provides an settings extension that other extensions can use to make settings accessible to users.\nIn case of the Hello extension administrator users are able to change the greeter message.\nSettings are stored and presented to the user by the oCIS settings extension. It also exposes endpoints for registering and manipulating so called settings bundles.\nThe settings defined through settings bundles can be changed by authenticated users in ownCloud Web, if they have enough permissions to edit them."},{"id":190,"href":"/extensions/ocis_hello/testing/","title":"Testing","parent":"Hello (example extension)","content":"This repository provides a general guideline for creating tests for an oCIS extension. The tests can be written in various levels from unit, integration, and end-to-end. It is not essential to write tests on all these levels as it can be redundant in some cases. This repository provides a reference for all levels of tests.\nUnit tests     Unit tests generally live inside *_test.go files in the /pkg directory. One such example in this extension is in /pkg/service/v0/service_test.go. Similarly the unit test for the protobuf generated code can also be written just like in /pkg/proto/hello.pb_test.go.\nIntegration tests     There are mainly 2 types of integration tests, namely HTTP tests, and GRPC tests. These tests mostly live in /pkg/proto directory where all the protobuf definitions are specified. The examples for the HTTP integration tests are in /pkg/proto/hello.pb.web_test.go whereas the GRPC tests are in /pkg/proto/hello.pb.micro_test.go.\nEnd-to-End tests     For extensions with an UI, we can also write end-to-end tests using the Nightwatch test framework. These tests live in /ui/tests directory. We can reuse already existing Gherkin steps from the ownCloud Web tests here.\nRunning the tests     Unit and integration tests     The unit and integration tests are run using the simple go test command. If you wish to run all the tests with the coverage you can just use make command.\nmake test You can also run a specific file with the go test command\ngo test \u0026lt;path to package or file\u0026gt; End-to-End tests     Running end-to-end tests is a bit more complicated than unit and integration tests. First of all we will need a complete oCIS setup with the Hello extension running. Please refer to foo\nThen we need to set up the test infrastructure following the instructions form here\nNow we can run the tests. The tests will take several configuration variables which can be found here. Without configuration, most of the defaults will work. We just need make sure to set these values through env variable.\nexport WEB_PATH=\u0026lt;path to ownCloud Web directory\u0026gt; export OCIS_SKELETON_DIR=\u0026lt;path to the skeleton directory\u0026gt; export WEB_UI_CONFIG=\u0026lt;path to the config.json file used by web\u0026gt; While running oCIS we should always use a configuration file for ownCloud Web because our tests will read this file and sometimes even change it which cannot be done if you use environment variables or the default values.\nWith all this in place we can just run the tests with a simple make command. First go to the Hello repository\ncd \u0026lt;path to hello\u0026gt; Then run\nmake test-acceptance-webui To run just one feature you can run\nmake test-acceptance-webui \u0026lt;path-to-feature file\u0026gt;:\u0026lt;line-number\u0026gt; ","description":"This repository provides a general guideline for creating tests for an oCIS extension. The tests can be written in various levels from unit, integration, and end-to-end. It is not essential to write tests on all these levels as it can be redundant in some cases. This repository provides a reference for all levels of tests.\nUnit tests     Unit tests generally live inside *_test.go files in the /pkg directory."},{"id":191,"href":"/services/settings/values/","title":"Settings Values","parent":"Settings","content":"A Settings Value is the value an authenticated user has chosen for a specific setting, defined in a settings bundle.\nIdentifying settings values     A settings value is uniquely identified by four attributes. Three of them are coming from the definition of the setting within it\u0026rsquo;s settings bundle (see Settings Bundles for an example). The fourth identifies the user.\n extension: Key of the extension that registered the settings bundle, bundleKey: Key of the settings bundle, settingKey: Key of the setting as defined within the bundle, accountUuid: The UUID of the authenticated user who has saved the setting.   When requests are going through ocis-proxy, the accountUuid attribute can be set to the static keyword me instead of using a real UUID. ocis-proxy will take care of minting the UUID of the authenticated user into a JWT, providing it in the HTTP header as x-access-token. That UUID is then used in this service, to replace me with the actual UUID of the authenticated user.  Example of stored settings values     { \u0026#34;values\u0026#34;: { \u0026#34;language\u0026#34;: { \u0026#34;identifier\u0026#34;: { \u0026#34;extension\u0026#34;: \u0026#34;ocis-accounts\u0026#34;, \u0026#34;bundleKey\u0026#34;: \u0026#34;profile\u0026#34;, \u0026#34;settingKey\u0026#34;: \u0026#34;language\u0026#34;, \u0026#34;accountUuid\u0026#34;: \u0026#34;5681371f-4a6e-43bc-8bb5-9c9237fa9c58\u0026#34; }, \u0026#34;listValue\u0026#34;: { \u0026#34;values\u0026#34;: [ { \u0026#34;stringValue\u0026#34;: \u0026#34;de\u0026#34; } ] } }, \u0026#34;timezone\u0026#34;: { \u0026#34;identifier\u0026#34;: { \u0026#34;extension\u0026#34;: \u0026#34;ocis-accounts\u0026#34;, \u0026#34;bundleKey\u0026#34;: \u0026#34;profile\u0026#34;, \u0026#34;settingKey\u0026#34;: \u0026#34;timezone\u0026#34;, \u0026#34;accountUuid\u0026#34;: \u0026#34;5681371f-4a6e-43bc-8bb5-9c9237fa9c58\u0026#34; }, \u0026#34;listValue\u0026#34;: { \u0026#34;values\u0026#34;: [ { \u0026#34;stringValue\u0026#34;: \u0026#34;Europe/Berlin\u0026#34; } ] } } } } gRPC endpoints     Services can use gRPC endpoints of the ValueService to query and modify settings values. The gRPC endpoints require the same identifier attributes as described above, so for making a request to the ValueService you will have to make sure that the accountUuid of the authenticated user is available in your service at the time of the request.\n","description":"A Settings Value is the value an authenticated user has chosen for a specific setting, defined in a settings bundle.\nIdentifying settings values     A settings value is uniquely identified by four attributes. Three of them are coming from the definition of the setting within it\u0026rsquo;s settings bundle (see Settings Bundles for an example). The fourth identifies the user.\n extension: Key of the extension that registered the settings bundle, bundleKey: Key of the settings bundle, settingKey: Key of the setting as defined within the bundle, accountUuid: The UUID of the authenticated user who has saved the setting."},{"id":192,"href":"/clients/web/docs/testing/","title":"Tests","parent":"ownCloud Web","content":"Guides on running different kinds of tests in ownCloud Web.\n","description":"Guides on running different kinds of tests in ownCloud Web."},{"id":193,"href":"/clients/web/testing/","title":"Tests","parent":"ownCloud Web","content":"Guides on running different kinds of tests in ownCloud Web.\n","description":"Guides on running different kinds of tests in ownCloud Web."},{"id":194,"href":"/clients/web/custom-apps/","title":"Custom Apps","parent":"ownCloud Web","content":"   Introduction Setting up the example \u0026ldquo;skeleton app\u0026rdquo; Configuration options Ways of providing an app Types of apps Accessing existing functionality      Introduction     In the new web frontend, the way custom/external apps are handled has fundamentally changed from the approach of PHP-based ownCloud X stack. Now, all you have to do is provide a bundled Vue app and reference it in your configuration! Please note that any existing apps you may be used to can not simply be ported from the old to the new frontend.\nThis page documents how you can set up an example app within your frontend repo and play around with different kinds of apps and extensions. This way, you can explore how to provide users of your ownCloud with more functionality.\nSetting up the example \u0026ldquo;skeleton app\u0026rdquo;      This guide assumes you have either an oCIS or ownCloud 10 backend running and followed the getting started guide for setting up a development environment with the web frontend, having it running via either pnpm serve or pnpm build:w. You should be able to use the web UI on localhost using the respective port you\u0026rsquo;ve assigned (defaults are :8080 for OC10 and :9200 for oCIS) and see changes to your .  From the root of the web repository, change into the example skeleton app by running\ncd packages/web-app-skeleton/ Then, you can install the necessary dependencies, bundle the code and start a development server by running\npnpm install \u0026amp;\u0026amp; pnpm serve In your terminal, you should see a success message and rollup (our bundler of choice) serving the content under localhost:3000. However, there\u0026rsquo;s nothing to find under this address.\nIn your config/config.json, add the skeleton example app to the \u0026quot;external_apps\u0026quot; array like below:\n{ \u0026#34;id\u0026#34;: \u0026#34;skeleton\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;http://localhost:3000/app.js\u0026#34; } After saving the config file (make sure it\u0026rsquo;s still a valid JSON format), your running web app should be updated automatically. Open your browser\u0026rsquo;s development tools, reload the page and watch for (SKELETON) messages in the browser console.\nConfiguration options     To be defined/documented - Name, ID, logo - Nav items, appswitcher items, quick actions - ... Ways of providing an app     To be defined/documented (Bundling, CDN, app store, ...) Types of apps     To be defined/documented - Application (renderable), e.g. iFrame - Extension, e.g. preview - Quick action, e.g. based on WOPI/Appserver - ... Accessing existing functionality     To be defined/documented - Styles, Theming - Notifications - Authentication, SDK - ... ","description":"Introduction Setting up the example \u0026ldquo;skeleton app\u0026rdquo; Configuration options Ways of providing an app Types of apps Accessing existing functionality      Introduction     In the new web frontend, the way custom/external apps are handled has fundamentally changed from the approach of PHP-based ownCloud X stack. Now, all you have to do is provide a bundled Vue app and reference it in your configuration!"},{"id":195,"href":"/clients/web/docs/custom-apps/","title":"Custom Apps","parent":"ownCloud Web","content":"   Introduction Setting up the example \u0026ldquo;skeleton app\u0026rdquo; Configuration options Ways of providing an app Types of apps Accessing existing functionality      Introduction     In the new web frontend, the way custom/external apps are handled has fundamentally changed from the approach of PHP-based ownCloud X stack. Now, all you have to do is provide a bundled Vue app and reference it in your configuration! Please note that any existing apps you may be used to can not simply be ported from the old to the new frontend.\nThis page documents how you can set up an example app within your frontend repo and play around with different kinds of apps and extensions. This way, you can explore how to provide users of your ownCloud with more functionality.\nSetting up the example \u0026ldquo;skeleton app\u0026rdquo;      This guide assumes you have either an oCIS or ownCloud 10 backend running and followed the getting started guide for setting up a development environment with the web frontend, having it running via either pnpm serve or pnpm build:w. You should be able to use the web UI on localhost using the respective port you\u0026rsquo;ve assigned (defaults are :8080 for OC10 and :9200 for oCIS) and see changes to your .  From the root of the web repository, change into the example skeleton app by running\ncd packages/web-app-skeleton/ Then, you can install the necessary dependencies, bundle the code and start a development server by running\npnpm install \u0026amp;\u0026amp; pnpm serve In your terminal, you should see a success message and rollup (our bundler of choice) serving the content under localhost:3000. However, there\u0026rsquo;s nothing to find under this address.\nIn your config/config.json, add the skeleton example app to the \u0026quot;external_apps\u0026quot; array like below:\n{ \u0026#34;id\u0026#34;: \u0026#34;skeleton\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;http://localhost:3000/app.js\u0026#34; } After saving the config file (make sure it\u0026rsquo;s still a valid JSON format), your running web app should be updated automatically. Open your browser\u0026rsquo;s development tools, reload the page and watch for (SKELETON) messages in the browser console.\nConfiguration options     To be defined/documented - Name, ID, logo - Nav items, appswitcher items, quick actions - ... Ways of providing an app     To be defined/documented (Bundling, CDN, app store, ...) Types of apps     To be defined/documented - Application (renderable), e.g. iFrame - Extension, e.g. preview - Quick action, e.g. based on WOPI/Appserver - ... Accessing existing functionality     To be defined/documented - Styles, Theming - Notifications - Authentication, SDK - ... ","description":"Introduction Setting up the example \u0026ldquo;skeleton app\u0026rdquo; Configuration options Ways of providing an app Types of apps Accessing existing functionality      Introduction     In the new web frontend, the way custom/external apps are handled has fundamentally changed from the approach of PHP-based ownCloud X stack. Now, all you have to do is provide a bundled Vue app and reference it in your configuration!"},{"id":196,"href":"/clients/web/docs/theming/","title":"Theming","parent":"ownCloud Web","content":"   Introduction Ways of providing a theme Configuring a theme The \u0026ldquo;general\u0026rdquo; options The \u0026ldquo;logo\u0026rdquo; options The \u0026ldquo;loadingPage\u0026rdquo; options Design Tokens  Extendability Breakpoints Colors Font sizes Sizes Spacing   Example theme      Introduction     By providing your own theme, you can customize the user experience for your own ownCloud installation. This is being achieved by providing a json file that contains text snippets (like brand name and slogan), paths to images (e.g. logos or favicon) and design tokens for various color, sizing and spacing parameters.\nThis page documents the setup and configuration options, and provides an empty template for you to get started.\nWays of providing a theme     Generally, your theming configuration lives inside a .json file, e.g. theme.json. To load this file, it needs to be correctly referenced inside your config/config.json (example configurations can be found on GitHub).\nTo reference your theme, you have two options:\n Using a URL, e.g. \u0026quot;theme\u0026quot;: \u0026quot;https://externalurl.example.com/theme-name/theme.json\u0026quot;,. To avoid CORS issues, please make sure that you host the URL on the same URL as your ownCloud web hosting. For development and testing purposes, you can store your theme.json inside packages/web-runtime/themes/{theme-name}/ and reference it in the config.json. However, this isn\u0026rsquo;t recommended for production use since your changes may get lost when updating oCIS or the web app in OC10.  Hint: If no theme is provided or the loading of your custom theme fails, the standard ownCloud theme will be loaded as a fallback. However, this doesn\u0026rsquo;t stop you from correctly loading a theme that is wrongly formatted, so please read the instructions below carefully.\nConfiguring a theme     Inside your theme.json, you can provide multiple themes as first-level objects. Currently, only the one called \u0026quot;default\u0026quot; gets applied when the frontend application is started. In the future, we\u0026rsquo;ll provide functionality to dynamically switch between those themes.\nYou can use the snippet below as a base for writing your own theme by replacing the strings and image file paths accordingly. Also, make sure to delete the comments from the file.\n{ \u0026#34;default\u0026#34;: { \u0026#34;general\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;ownCloud\u0026#34;, \u0026#34;slogan\u0026#34;: \u0026#34;ownCloud – A safe home for all your data\u0026#34; }, \u0026#34;logo\u0026#34;: { \u0026#34;topbar\u0026#34;: \u0026#34;https://externalurl.example.com/url/for/remote/theme/assets/logo.svg\u0026#34;, \u0026#34;favicon\u0026#34;: \u0026#34;https://externalurl.example.com/url/for/remote/theme/assets/favicon.jpg\u0026#34;, \u0026#34;login\u0026#34;: \u0026#34;relative/path/for/local/theme/logo.svg\u0026#34; }, \u0026#34;loginPage\u0026#34;: { \u0026#34;autoRedirect\u0026#34;: true, \u0026#34;backgroundImg\u0026#34;: \u0026#34;relative/path/for/local/theme/background.jpg\u0026#34; }, \u0026#34;designTokens\u0026#34;: {} }, \u0026#34;alternative\u0026#34;: {}, \u0026#34;dark\u0026#34;: {} } See below for the meaning of all the first-level objects inside a single theme and recommendations on how to make best use of them:\nThe \u0026ldquo;general\u0026rdquo; options     Here, you can specify a \u0026quot;name\u0026quot; and a \u0026quot;slogan\u0026quot; string. The name gets used in the HTML page \u0026lt;title\u0026gt;, and both of them are shown on various screens (e.g. login, loading, error and public share pages).\nThe \u0026ldquo;logo\u0026rdquo; options     Here, you can specify the images to be used in the \u0026quot;topbar\u0026quot;, for the \u0026quot;favicon\u0026quot; and on the \u0026quot;login\u0026quot; page. Various formats are supported and it\u0026rsquo;s up to you to decide which one fits best to your use case.\nThe \u0026ldquo;loadingPage\u0026rdquo; options     Using the \u0026quot;autoRedirect\u0026quot; boolean, you can specify whether the user is shown a login page before possible getting redirected to your LDAP/OIDC/OAuth provider. If it is set to true, you can set the background image for said login page by providing an image file in the \u0026quot;backgroundImg\u0026quot; option.\nDesign Tokens     To further customize your ownCloud instance, you can provide your own styles. To give you an idea of how a working design system looks like, feel free to head over to the ownCloud design tokens for inspiration.\nHint: All the variables are initialized using the ownCloud design tokens and then overwritten by your theme variables. Therefore, you don\u0026rsquo;t have to provide all the variables and can use the default ownCloud colors as a fallback.\nIn general, the theme loader looks for a designTokens key inside your theme configuration. Inside the designTokens, it expects to find a colorPalette, fontSizes and spacing collection. The structure is outlined below:\n{ \u0026#34;default\u0026#34;: { \u0026#34;general\u0026#34;: {}, \u0026#34;designTokens\u0026#34;: { \u0026#34;breakpoints\u0026#34;: {}, \u0026#34;colorPalette\u0026#34;: {}, \u0026#34;fontSizes\u0026#34;: {}, \u0026#34;sizes\u0026#34;: {}, \u0026#34;spacing\u0026#34;: {} } } } Please follow this structure to make sure your theming configuration can be loaded correctly.\nExtendability     If you define different key-value pairs inside any of the objects in \u0026quot;designTokens\u0026quot;, they will get loaded and initialized as CSS custom properties but don\u0026rsquo;t take any effect in the user interface. This gives you an opportunity to, for example, customize extensions from within the theme in the web runtime (and not the extension itself).\nBreakpoints     If you\u0026rsquo;d like to set different breakpoints than the default ones in the ownCloud design system, you can set them using theming variables.\nBreakpoint variables get prepended with --oc-breakpoint-, so e.g. \u0026ldquo;large-default\u0026rdquo; creates the custom CSS property --oc-breakpoint-large-default.\n{ \u0026#34;breakpoints\u0026#34;: { \u0026#34;xsmall-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34; } } Colors     For the color values, you can use any valid CSS color format, e.g. hex (#fff), rgb (rgb(255,255,255)) or color names (white).\nColor variables get prepended with --oc-color-, so e.g. \u0026ldquo;background-default\u0026rdquo; creates the custom CSS property --oc-color-background-default.\nAgain, you can use the ownCloud design tokens as a reference implementation.\n{ \u0026#34;colorPalette\u0026#34;: { \u0026#34;background-accentuate\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-highlight\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;border\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-bg\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-border\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-text-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-text-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-gradient\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-inverse\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-muted\u0026#34;: \u0026#34;\u0026#34; } } Font sizes     You can change the default, large and medium font sizes according to your needs. If you need more customization options regarding font sizes, please open an issue on GitHub with a detailed description.\nFont size variables get prepended with --oc-font-size-, so e.g. \u0026ldquo;default\u0026rdquo; creates the custom CSS property --oc-font-size-default.\n{ \u0026#34;fontSizes\u0026#34;: { \u0026#34;default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34; } } Sizes     Use sizing variables to change various UI elements, such as icon and logo appearance, table row or checkbox sizes, according to your needs. If you need more customization options regarding sizes, please open an issue on GitHub with a detailed description.\nSize variables get prepended with --oc-size-, so e.g. \u0026ldquo;icon-default\u0026rdquo; creates the custom CSS property --oc-size-icon-default.\n{ \u0026#34;sizes\u0026#34;: { \u0026#34;form-check-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-table-row\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;icon-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-height-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-width-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;width-medium\u0026#34;: \u0026#34;\u0026#34; } } Spacing     Use the six spacing options (xsmall | small | medium | large | xlarge | xxlarge) to create a more (or less) condensed version of the user interface. If you need more customization options regarding sizes, please open an issue on GitHub with a detailed description.\nSpacing variables get prepended with --oc-space-, so e.g. \u0026ldquo;xlarge\u0026rdquo; creates the custom CSS property --oc-space-xlarge.\n{ \u0026#34;spacing\u0026#34;: { \u0026#34;xsmall\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xxlarge\u0026#34;: \u0026#34;\u0026#34; } } Example theme     An empty template for your custom theme is provided below, and you can use the instructions above to set it up according to your needs. Please note that since changing themes at runtime is not yet supported it only consists of a default theme.\n{ \u0026#34;default\u0026#34;: { \u0026#34;general\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;slogan\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;logo\u0026#34;: { \u0026#34;topbar\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;favicon\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;login\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;notFound\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;loginPage\u0026#34;: { \u0026#34;autoRedirect\u0026#34;: true, \u0026#34;backgroundImg\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;designTokens\u0026#34;: { \u0026#34;breakpoints\u0026#34;: { \u0026#34;xsmall-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;colorPalette\u0026#34;: { \u0026#34;background-accentuate\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-highlight\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;border\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-bg\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-border\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-text-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-text-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-gradient\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-inverse\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-muted\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;fontSizes\u0026#34;: { \u0026#34;default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;sizes\u0026#34;: { \u0026#34;form-check-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-table-row\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;icon-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-height-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-width-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;width-medium\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;spacing\u0026#34;: { \u0026#34;xsmall\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xxlarge\u0026#34;: \u0026#34;\u0026#34; } } } } ","description":"Introduction Ways of providing a theme Configuring a theme The \u0026ldquo;general\u0026rdquo; options The \u0026ldquo;logo\u0026rdquo; options The \u0026ldquo;loadingPage\u0026rdquo; options Design Tokens  Extendability Breakpoints Colors Font sizes Sizes Spacing   Example theme      Introduction     By providing your own theme, you can customize the user experience for your own ownCloud installation. This is being achieved by providing a json file that contains text snippets (like brand name and slogan), paths to images (e."},{"id":197,"href":"/clients/web/theming/","title":"Theming","parent":"ownCloud Web","content":"   Introduction Ways of providing a theme Configuring a theme The \u0026ldquo;general\u0026rdquo; options The \u0026ldquo;logo\u0026rdquo; options The \u0026ldquo;loadingPage\u0026rdquo; options Design Tokens  Extendability Breakpoints Colors Font sizes Sizes Spacing   Example theme      Introduction     By providing your own theme, you can customize the user experience for your own ownCloud installation. This is being achieved by providing a json file that contains text snippets (like brand name and slogan), paths to images (e.g. logos or favicon) and design tokens for various color, sizing and spacing parameters.\nThis page documents the setup and configuration options, and provides an empty template for you to get started.\nWays of providing a theme     Generally, your theming configuration lives inside a .json file, e.g. theme.json. To load this file, it needs to be correctly referenced inside your config/config.json (example configurations can be found on GitHub).\nTo reference your theme, you have two options:\n Using a URL, e.g. \u0026quot;theme\u0026quot;: \u0026quot;https://externalurl.example.com/theme-name/theme.json\u0026quot;,. To avoid CORS issues, please make sure that you host the URL on the same URL as your ownCloud web hosting. For development and testing purposes, you can store your theme.json inside packages/web-runtime/themes/{theme-name}/ and reference it in the config.json. However, this isn\u0026rsquo;t recommended for production use since your changes may get lost when updating oCIS or the web app in OC10.  Hint: If no theme is provided or the loading of your custom theme fails, the standard ownCloud theme will be loaded as a fallback. However, this doesn\u0026rsquo;t stop you from correctly loading a theme that is wrongly formatted, so please read the instructions below carefully.\nConfiguring a theme     Inside your theme.json, you can provide multiple themes as first-level objects. Currently, only the one called \u0026quot;default\u0026quot; gets applied when the frontend application is started. In the future, we\u0026rsquo;ll provide functionality to dynamically switch between those themes.\nYou can use the snippet below as a base for writing your own theme by replacing the strings and image file paths accordingly. Also, make sure to delete the comments from the file.\n{ \u0026#34;common\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;ownCloud\u0026#34;, \u0026#34;slogan\u0026#34;: \u0026#34;ownCloud – A safe home for all your data\u0026#34;, \u0026#34;logo\u0026#34;: \u0026#34;themes/owncloud/assets/logo.svg\u0026#34; }, \u0026#34;ios\u0026#34;: {}, \u0026#34;web\u0026#34;: { \u0026#34;default\u0026#34;: { \u0026#34;general\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;ownCloud\u0026#34;, \u0026#34;slogan\u0026#34;: \u0026#34;ownCloud – A safe home for all your data\u0026#34; }, \u0026#34;logo\u0026#34;: { \u0026#34;topbar\u0026#34;: \u0026#34;https://externalurl.example.com/url/for/remote/theme/assets/logo.svg\u0026#34;, \u0026#34;favicon\u0026#34;: \u0026#34;https://externalurl.example.com/url/for/remote/theme/assets/favicon.jpg\u0026#34;, \u0026#34;login\u0026#34;: \u0026#34;relative/path/for/local/theme/logo.svg\u0026#34; }, \u0026#34;loginPage\u0026#34;: { \u0026#34;autoRedirect\u0026#34;: true, \u0026#34;backgroundImg\u0026#34;: \u0026#34;relative/path/for/local/theme/background.jpg\u0026#34; }, \u0026#34;designTokens\u0026#34;: {} }, \u0026#34;alternative\u0026#34;: {}, \u0026#34;dark\u0026#34;: {} } } See below for the meaning of all the first-level objects inside a single theme and recommendations on how to make best use of them:\nThe \u0026ldquo;general\u0026rdquo; options     Here, you can specify a \u0026quot;name\u0026quot; and a \u0026quot;slogan\u0026quot; string. The name gets used in the HTML page \u0026lt;title\u0026gt;, and both of them are shown on various screens (e.g. login, loading, error and public share pages).\nThe \u0026ldquo;logo\u0026rdquo; options     Here, you can specify the images to be used in the \u0026quot;topbar\u0026quot;, for the \u0026quot;favicon\u0026quot; and on the \u0026quot;login\u0026quot; page. Various formats are supported and it\u0026rsquo;s up to you to decide which one fits best to your use case.\nThe \u0026ldquo;loadingPage\u0026rdquo; options     Using the \u0026quot;autoRedirect\u0026quot; boolean, you can specify whether the user is shown a login page before possible getting redirected to your LDAP/OIDC/OAuth provider. If it is set to true, you can set the background image for said login page by providing an image file in the \u0026quot;backgroundImg\u0026quot; option.\nDesign Tokens     To further customize your ownCloud instance, you can provide your own styles. To give you an idea of how a working design system looks like, feel free to head over to the ownCloud design tokens for inspiration.\nHint: All the variables are initialized using the ownCloud design tokens and then overwritten by your theme variables. Therefore, you don\u0026rsquo;t have to provide all the variables and can use the default ownCloud colors as a fallback.\nIn general, the theme loader looks for a designTokens key inside your theme configuration. Inside the designTokens, it expects to find a colorPalette, fontSizes and spacing collection. The structure is outlined below:\n{ \u0026#34;common\u0026#34;: {}, \u0026#34;ios\u0026#34;: {}, \u0026#34;web\u0026#34;: { \u0026#34;default\u0026#34;: { \u0026#34;general\u0026#34;: {}, \u0026#34;designTokens\u0026#34;: { \u0026#34;breakpoints\u0026#34;: {}, \u0026#34;colorPalette\u0026#34;: {}, \u0026#34;fontSizes\u0026#34;: {}, \u0026#34;sizes\u0026#34;: {}, \u0026#34;spacing\u0026#34;: {} } } } } Please follow this structure to make sure your theming configuration can be loaded correctly.\nExtendability     If you define different key-value pairs inside any of the objects in \u0026quot;designTokens\u0026quot;, they will get loaded and initialized as CSS custom properties but don\u0026rsquo;t take any effect in the user interface. This gives you an opportunity to, for example, customize extensions from within the theme in the web runtime (and not the extension itself).\nBreakpoints     If you\u0026rsquo;d like to set different breakpoints than the default ones in the ownCloud design system, you can set them using theming variables.\nBreakpoint variables get prepended with --oc-breakpoint-, so e.g. \u0026ldquo;large-default\u0026rdquo; creates the custom CSS property --oc-breakpoint-large-default.\n{ \u0026#34;breakpoints\u0026#34;: { \u0026#34;xsmall-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34; } } Colors     For the color values, you can use any valid CSS color format, e.g. hex (#fff), rgb (rgb(255,255,255)) or color names (white).\nColor variables get prepended with --oc-color-, so e.g. \u0026ldquo;background-default\u0026rdquo; creates the custom CSS property --oc-color-background-default.\nAgain, you can use the ownCloud design tokens as a reference implementation.\n{ \u0026#34;colorPalette\u0026#34;: { \u0026#34;background-accentuate\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-highlight\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;border\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-bg\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-border\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-text-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-text-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-gradient\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-inverse\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-muted\u0026#34;: \u0026#34;\u0026#34; } } Font sizes     You can change the default, large and medium font sizes according to your needs. If you need more customization options regarding font sizes, please open an issue on GitHub with a detailed description.\nFont size variables get prepended with --oc-font-size-, so e.g. \u0026ldquo;default\u0026rdquo; creates the custom CSS property --oc-font-size-default.\n{ \u0026#34;fontSizes\u0026#34;: { \u0026#34;default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34; } } Sizes     Use sizing variables to change various UI elements, such as icon and logo appearance, table row or checkbox sizes, according to your needs. If you need more customization options regarding sizes, please open an issue on GitHub with a detailed description.\nSize variables get prepended with --oc-size-, so e.g. \u0026ldquo;icon-default\u0026rdquo; creates the custom CSS property --oc-size-icon-default.\n{ \u0026#34;sizes\u0026#34;: { \u0026#34;form-check-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-table-row\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;icon-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-height-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-width-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;width-medium\u0026#34;: \u0026#34;\u0026#34; } } Spacing     Use the six spacing options (xsmall | small | medium | large | xlarge | xxlarge) to create a more (or less) condensed version of the user interface. If you need more customization options regarding sizes, please open an issue on GitHub with a detailed description.\nSpacing variables get prepended with --oc-space-, so e.g. \u0026ldquo;xlarge\u0026rdquo; creates the custom CSS property --oc-space-xlarge.\n{ \u0026#34;spacing\u0026#34;: { \u0026#34;xsmall\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xxlarge\u0026#34;: \u0026#34;\u0026#34; } } Example theme     An empty template for your custom theme is provided below, and you can use the instructions above to set it up according to your needs. Please note that since changing themes at runtime is not yet supported it only consists of a default theme.\n{ \u0026#34;common\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;slogan\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;logo\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;ios\u0026#34;: {}, \u0026#34;web\u0026#34;: { \u0026#34;default\u0026#34;: { \u0026#34;general\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;slogan\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;logo\u0026#34;: { \u0026#34;topbar\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;favicon\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;login\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;loginPage\u0026#34;: { \u0026#34;autoRedirect\u0026#34;: true, \u0026#34;backgroundImg\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;designTokens\u0026#34;: { \u0026#34;breakpoints\u0026#34;: { \u0026#34;xsmall-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large-max\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;colorPalette\u0026#34;: { \u0026#34;background-accentuate\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-highlight\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;background-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;border\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-bg\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-border\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-text-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;input-text-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-brand-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-danger-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-inverse-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-passive-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-primary-gradient\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-success-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-hover\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;swatch-warning-muted\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-inverse\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;text-muted\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;fontSizes\u0026#34;: { \u0026#34;default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;sizes\u0026#34;: { \u0026#34;form-check-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;height-table-row\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;icon-default\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-height-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;max-width-logo\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;width-medium\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;spacing\u0026#34;: { \u0026#34;xsmall\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;small\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;medium\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;large\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xlarge\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;xxlarge\u0026#34;: \u0026#34;\u0026#34; } } } } } ","description":"Introduction Ways of providing a theme Configuring a theme The \u0026ldquo;general\u0026rdquo; options The \u0026ldquo;logo\u0026rdquo; options The \u0026ldquo;loadingPage\u0026rdquo; options Design Tokens  Extendability Breakpoints Colors Font sizes Sizes Spacing   Example theme      Introduction     By providing your own theme, you can customize the user experience for your own ownCloud installation. This is being achieved by providing a json file that contains text snippets (like brand name and slogan), paths to images (e."},{"id":198,"href":"/ocis/development/tracing/","title":"Tracing","parent":"Development","content":"  By default, we use Jaeger for request tracing within oCIS. You can follow these steps to get started:\n Start Jaeger by using the all-in-one docker image: docker run -d --name jaeger \\ -e COLLECTOR_ZIPKIN_HTTP_PORT=9411 \\ -p 5775:5775/udp \\ -p 6831:6831/udp \\ -p 6832:6832/udp \\ -p 5778:5778 \\ -p 16686:16686 \\ -p 14268:14268 \\ -p 14250:14250 \\ -p 9411:9411 \\ jaegertracing/all-in-one:1.17  Every single oCIS service has its own environment variables for enabling and configuring tracing.  You can enable and configure tracing on each service individually. For example, enable tracing in Reva when starting the oCIS single binary like this: REVA_TRACING_ENABLED=true \\ REVA_TRACING_ENDPOINT=localhost:6831 \\ REVA_TRACING_COLLECTOR=http://localhost:14268/api/traces \\ ./bin/ocis server  Enabling and configuring tracing on oCIS itself will forward the configuration to all services: OCIS_TRACING_ENABLED=true \\ OCIS_TRACING_ENDPOINT=localhost:6831 \\ OCIS_TRACING_COLLECTOR=http://localhost:14268/api/traces \\ ./bin/ocis server If you want to set individual tracing configuration for each service, make sure to set OCIS_TRACING_ENABLED=false.   Make the actual request that you want to trace. Open up the Jaeger UI to analyze request traces.  For more information on Jaeger, please refer to their Documentation.\n","description":"By default, we use Jaeger for request tracing within oCIS. You can follow these steps to get started:\n Start Jaeger by using the all-in-one docker image: docker run -d --name jaeger \\ -e COLLECTOR_ZIPKIN_HTTP_PORT=9411 \\ -p 5775:5775/udp \\ -p 6831:6831/udp \\ -p 6832:6832/udp \\ -p 5778:5778 \\ -p 16686:16686 \\ -p 14268:14268 \\ -p 14250:14250 \\ -p 9411:9411 \\ jaegertracing/all-in-one:1.17  Every single oCIS service has its own environment variables for enabling and configuring tracing."},{"id":199,"href":"/clients/web/deployments/","title":"Deployments","parent":"ownCloud Web","content":"Showcases of different scenarios of deploying ownCloud Web.\n","description":"Showcases of different scenarios of deploying ownCloud Web."},{"id":200,"href":"/clients/web/docs/deployments/","title":"Deployments","parent":"ownCloud Web","content":"Showcases of different scenarios of deploying ownCloud Web.\n","description":"Showcases of different scenarios of deploying ownCloud Web."},{"id":201,"href":"/ocis/development/profiling/","title":"Profiling","parent":"Development","content":" 0. Prerequisites  1. Clone Reva 2. Patch reva with the area that you want sampled. 3. Replace reva in oCIS go.mod with local version and build a new binary 4. Build a new ocis binary 5. Start oCIS server 6. Run pprof  Install pprof Collecting samples   Room for improvement References      0. Prerequisites      Go development kit of a supported version. Follow these instructions to install the go tool and set up GOPATH. Graphviz: http://www.graphviz.org/. Used to generate graphic visualizations of profiles, which this example setup does.  The only way to enable the profiler currently is to explicitly select which areas to collect samples for. In order to do this, the following steps have to be followed.\n1. Clone Reva     Reva is the reference implementation of the CS3 APIs that we use for our daily business between oCIS and its storages. It is in charge of accessing the storage, as well as managing shares. Because of this fact, the examples will modify code in this dependency. You can think of Reva as the framework we use in order to interface with different storage providers.\ngit clone github.com/cs3org/reva\n2. Patch reva with the area that you want sampled.     For the purposes of these docs let\u0026rsquo;s use the WebDAV PROPFIND path. This patch is needed in order to have the WebDAV process reporting profiling traces to the pprof.\ndiff --git a/internal/http/services/owncloud/ocdav/propfind.go b/internal/http/services/owncloud/ocdav/propfind.go index 0e9c99be..f271572f 100644 --- a/internal/http/services/owncloud/ocdav/propfind.go +++ b/internal/http/services/owncloud/ocdav/propfind.go @@ -32,6 +32,8 @@ import (  \u0026#34;strings\u0026#34; \u0026#34;time\u0026#34; + _ \u0026#34;net/http/pprof\u0026#34; +  userv1beta1 \u0026#34;github.com/cs3org/go-cs3apis/cs3/identity/user/v1beta1\u0026#34; rpc \u0026#34;github.com/cs3org/go-cs3apis/cs3/rpc/v1beta1\u0026#34; link \u0026#34;github.com/cs3org/go-cs3apis/cs3/sharing/link/v1beta1\u0026#34; @@ -311,6 +313,12 @@ func requiresExplicitFetching(n *xml.Name) bool {  return true } +func init() { + go func() { + http.ListenAndServe(\u0026#34;:1234\u0026#34;, nil) + }() +} +  // from https://github.com/golang/net/blob/e514e69ffb8bc3c76a71ae40de0118d794855992/webdav/xml.go#L178-L205 func readPropfind(r io.Reader) (pf propfindXML, status int, err error) { c := countingReader{r: r} The previous patch will:\n import net/http/pprof, which will register debug handlers in DefaultServeMux. define a init() function that starts an HTTP server with the previously registered handlers.  With everything running one should have access to http://localhost:1234/debug/pprof/\n3. Replace reva in oCIS go.mod with local version and build a new binary     In Go, the go.mod file controls the dependencies of your module. Because we patched an external library, Go provides with a mechanism to overwrite an existing dependency with one on your local machine, which we previously installed.\ndiff --git a/go.mod b/go.mod index 131d14d7b..9668c38e4 100644 --- a/go.mod +++ b/go.mod @@ -78,6 +78,7 @@ require (  replace ( github.com/crewjam/saml =\u0026gt; github.com/crewjam/saml v0.4.5 + github.com/cs3org/reva =\u0026gt; path/to/your/reva  go.etcd.io/etcd/api/v3 =\u0026gt; go.etcd.io/etcd/api/v3 v3.0.0-20210204162551-dae29bb719dd go.etcd.io/etcd/pkg/v3 =\u0026gt; go.etcd.io/etcd/pkg/v3 v3.0.0-20210204162551-dae29bb719dd ) Make sure to replace github.com/cs3org/reva =\u0026gt; path/to/your/reva with the correct location of your reva.\n4. Build a new ocis binary     Using the new dependency with the pprof patch.\nFrom owncloud/ocis root:\n$ cd ocis $ make clean build 5. Start oCIS server     From owncloud/ocis root:\n$ ocis/bin/ocis server 6. Run pprof     Pprof is a tool developed at Google. It is a tool for visualization and analysis of profiling data. It will take the reported profiled data from our server, and represent it in a meaningful manner.\nInstall pprof     If pprof is not installed make sure to get it; one way of installing it is using the Go tools:\n$ go get -u github.com/google/pprof Collecting samples     Collect 30 seconds of samples:\n$ pprof -web http://:1234/debug/pprof/profile\\?seconds\\=30 Once the collection is done a browser tab will open with the result svg, looking similar to this:\nFor references on how to interpret this graph, continue reading here.\nRoom for improvement     Because these docs are intended to be read by developers they are quite technical in content. Requiring the user to alter the code. This is done so that we do not include, or assume, third party dependencies such as Graphviz in our binary, making it heavier. Having said this, the profiler is only meant to be used in development\nReferences      https://medium.com/swlh/go-profile-your-code-like-a-master-1505be38fdba https://dave.cheney.net/2013/07/07/introducing-profile-super-simple-profiling-for-go-programs  ","description":"0. Prerequisites  1. Clone Reva 2. Patch reva with the area that you want sampled. 3. Replace reva in oCIS go.mod with local version and build a new binary 4. Build a new ocis binary 5. Start oCIS server 6. Run pprof  Install pprof Collecting samples   Room for improvement References      0. Prerequisites      Go development kit of a supported version."},{"id":202,"href":"/clients/web/docs/testing/testing/","title":"Running tests","parent":"Tests","content":"   Introduction  Unit Tests  Unit test file structure   E2E Tests (Playwright)  Prerequisites Prepare \u0026amp; start web Start Docker Run E2E tests Options   Acceptance Tests (Nightwatch)  Prerequisites Prepare \u0026amp; start web Start Docker Run acceptance tests Watch the test run   Analyze the test report        Introduction     In order to allow us to make changes quickly, often and with a high level of confidence, we heavily rely on tests within the web repository.\nAll the steps below require you to have the web repo cloned locally and dependencies installed. This can be achieved by running\n$ git clone https://github.com/owncloud/web.git $ cd web $ pnpm install Unit Tests     We have a steadily growing coverage of unit tests. You can run them locally via\n$ pnpm test:unit You can also specify which tests to run by giving a path param, like so: pnpm test:unit packages/\u0026lt;app-name\u0026gt;/tests/unit/path/to/test.spec.js.\nUnit test file structure     Our unit tests spec files follow a simple structure:\n fixtures and mocks at the top helper functions at the bottom tests in between  We usually organize tests with nested describe blocks. If you would like to get feedback from the core team about the structure, scope and goals of your unit tests before actually writing some, we invite you to make a pull request with only describe blocks and nested it.todo(\u0026quot;put your test description here\u0026quot;) lines.\nE2E Tests (Playwright)     Our end-to-end test suite is built upon the Playwright Framework, which makes it easy to write tests, debug them and have them run cross-browser with minimal overhead.\nPrerequisites     To run e2e tests with Docker, please make sure you have the following tools installed:\n docker docker-compose (if not already included in your docker installation) pnpm node  Please also make sure to point host.docker.internal to 127.0.0.1 by adding it to your /etc/hosts file.\nPrepare \u0026amp; start web     Bundle the web frontend with the following command:\n$ pnpm build:w Our compose setup automatically mounts it into an oC10 and oCIS backend, respectively. Web also gets recompiled on changes.\nStart Docker     Using compose, you can start the required Docker containers by running\nFor running the test with oc10 run\n$ docker compose up oc10 For running the test with ocis run\n$ docker compose up ocis and make sure there are no conflicting ports and everything runs smoothly. You can check if everything has worked by opening https://host.docker.internal:9200 (oCIS) and http://host.docker.internal:8080 (OC10) and logging in using the demo user (admin/admin).\nRun E2E tests     Depending on the backend you want to run the tests on, you can either run\n$ pnpm test:e2e:cucumber tests/e2e/cucumber/**/*[!.ocis].feature for an ownCloud 10 backend (filenames including .ocis are excluded) or\n$ OCIS=true pnpm test:e2e:cucumber tests/e2e/cucumber/**/*[!.oc10].feature for an oCIS backend (filenames including .oc10 are excluded).\nOptions     To run a particular test, simply add the feature file and line number to the test command, e.g. pnpm test:e2e:cucumber tests/e2e/cucumber/shareFileJourney.feature:13\nVarious options are available via ENV variables, e.g.\n OCIS=true to run the E2E tests against an oCIS backend RETRY=n to retry failures n times SLOW_MO=n to slow the execution time by n milliseconds TIMEOUT=n to set tests to timeout after n milliseconds HEADLESS=bool to open the browser while the tests run (defaults to true =\u0026gt; headless mode) BROWSER=name to run tests against a specific browser. Defaults to Chrome, available are Chrome, Firefox, Webkit, Chromium  For debugging reasons, you may want to record a video or traces of your test run. Again, you can use the following ENV variables in your command:\n REPORT_DIR=another/path to set a directory for your recorded files (defaults to \u0026ldquo;reports\u0026rdquo;) REPORT_VIDEO=true to record a video of the test run REPORT_HAR=true to save request information from the test run REPORT_TRACING=true to record traces from the test run  To then open e.g. the tracing from the REPORT_DIR, run\n$ npx playwright show-trace path/to/file.zip Acceptance Tests (Nightwatch)      We\u0026rsquo;ve decided to switch to playwright for end-to-end tests. As we steadily increase the coverage of our playwright based e2e tests we keep the existing nightwatch based e2e tests maintained. However, we decided to not add new scenarios to the nightwatch based e2e tests anymore.\nIn other words: only continue reading about our nightwatch based acceptance tests below if you need to debug a failing test.\n  At ownCloud, we have decided to adopt Docker as the main environment for developing our application. This also applies for running our acceptance tests.\nPrerequisites     To run acceptance tests with Docker, please make sure you have the following tools installed:\n docker docker-compose (if not already included in your docker installation) pnpm node  Please also make sure to point http://host.docker.internal/ to 127.0.0.1 by adding it to your hosts.\nPrepare \u0026amp; start web     Bundle the web frontend, which then gets mounted into the respective backends. It also gets recompiled on changes.\n$ pnpm build:w Start Docker     Using compose, you can start the required Docker containers by running\nFor running the test with oc10 run\n$ docker compose up oc10 vnc selenium middleware-oc10 For running the test with ocis run\n$ docker compose up ocis vnc selenium middleware-ocis and make sure there are no conflicting ports and everything runs smoothly. You can check if everything has worked by opening https://host.docker.internal:9200 (oCIS) and http://host.docker.internal:8080 (OC10) and logging in using the demo user (admin/admin).\nIf you\u0026rsquo;re using a M1 Mac, you need to use seleniarm/standalone-chromium:4.4.0-20220814for now. To do so, export SELENIUM_IMAGE=seleniarm/standalone-chromium:4.4.0-20220814.\nRun acceptance tests       Change the directory to tests/acceptance\n  Install all the test dependencies with pnpm command\n  Depending on the backend you\u0026rsquo;re running the tests on, you can either run\n$ pnpm test:acceptance:oc10 features/path/to/test for ownCloud 10.X or\n$ pnpm test:acceptance:ocis features/path/to/test for oCIS acceptance tests.\n  Watch the test run     To watch the tests while running, open http://host.docker.internal:6080/ in the browser to access your VNC client.\nAnalyze the test report     The cucumber library is used as the test runner for both e2e and acceptance tests. The report generator script lives inside the tests/e2e/cucumber/report folder. If you want to create a report after the tests are done, run the command:\nnode tests/e2e/cucumber/report --report-input=tests/e2e/cucumber/report/report.json --report-input is the path to the report file generated by the test runner. If you want to generate a report for the acceptance tests, you can run the command\nnode tests/e2e/cucumber/report --report-input=tests/acceptance/report/report.json By default, the report gets generated to reports/e2e/cucumber/releaseReport/cucumber_report.html. The location can be changed by adding the --report-location flag.\nTo see all available options run\nnode tests/e2e/cucumber/report --help ","description":"Introduction  Unit Tests  Unit test file structure   E2E Tests (Playwright)  Prerequisites Prepare \u0026amp; start web Start Docker Run E2E tests Options   Acceptance Tests (Nightwatch)  Prerequisites Prepare \u0026amp; start web Start Docker Run acceptance tests Watch the test run   Analyze the test report        Introduction     In order to allow us to make changes quickly, often and with a high level of confidence, we heavily rely on tests within the web repository."},{"id":203,"href":"/clients/web/testing/testing/","title":"Running tests","parent":"Tests","content":"   Introduction  Unit Tests  Unit test file structure   E2E Tests (Playwright)  Prerequisites Prepare \u0026amp; start web Start Docker Run E2E tests Options   Acceptance Tests (Nightwatch)  Prerequisites Prepare \u0026amp; start web Start Docker Run acceptance tests Watch the test run   Analyze the test report        Introduction     In order to allow us to make changes quickly, often and with a high level of confidence, we heavily rely on tests within the web repository.\nAll the steps below require you to have the web repo cloned locally and dependencies installed. This can be achieved by running\n$ git clone https://github.com/owncloud/web.git $ cd web $ pnpm install Unit Tests     We have a steadily growing coverage of unit tests. You can run them locally via\n$ pnpm test:unit You can also specify which tests to run by giving a path param, like so: pnpm test:unit packages/\u0026lt;app-name\u0026gt;/tests/unit/path/to/test.spec.js.\nUnit test file structure     Our unit tests spec files follow a simple structure:\n fixtures and mocks at the top helper functions at the bottom tests in between  We usually organize tests with nested describe blocks. If you would like to get feedback from the core team about the structure, scope and goals of your unit tests before actually writing some, we invite you to make a pull request with only describe blocks and nested it.todo(\u0026quot;put your test description here\u0026quot;) lines.\nE2E Tests (Playwright)     Our end-to-end test suite is built upon the Playwright Framework, which makes it easy to write tests, debug them and have them run cross-browser with minimal overhead.\nPrerequisites     To run e2e tests with Docker, please make sure you have the following tools installed:\n docker docker-compose (if not already included in your docker installation) pnpm node  Please also make sure to point host.docker.internal to 127.0.0.1 by adding it to your /etc/hosts file.\nPrepare \u0026amp; start web     Bundle the web frontend with the following command:\n$ pnpm build:w Our compose setup automatically mounts it into an oC10 and oCIS backend, respectively. Web also gets recompiled on changes.\nStart Docker     Using compose, you can start the required Docker containers by running\nFor running the test with oc10 run\n$ docker compose up oc10 For running the test with ocis run\n$ docker compose up ocis and make sure there are no conflicting ports and everything runs smoothly. You can check if everything has worked by opening https://host.docker.internal:9200 (oCIS) and http://host.docker.internal:8080 (OC10) and logging in using the demo user (admin/admin).\nRun E2E tests     Depending on the backend you want to run the tests on, you can either run\n$ pnpm test:e2e:cucumber \u0026#39;tests/e2e/cucumber/**/*[!.ocis].feature\u0026#39; for an ownCloud 10 backend (filenames including .ocis are excluded) or\n$ OCIS=true pnpm test:e2e:cucumber \u0026#39;tests/e2e/cucumber/**/*[!.oc10].feature\u0026#39; for an oCIS backend (filenames including .oc10 are excluded).\nOptions     To run a particular test, simply add the feature file and line number to the test command, e.g. pnpm test:e2e:cucumber tests/e2e/cucumber/shareFileJourney.feature:13\nVarious options are available via ENV variables, e.g.\n OCIS=true to run the E2E tests against an oCIS backend RETRY=n to retry failures n times SLOW_MO=n to slow the execution time by n milliseconds TIMEOUT=n to set tests to timeout after n milliseconds HEADLESS=bool to open the browser while the tests run (defaults to true =\u0026gt; headless mode) BROWSER=name to run tests against a specific browser. Defaults to Chrome, available are Chrome, Firefox, Webkit, Chromium  For debugging reasons, you may want to record a video or traces of your test run. Again, you can use the following ENV variables in your command:\n REPORT_DIR=another/path to set a directory for your recorded files (defaults to \u0026ldquo;reports\u0026rdquo;) REPORT_VIDEO=true to record a video of the test run REPORT_HAR=true to save request information from the test run REPORT_TRACING=true to record traces from the test run  To then open e.g. the tracing from the REPORT_DIR, run\n$ npx playwright show-trace path/to/file.zip Acceptance Tests (Nightwatch)      We\u0026rsquo;ve decided to switch to playwright for end-to-end tests. As we steadily increase the coverage of our playwright based e2e tests we keep the existing nightwatch based e2e tests maintained. However, we decided to not add new scenarios to the nightwatch based e2e tests anymore.\nIn other words: only continue reading about our nightwatch based acceptance tests below if you need to debug a failing test.\n  At ownCloud, we have decided to adopt Docker as the main environment for developing our application. This also applies for running our acceptance tests.\nPrerequisites     To run acceptance tests with Docker, please make sure you have the following tools installed:\n docker docker-compose (if not already included in your docker installation) pnpm node  Please also make sure to point http://host.docker.internal/ to 127.0.0.1 by adding it to your hosts.\nPrepare \u0026amp; start web     Bundle the web frontend, which then gets mounted into the respective backends. It also gets recompiled on changes.\n$ pnpm build:w Start Docker     Using compose, you can start the required Docker containers by running\nFor running the test with oc10 run\n$ docker compose up oc10 vnc selenium middleware-oc10 For running the test with ocis run\n$ docker compose up ocis vnc selenium middleware-ocis and make sure there are no conflicting ports and everything runs smoothly. You can check if everything has worked by opening https://host.docker.internal:9200 (oCIS) and http://host.docker.internal:8080 (OC10) and logging in using the demo user (admin/admin).\nIf you\u0026rsquo;re using a M1 Mac, you need to use seleniarm/standalone-chromium:4.4.0-20220814for now. To do so, export SELENIUM_IMAGE=seleniarm/standalone-chromium:4.4.0-20220814.\nRun acceptance tests       Change the directory to tests/acceptance\n  Install all the test dependencies with pnpm command\n  Depending on the backend you\u0026rsquo;re running the tests on, you can either run\n$ pnpm test:acceptance:oc10 features/path/to/test for ownCloud 10.X or\n$ pnpm test:acceptance:ocis features/path/to/test for oCIS acceptance tests.\n  Watch the test run     To watch the tests while running, open http://host.docker.internal:6080/ in the browser to access your VNC client.\nAnalyze the test report     The cucumber library is used as the test runner for both e2e and acceptance tests. The report generator script lives inside the tests/e2e/cucumber/report folder. If you want to create a report after the tests are done, run the command:\nnode tests/e2e/cucumber/report --report-input=tests/e2e/cucumber/report/report.json --report-input is the path to the report file generated by the test runner. If you want to generate a report for the acceptance tests, you can run the command\nnode tests/e2e/cucumber/report --report-input=tests/acceptance/report/report.json By default, the report gets generated to reports/e2e/cucumber/releaseReport/cucumber_report.html. The location can be changed by adding the --report-location flag.\nTo see all available options run\nnode tests/e2e/cucumber/report --help ","description":"Introduction  Unit Tests  Unit test file structure   E2E Tests (Playwright)  Prerequisites Prepare \u0026amp; start web Start Docker Run E2E tests Options   Acceptance Tests (Nightwatch)  Prerequisites Prepare \u0026amp; start web Start Docker Run acceptance tests Watch the test run   Analyze the test report        Introduction     In order to allow us to make changes quickly, often and with a high level of confidence, we heavily rely on tests within the web repository."},{"id":204,"href":"/services/settings/releasing/","title":"Releasing","parent":"Settings","content":"   Requirements Releasing  Package Hierarchy        Requirements     You need a working installation of the Go programming language.\nReleasing     The settings service doesn\u0026rsquo;t have a dedicated release process. Simply commit your changes, make sure linting and unit tests pass locally and open a pull request.\nPackage Hierarchy      ocis  ocis-settings    ","description":"   Requirements Releasing  Package Hierarchy        Requirements     You need a working installation of the Go programming language.\nReleasing     The settings service doesn\u0026rsquo;t have a dedicated release process. Simply commit your changes, make sure linting and unit tests pass locally and open a pull request.\nPackage Hierarchy      ocis  ocis-settings    "},{"id":205,"href":"/services/settings/glossary/","title":"Glossary","parent":"Settings","content":"In the context of this extension and oCIS in general, we are using the following terminology.\nConfiguration      System configuration e.g. service host names and ports Changes need to be propagated to other services Typically modified on the CLI  Settings      Application level settings e.g. default language Can be modified at runtime without restarting the service  Preferences      User settings Subset of \u0026ldquo;Settings\u0026rdquo; e.g. preferred language of a user  Settings Bundle      Collection of related settings Registered by an oCIS extension  Settings Value      Manifestation of a setting for a specific user E.g. used for customization (at runtime) in ocis-web Can be queried and modified by other oCIS services  ","description":"In the context of this extension and oCIS in general, we are using the following terminology.\nConfiguration      System configuration e.g. service host names and ports Changes need to be propagated to other services Typically modified on the CLI  Settings      Application level settings e.g. default language Can be modified at runtime without restarting the service  Preferences      User settings Subset of \u0026ldquo;Settings\u0026rdquo; e."},{"id":206,"href":"/ocis/development/build-docs/","title":"Documentation","parent":"Development","content":"   Build the documentation Add changes to the documentation      Build the documentation      For building the documentation you need to have Make and Go 1.14 or higher installed.  Just run make -C docs docs-serve from within the root level of the oCIS git repository. This will make documentation available on localhost:1313 and also do a hot reload if you change something in the (non autogenerated) documentation files.\nAdd changes to the documentation     Please keep this documentation in sync with the oCIS source code.\nChanges on the documentation are automatically applied to this site when merged to the master branch.\n","description":"Build the documentation Add changes to the documentation      Build the documentation      For building the documentation you need to have Make and Go 1.14 or higher installed.  Just run make -C docs docs-serve from within the root level of the oCIS git repository. This will make documentation available on localhost:1313 and also do a hot reload if you change something in the (non autogenerated) documentation files."},{"id":207,"href":"/ocis/deployment/preparing_server/","title":"Preparing a server","parent":"Deployment","content":"   Example for Hetzner Cloud      Example for Hetzner Cloud       create server on Hetzner Cloud. Set labels \u0026ldquo;owner\u0026rdquo; and \u0026ldquo;for\u0026rdquo;. Example for hcloud cli: hcloud server create --type cx21 --image ubuntu-20.04 --ssh-key admin --name ocis-server --label owner=admin --label for=testing\n  Configure DNS A-records for needed domains pointing on the servers ip address, for example in CloudFlare\n  Access server via ssh as root\n  Create a new user\n$ adduser --disabled-password --gecos \u0026quot;\u0026quot; admin\n  Add user to sudo group\n$ usermod -aG sudo admin\n  Install docker\napt update apt install docker.io   Add user to docker group\nusermod -aG docker admin\n  Install docker-compose via\ncurl -L \u0026quot;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\u0026quot; -o /usr/local/bin/docker-compose\n(docker compose version 1.27.4 as of today)\n  Make docker-compose executable\nchmod +x /usr/local/bin/docker-compose\n  Add users pub key to\nmkdir /home/admin/.ssh echo \u0026#34;\u0026lt;pubkey\u0026gt;\u0026#34; \u0026gt;\u0026gt; /home/admin/.ssh/authorized_keys chown admin:admin -R /home/admin/.ssh   Secure ssh daemon by editing /etc/ssh/sshd_config\nPermitRootLogin no ChallengeResponseAuthentication no PasswordAuthentication no UsePAM no   restart sshd server to apply settings systemctl restart sshd\n  Login as the user you created\n  ","description":"Example for Hetzner Cloud      Example for Hetzner Cloud       create server on Hetzner Cloud. Set labels \u0026ldquo;owner\u0026rdquo; and \u0026ldquo;for\u0026rdquo;. Example for hcloud cli: hcloud server create --type cx21 --image ubuntu-20.04 --ssh-key admin --name ocis-server --label owner=admin --label for=testing\n  Configure DNS A-records for needed domains pointing on the servers ip address, for example in CloudFlare\n  Access server via ssh as root"},{"id":208,"href":"/ocis/development/continuous-integration/","title":"Continuous Integration","parent":"Development","content":"   Concepts Things done in CI Flags in commit message and PR title  Knowledge base        oCIS uses DRONE as CI system. You can find the pipeline logs here or in your PR.\nConcepts     The pipeline is defined in Starlark and transformed to YAML upon pipeline run. This enables us to do a highly dynamic and non repeating pipeline configuration. We enforce Starlark format guidelines with Bazel Buildifier. You can format the .drone.star file by running make ci-format.\nUpon running the pipeline, your branch gets merged to the master branch. This ensures that we always test your changeset if as it was applied to the master of oCIS. Please note that this does not apply to the pipeline definition (.drone.star).\nThings done in CI      static code analysis linting running UI tests running ownCloud 10 test suite against oCIS build and release docker images build and release binaries build and release documentation  Flags in commit message and PR title     You may add flags to your commit message or PR title in order to speed up pipeline runs and take load from the CI runners.\n  [CI SKIP]: no CI is run on the commit or PR\n  [full-ci]: deactivates the fail early mechanism and runs all available test (as default only smoke tests are run)\n  Knowledge base       My pipeline fails because some CI related files or commands are missing.\nPlease make sure to rebase your branch onto the latest master of oCIS. It could be that the pipeline definition (.drone.star) was changed on the master branch. This is the only file, that will not be auto merged to master upon pipeline run. So things could be out of sync.\n  How can I see the YAML drone pipeline definition?\nIn order to see the Yaml pipeline definition you can use the drone-cli to convert the Starlark file.\ndrone starlark   If you experience a \u0026quot;build\u0026quot; struct has no .title attribute you need a newer version of drone-cli.\nYou currently need to build it yourself from this source code. If you are not using master as source, please ensure that this PR is included.\n    ","description":"Concepts Things done in CI Flags in commit message and PR title  Knowledge base        oCIS uses DRONE as CI system. You can find the pipeline logs here or in your PR.\nConcepts     The pipeline is defined in Starlark and transformed to YAML upon pipeline run. This enables us to do a highly dynamic and non repeating pipeline configuration."},{"id":209,"href":"/ocis/license/","title":"License","parent":"oCIS - ownCloud Infinite Scale","content":"This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.\n","description":"This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources."},{"id":210,"href":"/","title":"ownCloud","parent":"","content":"   Admin Documentation Developer Documentation We love open source Join the oCIS Community      Admin Documentation     Before you start reading, if you are interested in:\n learning ocis from an admin perspective, different deployment scenarios, deployment examples, detailed settings and more  we would recommend to continue with the ownCloud Admin Documentation for Infinite Scale.\nDeveloper Documentation     Welcome to our developer documentation. Here you find documentation with focus for developers:\n oCIS server oCIS Services Clients like:  ownCloud Web - the new web frontend for oCIS and ownCloud ownCloud Android app ownCloud iOS app ownCloud Desktop Syncing Client   Integrations  We love open source     The oCIS server is Apache v2 licensed. The lower storage layer of oCIS is defined by the CS3 APIs and implemented in the REVA project. Our goal is to develop the CS3 APIs to an open standard and collaborate on the open source REVA reference implementation for CS3 APIs.\nYou can also find all client sources on GitHub.\nJoin the oCIS Community     The server repository on GitHub is a good entry point to the oCIS project. In addition to that there are also ownCloud projects for clients for iOS, Android, the major Desktop platforms and ownCloud Web.\nTo chat about development, join our public chat\nIf you want to help and improve ownCloud or oCIS, start coding or open issues on GitHub in the related repository.\nWe are very happy to hear your feedback and ideas!\n","description":"Admin Documentation Developer Documentation We love open source Join the oCIS Community      Admin Documentation     Before you start reading, if you are interested in:\n learning ocis from an admin perspective, different deployment scenarios, deployment examples, detailed settings and more  we would recommend to continue with the ownCloud Admin Documentation for Infinite Scale.\nDeveloper Documentation     Welcome to our developer documentation."},{"id":211,"href":"/services/","title":"Services","parent":"ownCloud","content":"","description":""},{"id":212,"href":"/ocis/development/deprecating-variables/","title":"Deprecating Variables","parent":"Development","content":"   Deprecating Environment Variables  Example What happens next?        Deprecating Environment Variables     Sometimes it is necessary to deprecate environment to align their naming with conventions. We therefore added annotations to automate the documentation process. It is necessary to know when the variable is going to be deprecated, when it is going to be removed and why.\nExample     // Nats is the nats config type Nats struct { Host string `yaml:\u0026#34;host\u0026#34; env:\u0026#34;NATS_HOST_ADDRESS;NATS_NATS_HOST\u0026#34; desc:\u0026#34;Bind address.\u0026#34; deprecationVersion:\u0026#34;1.6.2\u0026#34; removalVersion:\u0026#34;1.7.5\u0026#34; deprecationInfo:\u0026#34;NATS_NATS_HOST is confusing\u0026#34; deprecationReplacement:\u0026#34;NATS_HOST_ADDRESS\u0026#34;` ... } There are four different annotation variables that need to be filled:\n   Annotation Description Format     depreactionVersion The version the variable will be deprecated semver (e.g. 1.6.2)   removalVersion The version the variable will be removed from the codebase semver (e.g. 1.7.3)   deprecationInfo Information why the variable is deprecated, must start with the name of the variable in order to avoid confusion, when there are multiple options in the env:-field string (e.g. NATS_NATS_HOST is confusing)   depreactionReplacement The name of the variable that is going to replace the deprecated one. string (e.g. NATS_HOST_ADDRESS)    What happens next?     Once a variable has been finally removed, the annotations must be removed again from the code, since they do not serve any purpose from this point.\n","description":"Deprecating Environment Variables  Example What happens next?        Deprecating Environment Variables     Sometimes it is necessary to deprecate environment to align their naming with conventions. We therefore added annotations to automate the documentation process. It is necessary to know when the variable is going to be deprecated, when it is going to be removed and why.\nExample     // Nats is the nats config type Nats struct { Host string `yaml:\u0026#34;host\u0026#34; env:\u0026#34;NATS_HOST_ADDRESS;NATS_NATS_HOST\u0026#34; desc:\u0026#34;Bind address."},{"id":213,"href":"/clients/","title":"Clients","parent":"ownCloud","content":"","description":""},{"id":214,"href":"/extensions/","title":"Extensions","parent":"ownCloud","content":"","description":""},{"id":215,"href":"/extensions/ocis_hello/","title":"Hello (example extension)","parent":"Extensions","content":"When getting started with the oCIS development developers need to learn about the building blocks of oCIS extensions. Without guidance or orientation of the why and what of an extension they may start feeling lost. The ocis-hello repository serves as a blueprint for oCIS extensions. It allows developers to get started with oCIS extension development by looking at the code, configuration and documentation.\n graph TD subgraph ow[ocis-web] owh[ocis-web-hello] end owh ---|\"greet()\"| ows[ocis-hello-server]  ocis-hello provides a simple hello world example with\n a protobuf based greeter API a grpc service implementing the API a vue.js frontend using the API configuration options for admins  It can be integrated into ownCloud Web as documented in the extensions docs.\n","description":"When getting started with the oCIS development developers need to learn about the building blocks of oCIS extensions. Without guidance or orientation of the why and what of an extension they may start feeling lost. The ocis-hello repository serves as a blueprint for oCIS extensions. It allows developers to get started with oCIS extension development by looking at the code, configuration and documentation.\n graph TD subgraph ow[ocis-web] owh[ocis-web-hello] end owh ---|\""},{"id":216,"href":"/ocis/release_notes/","title":"Release Notes","parent":"oCIS - ownCloud Infinite Scale","content":"The Infinite Scale Release Notes have been moved and are published with the ownCloud Documentation.\n","description":"The Infinite Scale Release Notes have been moved and are published with the ownCloud Documentation."},{"id":217,"href":"/ocis/release_roadmap/","title":"Release Roadmap","parent":"oCIS - ownCloud Infinite Scale","content":"You may have asked yourself why there are major version 1 tags in our GitHub repository but the Readme still states ownCloud Infinite Scale is currently in a technical preview state. It will be subject to a lot of changes and is not yet ready for general production deployments.. How can that be if it\u0026rsquo;s a major version 1?\nOur initial and also our current plan is to stick to SemVer as versioning scheme. But sometimes there are other factors which cross your plans. Therefore we started releasing oCIS with version 1.0.0 Tech Preview.\nownCloud Infinite Scale 1.x technology preview releases     All oCIS releases within major version 1 will be handled as technology previews. There will be no supported releases in terms of us guaranteeing production readiness. We will do releases every 3 weeks, and they will sometimes only include bugfixes, but also introduce new features or optimizations.\nWe will be fixing bugs if you report them and truly appreciate every report and contribution. Depending on the individual case, we will publish bugfix releases or add the fix to the next minor release.\nWe are going to stick to major version 1 until we feel confident about running oCIS in production environments. As a consequence of this we cannot raise the major version, like SemVer requires it, even if we need to introduce breaking changes. We will do our best to avoid breaking changes. If there is no way to circumvent this, we will add an automatic migration or at least point out manual migration steps, since we as oCIS developers are already using oCIS on a personal basis. The best place to see if a breaking change happens is our changelog which is available for every release. If things are not working out for you please contact us immediately. We want to know about this and solve it for you.\nIt isn\u0026rsquo;t our intention to scare you with our addendum \u0026ldquo;Tech Preview\u0026rdquo;. We want you to have a clear picture of what you can expect from oCIS. You could take it as a disclaimer or even compare it to running a Linux kernel in alpha stage. It can be very pleasing to be on the latest codebase but you could also find yourself with a lot of problems arising because of that.\nYou clearly can expect a totally new experience of file-sync and share with oCIS and we want you to use it now - but with understanding and caution.\nownCloud Infinite Scale 2.x general availability releases     Starting with oCIS 2.0.0 release we will strictly stick to SemVer, just as we do right now for ownCloud Server. The general availability release will also mean that we can recommend oCIS warmly to everyone. Use it to store your precious family pictures or you confidential company data!\n","description":"You may have asked yourself why there are major version 1 tags in our GitHub repository but the Readme still states ownCloud Infinite Scale is currently in a technical preview state. It will be subject to a lot of changes and is not yet ready for general production deployments.. How can that be if it\u0026rsquo;s a major version 1?\nOur initial and also our current plan is to stick to SemVer as versioning scheme."},{"id":218,"href":"/integration/","title":"Integrations","parent":"ownCloud","content":"","description":""},{"id":219,"href":"/ocis/getting-started/demo-users/","title":"Demo Users","parent":"Getting Started","content":"oCIS has the option to create demo users during the first startup. These enable you to do quick testing and developing.\n To create the demo users, run the initial setup step with an additional environment variable. IDM_CREATE_DEMO_USERS=true ./bin/ocis server will generate the demo users listed in the table below. By default, it only generates the admin and one user for IDP and Reva respectively.  Following users are available in the demo set:\n   username password email role groups     admin admin or the one generated by ocis init admin@example.org admin users   einstein relativity einstein@example.org user users, philosophy-haters, physics-lovers, sailing-lovers, violin-haters   marie radioactivity marie@example.org user users, physics-lovers, polonium-lovers, radium-lovers   moss vista moss@example.org space admin users   richard superfluidity richard@example.org user users, philosophy-haters, physics-lovers, quantum-lovers   katherine gemini katherine@example.org space admin users, sailing-lovers, physics-lovers, quantum-lovers    You may also want to run oCIS with only your custom users by deleting the demo users.\n","description":"oCIS has the option to create demo users during the first startup. These enable you to do quick testing and developing.\n To create the demo users, run the initial setup step with an additional environment variable. IDM_CREATE_DEMO_USERS=true ./bin/ocis server will generate the demo users listed in the table below. By default, it only generates the admin and one user for IDP and Reva respectively.  Following users are available in the demo set:"},{"id":220,"href":"/ocis/getting-started/","title":"Getting Started","parent":"oCIS - ownCloud Infinite Scale","content":"   oCIS online demo Run oCIS  Binaries Docker   Usage  Login to ownCloud Web Basic Management Commands        oCIS online demo     We have an oCIS demo instance running on ocis.owncloud.com where you can get a first impression of it.\nWe also have some more variations of oCIS running and continuously deployed to reflect different scenarios in that oCIS might be used.\nRun oCIS     We are distributing oCIS as binaries and Docker images.\n The examples in this document assume that oCIS is accessed from the same host as it is running on (localhost). If you would like to access oCIS remotely please refer to the Basic Remote Setup section. Especially to the notes about setting the PROXY_HTTP_ADDR and OCIS_URL environment variables.  You can find more deployment examples in the deployment section.\nBinaries     You can find the latest official release of oCIS at our download mirror or on GitHub. The latest build from the master branch can be found at our download mirrors daily section. Pre-Releases are available at our download mirrors testing section.\nTo run oCIS as binary you need to download it first and then run the following commands. For this example, assuming version 2.0.0-beta.5 of oCIS running on a Linux AMD64 host:\n# download curl https://download.owncloud.com/ocis/ocis/testing/2.0.0-beta.5/ocis-2.0.0-beta.5-linux-amd64 --output ocis # make binary executable chmod +x ocis # initialize a minimal oCIS configuration ./ocis init # run with demo users IDM_CREATE_DEMO_USERS=true ./ocis server The default primary storage location is ~/.ocis or /var/lib/ocis depending on the packaging format and your operating system user. You can change that value by configuration.\n When you\u0026rsquo;re using oCIS with self-signed certificates, you need to answer the question for certificate checking with \u0026ldquo;yes\u0026rdquo; or set the environment variable OCIS_INSECURE=true, in order to make oCIS work.   oCIS by default relies on Multicast DNS (mDNS), usually via avahi-daemon. If your system has a firewall, make sure mDNS is allowed in your active zone.   Open Files on macOS     The start command ./ocis server starts a runtime which runs all oCIS services in one process. On MacOS we have very low limits for open files. oCIS needs more than the default 256. Please raise the limit to 1024 by typing ulimit -n 1024 within the same cli session where you start ocis from.  Docker     Docker images for oCIS are available on Docker Hub.\nThe latest tag always reflects the current master branch.\ndocker pull owncloud/ocis docker run --rm -it -v ocis-config:/etc/ocis owncloud/ocis init docker run --rm -p 9200:9200 -v ocis-config:/etc/ocis -v ocis-data:/var/lib/ocis -e IDM_CREATE_DEMO_USERS=true owncloud/ocis   When you\u0026rsquo;re using oCIS with self-signed certificates, you need to set the environment variable OCIS_INSECURE=true, in order to make oCIS work.   When you\u0026rsquo;re creating the demo users by setting IDM_CREATE_DEMO_USERS=true, you need to be sure that this instance is not used in production because the passwords are public.   We are using named volumes for the oCIS configuration and oCIS data in the above example (-v ocis-config:/etc/ocis -v ocis-data:/var/lib/ocis). You could instead also use host bind-mounts instead, eg. -v /some/host/dir:/var/lib/ocis.\nYou cannot use bind mounts on MacOS, since extended attributes are not supported (owncloud/ocis#182, moby/moby#1070).\n  Usage     Login to ownCloud Web     Open https://localhost:9200 and login using one of the demo accounts.\nBasic Management Commands     The oCIS single binary contains multiple extensions and the ocis command helps you to manage them. You already used ocis server to run all available extensions in the Run oCIS section. We now will show you some more management commands, which you may also explore by typing ocis --help or going to the docs.\nTo initialize the oCIS configuration:\nocis init To start oCIS server:\nocis server The list command prints all running oCIS services. ocis list\nThe version command prints the version of your installed oCIS. ocis --version\nThe health command is used to execute a health check, if the exit code equals zero the service should be up and running, if the exit code is greater than zero the service is not in a healthy state. Generally this command is used within our Docker containers, it could also be used within Kubernetes.\nocis health --help ","description":"oCIS online demo Run oCIS  Binaries Docker   Usage  Login to ownCloud Web Basic Management Commands        oCIS online demo     We have an oCIS demo instance running on ocis.owncloud.com where you can get a first impression of it.\nWe also have some more variations of oCIS running and continuously deployed to reflect different scenarios in that oCIS might be used."},{"id":221,"href":"/apis/","title":"APIs","parent":"ownCloud","content":"    gRPC      Http      LibreGraph      Spaces      Users      Groups          Infinite Scale provides a large set of different application programming interfaces (APIs). Infinite Scale is built by microservices. That means many calls to \u0026ldquo;functions\u0026rdquo; in the code are remote calls.\nBasically we have two different API \u0026ldquo;universes\u0026rdquo;: HTTP and gRPC.\n     For inter-service-communication we are using mostly gRPC calls because it has some advantages. In the future, clients may decide to use gRPC directly to make use of these advantages.\n HTTP     HTTP APIs are mostly used for client \u0026lt;-\u0026gt; server communication. Modern applications are embracing a RESTful software architecture style. REST APIs are using the HTTP protocol to transfer data between clients and servers. All our clients talk to the Server using HTTP APIs. This has legacy reasons and is well-supported across many platforms and technologies. Infinite Scale uses an HTTP API gateway to route client requests to the correct service.\nOpenAPI     It is best practise to define APIs and their behavior by a spec. We are using the OpenAPI standard for all new APIs. The OpenAPI Specification, previously known as the Swagger Specification, is a specification for a machine-readable interface definition language for describing, producing, consuming and visualizing RESTful web services. Previously part of the Swagger framework, it became a separate project in 2016, overseen by the OpenAPI Initiative, an open-source collaboration project of the Linux Foundation. Swagger and some other tools can generate code, documentation and test cases from interface files.\nRFC     Some APIs have become a de facto standard and are additionally covered by an RFC.\ngRPC     In gRPC, a client application can directly call methods on a server application on a different machine as if it was a local object. This makes it easier to create distributed applications based on microservices. In gRPC we can define a service and specify the methods that can be called remotely. A gRPC client has a stub that provides the same methods and types as the server. Infinite Scale uses a gRPC API Gateway to route the requests to the correct service.\nProtobuf     gRPC APIs are typically defined by Protocol buffers. The different client and server stubs are created from *.proto files by code generation tools.\nVersioning     There are different standards for API versioning: Through URL, through request parameter, through custom header and through content negotiation. Ocis uses the versioning by URL concept although this creates a big code footprint. The versioning follows SemVer. We update the major version number when breaking changes are needed. Clients can decide which major version they use through the request URL. The specific implementation is documented on each API.\n","description":"gRPC      Http      LibreGraph      Spaces      Users      Groups          Infinite Scale provides a large set of different application programming interfaces (APIs). Infinite Scale is built by microservices. That means many calls to \u0026ldquo;functions\u0026rdquo; in the code are remote calls."},{"id":222,"href":"/apis/http/","title":"Http","parent":"APIs","content":"The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. HTTP is the foundation of data communication for the World Wide Web, where hypertext documents include hyperlinks to other resources that the user can easily access, for example by a mouse click or by tapping the screen in a web browser.\nDevelopment of HTTP was initiated by Tim Berners-Lee at CERN in 1989 and summarized in a simple document describing the behavior of a client and a server using the first HTTP protocol version that was named 0.9. That first version of HTTP protocol soon evolved into a more elaborated version that was the first draft toward a far future version 1.0\n","description":"The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. HTTP is the foundation of data communication for the World Wide Web, where hypertext documents include hyperlinks to other resources that the user can easily access, for example by a mouse click or by tapping the screen in a web browser.\nDevelopment of HTTP was initiated by Tim Berners-Lee at CERN in 1989 and summarized in a simple document describing the behavior of a client and a server using the first HTTP protocol version that was named 0."},{"id":223,"href":"/services/port-ranges/","title":"Port Ranges","parent":"Services","content":"oCIS services often need a port to expose their services to other services or the outside world. As users may have many different extensions running on the same machine, we should track port usage in the oCIS ecosystem. In the best case we ensure that each extension uses a non colliding port range, to make life of users easier.\nThis page tracks the knowingly used port ranges.\nFeel free to \u0026ldquo;reserve\u0026rdquo; a free port range when you\u0026rsquo;re developing an extension by adding your extension to the list (see the edit button in the top right corner).\nIf you\u0026rsquo;re developing a non-public extension, we recommend using ports outside of the ranges listed below.\nWe also suggest to use the last port in your extensions\u0026rsquo; range as a debug/metrics port.\nAllocations        Port range Service     9000-9010 reserved for Infinite Scale   9100-9104 web   9105-9109 hello   9110-9114 ocs   9115-9119 webdav   9120-9124 graph   9125-9129 policies   9130-9134 idp   9135-9139 FREE (formerly used by graph-explorer)   9140-9141 frontend   9142-9143 gateway   9144-9145 users   9146-9147 auth-basic   9148-9149 auth-bearer   9150-9153 sharing   9154-9156 storage-shares   9157-9159 storage-users   9160-9162 groups   9163 ocdav   9164 groups   9165 app-provider   9166-9169 auth-machine   9170-9174 notifications   9175-9179 storage-publiclink   9180-9184 FREE (formerly used by accounts)   9185-9189 thumbnails   9190-9194 settings   9195-9199 FREE   9200-9204 proxy   9205-9209 proxy   9210-9214 FREE   9215-9219 storage-system   9220-9224 search   9225-9229 FREE   9230-9234 nats   9235-9239 idm   9240-9244 app-registry   9245-9249 FREE   9250-9254 ocis server (runtime)   9255-9259 FREE   9260-9264 FREE   9265-9269 FREE   9270-9274 FREE   9275-9279 FREE   9280-9284 FREE   9285-9289 FREE   9290-9294 FREE   9295-9299 FREE   9300-9304 FREE   9305-9309 FREE   9310-9314 FREE   9315-9319 FREE   9320-9324 FREE   9325-9329 FREE   9330-9334 FREE   9335-9339 FREE   9340-9344 FREE   9345-9349 FREE   9350-9354 FREE   9355-9359 FREE   9360-9364 FREE   9365-9369 FREE   9370-9374 FREE   9375-9379 FREE   9380-9384 FREE   9385-9389 FREE   9390-9394 FREE   9395-9399 FREE   9400-9404 FREE   9405-9409 FREE   9410-9414 FREE   9415-9419 FREE   9420-9424 FREE   9425-9429 FREE   9430-9434 FREE   9435-9439 FREE   9440-9444 FREE   9445-9449 FREE   9450-9454 FREE   9455-9459 FREE   9460-9464 store   9465-9469 FREE   9470-9474 FREE   9475-9479 FREE   9480-9484 FREE   9485-9489 FREE   9490-9494 FREE   9495-9499 FREE   9500-9504 FREE   9505-9509 FREE   9510-9514 FREE   9515-9519 FREE   9520-9524 FREE   9525-9529 FREE   9530-9534 FREE   9535-9539 FREE   9540-9544 FREE   9545-9549 FREE   9550-9554 FREE   9555-9559 FREE   9560-9564 FREE   9565-9569 FREE   9570-9574 FREE   9575-9579 FREE   9580-9584 FREE   9585-9589 FREE   9590-9594 FREE   9595-9599 FREE   9600-9604 FREE   9605-9609 FREE   9610-9614 FREE   9615-9619 FREE   9620-9624 FREE   9625-9629 FREE   9630-9634 FREE   9635-9639 FREE   9640-9644 FREE   9645-9649 FREE   9650-9654 FREE   9655-9659 FREE   9660-9664 FREE   9665-9669 FREE   9670-9674 FREE   9675-9679 FREE   9680-9684 FREE   9685-9689 FREE   9690-9694 FREE   9695-9699 FREE   9700-9704 FREE   9705-9709 FREE   9710-9714 FREE   9715-9719 FREE   9720-9724 FREE   9725-9729 FREE   9730-9734 FREE   9735-9739 FREE   9740-9744 FREE   9745-9749 FREE   9750-9754 FREE   9755-9759 FREE   9760-9764 FREE   9765-9769 FREE   9770-9774 FREE   9775-9779 FREE   9780-9784 FREE   9785-9789 FREE   9790-9794 FREE   9795-9799 FREE   9800-9804 FREE   9805-9809 FREE   9810-9814 FREE   9815-9819 FREE   9820-9824 FREE   9825-9829 FREE   9830-9834 FREE   9835-9839 FREE   9840-9844 FREE   9845-9849 FREE   9850-9854 FREE   9855-9859 FREE   9860-9864 FREE   9865-9869 FREE   9870-9874 FREE   9875-9879 FREE   9880-9884 FREE   9885-9889 FREE   9890-9894 FREE   9895-9899 FREE   9900-9904 FREE   9905-9909 FREE   9910-9914 FREE   9915-9919 FREE   9920-9924 FREE   9925-9929 FREE   9930-9934 FREE   9935-9939 FREE   9940-9944 FREE   9945-9949 FREE   9950-9954 FREE   9955-9959 FREE   9960-9964 FREE   9965-9969 FREE   9970-9974 FREE   9975-9979 FREE   9980-9984 FREE   9985-9989 FREE   9990-9994 FREE   9995-9999 FREE    ","description":"oCIS services often need a port to expose their services to other services or the outside world. As users may have many different extensions running on the same machine, we should track port usage in the oCIS ecosystem. In the best case we ensure that each extension uses a non colliding port range, to make life of users easier.\nThis page tracks the knowingly used port ranges.\nFeel free to \u0026ldquo;reserve\u0026rdquo; a free port range when you\u0026rsquo;re developing an extension by adding your extension to the list (see the edit button in the top right corner)."},{"id":224,"href":"/services/_includes/","title":"Includes","parent":"Services","content":"","description":""},{"id":225,"href":"/services/_includes/app-provider_configvars/","title":"App Provider Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAPP_PROVIDER_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAPP_PROVIDER_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAPP_PROVIDER_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAPP_PROVIDER_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELAPP_PROVIDER_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAPP_PROVIDER_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAPP_PROVIDER_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAPP_PROVIDER_LOG_FILE string  The path to the log file. Activates logging to this file if set.   APP_PROVIDER_DEBUG_ADDR string 127.0.0.1:9165 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   APP_PROVIDER_DEBUG_TOKEN string  Token to secure the metrics endpoint   APP_PROVIDER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling   APP_PROVIDER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory.   APP_PROVIDER_GRPC_ADDR string 127.0.0.1:9164 The bind address of the GRPC service.   APP_PROVIDER_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service.   OCIS_JWT_SECRETAPP_PROVIDER_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   APP_PROVIDER_EXTERNAL_ADDR string  Address of the app provider, where the GATEWAY service can reach it.   APP_PROVIDER_DRIVER string  Driver, the APP PROVIDER services uses. Only \u0026ldquo;wopi\u0026rdquo; is supported as of now.   APP_PROVIDER_WOPI_APP_API_KEY string  API key for the wopi app.   APP_PROVIDER_WOPI_APP_DESKTOP_ONLY bool false Offer this app only on desktop.   APP_PROVIDER_WOPI_APP_ICON_URI string  URI to an app icon to be used by clients.   APP_PROVIDER_WOPI_APP_INTERNAL_URL string  Internal URL to the app, like in your DMZ.   APP_PROVIDER_WOPI_APP_NAME string  Human readable app name.   APP_PROVIDER_WOPI_APP_URL string  URL for end users to access the app.   APP_PROVIDER_WOPI_INSECURE bool false Disable TLS certificate validation for requests to the WOPI server and the web office application. Do not set this in production environments.   APP_PROVIDER_WOPI_WOPI_SERVER_IOP_SECRET string  Shared secret of the CS3org WOPI server.   APP_PROVIDER_WOPI_WOPI_SERVER_EXTERNAL_URL string  External url of the CS3org WOPI server.   OCIS_URLAPP_PROVIDER_WOPI_FOLDER_URL_BASE_URL string https://localhost:9200/ Base url to navigate back from the app to the containing folder in the file list.   APP_PROVIDER_WOPI_FOLDER_URL_PATH_TEMPLATE string /f/{{.ResourceID}} Path template to navigate back from the app to the containing folder in the file list. Supported template variables are {{.ResourceInfo.ResourceID}}, {{.ResourceInfo.Mtime.Seconds}}, {{.ResourceInfo.Name}}, {{.ResourceInfo.Path}}, {{.ResourceInfo.Type}}, {{.ResourceInfo.Id.SpaceId}}, {{.ResourceInfo.Id.StorageId}}, {{.ResourceInfo.Id.OpaqueId}}, {{.ResourceInfo.MimeType}}    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAPP_PROVIDER_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAPP_PROVIDER_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAPP_PROVIDER_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAPP_PROVIDER_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":226,"href":"/services/_includes/app-registry_configvars/","title":"App Registry Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAPP_REGISTRY_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAPP_REGISTRY_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAPP_REGISTRY_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAPP_REGISTRY_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELAPP_REGISTRY_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAPP_REGISTRY_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAPP_REGISTRY_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAPP_REGISTRY_LOG_FILE string  The path to the log file. Activates logging to this file if set.   APP_REGISTRY_DEBUG_ADDR string 127.0.0.1:9243 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   APP_REGISTRY_DEBUG_TOKEN string  Token to secure the metrics endpoint.   APP_REGISTRY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   APP_REGISTRY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   APP_REGISTRY_GRPC_ADDR string 127.0.0.1:9242 The bind address of the GRPC service.   APP_REGISTRY_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETAPP_REGISTRY_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAPP_REGISTRY_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAPP_REGISTRY_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAPP_REGISTRY_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAPP_REGISTRY_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":227,"href":"/services/_includes/audit_configvars/","title":"Audit Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELAUDIT_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAUDIT_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAUDIT_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAUDIT_LOG_FILE string  The path to the log file. Activates logging to this file if set.   AUDIT_DEBUG_ADDR string 127.0.0.1:9234 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   AUDIT_DEBUG_TOKEN string  Token to secure the metrics endpoint.   AUDIT_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   AUDIT_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   AUDIT_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   AUDIT_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   AUDIT_EVENTS_GROUP string audit The consumergroup of the service. One group will only get one copy of an event.   OCIS_INSECUREAUDIT_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   AUDIT_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided AUDIT_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSAUDIT_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   AUDIT_LOG_TO_CONSOLE bool true Logs to Stdout if true. Independent of the log to file option.   AUDIT_LOG_TO_FILE bool false Logs to file if true. Independent of the log to Stdout file option.   AUDIT_FILEPATH string  Filepath to the logfile. Mandatory if LogToFile is true.   AUDIT_FORMAT string json Log format. Using json is advised.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELAUDIT_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAUDIT_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAUDIT_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAUDIT_LOG_FILE string  The path to the log file. Activates logging to this file if set.   AUDIT_DEBUG_ADDR string 127."},{"id":228,"href":"/services/_includes/auth-basic_configvars/","title":"Auth Basic Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_BASIC_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAUTH_BASIC_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAUTH_BASIC_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAUTH_BASIC_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELAUTH_BASIC_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAUTH_BASIC_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAUTH_BASIC_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAUTH_BASIC_LOG_FILE string  The path to the log file. Activates logging to this file if set.   AUTH_BASIC_DEBUG_ADDR string 127.0.0.1:9147 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   AUTH_BASIC_DEBUG_TOKEN string  Token to secure the metrics endpoint.   AUTH_BASIC_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   AUTH_BASIC_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing traces in-memory.   AUTH_BASIC_GRPC_ADDR string 127.0.0.1:9146 The bind address of the GRPC service.   AUTH_BASIC_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETAUTH_BASIC_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   AUTH_BASIC_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups.   AUTH_BASIC_AUTH_MANAGER string ldap The authentication manager to check if credentials are valid. Supported value is \u0026rsquo;ldap\u0026rsquo;.   LDAP_URIAUTH_BASIC_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo;   LDAP_CACERTAUTH_BASIC_LDAP_CACERT string ~/.ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   LDAP_INSECUREAUTH_BASIC_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments.   LDAP_BIND_DNAUTH_BASIC_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server.   LDAP_BIND_PASSWORDAUTH_BASIC_LDAP_BIND_PASSWORD string  Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;.   LDAP_USER_BASE_DNAUTH_BASIC_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users.   LDAP_GROUP_BASE_DNAUTH_BASIC_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups.   LDAP_USER_SCOPEAUTH_BASIC_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_GROUP_SCOPEAUTH_BASIC_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_USER_FILTERAUTH_BASIC_LDAP_USER_FILTER string  LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;.   LDAP_GROUP_FILTERAUTH_BASIC_LDAP_GROUP_FILTER string  LDAP filter to add to the default filters for group searches.   LDAP_USER_OBJECTCLASSAUTH_BASIC_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;).   LDAP_GROUP_OBJECTCLASSAUTH_BASIC_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;).   LDAP_LOGIN_ATTRIBUTESAUTH_BASIC_LDAP_LOGIN_ATTRIBUTES []string [uid] The user object attributes, that can be used for login.   OCIS_URLOCIS_OIDC_ISSUERAUTH_BASIC_IDP_URL string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider.   LDAP_DISABLE_USER_MECHANISMAUTH_BASIC_DISABLE_USER_MECHANISM string none An option to control the behavior for disabling users. Valid options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed.   LDAP_DISABLED_USERS_GROUP_DNAUTH_BASIC_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;.   LDAP_USER_SCHEMA_IDAUTH_BASIC_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for users. This should be a stable globally unique ID like a UUID.   LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGAUTH_BASIC_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user IDs.   LDAP_USER_SCHEMA_MAILAUTH_BASIC_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users.   LDAP_USER_SCHEMA_DISPLAYNAMEAUTH_BASIC_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users.   LDAP_USER_SCHEMA_USERNAMEAUTH_BASIC_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users.   LDAP_USER_ENABLED_ATTRIBUTEAUTH_BASIC_LDAP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP attribute to use as a flag telling if the user is enabled or disabled.   LDAP_GROUP_SCHEMA_IDAUTH_BASIC_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for groups. This should be a stable globally unique id (e.g. a UUID).   LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGAUTH_BASIC_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group IDs.   LDAP_GROUP_SCHEMA_MAILAUTH_BASIC_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty).   LDAP_GROUP_SCHEMA_DISPLAYNAMEAUTH_BASIC_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute).   LDAP_GROUP_SCHEMA_GROUPNAMEAUTH_BASIC_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups.   LDAP_GROUP_SCHEMA_MEMBERAUTH_BASIC_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members.   AUTH_BASIC_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database.   AUTH_BASIC_OWNCLOUDSQL_DB_PASSWORD string  Password for the database user.   AUTH_BASIC_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server.   AUTH_BASIC_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection.   AUTH_BASIC_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database.   AUTH_BASIC_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider.   AUTH_BASIC_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided.   AUTH_BASIC_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames   AUTH_BASIC_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user ID\u0026rsquo;s.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_BASIC_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAUTH_BASIC_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAUTH_BASIC_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAUTH_BASIC_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":229,"href":"/services/_includes/auth-bearer_configvars/","title":"Auth Bearer Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_BEARER_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAUTH_BEARER_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAUTH_BEARER_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAUTH_BEARER_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELAUTH_BEARER_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAUTH_BEARER_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAUTH_BEARER_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAUTH_BEARER_LOG_FILE string  The path to the log file. Activates logging to this file if set.   AUTH_BEARER_DEBUG_ADDR string 127.0.0.1:9149 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   AUTH_BEARER_DEBUG_TOKEN string  Token to secure the metrics endpoint.   AUTH_BEARER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   AUTH_BEARER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   AUTH_BEARER_GRPC_ADDR string 127.0.0.1:9148 The bind address of the GRPC service.   AUTH_BEARER_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETAUTH_BEARER_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   AUTH_BEARER_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups.   OCIS_URLOCIS_OIDC_ISSUERAUTH_BEARER_OIDC_ISSUER string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP.   OCIS_INSECUREAUTH_BEARER_OIDC_INSECURE bool false Allow insecure connections to the OIDC issuer.   AUTH_BEARER_OIDC_ID_CLAIM string preferred_username Name of the claim, which holds the user identifier.   AUTH_BEARER_OIDC_UID_CLAIM string  Name of the claim, which holds the UID.   AUTH_BEARER_OIDC_GID_CLAIM string  Name of the claim, which holds the GID.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_BEARER_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAUTH_BEARER_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAUTH_BEARER_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAUTH_BEARER_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":230,"href":"/services/_includes/auth-machine_configvars/","title":"Auth Machine Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_MACHINE_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAUTH_MACHINE_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAUTH_MACHINE_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAUTH_MACHINE_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELAUTH_MACHINE_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYAUTH_MACHINE_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORAUTH_MACHINE_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEAUTH_MACHINE_LOG_FILE string  The path to the log file. Activates logging to this file if set.   AUTH_MACHINE_DEBUG_ADDR string 127.0.0.1:9167 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   AUTH_MACHINE_DEBUG_TOKEN string  Token to secure the metrics endpoint.   AUTH_MACHINE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   AUTH_MACHINE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   AUTH_MACHINE_GRPC_ADDR string 127.0.0.1:9166 The bind address of the GRPC service.   AUTH_MACHINE_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETAUTH_MACHINE_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   AUTH_MACHINE_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the encoding of the user\u0026rsquo;s group memberships in the reva access token. This reduces the token size, especially when users are members of a large number of groups.   OCIS_MACHINE_AUTH_API_KEYAUTH_MACHINE_API_KEY string  Machine auth API key used to validate internal requests necessary for the access to resources from other services.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDAUTH_MACHINE_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEAUTH_MACHINE_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTAUTH_MACHINE_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORAUTH_MACHINE_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":231,"href":"/services/_includes/eventhistory_configvars/","title":"Eventhistory Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELEVENTHISTORY_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYEVENTHISTORY_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLOREVENTHISTORY_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEEVENTHISTORY_LOG_FILE string  The path to the log file. Activates logging to this file if set.   EVENTHISTORY_DEBUG_ADDR string  Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   EVENTHISTORY_DEBUG_TOKEN string  Token to secure the metrics endpoint.   EVENTHISTORY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   EVENTHISTORY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   EVENTHISTORY_GRPC_ADDR string 127.0.0.1:0 The bind address of the GRPC service.   EVENTHISTORY_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   EVENTHISTORY_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECUREEVENTHISTORY_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   EVENTHISTORY_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSEVENTHISTORY_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   OCIS_PERSISTENT_STOREEVENTHISTORY_STOREOCIS_PERSISTENT_STORE_TYPEEVENTHISTORY_STORE_TYPE string memory The type of the eventhistory store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;ocmem\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_PERSISTENT_STORE_NODESEVENTHISTORY_STORE_ADDRESSES []string [] A comma separated list of nodes to access the configured store. This has no effect when \u0026lsquo;in-memory\u0026rsquo; stores are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   EVENTHISTORY_STORE_DATABASE string eventhistory The database name the configured store should use.   EVENTHISTORY_STORE_TABLE string events The database table the store should use.   EVENTHISTORY_RECORD_EXPIRY Duration 336h0m0s Time to live for events in the store. The duration can be set as number followed by a unit identifier like s, m or h. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks).   EVENTHISTORY_STORE_SIZE int 0 The maximum quantity of items in the store. Only applies when store type \u0026lsquo;ocmem\u0026rsquo; is configured. Defaults to 512.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELEVENTHISTORY_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYEVENTHISTORY_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLOREVENTHISTORY_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEEVENTHISTORY_LOG_FILE string  The path to the log file. Activates logging to this file if set.   EVENTHISTORY_DEBUG_ADDR string  Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed."},{"id":232,"href":"/services/_includes/frontend_configvars/","title":"Frontend Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDFRONTEND_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEFRONTEND_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTFRONTEND_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORFRONTEND_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELFRONTEND_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYFRONTEND_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORFRONTEND_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEFRONTEND_LOG_FILE string  The path to the log file. Activates logging to this file if set.   FRONTEND_DEBUG_ADDR string 127.0.0.1:9141 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   FRONTEND_DEBUG_TOKEN string  Token to secure the metrics endpoint.   FRONTEND_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   FRONTEND_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   FRONTEND_HTTP_ADDR string 127.0.0.1:9140 The bind address of the HTTP service.   FRONTEND_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service.   FRONTEND_HTTP_PREFIX string  The Path prefix where the frontend can be accessed (defaults to /).   OCIS_CORS_ALLOW_ORIGINSFRONTEND_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSFRONTEND_CORS_ALLOW_METHODS []string [OPTIONS HEAD GET PUT POST DELETE MKCOL PROPFIND PROPPATCH MOVE COPY REPORT SEARCH] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSFRONTEND_CORS_ALLOW_HEADERS []string [Origin Accept Content-Type Depth Authorization Ocs-Apirequest If-None-Match If-Match Destination Overwrite X-Request-Id X-Requested-With Tus-Resumable Tus-Checksum-Algorithm Upload-Concat Upload-Length Upload-Metadata Upload-Defer-Length Upload-Expires Upload-Checksum Upload-Offset X-HTTP-Method-Override] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSFRONTEND_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   STORAGE_TRANSFER_SECRET string  Transfer secret for signing file up- and download requests.   OCIS_JWT_SECRETFRONTEND_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_MACHINE_AUTH_API_KEYFRONTEND_MACHINE_AUTH_API_KEY string  The machine auth API key used to validate internal requests necessary to access resources from other services.   FRONTEND_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   FRONTEND_ENABLE_FAVORITES bool false Enables the support for favorites in the clients.   FRONTEND_ENABLE_PROJECT_SPACES bool true Changing this value is NOT supported. Indicates to clients that project spaces are supposed to be made available.   FRONTEND_ENABLE_SHARE_JAIL bool true Changing this value is NOT supported. Indicates to clients that the share jail is supposed to be used.   OCIS_SPACES_MAX_QUOTAFRONTEND_MAX_QUOTA uint64 0 Set the global max quota value in bytes. A value of 0 equals unlimited. The value is provided via capabilities.   FRONTEND_UPLOAD_MAX_CHUNK_SIZE int 100000000 Sets the max chunk sizes in bytes for uploads via the clients.   FRONTEND_UPLOAD_HTTP_METHOD_OVERRIDE string  Advise TUS to replace PATCH requests by POST requests.   FRONTEND_DEFAULT_UPLOAD_PROTOCOL string tus The default upload protocol to use in the clients (e.g. tus).   FRONTEND_ENABLE_RESHARING bool true Changing this value is NOT supported. Enables the support for resharing in the clients.   FRONTEND_ENABLE_FEDERATED_SHARING_INCOMING bool false Changing this value is NOT supported. Enables support for incoming federated sharing for clients. The backend behaviour is not changed.   FRONTEND_ENABLE_FEDERATED_SHARING_OUTGOING bool false Changing this value is NOT supported. Enables support for outgoing federated sharing for clients. The backend behaviour is not changed.   FRONTEND_SEARCH_MIN_LENGTH int 3 Minimum number of characters to enter before a client should start a search for Share receivers. This setting can be used to customize the user experience if e.g too many results are displayed.   OCIS_URLFRONTEND_PUBLIC_URL string https://localhost:9200 The public facing URL of the oCIS frontend.   OCIS_INSECUREFRONTEND_APP_HANDLER_INSECURE bool false Allow insecure connections to the frontend.   FRONTEND_ARCHIVER_MAX_NUM_FILES int64 10000 Max number of files that can be packed into an archive.   FRONTEND_ARCHIVER_MAX_SIZE int64 1073741824 Max size in bytes of the zip archive the archiver can create.   OCIS_INSECUREFRONTEND_ARCHIVER_INSECURE bool false Allow insecure connections to the archiver.   FRONTEND_DATA_GATEWAY_PREFIX string data Path prefix for the data gateway.   FRONTEND_OCS_PREFIX string ocs URL path prefix for the OCS service. Note that the string must not start with \u0026lsquo;/\u0026rsquo;.   FRONTEND_OCS_SHARE_PREFIX string /Shares Path prefix for shares as part of an ocis resource. Note that the path must start with \u0026lsquo;/\u0026rsquo;.   FRONTEND_OCS_HOME_NAMESPACE string /users/{{.Id.OpaqueId}} Homespace namespace identifier.   FRONTEND_OCS_ADDITIONAL_INFO_ATTRIBUTE string {{.Mail}} Additional information attribute for the user like {{.Mail}}.   FRONTEND_OCS_RESOURCE_INFO_CACHE_TTL int 0 Max TTL in seconds for the resource info cache. 0 disables the cache.   FRONTEND_OCS_RESOURCE_INFO_CACHE_TYPE string memory The type of the resource info cache. Supported values are \u0026lsquo;memory\u0026rsquo; and \u0026lsquo;redis\u0026rsquo;.   FRONTEND_OCS_RESOURCE_INFO_CACHE_REDIS_ADDR string  A comma separated list of addresses to access the configured store. This has no effect when the \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how addresses are used is dependent on the library of the configured store.   FRONTEND_OCS_RESOURCE_INFO_CACHE_REDIS_USERNAME string  The username to access the redis cache.   FRONTEND_OCS_RESOURCE_INFO_CACHE_REDIS_PASSWORD string  The password to access the redis cache.   FRONTEND_OCS_ENABLE_DENIALS bool false EXPERIMENTAL: enable the feature to deny access on folders.   OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORDFRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD bool false Set this to true if you want to enforce passwords on Uploader, Editor or Contributor shares.   FRONTEND_CHECKSUMS_SUPPORTED_TYPES []string [sha1 md5 adler32] Define the checksum types that indicate to clients which hashes the server can use to verify upload integrity. You can provide multiple types separated by blank or comma. Supported types are \u0026lsquo;sha1\u0026rsquo;, \u0026lsquo;md5\u0026rsquo; and \u0026lsquo;adler32\u0026rsquo;.   FRONTEND_CHECKSUMS_PREFERRED_UPLOAD_TYPE string sha1 The supported checksum type for uploads that indicates to clients supporting multiple hash algorithms which one is preferred by the server. Must be one out of the defined list of SUPPORTED_TYPES.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDFRONTEND_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEFRONTEND_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTFRONTEND_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORFRONTEND_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":233,"href":"/services/_includes/gateway_configvars/","title":"Gateway Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDGATEWAY_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEGATEWAY_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTGATEWAY_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORGATEWAY_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELGATEWAY_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYGATEWAY_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORGATEWAY_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEGATEWAY_LOG_FILE string  The path to the log file. Activates logging to this file if set.   GATEWAY_DEBUG_ADDR string 127.0.0.1:9143 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   GATEWAY_DEBUG_TOKEN string  Token to secure the metrics endpoint.   GATEWAY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   GATEWAY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   GATEWAY_GRPC_ADDR string 127.0.0.1:9142 The bind address of the GRPC service.   GATEWAY_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETGATEWAY_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   GATEWAY_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   GATEWAY_COMMIT_SHARE_TO_STORAGE_GRANT bool true Commit shares to storage grants. This grants access to shared resources for the share receiver directly on the storage.   GATEWAY_SHARE_FOLDER_NAME string Shares Name of the share folder in users\u0026rsquo; home space.   GATEWAY_DISABLE_HOME_CREATION_ON_LOGIN bool true Disable creation of the home space on login.   STORAGE_TRANSFER_SECRET string  The storage transfer secret.   GATEWAY_TRANSFER_EXPIRES int 86400 Expiry for the gateway tokens.   OCIS_CACHE_STOREGATEWAY_CACHE_STOREOCIS_CACHE_STORE_TYPEGATEWAY_CACHE_STORE_TYPE string memory Store implementation for the cache. Valid values are \u0026ldquo;memory\u0026rdquo; (default), \u0026ldquo;redis\u0026rdquo;, and \u0026ldquo;etcd\u0026rdquo;.   OCIS_CACHE_STORE_NODESGATEWAY_CACHE_STORE_NODESOCIS_CACHE_STORE_ADDRESSGATEWAY_CACHE_STORE_ADDRESSGATEWAY_CACHE_NODES []string [] Nodes to use for the cache store.   GATEWAY_CACHE_DATABASE string users Database name of the cache.   OCIS_CACHE_STORE_TTLGATEWAY_STAT_CACHE_TTL int 300 Max TTL in seconds for the gateway\u0026rsquo;s stat cache.   OCIS_CACHE_STORE_TTLGATEWAY_PROVIDER_CACHE_TTL int 300 Max TTL in seconds for the gateway\u0026rsquo;s provider cache.   OCIS_CACHE_STORE_TTLGATEWAY_CREATE_HOME_CACHE_TTL int 300 Max TTL in seconds for the gateway\u0026rsquo;s create home cache.   OCIS_URLGATEWAY_FRONTEND_PUBLIC_URL string https://localhost:9200 The public facing URL of the oCIS frontend.   GATEWAY_USERS_ENDPOINT string localhost:9144 The USERS API endpoint.   GATEWAY_GROUPS_ENDPOINT string localhost:9160 The GROUPS API endpoint.   GATEWAY_PERMISSIONS_ENDPOINT string localhost:9191 The SETTINGS API endpoint.   GATEWAY_SHARING_ENDPOINT string localhost:9150 The SHARE API endpoint.   GATEWAY_AUTH_BASIC_ENDPOINT string localhost:9146 The AUTH BASIC API endpoint.   GATEWAY_AUTH_BEARER_ENDPOINT string  The AUTH BEARER API endpoint.   GATEWAY_AUTH_MACHINE_ENDPOINT string localhost:9166 The AUTH MACHINE API endpoint.   GATEWAY_STORAGE_PUBLIC_LINK_ENDPOINT string localhost:9178 The STORAGE PUBLICLINK API endpoint.   GATEWAY_STORAGE_USERS_ENDPOINT string localhost:9157 The STORAGE USERS API endpoint.   GATEWAY_STORAGE_SHARES_ENDPOINT string localhost:9154 The STORAGE SHARES API endpoint.   GATEWAY_APP_REGISTRY_ENDPOINT string localhost:9242 The APP REGISTRY API endpoint.   GATEWAY_STORAGE_USERS_MOUNT_ID string  Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDGATEWAY_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEGATEWAY_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTGATEWAY_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORGATEWAY_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":234,"href":"/services/_includes/graph_configvars/","title":"Graph Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDGRAPH_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEGRAPH_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTGRAPH_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORGRAPH_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELGRAPH_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYGRAPH_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORGRAPH_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEGRAPH_LOG_FILE string  The path to the log file. Activates logging to this file if set.   OCIS_CACHE_STOREGRAPH_CACHE_STOREOCIS_CACHE_STORE_TYPEGRAPH_CACHE_STORE_TYPE string memory The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;ocmem\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_CACHE_STORE_NODESGRAPH_CACHE_STORE_NODESOCIS_CACHE_STORE_ADDRESSESGRAPH_CACHE_STORE_ADDRESSES []string [] A comma-separated list of nodes to connect to. This has no effect when \u0026lsquo;in-memory\u0026rsquo; stores are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   GRAPH_CACHE_STORE_DATABASE string graph The database name the configured store should use.   GRAPH_CACHE_STORE_TABLE string roles The database table the store should use.   OCIS_CACHE_STORE_TTLGRAPH_CACHE_STORE_TTL Duration 336h0m0s Time to live for cache records in the graph. The duration can be set as number followed by a unit identifier like s, m or h. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks).   OCIS_CACHE_STORE_SIZEGRAPH_CACHE_STORE_SIZE int 0 The maximum quantity of items in the store. Only applies when store type \u0026lsquo;ocmem\u0026rsquo; is configured. Defaults to 512.   GRAPH_DEBUG_ADDR string 127.0.0.1:9124 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   GRAPH_DEBUG_TOKEN string  Token to secure the metrics endpoint.   GRAPH_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   GRAPH_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   GRAPH_HTTP_ADDR string 127.0.0.1:9120 The bind address of the HTTP service.   GRAPH_HTTP_ROOT string /graph Subdirectory that serves as the root for this HTTP service.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   GRAPH_HTTP_API_TOKEN string  An optional API bearer token   GRAPH_GROUP_MEMBERS_PATCH_LIMIT int 20 The amount of group members allowed to be added with a single patch request.   GRAPH_USERNAME_MATCH string default Option to allow legacy usernames. Supported options are \u0026lsquo;default\u0026rsquo; and \u0026rsquo;none\u0026rsquo;.   GRAPH_ASSIGN_DEFAULT_USER_ROLE bool true Whether to assign newly created users the default role \u0026lsquo;User\u0026rsquo;. Set this to \u0026lsquo;false\u0026rsquo; if you want to assign roles manually, or if the role assignment should happen at first login. Set this to \u0026rsquo;true\u0026rsquo; (the default) to assign the role \u0026lsquo;User\u0026rsquo; when creating a new user.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_JWT_SECRETGRAPH_JWT_SECRET string  The secret to mint and validate jwt tokens.   GRAPH_APPLICATION_ID string  The ocis application id shown in the graph. All app roles are tied to this.   GRAPH_APPLICATION_DISPLAYNAME string ownCloud Infinite Scale The oCIS application name   OCIS_URLGRAPH_SPACES_WEBDAV_BASE string https://localhost:9200 The public facing URL of WebDAV.   GRAPH_SPACES_WEBDAV_PATH string /dav/spaces/ The WebDAV subpath for spaces.   GRAPH_SPACES_DEFAULT_QUOTA string 1000000000 The default quota in bytes.   GRAPH_SPACES_EXTENDED_SPACE_PROPERTIES_CACHE_TTL int 0 Max TTL in seconds for the spaces property cache.   GRAPH_SPACES_USERS_CACHE_TTL int 1800000000000 Max TTL in seconds for the spaces users cache.   GRAPH_SPACES_GROUPS_CACHE_TTL int 1800000000000 Max TTL in seconds for the spaces groups cache.   GRAPH_IDENTITY_BACKEND string ldap The user identity backend to use. Supported backend types are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;cs3\u0026rsquo;.   LDAP_URIGRAPH_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo;   LDAP_CACERTGRAPH_LDAP_CACERT string ~/.ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   LDAP_INSECUREGRAPH_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments.   LDAP_BIND_DNGRAPH_LDAP_BIND_DN string uid=libregraph,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server.   LDAP_BIND_PASSWORDGRAPH_LDAP_BIND_PASSWORD string  Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;.   GRAPH_LDAP_SERVER_UUID bool false If set to true, rely on the LDAP Server to generate a unique ID for users and groups, like when using \u0026rsquo;entryUUID\u0026rsquo; as the user ID attribute.   GRAPH_LDAP_SERVER_USE_PASSWORD_MODIFY_EXOP bool true User the Password Modify Extended Operation for updating user passwords.   GRAPH_LDAP_SERVER_WRITE_ENABLED bool true Allow to create, modify and delete LDAP users via GRAPH API. This is only works when the default Schema is used.   GRAPH_LDAP_REFINT_ENABLED bool false Signals that the server has the refint plugin enabled, which makes some actions not needed.   LDAP_USER_BASE_DNGRAPH_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users.   LDAP_USER_SCOPEGRAPH_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_USER_FILTERGRAPH_LDAP_USER_FILTER string  LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;.   LDAP_USER_OBJECTCLASSGRAPH_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;).   LDAP_USER_SCHEMA_MAILGRAPH_LDAP_USER_EMAIL_ATTRIBUTE string mail LDAP Attribute to use for the email address of users.   LDAP_USER_SCHEMA_DISPLAY_NAMEGRAPH_LDAP_USER_DISPLAYNAME_ATTRIBUTE string displayName LDAP Attribute to use for the displayname of users.   LDAP_USER_SCHEMA_USERNAMEGRAPH_LDAP_USER_NAME_ATTRIBUTE string uid LDAP Attribute to use for username of users.   LDAP_USER_SCHEMA_IDGRAPH_LDAP_USER_UID_ATTRIBUTE string owncloudUUID LDAP Attribute to use as the unique ID for users. This should be a stable globally unique ID like a UUID.   LDAP_USER_SCHEMA_USER_TYPEGRAPH_LDAP_USER_TYPE_ATTRIBUTE string ownCloudUserType LDAP Attribute to distinguish between \u0026lsquo;Member\u0026rsquo; and \u0026lsquo;Guest\u0026rsquo; users. Default is \u0026lsquo;ownCloudUserType\u0026rsquo;.   LDAP_USER_ENABLED_ATTRIBUTEGRAPH_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP Attribute to use as a flag telling if the user is enabled or disabled.   LDAP_DISABLE_USER_MECHANISMGRAPH_DISABLE_USER_MECHANISM string attribute An option to control the behavior for disabling users. Supported options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed. Default is \u0026lsquo;attribute\u0026rsquo;.   LDAP_DISABLED_USERS_GROUP_DNGRAPH_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;.   LDAP_GROUP_BASE_DNGRAPH_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups.   LDAP_GROUP_SCOPEGRAPH_LDAP_GROUP_SEARCH_SCOPE string sub LDAP search scope to use when looking up groups. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_GROUP_FILTERGRAPH_LDAP_GROUP_FILTER string  LDAP filter to add to the default filters for group searches.   LDAP_GROUP_OBJECTCLASSGRAPH_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;).   LDAP_GROUP_SCHEMA_GROUPNAMEGRAPH_LDAP_GROUP_NAME_ATTRIBUTE string cn LDAP Attribute to use for the name of groups.   LDAP_GROUP_SCHEMA_IDGRAPH_LDAP_GROUP_ID_ATTRIBUTE string owncloudUUID LDAP Attribute to use as the unique id for groups. This should be a stable globally unique ID like a UUID.   LDAP_EDUCATION_RESOURCES_ENABLEDGRAPH_LDAP_EDUCATION_RESOURCES_ENABLED bool false Enable LDAP support for managing education related resources   LDAP_SCHOOL_BASE_DNGRAPH_LDAP_SCHOOL_BASE_DN string  Search base DN for looking up LDAP schools.   LDAP_SCHOOL_SCOPEGRAPH_LDAP_SCHOOL_SEARCH_SCOPE string  LDAP search scope to use when looking up schools. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_SCHOOL_FILTERGRAPH_LDAP_SCHOOL_FILTER string  LDAP filter to add to the default filters for school searches.   LDAP_SCHOOL_OBJECTCLASSGRAPH_LDAP_SCHOOL_OBJECTCLASS string  The object class to use for schools in the default school search filter.   LDAP_SCHOOL_SCHEMA_SCHOOL_NAMEGRAPH_LDAP_SCHOOL_NAME_ATTRIBUTE string  LDAP Attribute to use for the name of a school.   LDAP_SCHOOL_SCHEMA_SCHOOL_NUMBERGRAPH_LDAP_SCHOOL_NUMBER_ATTRIBUTE string  LDAP Attribute to use for the number of a school.   LDAP_SCHOOL_SCHEMA_IDGRAPH_LDAP_SCHOOL_ID_ATTRIBUTE string  LDAP Attribute to use as the unique id for schools. This should be a stable globally unique ID like a UUID.   GRAPH_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Set to a empty string to disable emitting events.   GRAPH_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   OCIS_INSECUREGRAPH_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   GRAPH_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided GRAPH_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSGRAPH_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDGRAPH_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEGRAPH_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTGRAPH_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORGRAPH_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":235,"href":"/services/_includes/groups_configvars/","title":"Groups Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDGROUPS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEGROUPS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTGROUPS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORGROUPS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELGROUPS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYGROUPS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORGROUPS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEGROUPS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   GROUPS_DEBUG_ADDR string 127.0.0.1:9161 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   GROUPS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   GROUPS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   GROUPS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   GROUPS_GRPC_ADDR string 127.0.0.1:9160 The bind address of the GRPC service.   GROUPS_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETGROUPS_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   GROUPS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   GROUPS_DRIVER string ldap The driver which should be used by the groups service. Supported values are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;.   LDAP_URIGROUPS_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo;   LDAP_CACERTGROUPS_LDAP_CACERT string ~/.ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   LDAP_INSECUREGROUPS_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments.   LDAP_BIND_DNGROUPS_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server.   LDAP_BIND_PASSWORDGROUPS_LDAP_BIND_PASSWORD string  Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;.   LDAP_USER_BASE_DNGROUPS_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users.   LDAP_GROUP_BASE_DNGROUPS_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups.   LDAP_USER_SCOPEGROUPS_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_GROUP_SCOPEGROUPS_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_GROUP_SUBSTRING_FILTER_TYPEGROUP_LDAP_GROUP_SUBSTRING_FILTER_TYPE string any Type of substring search filter to use for substring searches for groups. Supported values are \u0026lsquo;initial\u0026rsquo;, \u0026lsquo;final\u0026rsquo; and \u0026lsquo;any\u0026rsquo;. The value \u0026lsquo;initial\u0026rsquo; is used for doing prefix only searches, \u0026lsquo;final\u0026rsquo; for doing suffix only searches or \u0026lsquo;any\u0026rsquo; for doing full substring searches   LDAP_USER_FILTERGROUPS_LDAP_USER_FILTER string  LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;.   LDAP_GROUP_FILTERGROUPS_LDAP_GROUP_FILTER string  LDAP filter to add to the default filters for group searches.   LDAP_USER_OBJECTCLASSGROUPS_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter (\u0026lsquo;inetOrgPerson\u0026rsquo;).   LDAP_GROUP_OBJECTCLASSGROUPS_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter (\u0026lsquo;groupOfNames\u0026rsquo;).   OCIS_URLOCIS_OIDC_ISSUERGROUPS_IDP_URL string https://localhost:9200 The identity provider value to set in the group IDs of the CS3 group objects for groups returned by this group provider.   LDAP_USER_SCHEMA_IDGROUPS_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for users. This should be a stable globally unique id like a UUID.   LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGGROUPS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user id\u0026rsquo;s.   LDAP_USER_SCHEMA_MAILGROUPS_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users.   LDAP_USER_SCHEMA_DISPLAYNAMEGROUPS_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users.   LDAP_USER_SCHEMA_USERNAMEGROUPS_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users.   LDAP_GROUP_SCHEMA_IDGROUPS_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for groups. This should be a stable globally unique ID like a UUID.   LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGGROUPS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s.   LDAP_GROUP_SCHEMA_MAILGROUPS_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty).   LDAP_GROUP_SCHEMA_DISPLAYNAMEGROUPS_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute).   LDAP_GROUP_SCHEMA_GROUPNAMEGROUPS_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups.   LDAP_GROUP_SCHEMA_MEMBERGROUPS_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members.   GROUPS_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database.   GROUPS_OWNCLOUDSQL_DB_PASSWORD string  Password for the database user.   GROUPS_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server.   GROUPS_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection.   GROUPS_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database.   GROUPS_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider.   GROUPS_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided.   GROUPS_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames.   GROUPS_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user IDs.   GROUPS_OWNCLOUDSQL_ENABLE_MEDIAL_SEARCH bool false Allow \u0026lsquo;medial search\u0026rsquo; when searching for users instead of just doing a prefix search. This allows finding \u0026lsquo;Alice\u0026rsquo; when searching for \u0026rsquo;lic\u0026rsquo;.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDGROUPS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEGROUPS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTGROUPS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORGROUPS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":236,"href":"/services/_includes/idm_configvars/","title":"Idm Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDIDM_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEIDM_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTIDM_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORIDM_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELIDM_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYIDM_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORIDM_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEIDM_LOG_FILE string  The path to the log file. Activates logging to this file if set.   IDM_DEBUG_ADDR string 127.0.0.1:9239 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   IDM_DEBUG_TOKEN string  Token to secure the metrics endpoint.   IDM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   IDM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   IDM_LDAPS_ADDR string 127.0.0.1:9235 Listen address for the LDAPS listener (ip-addr:port).   IDM_LDAPS_CERT string ~/.ocis/idm/ldap.crt File name of the TLS server certificate for the LDAPS listener. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   IDM_LDAPS_KEY string ~/.ocis/idm/ldap.key File name for the TLS certificate key for the server certificate. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   IDM_DATABASE_PATH string ~/.ocis/idm/ocis.boltdb Full path to the IDM backend database. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   IDM_CREATE_DEMO_USERSACCOUNTS_DEMO_USERS_AND_GROUPS bool false Flag to enable or disable the creation of the demo users.   IDM_ADMIN_PASSWORD string  Password to set for the oCIS \u0026ldquo;admin\u0026rdquo; user. Either cleartext or an argon2id hash.   IDM_SVC_PASSWORD string  Password to set for the \u0026ldquo;idm\u0026rdquo; service user. Either cleartext or an argon2id hash.   IDM_REVASVC_PASSWORD string  Password to set for the \u0026ldquo;reva\u0026rdquo; service user. Either cleartext or an argon2id hash.   IDM_IDPSVC_PASSWORD string  Password to set for the \u0026ldquo;idp\u0026rdquo; service user. Either cleartext or an argon2id hash.   OCIS_ADMIN_USER_IDIDM_ADMIN_USER_ID string  ID of the user that should receive admin privileges. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDIDM_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEIDM_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTIDM_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORIDM_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":237,"href":"/services/_includes/idp_configvars/","title":"Idp Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     IDP_PASSWORD_RESET_URI string  The URI where a user can reset their password.   OCIS_TRACING_ENABLEDIDP_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEIDP_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTIDP_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORIDP_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELIDP_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYIDP_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORIDP_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEIDP_LOG_FILE string  The path to the log file. Activates logging to this file if set.   IDP_DEBUG_ADDR string 127.0.0.1:9134 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   IDP_DEBUG_TOKEN string  Token to secure the metrics endpoint.   IDP_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   IDP_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   IDP_HTTP_ADDR string 127.0.0.1:9130 The bind address of the HTTP service.   IDP_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   IDP_TRANSPORT_TLS_CERT string ~/.ocis/idp/server.crt Path/File name of the TLS server certificate (in PEM format) for the IDP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idp.   IDP_TRANSPORT_TLS_KEY string ~/.ocis/idp/server.key Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the IDP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idp.   IDP_TLS bool false Enable/Disable HTTPS for the IDP service.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_MACHINE_AUTH_API_KEYIDP_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary for the access to resources from other services.   IDP_ASSET_PATH string  Serve IDP assets from a path on the filesystem instead of the builtin assets.   OCIS_URLOCIS_OIDC_ISSUERIDP_ISS string https://localhost:9200 The OIDC issuer URL to use.   IDP_IDENTITY_MANAGER string ldap The identity manager implementation to use. Supported identity managers are \u0026rsquo;ldap\u0026rsquo;, \u0026lsquo;cs3\u0026rsquo;, \u0026rsquo;libregraph\u0026rsquo; and \u0026lsquo;guest\u0026rsquo;.   IDP_URI_BASE_PATH string  IDP uri base path (defaults to \u0026ldquo;\u0026rdquo;).   IDP_SIGN_IN_URI string  IDP sign-in url.   IDP_SIGN_OUT_URI string  IDP sign-out url.   IDP_ENDPOINT_URI string  URL of the IDP endpoint.   LDAP_INSECUREIDP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments.   IDP_ALLOW_CLIENT_GUESTS bool false Allow guest clients to access oCIS.   IDP_ALLOW_DYNAMIC_CLIENT_REGISTRATION bool false Allow dynamic client registration.   IDP_ENCRYPTION_SECRET_FILE string ~/.ocis/idp/encryption.key Path to the encryption secret file, if unset, a new certificate will be autogenerated upon each restart, thus invalidating all existing sessions. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idp.   IDP_SIGNING_KID string private-key Value of the KID (Key ID) field which is used in created tokens to uniquely identify the signing-private-key.   IDP_SIGNING_METHOD string PS256 Signing method of IDP requests like \u0026lsquo;PS256\u0026rsquo;   IDP_SIGNING_PRIVATE_KEY_FILES []string [~/.ocis/idp/private-key.pem] Private key files for signing IDP requests. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idp.   IDP_VALIDATION_KEYS_PATH string  Path to validation keys for IDP requests.   IDP_ACCESS_TOKEN_EXPIRATION uint64 300 \u0026lsquo;Access token lifespan in seconds (time before an access token is expired).\u0026rsquo;   IDP_ID_TOKEN_EXPIRATION uint64 300 ID token lifespan in seconds (time before an ID token is expired).   IDP_REFRESH_TOKEN_EXPIRATION uint64 2592000 Refresh token lifespan in seconds (time before an refresh token is expired). This also limits the duration of an idle offline session.   IDP_DYNAMIC_CLIENT_SECRET_DURATION uint64 0 Lifespan in seconds of a dynamically registered OIDC client.   LDAP_URIIDP_LDAP_URI string ldaps://localhost:9235 Url of the LDAP service to use as IDP.   LDAP_CACERTIDP_LDAP_TLS_CACERT string ~/.ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idp.   LDAP_BIND_DNIDP_LDAP_BIND_DN string uid=idp,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server.   LDAP_BIND_PASSWORDIDP_LDAP_BIND_PASSWORD string  Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;.   LDAP_USER_BASE_DNIDP_LDAP_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users.   LDAP_USER_SCOPEIDP_LDAP_SCOPE string sub LDAP search scope to use when looking up users. Supported scopes are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   IDP_LDAP_LOGIN_ATTRIBUTE string uid LDAP User attribute to use for login like \u0026lsquo;uid\u0026rsquo;.   LDAP_USER_SCHEMA_MAILIDP_LDAP_EMAIL_ATTRIBUTE string mail LDAP User email attribute like \u0026lsquo;mail\u0026rsquo;.   LDAP_USER_SCHEMA_USERNAMEIDP_LDAP_NAME_ATTRIBUTE string displayName LDAP User name attribute like \u0026lsquo;displayName\u0026rsquo;.   LDAP_USER_SCHEMA_IDIDP_LDAP_UUID_ATTRIBUTE string uid LDAP User uuid attribute like \u0026lsquo;uid\u0026rsquo;.   IDP_LDAP_UUID_ATTRIBUTE_TYPE string text LDAP User uuid attribute type like \u0026rsquo;text\u0026rsquo;.   LDAP_USER_ENABLED_ATTRIBUTEIDP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP Attribute to use as a flag telling if the user is enabled or disabled.   LDAP_USER_FILTERIDP_LDAP_FILTER string  LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;.   LDAP_USER_OBJECTCLASSIDP_LDAP_OBJECTCLASS string inetOrgPerson LDAP User ObjectClass like \u0026lsquo;inetOrgPerson\u0026rsquo;.    ","description":"Environment Variables        Name Type Default Value Description     IDP_PASSWORD_RESET_URI string  The URI where a user can reset their password.   OCIS_TRACING_ENABLEDIDP_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEIDP_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTIDP_TRACING_ENDPOINT string  The endpoint of the tracing agent."},{"id":238,"href":"/services/_includes/nats_configvars/","title":"Nats Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELNATS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYNATS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORNATS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILENATS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   NATS_DEBUG_ADDR string 127.0.0.1:9234 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   NATS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   NATS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   NATS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   NATS_NATS_HOST string 127.0.0.1 Bind address.   NATS_NATS_PORT int 9233 Bind port.   NATS_NATS_CLUSTER_ID string ocis-cluster ID of the NATS cluster.   NATS_NATS_STORE_DIR string ~/.ocis/nats The directory where the filesystem storage will store NATS JetStream data. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/nats.   NATS_TLS_CERT string ~/.ocis/nats/tls.crt Path/File name of the TLS server certificate (in PEM format) for the NATS listener. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/nats.   NATS_TLS_KEY string ~/.ocis/nats/tls.key Path/File name for the TLS certificate key (in PEM format) for the NATS listener. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/nats.   OCIS_INSECURENATS_TLS_SKIP_VERIFY_CLIENT_CERT bool false Whether the NATS server should skip the client certificate verification during the TLS handshake.   OCIS_EVENTS_ENABLE_TLSNATS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..    ","description":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELNATS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYNATS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORNATS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILENATS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   NATS_DEBUG_ADDR string 127."},{"id":239,"href":"/services/_includes/notifications_configvars/","title":"Notifications Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELNOTIFICATIONS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYNOTIFICATIONS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORNOTIFICATIONS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILENOTIFICATIONS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   NOTIFICATIONS_DEBUG_ADDR string 127.0.0.1:9174 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   NOTIFICATIONS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   NOTIFICATIONS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   NOTIFICATIONS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   OCIS_URLNOTIFICATIONS_WEB_UI_URL string https://localhost:9200 The public facing URL of the oCIS Web UI, used e.g. when sending notification eMails   NOTIFICATIONS_SMTP_HOST string  SMTP host to connect to.   NOTIFICATIONS_SMTP_PORT int 1025 Port of the SMTP host to connect to.   NOTIFICATIONS_SMTP_SENDER string ownCloud \u0026lt;noreply@example.com\u0026gt; Sender address of emails that will be sent.   NOTIFICATIONS_SMTP_USERNAME string  Username for the SMTP host to connect to.   NOTIFICATIONS_SMTP_PASSWORD string  Password for the SMTP host to connect to.   NOTIFICATIONS_SMTP_INSECURE bool false Allow insecure connections to the SMTP server.   NOTIFICATIONS_SMTP_AUTHENTICATION string none Authentication method for the SMTP communication. Possible values are \u0026rsquo;login\u0026rsquo;, \u0026lsquo;plain\u0026rsquo;, \u0026lsquo;crammd5\u0026rsquo;, \u0026rsquo;none\u0026rsquo;   NOTIFICATIONS_SMTP_ENCRYPTION string none Encryption method for the SMTP communication. Possible values are \u0026lsquo;starttls\u0026rsquo;, \u0026lsquo;ssl\u0026rsquo;, \u0026lsquo;ssltls\u0026rsquo;, \u0026rsquo;tls\u0026rsquo; and \u0026rsquo;none\u0026rsquo;.   NOTIFICATIONS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   NOTIFICATIONS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   NOTIFICATIONS_EVENTS_GROUP string notifications Name of the event group / queue on the event system.   OCIS_INSECURENOTIFICATIONS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   NOTIFICATIONS_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSNOTIFICATIONS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   OCIS_MACHINE_AUTH_API_KEYNOTIFICATIONS_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary to access resources from other services.   OCIS_EMAIL_TEMPLATE_PATHNOTIFICATIONS_EMAIL_TEMPLATE_PATH string  Path to Email notification templates overriding embedded ones.   REVA_GATEWAY string 127.0.0.1:9142 CS3 gateway used to look up user metadata    ","description":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELNOTIFICATIONS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYNOTIFICATIONS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORNOTIFICATIONS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILENOTIFICATIONS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   NOTIFICATIONS_DEBUG_ADDR string 127."},{"id":240,"href":"/services/_includes/ocdav_configvars/","title":"Ocdav Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDOCDAV_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEOCDAV_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTOCDAV_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTOROCDAV_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELOCDAV_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYOCDAV_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLOROCDAV_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEOCDAV_LOG_FILE string  The path to the log file. Activates logging to this file if set.   OCDAV_DEBUG_ADDR string 127.0.0.1:9163 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   OCDAV_DEBUG_TOKEN string  Token to secure the metrics endpoint.   OCDAV_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   OCDAV_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   OCDAV_HTTP_ADDR string 127.0.0.1:0 The bind address of the HTTP service.   OCDAV_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service.   OCDAV_HTTP_PREFIX string  A URL path prefix for the handler.   OCIS_JWT_SECRETOCDAV_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCDAV_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   OCDAV_WEBDAV_NAMESPACE string /users/{{.Id.OpaqueId}} Jail requests to /dav/webdav into this CS3 namespace. Supports template layouting with CS3 User properties.   OCDAV_FILES_NAMESPACE string /users/{{.Id.OpaqueId}} Jail requests to /dav/files/{username} into this CS3 namespace. Supports template layouting with CS3 User properties.   OCDAV_SHARES_NAMESPACE string /Shares The human readable path for the share jail. Relative to a users personal space root. Upcased intentionally.   OCIS_URLOCDAV_PUBLIC_URL string https://localhost:9200 URL where oCIS is reachable for users.   OCIS_INSECUREOCDAV_INSECURE bool false Allow insecure connections to the GATEWAY service.   OCDAV_GATEWAY_REQUEST_TIMEOUT int64 84300 Request timeout in seconds for requests from the oCDAV service to the GATEWAY service.   OCIS_MACHINE_AUTH_API_KEYOCDAV_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary for the access to resources from other services.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDOCDAV_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEOCDAV_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTOCDAV_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTOROCDAV_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":241,"href":"/services/_includes/ocs_configvars/","title":"Ocs Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDOCS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEOCS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTOCS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTOROCS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELOCS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYOCS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLOROCS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEOCS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   OCIS_CACHE_STOREOCS_CACHE_STOREOCIS_CACHE_STORE_TYPEOCS_CACHE_STORE_TYPE string  The type of the cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;ocmem\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_CACHE_STORE_NODESOCS_CACHE_STORE_NODESOCIS_CACHE_STORE_ADDRESSESOCS_CACHE_STORE_ADDRESSES []string [] A comma separated list of nodes to access the configured store. This has no effect when \u0026lsquo;in-memory\u0026rsquo; stores are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   OCS_CACHE_STORE_DATABASE string  The database name the configured store should use.   OCS_CACHE_STORE_TABLE string  The database table the store should use.   OCIS_CACHE_STORE_TTLOCS_CACHE_STORE_TTL Duration 0s Time to live for events in the store. The duration can be set as number followed by a unit identifier like s, m or h. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks).   OCIS_CACHE_STORE_SIZEOCS_CACHE_STORE_SIZE int 0 The maximum quantity of items in the store. Only applies when store type \u0026lsquo;ocmem\u0026rsquo; is configured. Defaults to 512.   OCS_DEBUG_ADDR string 127.0.0.1:9114 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   OCS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   OCS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   OCS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   OCS_HTTP_ADDR string 127.0.0.1:9110 The bind address of the HTTP service.   OCS_HTTP_ROOT string /ocs Subdirectory that serves as the root for this HTTP service.   OCIS_CORS_ALLOW_ORIGINSOCS_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSOCS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSOCS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSOCS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   OCIS_JWT_SECRETOCS_JWT_SECRET string  The secret to mint and validate jwt tokens.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDOCS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEOCS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTOCS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTOROCS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":242,"href":"/services/_includes/policies_configvars/","title":"Policies Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     POLICIES_GRPC_ADDR string 127.0.0.1:9125 The bind address of the GRPC service.   POLICIES_DEBUG_ADDR string 127.0.0.1:9129 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   POLICIES_DEBUG_TOKEN string  Token to secure the metrics endpoint.   POLICIES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   POLICIES_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   OCIS_JWT_SECRETPOLICIES_JWT_SECRET string  The secret to mint and validate jwt tokens.   POLICIES_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   POLICIES_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECUREPOLICIES_EVENTS_TLS_INSECURE bool false Whether the server should skip the client certificate verification during the TLS handshake.   POLICIES_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided POLICIES_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSPOLICIES_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_MACHINE_AUTH_API_KEYPOLICIES_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary for the access to resources from other services.   OCIS_LOG_LEVELPOLICIES_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYPOLICIES_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORPOLICIES_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEPOLICIES_LOG_FILE string  The path to the log file. Activates logging to this file if set.   POLICIES_ENGINE_TIMEOUT Duration 10s Sets the timeout the rego expression evaluation can take. The timeout can be set as number followed by a unit identifier like ms, s, etc. Rules default to deny if the timeout was reached.   POLICIES_POSTPROCESSING_QUERY string  Defines the \u0026lsquo;Complete Rules\u0026rsquo; variable defined in the rego rule set this step uses for its evaluation. Defaults to deny if the variable was not found.    ","description":"Environment Variables        Name Type Default Value Description     POLICIES_GRPC_ADDR string 127.0.0.1:9125 The bind address of the GRPC service.   POLICIES_DEBUG_ADDR string 127.0.0.1:9129 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   POLICIES_DEBUG_TOKEN string  Token to secure the metrics endpoint.   POLICIES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling."},{"id":243,"href":"/services/_includes/postprocessing_configvars/","title":"Postprocessing Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELPOSTPROCESSING_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYPOSTPROCESSING_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORPOSTPROCESSING_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEPOSTPROCESSING_LOG_FILE string  The path to the log file. Activates logging to this file if set.   POSTPROCESSING_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   POSTPROCESSING_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECUREPOSTPROCESSING_EVENTS_TLS_INSECURE bool false Whether the ocis server should skip the client certificate verification during the TLS handshake.   POSTPROCESSING_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided POSTPROCESSING_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSPOSTPROCESSING_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services.   POSTPROCESSING_STEPS []string [] A comma separated list of postprocessing steps, processed in order of their appearance. Currently supported values by the system are: \u0026lsquo;virusscan\u0026rsquo;, \u0026lsquo;policies\u0026rsquo; and \u0026lsquo;delay\u0026rsquo;. Custom steps are allowed. See the documentation for instructions.   POSTPROCESSING_VIRUSSCAN bool false After uploading a file but before making it available for download, virus scanning the file can be enabled. Needs as prerequisite the antivirus service to be enabled and configured.   POSTPROCESSING_DELAY Duration 0s After uploading a file but before making it available for download, a delay step can be added. Intended for developing purposes only. The duration can be set as number followed by a unit identifier like s, m or h. If a duration is set but the keyword \u0026lsquo;delay\u0026rsquo; is not explicitely added to \u0026lsquo;POSTPROCESSING_STEPS\u0026rsquo;, the delay step will be processed as last step. In such a case, a log entry will be written on service startup to remind the admin about that situation.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELPOSTPROCESSING_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYPOSTPROCESSING_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORPOSTPROCESSING_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEPOSTPROCESSING_LOG_FILE string  The path to the log file. Activates logging to this file if set.   POSTPROCESSING_EVENTS_ENDPOINT string 127."},{"id":244,"href":"/services/_includes/proxy_configvars/","title":"Proxy Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDPROXY_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEPROXY_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTPROXY_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORPROXY_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELPROXY_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYPROXY_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORPROXY_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEPROXY_LOG_FILE string  The path to the log file. Activates logging to this file if set.   PROXY_DEBUG_ADDR string 127.0.0.1:9205 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   PROXY_DEBUG_TOKEN string  Token to secure the metrics endpoint.   PROXY_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   PROXY_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   PROXY_HTTP_ADDR string 0.0.0.0:9200 The bind address of the HTTP service.   PROXY_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   PROXY_TRANSPORT_TLS_CERT string ~/.ocis/proxy/server.crt Path/File name of the TLS server certificate (in PEM format) for the external http services. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/proxy.   PROXY_TRANSPORT_TLS_KEY string ~/.ocis/proxy/server.key Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the external http services. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/proxy.   PROXY_TLS bool true Enable/Disable HTTPS for the external HTTP services.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_URLOCIS_OIDC_ISSUERPROXY_OIDC_ISSUER string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP.   OCIS_INSECUREPROXY_OIDC_INSECURE bool false Disable TLS certificate validation for connections to the IDP. Note that this is not recommended for production environments.   PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD string jwt Sets how OIDC access tokens should be verified. Possible values are \u0026rsquo;none\u0026rsquo; and \u0026lsquo;jwt\u0026rsquo;. When using \u0026rsquo;none\u0026rsquo;, no special validation apart from using it for accessing the IPD\u0026rsquo;s userinfo endpoint will be done. When using \u0026lsquo;jwt\u0026rsquo;, it tries to parse the access token as a jwt token and verifies the signature using the keys published on the IDP\u0026rsquo;s \u0026lsquo;jwks_uri\u0026rsquo;.   OCIS_CACHE_STOREPROXY_OIDC_USERINFO_CACHE_STOREOCIS_CACHE_STORE_TYPEPROXY_OIDC_USERINFO_CACHE_TYPE string memory The type of the userinfo cache store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;ocmem\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_CACHE_STORE_NODESPROXY_OIDC_USERINFO_CACHE_NODESOCIS_CACHE_STORE_ADDRESSESPROXY_OIDC_USERINFO_CACHE_ADDRESSES []string [] A comma separated list of nodes to access the configured store. This has no effect when \u0026lsquo;in-memory\u0026rsquo; stores are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   PROXY_OIDC_USERINFO_CACHE_DATABASE string proxy The database name the configured store should use.   PROXY_OIDC_USERINFO_CACHE_TABLE string userinfo The database table the store should use.   OCIS_CACHE_STORE_TTLPROXY_OIDC_USERINFO_CACHE_TTL Duration 10s Default time to live for user info in the user info cache. Only applied when access tokens has no expiration. The duration can be set as number followed by a unit identifier like s, m or h. Defaults to \u0026rsquo;10s\u0026rsquo; (10 seconds).   OCIS_CACHE_STORE_SIZEPROXY_OIDC_USERINFO_CACHE_SIZE int 0 The maximum quantity of items in the user info cache. Only applies when store type \u0026lsquo;ocmem\u0026rsquo; is configured. Defaults to 512.   PROXY_OIDC_JWKS_REFRESH_INTERVAL uint64 60 The interval for refreshing the JWKS (JSON Web Key Set) in minutes in the background via a new HTTP request to the IDP.   PROXY_OIDC_JWKS_REFRESH_TIMEOUT uint64 10 The timeout in seconds for an outgoing JWKS request.   PROXY_OIDC_JWKS_REFRESH_RATE_LIMIT uint64 60 Limits the rate in seconds at which refresh requests are performed for unknown keys. This is used to prevent malicious clients from imposing high network load on the IDP via ocis.   PROXY_OIDC_JWKS_REFRESH_UNKNOWN_KID bool true If set to \u0026rsquo;true\u0026rsquo;, the JWKS refresh request will occur every time an unknown KEY ID (KID) is seen. Always set a \u0026lsquo;refresh_limit\u0026rsquo; when enabling this.   PROXY_OIDC_REWRITE_WELLKNOWN bool false Enables rewriting the /.well-known/openid-configuration to the configured OIDC issuer. Needed by the Desktop Client, Android Client and iOS Client to discover the OIDC provider.   OCIS_JWT_SECRETPROXY_JWT_SECRET string  The secret to mint and validate JWT tokens.   PROXY_ROLE_ASSIGNMENT_DRIVER string default The mechanism that should be used to assign roles to user upon login. Supported values: \u0026lsquo;default\u0026rsquo; or \u0026lsquo;oidc\u0026rsquo;. \u0026lsquo;default\u0026rsquo; will assign the role \u0026lsquo;user\u0026rsquo; to users which don\u0026rsquo;t have a role assigned at the time they login. \u0026lsquo;oidc\u0026rsquo; will assign the role based on the value of a claim (configured via PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM) from the users OIDC claims.   PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM string roles The OIDC claim used to create the users role assignment.   PROXY_ENABLE_PRESIGNEDURLS bool true Allow OCS to get a signing key to sign requests.   PROXY_ACCOUNT_BACKEND_TYPE string cs3 Account backend the PROXY service should use. Currently only \u0026lsquo;cs3\u0026rsquo; is possible here.   PROXY_USER_OIDC_CLAIM string preferred_username The name of an OpenID Connect claim that is used for resolving users with the account backend. The value of the claim must hold a per user unique, stable and non re-assignable identifier. The availability of claims depends on your Identity Provider. There are common claims available for most Identity providers like \u0026rsquo;email\u0026rsquo; or \u0026lsquo;preferred_user\u0026rsquo; but you can also add your own claim.   PROXY_USER_CS3_CLAIM string username The name of a CS3 user attribute (claim) that should be mapped to the \u0026lsquo;user_oidc_claim\u0026rsquo;. Supported values are \u0026lsquo;username\u0026rsquo;, \u0026lsquo;mail\u0026rsquo; and \u0026lsquo;userid\u0026rsquo;.   OCIS_MACHINE_AUTH_API_KEYPROXY_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary to access resources from other services.   PROXY_AUTOPROVISION_ACCOUNTS bool false Set this to \u0026rsquo;true\u0026rsquo; to automatically provision users that do not yet exist in the users service on-demand upon first sign-in. To use this a write-enabled libregraph user backend needs to be setup an running.   PROXY_ENABLE_BASIC_AUTH bool false Set this to true to enable \u0026lsquo;basic authentication\u0026rsquo; (username/password).   PROXY_INSECURE_BACKENDS bool false Disable TLS certificate validation for all HTTP backend connections.   PROXY_HTTPS_CACERT string  Path/File for the root CA certificate used to validate the server’s TLS certificate for https enabled backend services.   PROXY_POLICIES_QUERY string  Defines the \u0026lsquo;Complete Rules\u0026rsquo; variable defined in the rego rule set this step uses for its evaluation. Rules default to deny if the variable was not found.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDPROXY_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEPROXY_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTPROXY_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORPROXY_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":245,"href":"/services/_includes/search_configvars/","title":"Search Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSEARCH_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESEARCH_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSEARCH_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSEARCH_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSEARCH_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSEARCH_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSEARCH_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESEARCH_LOG_FILE string  The path to the log file. Activates logging to this file if set.   SEARCH_DEBUG_ADDR string 127.0.0.1:9224 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   SEARCH_DEBUG_TOKEN string  Token to secure the metrics endpoint.   SEARCH_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   SEARCH_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   SEARCH_GRPC_ADDR string 127.0.0.1:9220 The bind address of the GRPC service.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   SEARCH_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   SEARCH_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   STORAGE_USERS_OCIS_ASYNC_UPLOADSSEARCH_EVENTS_ASYNC_UPLOADS bool false Enable asynchronous file uploads.   SEARCH_EVENTS_NUM_CONSUMERS int 0 The amount of concurrent event consumers to start. Event consumers are used for searching files. Multiple consumers increase parallelisation, but will also increase CPU and memory demands. The default value is 0.   SEARCH_EVENTS_REINDEX_DEBOUNCE_DURATION int 1000 The duration in milliseconds the reindex debouncer waits before triggering a reindex of a space that was modified.   OCIS_INSECURESEARCH_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   SEARCH_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SEARCH_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSSEARCH_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services.   SEARCH_ENGINE_TYPE string bleve Defines which search engine to use. Defaults to \u0026lsquo;bleve\u0026rsquo;. Supported values are: \u0026lsquo;bleve\u0026rsquo;.   SEARCH_ENGINE_BLEVE_DATA_PATH string ~/.ocis/search The directory where the filesystem will store search data. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/search.   SEARCH_EXTRACTOR_TYPE string basic Defines the content extraction engine. Defaults to \u0026lsquo;basic\u0026rsquo;. Supported values are: \u0026lsquo;basic\u0026rsquo; and \u0026rsquo;tika\u0026rsquo;.   OCIS_INSECURESEARCH_EXTRACTOR_CS3SOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the CS3 source.   SEARCH_EXTRACTOR_TIKA_TIKA_URL string http://127.0.0.1:9998 URL of the tika server.   OCIS_MACHINE_AUTH_API_KEYSEARCH_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary for the access to resources from other services.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSEARCH_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESEARCH_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSEARCH_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSEARCH_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":246,"href":"/services/_includes/settings_configvars/","title":"Settings Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSETTINGS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESETTINGS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSETTINGS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSETTINGS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSETTINGS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSETTINGS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSETTINGS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESETTINGS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   SETTINGS_DEBUG_ADDR string 127.0.0.1:9194 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   SETTINGS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   SETTINGS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   SETTINGS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   SETTINGS_HTTP_ADDR string 127.0.0.1:9190 The bind address of the HTTP service.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   SETTINGS_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   OCIS_CORS_ALLOW_ORIGINSSETTINGS_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSSETTINGS_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSSETTINGS_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSSETTINGS_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   SETTINGS_GRPC_ADDR string 127.0.0.1:9191 The bind address of the GRPC service.   SETTINGS_STORE_TYPE string metadata Store type configures the persistency driver. Supported values are \u0026ldquo;metadata\u0026rdquo; and \u0026ldquo;filesystem\u0026rdquo;.   SETTINGS_DATA_PATH string ~/.ocis/settings The directory where the filesystem storage will store ocis settings. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/settings.   STORAGE_GATEWAY_GRPC_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   STORAGE_GRPC_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   OCIS_SYSTEM_USER_IDSETTINGS_SYSTEM_USER_ID string  ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_IDPSETTINGS_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user.   OCIS_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   SETTINGS_BUNDLES_PATH string  The path to a JSON file with a list of bundles. If not definied, the default bundles will be loaded.   OCIS_ADMIN_USER_IDSETTINGS_ADMIN_USER_ID string  ID of the user that should receive admin privileges. Consider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand.   OCIS_JWT_SECRETSETTINGS_JWT_SECRET string  The secret to mint and validate jwt tokens.   SETTINGS_SETUP_DEFAULT_ASSIGNMENTSIDM_CREATE_DEMO_USERS bool false The default role assignments the demo users should be setup.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSETTINGS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESETTINGS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSETTINGS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSETTINGS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":247,"href":"/services/_includes/sharing_configvars/","title":"Sharing Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSHARING_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESHARING_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSHARING_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSHARING_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSHARING_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSHARING_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSHARING_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESHARING_LOG_FILE string  The path to the log file. Activates logging to this file if set.   SHARING_DEBUG_ADDR string 127.0.0.1:9151 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   SHARING_DEBUG_TOKEN string  Token to secure the metrics endpoint.   SHARING_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   SHARING_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   SHARING_GRPC_ADDR string 127.0.0.1:9150 The bind address of the GRPC service.   SHARING_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETSHARING_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   SHARING_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   SHARING_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECURESHARING_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   SHARING_EVENTS_TLS_ROOT_CA_CERT string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided SHARING_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSSHARING_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   SHARING_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   SHARING_USER_DRIVER string jsoncs3 Driver to be used to persist shares. Supported values are \u0026lsquo;jsoncs3\u0026rsquo;, \u0026lsquo;json\u0026rsquo;, \u0026lsquo;cs3\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;.   SHARING_USER_JSONCS3_PROVIDER_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   OCIS_SYSTEM_USER_IDSHARING_USER_JSONCS3_SYSTEM_USER_ID string  ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_IDPSHARING_USER_JSONCS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user.   OCIS_SYSTEM_USER_API_KEYSHARING_USER_JSONCS3_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   SHARING_USER_JSONCS3_CACHE_TTL int 0 TTL for the internal caches in seconds.   SHARING_USER_JSON_FILE string ~/.ocis/storage/shares.json Path to the JSON file where shares will be persisted. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage.   SHARING_USER_CS3_PROVIDER_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   OCIS_SYSTEM_USER_IDSHARING_USER_CS3_SYSTEM_USER_ID string  ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_IDPSHARING_USER_CS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user.   OCIS_SYSTEM_USER_API_KEYSHARING_USER_CS3_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   SHARING_USER_OWNCLOUDSQL_DB_USERNAME string owncloud Username for the database.   SHARING_USER_OWNCLOUDSQL_DB_PASSWORD string  Password for the database.   SHARING_USER_OWNCLOUDSQL_DB_HOST string mysql Hostname or IP of the database server.   SHARING_USER_OWNCLOUDSQL_DB_PORT int 3306 Port that the database server is listening on.   SHARING_USER_OWNCLOUDSQL_DB_NAME string owncloud Name of the database to be used.   SHARING_USER_OWNCLOUDSQL_USER_STORAGE_MOUNT_ID string  Mount ID of the ownCloudSQL users storage for mapping ownCloud 10 shares.   SHARING_PUBLIC_DRIVER string jsoncs3 Driver to be used to persist public shares. Supported values are \u0026lsquo;jsoncs3\u0026rsquo;, \u0026lsquo;json\u0026rsquo; and \u0026lsquo;cs3\u0026rsquo;.   SHARING_PUBLIC_JSON_FILE string ~/.ocis/storage/publicshares.json Path to the JSON file where public share meta-data will be stored. This JSON file contains the information about public shares that have been created. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage.   SHARING_PUBLIC_JSONCS3_PROVIDER_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   OCIS_SYSTEM_USER_IDSHARING_PUBLIC_JSONCS3_SYSTEM_USER_ID string  ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_IDPSHARING_PUBLIC_JSONCS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user.   OCIS_SYSTEM_USER_API_KEYSHARING_PUBLIC_JSONCS3_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   SHARING_PUBLIC_CS3_PROVIDER_ADDR string 127.0.0.1:9215 GRPC address of the STORAGE-SYSTEM service.   OCIS_SYSTEM_USER_IDSHARING_PUBLIC_CS3_SYSTEM_USER_ID string  ID of the oCIS STORAGE-SYSTEM system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_IDPSHARING_PUBLIC_CS3_SYSTEM_USER_IDP string internal IDP of the oCIS STORAGE-SYSTEM system user.   OCIS_SYSTEM_USER_API_KEYSHARING_PUBLIC_CS3_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORDSHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD bool false Set this to true if you want to enforce passwords on Uploader, Editor or Contributor shares. If not using the global OCIS_SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD, you must define the FRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD in the frontend service.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSHARING_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESHARING_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSHARING_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSHARING_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":248,"href":"/services/_includes/storage-publiclink_configvars/","title":"Storage Publiclink Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_PUBLICLINK_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_PUBLICLINK_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_PUBLICLINK_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_PUBLICLINK_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSTORAGE_PUBLICLINK_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSTORAGE_PUBLICLINK_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSTORAGE_PUBLICLINK_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESTORAGE_PUBLICLINK_LOG_FILE string  The path to the log file. Activates logging to this file if set.   STORAGE_PUBLICLINK_DEBUG_ADDR string 127.0.0.1:9179 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   STORAGE_PUBLICLINK_DEBUG_TOKEN string  Token to secure the metrics endpoint.   STORAGE_PUBLICLINK_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   STORAGE_PUBLICLINK_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   STORAGE_PUBLICLINK_GRPC_ADDR string 127.0.0.1:9178 The bind address of the GRPC service.   STORAGE_PUBLICLINK_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETSTORAGE_PUBLICLINK_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   STORAGE_PUBLICLINK_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   STORAGE_PUBLICLINK_STORAGE_PROVIDER_MOUNT_ID string 7993447f-687f-490d-875c-ac95e89a62a4 Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_PUBLICLINK_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_PUBLICLINK_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_PUBLICLINK_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_PUBLICLINK_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":249,"href":"/services/_includes/storage-shares_configvars/","title":"Storage Shares Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_SHARES_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_SHARES_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_SHARES_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_SHARES_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSTORAGE_SHARES_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSTORAGE_SHARES_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSTORAGE_SHARES_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESTORAGE_SHARES_LOG_FILE string  The path to the log file. Activates logging to this file if set.   STORAGE_SHARES_DEBUG_ADDR string 127.0.0.1:9156 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   STORAGE_SHARES_DEBUG_TOKEN string  Token to secure the metrics endpoint.   STORAGE_SHARES_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   STORAGE_SHARES_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   STORAGE_SHARES_GRPC_ADDR string 127.0.0.1:9154 The bind address of the GRPC service.   STORAGE_SHARES_GRPC_PROTOCOL string tcp The transport protocol of the GRPC service.   OCIS_JWT_SECRETSTORAGE_SHARES_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   STORAGE_SHARES_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   STORAGE_SHARES_MOUNT_ID string 7639e57c-4433-4a12-8201-722fd0009154 Mount ID of this storage. Admins can set the ID for the storage in this config option manually which is then used to reference the storage. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   STORAGE_SHARES_READ_ONLY bool false Set this storage to be read-only.   STORAGE_SHARES_USER_SHARE_PROVIDER_ENDPOINT string localhost:9150 GRPC endpoint of the SHARING service.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_SHARES_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_SHARES_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_SHARES_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_SHARES_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":250,"href":"/services/_includes/storage-system_configvars/","title":"Storage System Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_SYSTEM_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_SYSTEM_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_SYSTEM_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_SYSTEM_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSTORAGE_SYSTEM_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSTORAGE_SYSTEM_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSTORAGE_SYSTEM_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESTORAGE_SYSTEM_LOG_FILE string  The path to the log file. Activates logging to this file if set.   STORAGE_SYSTEM_DEBUG_ADDR string 127.0.0.1:9217 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   STORAGE_SYSTEM_DEBUG_TOKEN string  Token to secure the metrics endpoint   STORAGE_SYSTEM_DEBUG_PPROF bool false Enables pprof, which can be used for profiling   STORAGE_SYSTEM_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   STORAGE_SYSTEM_GRPC_ADDR string 127.0.0.1:9215 The bind address of the GRPC service.   STORAGE_SYSTEM_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service.   STORAGE_SYSTEM_HTTP_ADDR string 127.0.0.1:9216 The bind address of the HTTP service.   STORAGE_SYSTEM_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service.   OCIS_JWT_SECRETSTORAGE_SYSTEM_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   OCIS_SYSTEM_USER_ID string  ID of the oCIS storage-system system user. Admins need to set the ID for the STORAGE-SYSTEM system user in this config option which is then used to reference the user. Any reasonable long string is possible, preferably this would be an UUIDv4 format.   OCIS_SYSTEM_USER_API_KEY string  API key for the STORAGE-SYSTEM system user.   STORAGE_SYSTEM_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   OCIS_CACHE_STORESTORAGE_SYSTEM_CACHE_STOREOCIS_CACHE_STORE_TYPE string memory Store implementation for the cache. Supported values are \u0026lsquo;memory\u0026rsquo; (default), \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo; and \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_CACHE_STORE_NODESSTORAGE_SYSTEM_CACHE_NODESOCIS_CACHE_STORE_ADDRESS []string [] A comma separated list of nodes to access the configured store. This has no effect when the \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   STORAGE_SYSTEM_CACHE_DATABASE string system The database name the configured store should use.   STORAGE_SYSTEM_DRIVER string ocis The driver which should be used by the service.   OCIS_DECOMPOSEDFS_METADATA_BACKENDSTORAGE_SYSTEM_OCIS_METADATA_BACKEND string xattrs The backend to use for storing metadata. Supported values are \u0026lsquo;xattrs\u0026rsquo; and \u0026lsquo;ini\u0026rsquo;. The setting \u0026lsquo;xattrs\u0026rsquo; uses extended attributes to store file metadata while \u0026lsquo;ini\u0026rsquo; uses a dedicated file to store file metadata. Defaults to \u0026lsquo;xattrs\u0026rsquo;.   STORAGE_SYSTEM_OCIS_ROOT string ~/.ocis/storage/metadata Path for the directory where the STORAGE-SYSTEM service stores it\u0026rsquo;s persistent data. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage.   STORAGE_SYSTEM_OCIS_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used.   STORAGE_SYSTEM_OCIS_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used.   STORAGE_SYSTEM_DATA_SERVER_URL string http://localhost:9216/data URL of the data server, needs to be reachable by other services using this service.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_SYSTEM_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_SYSTEM_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_SYSTEM_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_SYSTEM_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":251,"href":"/services/_includes/storage-users_configvars/","title":"Storage Users Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_USERS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_USERS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_USERS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_USERS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSTORAGE_USERS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSTORAGE_USERS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSTORAGE_USERS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESTORAGE_USERS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   STORAGE_USERS_DEBUG_ADDR string 127.0.0.1:9159 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   STORAGE_USERS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   STORAGE_USERS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   STORAGE_USERS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   STORAGE_USERS_GRPC_ADDR string 127.0.0.1:9157 The bind address of the GRPC service.   STORAGE_USERS_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service.   STORAGE_USERS_HTTP_ADDR string 127.0.0.1:9158 The bind address of the HTTP service.   STORAGE_USERS_HTTP_PROTOCOL string tcp The transport protocol of the HTTP service.   OCIS_JWT_SECRETSTORAGE_USERS_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   STORAGE_USERS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   STORAGE_USERS_DRIVER string ocis The storage driver which should be used by the service. Defaults to \u0026lsquo;ocis\u0026rsquo;, Supported values are: \u0026lsquo;ocis\u0026rsquo;, \u0026lsquo;s3ng\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;. The \u0026lsquo;ocis\u0026rsquo; driver stores all data (blob and meta data) in an POSIX compliant volume. The \u0026lsquo;s3ng\u0026rsquo; driver stores metadata in a POSIX compliant volume and uploads blobs to the s3 bucket.   OCIS_DECOMPOSEDFS_METADATA_BACKENDSTORAGE_USERS_OCIS_METADATA_BACKEND string xattrs The backend to use for storing metadata. Supported values are \u0026lsquo;xattrs\u0026rsquo; and \u0026lsquo;ini\u0026rsquo;. The setting \u0026lsquo;xattrs\u0026rsquo; uses extended attributes to store file metadata while \u0026lsquo;ini\u0026rsquo; uses a dedicated file to store file metadata. Defaults to \u0026lsquo;xattrs\u0026rsquo;.   STORAGE_USERS_OCIS_ROOT string ~/.ocis/storage/users The directory where the filesystem storage will store blobs and metadata. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage/users.   STORAGE_USERS_OCIS_USER_LAYOUT string {{.Id.OpaqueId}} Template string for the user storage layout in the user directory.   STORAGE_USERS_PERMISSION_ENDPOINT,STORAGE_USERS_OCIS_PERMISSIONS_ENDPOINT string 127.0.0.1:9191 Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;.   STORAGE_USERS_OCIS_PERSONAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.User.Username | lower}} Template string to construct personal space aliases.   STORAGE_USERS_OCIS_GENERAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.SpaceName | replace \u0026quot; \u0026quot; \u0026quot;-\u0026quot; | lower}} Template string to construct general space aliases.   STORAGE_USERS_OCIS_SHARE_FOLDER string /Shares Name of the folder jailing all shares.   STORAGE_USERS_OCIS_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used.   STORAGE_USERS_OCIS_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used.   STORAGE_USERS_OCIS_ASYNC_UPLOADS bool false Enable asynchronous file uploads.   OCIS_SPACES_MAX_QUOTASTORAGE_USERS_OCIS_MAX_QUOTA uint64 0 Set a global max quota for spaces in bytes. A value of 0 equals unlimited. If not using the global OCIS_SPACES_MAX_QUOTA, you must define the FRONTEND_MAX_QUOTA in the frontend service.   STORAGE_USERS_S3NG_METADATA_BACKEND string xattrs The backend to use for storing metadata. Supported values are \u0026lsquo;xattrs\u0026rsquo; and \u0026lsquo;ini\u0026rsquo;. The setting \u0026lsquo;xattrs\u0026rsquo; uses extended attributes to store file metadata while \u0026lsquo;ini\u0026rsquo; uses a dedicated file to store file metadata. Defaults to \u0026lsquo;xattrs\u0026rsquo;.   STORAGE_USERS_S3NG_ROOT string ~/.ocis/storage/users The directory where the filesystem storage will store metadata for blobs. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage/users.   STORAGE_USERS_S3NG_USER_LAYOUT string {{.Id.OpaqueId}} Template string for the user storage layout in the user directory.   STORAGE_USERS_PERMISSION_ENDPOINTSTORAGE_USERS_S3NG_PERMISSIONS_ENDPOINT string 127.0.0.1:9191 Endpoint of the permissions service. The endpoints can differ for \u0026lsquo;ocis\u0026rsquo; and \u0026lsquo;s3ng\u0026rsquo;.   STORAGE_USERS_S3NG_REGION string default Region of the S3 bucket.   STORAGE_USERS_S3NG_ACCESS_KEY string  Access key for the S3 bucket.   STORAGE_USERS_S3NG_SECRET_KEY string  Secret key for the S3 bucket.   STORAGE_USERS_S3NG_ENDPOINT string  Endpoint for the S3 bucket.   STORAGE_USERS_S3NG_BUCKET string  Name of the S3 bucket.   STORAGE_USERS_S3NG_PERSONAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.User.Username | lower}} Template string to construct personal space aliases.   STORAGE_USERS_S3NG_GENERAL_SPACE_ALIAS_TEMPLATE string {{.SpaceType}}/{{.SpaceName | replace \u0026quot; \u0026quot; \u0026quot;-\u0026quot; | lower}} Template string to construct general space aliases.   STORAGE_USERS_S3NG_SHARE_FOLDER string /Shares Name of the folder jailing all shares.   STORAGE_USERS_S3NG_MAX_ACQUIRE_LOCK_CYCLES int 20 When trying to lock files, ocis will try this amount of times to acquire the lock before failing. After each try it will wait for an increasing amount of time. Values of 0 or below will be ignored and the default value of 20 will be used.   STORAGE_USERS_S3NG_LOCK_CYCLE_DURATION_FACTOR int 30 When trying to lock files, ocis will multiply the cycle with this factor and use it as a millisecond timeout. Values of 0 or below will be ignored and the default value of 30 will be used.   STORAGE_USERS_OWNCLOUDSQL_DATADIR string ~/.ocis/storage/owncloud The directory where the filesystem storage will store SQL migration data. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage/owncloud.   STORAGE_USERS_OWNCLOUDSQL_SHARE_FOLDER string /Shares Name of the folder jailing all shares.   STORAGE_USERS_OWNCLOUDSQL_LAYOUT string {{.Username}} Path layout to use to navigate into a users folder in an owncloud data directory   STORAGE_USERS_OWNCLOUDSQL_UPLOADINFO_DIR string ~/.ocis/storage/uploadinfo The directory where the filesystem will store uploads temporarily. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/storage/uploadinfo.   STORAGE_USERS_OWNCLOUDSQL_DB_USERNAME string owncloud Username for the database.   STORAGE_USERS_OWNCLOUDSQL_DB_PASSWORD string owncloud Password for the database.   STORAGE_USERS_OWNCLOUDSQL_DB_HOST string  Hostname or IP of the database server.   STORAGE_USERS_OWNCLOUDSQL_DB_PORT int 3306 Port that the database server is listening on.   STORAGE_USERS_OWNCLOUDSQL_DB_NAME string owncloud Name of the database to be used.   STORAGE_USERS_OWNCLOUDSQL_USERS_PROVIDER_ENDPOINT string localhost:9144 Endpoint of the users provider.   STORAGE_USERS_DATA_SERVER_URL string http://localhost:9158/data URL of the data server, needs to be reachable by the data gateway provided by the frontend service or the user if directly exposed.   STORAGE_USERS_DATA_GATEWAY_URL string https://localhost:9200/data URL of the data gateway server   STORAGE_USERS_TRANSFER_EXPIRES int64 86400 the time after which the token for upload postprocessing expires   STORAGE_USERS_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   STORAGE_USERS_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECURESTORAGE_USERS_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   STORAGE_USERS_EVENTS_TLS_ROOT_CA_CERT string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided STORAGE_USERS_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSSTORAGE_USERS_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   STORAGE_USERS_EVENTS_NUM_CONSUMERS int 0 The amount of concurrent event consumers to start. Event consumers are used for post-processing files. Multiple consumers increase parallelisation, but will also increase CPU and memory demands. The setting has no effect when the STORAGE_USERS_OCIS_ASYNC_UPLOADS is set to false. The default and minimum value is 1.   OCIS_CACHE_STORESTORAGE_USERS_CACHE_STORESTORAGE_USERS_CACHE_STORE_TYPE string memory Store implementation for the cache. Supported values are \u0026lsquo;memory\u0026rsquo; (default), \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, and \u0026rsquo;etcd\u0026rsquo;. See the text description for details.   OCIS_CACHE_STORE_NODESSTORAGE_USERS_CACHE_STORE_NODESOCIS_CACHE_STORE_ADDRESSSTORAGE_USERS_CACHE_STORE_ADDRESSSTORAGE_USERS_CACHE_NODES []string [] A comma separated list of nodes to access the configured store. This has no effect when the \u0026lsquo;memory\u0026rsquo; store is configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   STORAGE_USERS_CACHE_DATABASE string users The database name the configured store should use.   STORAGE_USERS_MOUNT_ID string  Mount ID of this storage.   STORAGE_USERS_EXPOSE_DATA_SERVER bool false Exposes the data server directly to users and bypasses the data gateway. Ensure that the data server address is reachable by users.   STORAGE_USERS_READ_ONLY bool false Set this storage to be read-only.   STORAGE_USERS_UPLOAD_EXPIRATION int64 86400 Duration in seconds after which uploads will expire.   OCIS_ADMIN_USER_IDSTORAGE_USERS_PURGE_TRASH_BIN_USER_ID string  ID of the user who collects all necessary information for deletion.   STORAGE_USERS_PURGE_TRASH_BIN_PERSONAL_DELETE_BEFORE Duration 720h0m0s Specifies the period of time in which items that have been in the personal trash-bin for longer than this value should be deleted. A value of 0 means no automatic deletion. The value is human-readable, valid values are \u0026lsquo;24h\u0026rsquo;, \u0026lsquo;60m\u0026rsquo;, \u0026rsquo;60s\u0026rsquo; etc.   STORAGE_USERS_PURGE_TRASH_BIN_PROJECT_DELETE_BEFORE Duration 720h0m0s Specifies the period of time in which items that have been in the project trash-bin for longer than this value should be deleted. A value of 0 means no automatic deletion. The value is human-readable, valid values are \u0026lsquo;24h\u0026rsquo;, \u0026lsquo;60m\u0026rsquo;, \u0026rsquo;60s\u0026rsquo; etc.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORAGE_USERS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORAGE_USERS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORAGE_USERS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORAGE_USERS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":252,"href":"/services/_includes/store_configvars/","title":"Store Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORE_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORE_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORE_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORE_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELSTORE_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYSTORE_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORSTORE_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILESTORE_LOG_FILE string  The path to the log file. Activates logging to this file if set.   STORE_DEBUG_ADDR string 127.0.0.1:9464 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   STORE_DEBUG_TOKEN string  Token to secure the metrics endpoint.   STORE_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   STORE_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   STORE_GRPC_ADDR string 127.0.0.1:9460 The bind address of the GRPC service.   STORE_DATA_PATH string ~/.ocis/store The directory where the filesystem storage will store ocis settings. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/store.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDSTORE_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPESTORE_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTSTORE_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORSTORE_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":253,"href":"/services/_includes/thumbnails_configvars/","title":"Thumbnails Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDTHUMBNAILS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPETHUMBNAILS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTTHUMBNAILS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORTHUMBNAILS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELTHUMBNAILS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYTHUMBNAILS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORTHUMBNAILS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILETHUMBNAILS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   THUMBNAILS_DEBUG_ADDR string 127.0.0.1:9189 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   THUMBNAILS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   THUMBNAILS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   THUMBNAILS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   THUMBNAILS_GRPC_ADDR string 127.0.0.1:9185 The bind address of the GRPC service.   THUMBNAILS_HTTP_ADDR string 127.0.0.1:9186 The bind address of the HTTP service.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   THUMBNAILS_HTTP_ROOT string /thumbnails Subdirectory that serves as the root for this HTTP service.   THUMBNAILS_RESOLUTIONS []string [16x16 32x32 64x64 128x128 1080x1920 1920x1080 2160x3840 3840x2160 4320x7680 7680x4320] The supported target resolutions in the format WidthxHeight e.g. 32x32. You can define any resolution as required and separate multiple resolutions by blank or comma.   THUMBNAILS_FILESYSTEMSTORAGE_ROOT string ~/.ocis/thumbnails The directory where the filesystem storage will store the thumbnails. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/thumbnails.   OCIS_INSECURETHUMBNAILS_WEBDAVSOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the webdav source.   OCIS_INSECURETHUMBNAILS_CS3SOURCE_INSECURE bool false Ignore untrusted SSL certificates when connecting to the CS3 source.   REVA_GATEWAY string 127.0.0.1:9142 CS3 gateway used to look up user metadata   THUMBNAILS_TXT_FONTMAP_FILE string  The path to a font file for txt thumbnails.   THUMBNAILS_TRANSFER_TOKEN string  The secret to sign JWT to download the actual thumbnail file.   THUMBNAILS_DATA_ENDPOINT string http://127.0.0.1:9186/thumbnails/data The HTTP endpoint where the actual thumbnail file can be downloaded.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDTHUMBNAILS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPETHUMBNAILS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTTHUMBNAILS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORTHUMBNAILS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":254,"href":"/services/_includes/userlog_configvars/","title":"Userlog Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELUSERLOG_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYUSERLOG_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORUSERLOG_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEUSERLOG_LOG_FILE string  The path to the log file. Activates logging to this file if set.   USERLOG_DEBUG_ADDR string  Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   USERLOG_DEBUG_TOKEN string  Token to secure the metrics endpoint.   USERLOG_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   USERLOG_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   USERLOG_HTTP_ADDR string 127.0.0.1:0 The bind address of the HTTP service.   USERLOG_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   OCIS_CORS_ALLOW_ORIGINSUSERLOG_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSUSERLOG_CORS_ALLOW_METHODS []string [GET] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSUSERLOG_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSUSERLOG_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   OCIS_JWT_SECRETUSERLOG_JWT_SECRET string  The secret to mint and validate jwt tokens.   OCIS_MACHINE_AUTH_API_KEYUSERLOG_MACHINE_AUTH_API_KEY string  Machine auth API key used to validate internal requests necessary to access resources from other services.   REVA_GATEWAY string 127.0.0.1:9142 CS3 gateway used to look up user metadata   USERLOG_TRANSLATION_PATH string  (optional) Set this to a path with custom translations to overwrite the builtin translations. See the documentation for more details.   USERLOG_EVENTS_ENDPOINT string 127.0.0.1:9233 The address of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture.   USERLOG_EVENTS_CLUSTER string ocis-cluster The clusterID of the event system. The event system is the message queuing service. It is used as message broker for the microservice architecture. Mandatory when using NATS as event system.   OCIS_INSECUREUSERLOG_EVENTS_TLS_INSECURE bool false Whether to verify the server TLS certificates.   USERLOG_EVENTS_TLS_ROOT_CA_CERTIFICATE string  The root CA certificate used to validate the server\u0026rsquo;s TLS certificate. If provided NOTIFICATIONS_EVENTS_TLS_INSECURE will be seen as false.   OCIS_EVENTS_ENABLE_TLSUSERLOG_EVENTS_ENABLE_TLS bool false Enable TLS for the connection to the events broker. The events broker is the ocis service which receives and delivers events between the services..   OCIS_PERSISTENT_STOREUSERLOG_STOREUSERLOG_STORE_TYPE string memory The type of the userlog store. Supported values are: \u0026lsquo;memory\u0026rsquo;, \u0026lsquo;ocmem\u0026rsquo;, \u0026rsquo;etcd\u0026rsquo;, \u0026lsquo;redis\u0026rsquo;, \u0026lsquo;redis-sentinel\u0026rsquo;, \u0026rsquo;nats-js\u0026rsquo;, \u0026rsquo;noop\u0026rsquo;. See the text description for details.   OCIS_PERSISTENT_STORE_NODESUSERLOG_STORE_ADDRESSES []string [] A comma separated list of nodes to access the configured store. This has no effect when \u0026lsquo;in-memory\u0026rsquo; stores are configured. Note that the behaviour how nodes are used is dependent on the library of the configured store.   USERLOG_STORE_DATABASE string userlog The database name the configured store should use.   USERLOG_STORE_TABLE string events The database table the store should use.   OCIS_PERSISTENT_STORE_TTLUSERLOG_STORE_TTL Duration 336h0m0s Time to live for events in the store. The duration can be set as number followed by a unit identifier like s, m or h. Defaults to \u0026lsquo;336h\u0026rsquo; (2 weeks).   OCIS_PERSISTENT_STORE_SIZEUSERLOG_STORE_SIZE int 0 The maximum quantity of items in the store. Only applies when store type \u0026lsquo;ocmem\u0026rsquo; is configured. Defaults to 512.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_LOG_LEVELUSERLOG_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYUSERLOG_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORUSERLOG_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEUSERLOG_LOG_FILE string  The path to the log file. Activates logging to this file if set.   USERLOG_DEBUG_ADDR string  Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed."},{"id":255,"href":"/services/_includes/users_configvars/","title":"Users Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDUSERS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEUSERS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTUSERS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORUSERS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELUSERS_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYUSERS_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORUSERS_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEUSERS_LOG_FILE string  The path to the log file. Activates logging to this file if set.   USERS_DEBUG_ADDR string 127.0.0.1:9145 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   USERS_DEBUG_TOKEN string  Token to secure the metrics endpoint.   USERS_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   USERS_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   USERS_GRPC_ADDR string 127.0.0.1:9144 The bind address of the GRPC service.   USERS_GRPC_PROTOCOL string tcp The transport protocol of the GPRC service.   OCIS_JWT_SECRETUSERS_JWT_SECRET string  The secret to mint and validate jwt tokens.   REVA_GATEWAY string 127.0.0.1:9142 The CS3 gateway endpoint.   OCIS_GRPC_CLIENT_TLS_MODE string  TLS mode for grpc connection to the go-micro based grpc services. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   OCIS_GRPC_CLIENT_TLS_CACERT string  Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the go-micro based grpc services.   USERS_SKIP_USER_GROUPS_IN_TOKEN bool false Disables the loading of user\u0026rsquo;s group memberships from the reva access token.   USERS_DRIVER string ldap The driver which should be used by the users service. Supported values are \u0026rsquo;ldap\u0026rsquo; and \u0026lsquo;owncloudsql\u0026rsquo;.   LDAP_URIUSERS_LDAP_URI string ldaps://localhost:9235 URI of the LDAP Server to connect to. Supported URI schemes are \u0026rsquo;ldaps://\u0026rsquo; and \u0026rsquo;ldap://\u0026rsquo;   LDAP_CACERTUSERS_LDAP_CACERT string ~/.ocis/idm/ldap.crt Path/File name for the root CA certificate (in PEM format) used to validate TLS server certificates of the LDAP service. If not definied, the root directory derives from $OCIS_BASE_DATA_PATH:/idm.   LDAP_INSECUREUSERS_LDAP_INSECURE bool false Disable TLS certificate validation for the LDAP connections. Do not set this in production environments.   LDAP_BIND_DNUSERS_LDAP_BIND_DN string uid=reva,ou=sysusers,o=libregraph-idm LDAP DN to use for simple bind authentication with the target LDAP server.   LDAP_BIND_PASSWORDUSERS_LDAP_BIND_PASSWORD string  Password to use for authenticating the \u0026lsquo;bind_dn\u0026rsquo;.   LDAP_USER_BASE_DNUSERS_LDAP_USER_BASE_DN string ou=users,o=libregraph-idm Search base DN for looking up LDAP users.   LDAP_GROUP_BASE_DNUSERS_LDAP_GROUP_BASE_DN string ou=groups,o=libregraph-idm Search base DN for looking up LDAP groups.   LDAP_USER_SCOPEUSERS_LDAP_USER_SCOPE string sub LDAP search scope to use when looking up users. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_GROUP_SCOPEUSERS_LDAP_GROUP_SCOPE string sub LDAP search scope to use when looking up groups. Supported values are \u0026lsquo;base\u0026rsquo;, \u0026lsquo;one\u0026rsquo; and \u0026lsquo;sub\u0026rsquo;.   LDAP_USER_SUBSTRING_FILTER_TYPEUSERS_LDAP_USER_SUBSTRING_FILTER_TYPE string any Type of substring search filter to use for substring searches for users. Possible values: \u0026lsquo;initial\u0026rsquo; for doing prefix only searches, \u0026lsquo;final\u0026rsquo; for doing suffix only searches or \u0026lsquo;any\u0026rsquo; for doing full substring searches   LDAP_USER_FILTERUSERS_LDAP_USER_FILTER string  LDAP filter to add to the default filters for user search like \u0026lsquo;(objectclass=ownCloud)\u0026rsquo;.   LDAP_GROUP_FILTERUSERS_LDAP_GROUP_FILTER string  LDAP filter to add to the default filters for group searches.   LDAP_USER_OBJECTCLASSUSERS_LDAP_USER_OBJECTCLASS string inetOrgPerson The object class to use for users in the default user search filter like \u0026lsquo;inetOrgPerson\u0026rsquo;.   LDAP_GROUP_OBJECTCLASSUSERS_LDAP_GROUP_OBJECTCLASS string groupOfNames The object class to use for groups in the default group search filter like \u0026lsquo;groupOfNames\u0026rsquo;.   OCIS_URLOCIS_OIDC_ISSUERUSERS_IDP_URL string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider.   LDAP_DISABLE_USER_MECHANISMUSERS_LDAP_DISABLE_USER_MECHANISM string none An option to control the behavior for disabling users. Valid options are \u0026rsquo;none\u0026rsquo;, \u0026lsquo;attribute\u0026rsquo; and \u0026lsquo;group\u0026rsquo;. If set to \u0026lsquo;group\u0026rsquo;, disabling a user via API will add the user to the configured group for disabled users, if set to \u0026lsquo;attribute\u0026rsquo; this will be done in the ldap user entry, if set to \u0026rsquo;none\u0026rsquo; the disable request is not processed.   LDAP_DISABLED_USERS_GROUP_DNUSERS_LDAP_DISABLED_USERS_GROUP_DN string cn=DisabledUsersGroup,ou=groups,o=libregraph-idm The distinguished name of the group to which added users will be classified as disabled when \u0026lsquo;disable_user_mechanism\u0026rsquo; is set to \u0026lsquo;group\u0026rsquo;.   LDAP_USER_SCHEMA_IDUSERS_LDAP_USER_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique id for users. This should be a stable globally unique id like a UUID.   LDAP_USER_SCHEMA_ID_IS_OCTETSTRINGUSERS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for users is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the user ID\u0026rsquo;s.   LDAP_USER_SCHEMA_MAILUSERS_LDAP_USER_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of users.   LDAP_USER_SCHEMA_DISPLAYNAMEUSERS_LDAP_USER_SCHEMA_DISPLAYNAME string displayname LDAP Attribute to use for the displayname of users.   LDAP_USER_SCHEMA_USERNAMEUSERS_LDAP_USER_SCHEMA_USERNAME string uid LDAP Attribute to use for username of users.   LDAP_USER_ENABLED_ATTRIBUTEUSERS_LDAP_USER_ENABLED_ATTRIBUTE string ownCloudUserEnabled LDAP attribute to use as a flag telling if the user is enabled or disabled.   LDAP_GROUP_SCHEMA_IDUSERS_LDAP_GROUP_SCHEMA_ID string ownclouduuid LDAP Attribute to use as the unique ID for groups. This should be a stable globally unique ID like a UUID.   LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRINGUSERS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING bool false Set this to true if the defined \u0026lsquo;id\u0026rsquo; attribute for groups is of the \u0026lsquo;OCTETSTRING\u0026rsquo; syntax. This is e.g. required when using the \u0026lsquo;objectGUID\u0026rsquo; attribute of Active Directory for the group ID\u0026rsquo;s.   LDAP_GROUP_SCHEMA_MAILUSERS_LDAP_GROUP_SCHEMA_MAIL string mail LDAP Attribute to use for the email address of groups (can be empty).   LDAP_GROUP_SCHEMA_DISPLAYNAMEUSERS_LDAP_GROUP_SCHEMA_DISPLAYNAME string cn LDAP Attribute to use for the displayname of groups (often the same as groupname attribute).   LDAP_GROUP_SCHEMA_GROUPNAMEUSERS_LDAP_GROUP_SCHEMA_GROUPNAME string cn LDAP Attribute to use for the name of groups.   LDAP_GROUP_SCHEMA_MEMBERUSERS_LDAP_GROUP_SCHEMA_MEMBER string member LDAP Attribute that is used for group members.   USERS_OWNCLOUDSQL_DB_USERNAME string owncloud Database user to use for authenticating with the owncloud database.   USERS_OWNCLOUDSQL_DB_PASSWORD string secret Password for the database user.   USERS_OWNCLOUDSQL_DB_HOST string mysql Hostname of the database server.   USERS_OWNCLOUDSQL_DB_PORT int 3306 Network port to use for the database connection.   USERS_OWNCLOUDSQL_DB_NAME string owncloud Name of the owncloud database.   USERS_OWNCLOUDSQL_IDP string https://localhost:9200 The identity provider value to set in the userids of the CS3 user objects for users returned by this user provider.   USERS_OWNCLOUDSQL_NOBODY int64 90 Fallback number if no numeric UID and GID properties are provided.   USERS_OWNCLOUDSQL_JOIN_USERNAME bool false Join the user properties table to read usernames   USERS_OWNCLOUDSQL_JOIN_OWNCLOUD_UUID bool false Join the user properties table to read user IDs.   USERS_OWNCLOUDSQL_ENABLE_MEDIAL_SEARCH bool false Allow \u0026lsquo;medial search\u0026rsquo; when searching for users instead of just doing a prefix search. This allows finding \u0026lsquo;Alice\u0026rsquo; when searching for \u0026rsquo;lic\u0026rsquo;.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDUSERS_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEUSERS_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTUSERS_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORUSERS_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":256,"href":"/services/_includes/web_configvars/","title":"Web Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDWEB_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEWEB_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTWEB_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORWEB_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELWEB_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYWEB_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORWEB_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEWEB_LOG_FILE string  The path to the log file. Activates logging to this file if set.   WEB_DEBUG_ADDR string 127.0.0.1:9104 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   WEB_DEBUG_TOKEN string  Token to secure the metrics endpoint.   WEB_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   WEB_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   WEB_HTTP_ADDR string 127.0.0.1:9100 The bind address of the HTTP service.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   WEB_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   WEB_CACHE_TTL int 604800 Cache policy in seconds for ownCloud Web assets.   WEB_ASSET_PATH string ~/.ocis/web/assets Serve ownCloud Web assets from a path on the filesystem instead of the builtin assets.   WEB_UI_CONFIG string  Read the ownCloud Web configuration from this file.   WEB_UI_PATH string  Read the ownCloud Web configuration from this file path.   OCIS_URLWEB_UI_THEME_SERVER string https://localhost:9200 URL to load themes from. Will be prepended to the theme path.   WEB_UI_THEME_PATH string /themes/owncloud/theme.json URL path to load themes from. The theme server will be prepended.   OCIS_URLWEB_UI_CONFIG_SERVER string https://localhost:9200 URL, where the oCIS APIs are reachable for ownCloud Web.   WEB_OIDC_METADATA_URL string https://localhost:9200/.well-known/openid-configuration URL for the OIDC well-known configuration endpoint. Defaults to the oCIS API URL + \u0026ldquo;/.well-known/openid-configuration\u0026rdquo;.   OCIS_URLOCIS_OIDC_ISSUERWEB_OIDC_AUTHORITY string https://localhost:9200 URL of the OIDC issuer. It defaults to URL of the builtin IDP.   WEB_OIDC_CLIENT_ID string web OIDC client ID, which ownCloud Web uses. This client needs to be set up in your IDP.   WEB_OIDC_RESPONSE_TYPE string code OIDC response type to use for authentication.   WEB_OIDC_SCOPE string openid profile email OIDC scopes to request during authentication to authorize access to user details. Defaults to \u0026lsquo;openid profile email\u0026rsquo;. Values are separated by blank. More example values but not limited to are \u0026lsquo;address\u0026rsquo; or \u0026lsquo;phone\u0026rsquo; etc.   OCIS_JWT_SECRETWEB_JWT_SECRET string  The secret to mint and validate jwt tokens.   WEB_GATEWAY_GRPC_ADDR string 127.0.0.1:9142 The bind address of the GRPC service.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDWEB_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEWEB_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTWEB_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORWEB_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":257,"href":"/services/_includes/webdav_configvars/","title":"Webdav Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDWEBDAV_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEWEBDAV_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTWEBDAV_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORWEBDAV_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELWEBDAV_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYWEBDAV_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORWEBDAV_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEWEBDAV_LOG_FILE string  The path to the log file. Activates logging to this file if set.   WEBDAV_DEBUG_ADDR string 127.0.0.1:9119 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   WEBDAV_DEBUG_TOKEN string  Token to secure the metrics endpoint.   WEBDAV_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   WEBDAV_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   WEBDAV_HTTP_ADDR string 127.0.0.1:9115 The bind address of the HTTP service.   WEBDAV_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   OCIS_CORS_ALLOW_ORIGINSWEBDAV_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSWEBDAV_CORS_ALLOW_METHODS []string [GET POST PUT PATCH DELETE OPTIONS] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSWEBDAV_CORS_ALLOW_HEADERS []string [Authorization Origin Content-Type Accept X-Requested-With] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSWEBDAV_CORS_ALLOW_CREDENTIALS bool true Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   OCIS_URLOCIS_PUBLIC_URL string https://127.0.0.1:9200 URL, where oCIS is reachable for users.   WEBDAV_WEBDAV_NAMESPACE string /users/{{.Id.OpaqueId}} CS3 path layout to use when forwarding /webdav requests   REVA_GATEWAY string 127.0.0.1:9142 CS3 gateway used to look up user metadata   REVA_GATEWAY_TLS_MODE string  TLS mode for grpc connection to the CS3 gateway endpoint. Possible values are \u0026lsquo;off\u0026rsquo;, \u0026lsquo;insecure\u0026rsquo; and \u0026lsquo;on\u0026rsquo;. \u0026lsquo;off\u0026rsquo;: disables transport security for the clients. \u0026lsquo;insecure\u0026rsquo; allows to use transport security, but disables certificate verification (to be used with the autogenerated self-signed certificates). \u0026lsquo;on\u0026rsquo; enables transport security, including server ceritificate verification.   REVA_GATEWAY_TLS_CACERT string  The root CA certificate used to validate the gateway\u0026rsquo;s TLS certificate.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDWEBDAV_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEWEBDAV_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTWEBDAV_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORWEBDAV_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":258,"href":"/services/_includes/webfinger_configvars/","title":"Webfinger Configvars","parent":"Includes","content":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDWEBFINGER_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEWEBFINGER_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTWEBFINGER_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORWEBFINGER_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector:14268/api/traces. Only used if the tracing endpoint is unset.   OCIS_LOG_LEVELWEBFINGER_LOG_LEVEL string  The log level. Valid values are: \u0026ldquo;panic\u0026rdquo;, \u0026ldquo;fatal\u0026rdquo;, \u0026ldquo;error\u0026rdquo;, \u0026ldquo;warn\u0026rdquo;, \u0026ldquo;info\u0026rdquo;, \u0026ldquo;debug\u0026rdquo;, \u0026ldquo;trace\u0026rdquo;.   OCIS_LOG_PRETTYWEBFINGER_LOG_PRETTY bool false Activates pretty log output.   OCIS_LOG_COLORWEBFINGER_LOG_COLOR bool false Activates colorized log output.   OCIS_LOG_FILEWEBFINGER_LOG_FILE string  The path to the log file. Activates logging to this file if set.   WEBFINGER_DEBUG_ADDR string 127.0.0.1:0 Bind address of the debug server, where metrics, health, config and debug endpoints will be exposed.   WEBFINGER_DEBUG_TOKEN string  Token to secure the metrics endpoint.   WEBFINGER_DEBUG_PPROF bool false Enables pprof, which can be used for profiling.   WEBFINGER_DEBUG_ZPAGES bool false Enables zpages, which can be used for collecting and viewing in-memory traces.   WEBFINGER_HTTP_ADDR string 127.0.0.1:0 The bind address of the HTTP service.   WEBFINGER_HTTP_ROOT string / Subdirectory that serves as the root for this HTTP service.   OCIS_CORS_ALLOW_ORIGINSWEBFINGER_CORS_ALLOW_ORIGINS []string [*] A comma-separated list of allowed CORS origins. See following chapter for more details: Access-Control-Allow-Origin at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin   OCIS_CORS_ALLOW_METHODSWEBFINGER_CORS_ALLOW_METHODS []string [] A comma-separated list of allowed CORS methods. See following chapter for more details: Access-Control-Request-Method at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method   OCIS_CORS_ALLOW_HEADERSWEBFINGER_CORS_ALLOW_HEADERS []string [] A comma-separated list of allowed CORS headers. See following chapter for more details: Access-Control-Request-Headers at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers.   OCIS_CORS_ALLOW_CREDENTIALSWEBFINGER_CORS_ALLOW_CREDENTIALS bool false Allow credentials for CORS.See following chapter for more details: Access-Control-Allow-Credentials at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials.   OCIS_HTTP_TLS_ENABLED bool false Activates TLS for the http based services using the server certifcate and key configured via OCIS_HTTP_TLS_CERTIFICATE and OCIS_HTTP_TLS_KEY. If OCIS_HTTP_TLS_CERTIFICATE is not set a temporary server certificate is generated - to be used with PROXY_INSECURE_BACKEND=true.   OCIS_HTTP_TLS_CERTIFICATE string  Path/File name of the TLS server certificate (in PEM format) for the http services.   OCIS_HTTP_TLS_KEY string  Path/File name for the TLS certificate key (in PEM format) for the server certificate to use for the http services.   WEBFINGER_RELATIONS []string [http://openid.net/specs/connect/1.0/issuer http://webfinger.owncloud/rel/server-instance] A comma-separated list of relation URIs or registered relation types to add to webfinger responses.   OCIS_URLOCIS_OIDC_ISSUERWEBFINGER_OIDC_ISSUER string  The identity provider href for the openid-discovery relation.   OCIS_URLWEBFINGER_OWNCLOUD_SERVER_INSTANCE_URL string https://localhost:9200 The URL for the legacy ownCloud server instance relation (not to be confused with the product ownCloud Server). It defaults to the OCIS_URL but can be overridden to support some reverse proxy corner cases. To shard the deployment, multiple instances can be configured in the configuration file.    ","description":"Environment Variables        Name Type Default Value Description     OCIS_TRACING_ENABLEDWEBFINGER_TRACING_ENABLED bool false Activates tracing.   OCIS_TRACING_TYPEWEBFINGER_TRACING_TYPE string  The type of tracing. Defaults to \u0026ldquo;\u0026rdquo;, which is the same as \u0026ldquo;jaeger\u0026rdquo;. Allowed tracing types are \u0026ldquo;jaeger\u0026rdquo; and \u0026quot;\u0026quot; as of now.   OCIS_TRACING_ENDPOINTWEBFINGER_TRACING_ENDPOINT string  The endpoint of the tracing agent.   OCIS_TRACING_COLLECTORWEBFINGER_TRACING_COLLECTOR string  The HTTP endpoint for sending spans directly to a collector, i."},{"id":259,"href":"/categories/","title":"Categories","parent":"ownCloud","content":"","description":""},{"id":260,"href":"/apis/grpc_apis/","title":"gRPC","parent":"APIs","content":"    Remote Procedure Calls     gRPC is a modern open source high performance Remote Procedure Call (RPC) framework that can run in any environment. It can efficiently connect services in and across data centers with pluggable support for load balancing, tracing, health checking and authentication. It is also applicable in last mile of distributed computing to connect devices, mobile applications and browsers to backend services.\nAdvantages of gRPC       Performance     gRPC uses http/2 by default and is faster than REST. When using protocol buffers for encoding, the information comes on and off the wire much faster than JSON. Latency is an important factor in distributed systems. JSON encoding creates a noticeable factor of latency. For distributed systems and high data loads, gRPC can actually make an important difference. Other than that, gRPC supports multiple calls via the same channel and the connections are bidirectional. A single connection can transmit requests and responses at the same time. gRPC keeps connections open to reuse the same connection again which prevents latency and saves bandwidth.  Robustness     gRPC empowers better relationships between clients and servers. The rules of communication are strictly enforced. That is not the case in REST calls, where the client and the server can send and receive anything they like and hopefully the other end understands what to do with it. In gRPC, to make changes to the communication, both client and server need to change accordingly. This prevents mistakes specially in microservice architectures.   Debuggability     gRPC requests are re-using the same context and can be tracked or traced across multiple service boundaries. This helps to identify slow calls and see what is causing delays. It is possible to cancel requests which cancels them on all involved services.  Microservices     gRPC has been evolving and has become the best option for communication between microservices because of its unmatched performance and its polyglot nature. One of the biggest strengths of microservices is the freedom of programming languages and technologies. By using gRPC we can leverage all the advantages of strictly enforced communication standards combined with freedom of choice between different programming languages - whichever would fit best.    http/2 protocol buffers reusable connections multi language support    CS3 APIs      The CS3 APIs connect storages and application providers.\nThe CS3 APIs follow Google and Uber API design guidelines, specially on error handling and naming convention. You can read more about these guidelines at https://cloud.google.com/apis/design/ and https://github.com/uber/prototool/blob/dev/style/README.md.\nThe CS3 APIs use Protocol Buffers version 3 (proto3) as their Interface Definition Language (IDL) to define the API interface and the structure of the payload messages.\n","description":"Remote Procedure Calls     gRPC is a modern open source high performance Remote Procedure Call (RPC) framework that can run in any environment. It can efficiently connect services in and across data centers with pluggable support for load balancing, tracing, health checking and authentication. It is also applicable in last mile of distributed computing to connect devices, mobile applications and browsers to backend services."},{"id":261,"href":"/tags/","title":"Tags","parent":"ownCloud","content":"","description":""}]