<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unit Testing on ownCloud</title>
    <link>https://owncloud.dev/ocis/development/unit-testing/</link>
    <description>Recent content in Unit Testing on ownCloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://owncloud.dev/ocis/development/unit-testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Standard Library Testing</title>
      <link>https://owncloud.dev/ocis/development/unit-testing/testing-pkg/</link>
      <pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/ocis/development/unit-testing/testing-pkg/</guid>
      <description>Using the standard library To write a unit test for your package, create a file with the _test.go suffix. For example, if you have a package foo with a file foo.go, you can create a file foo_test.go in the same directory. The test file should have the same package name as the package being tested. By doing this, you can access all exported and unexported identifiers of the package. It is a good practice to keep the test file in the same package as the code being tested.</description>
    </item>
    
    <item>
      <title>Testing with Ginkgo</title>
      <link>https://owncloud.dev/ocis/development/unit-testing/testing-ginkgo/</link>
      <pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/ocis/development/unit-testing/testing-ginkgo/</guid>
      <description>Prerequisites Getting Started Bootstrap Adding Specs to the Suite Writing Specs Describe Context It Expect BeforeEach Focused Specs Pending Specs Test Driven Development Mocking In this section we try to enable developers to write tests in oCIS using Ginkgo and Gomega and explain how to mock other microservices to also cover some integration tests. The full documentation of the tools can be found on the Ginkgo and Gomega websites.</description>
    </item>
    
  </channel>
</rss>
