<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>General Information on ownCloud</title>
    <link>https://owncloud.dev/services/general-info/</link>
    <description>Recent content in General Information on ownCloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://owncloud.dev/services/general-info/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Registry</title>
      <link>https://owncloud.dev/services/general-info/registry/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/services/general-info/registry/</guid>
      <description>To be able to communicate with each other, services need to register in a common registry.
Configuration The type of registry to use can be configured with the MICRO_REGISTRY environment variable. Supported values are:
memory Setting the environment variable to memory starts an inmemory registry. This only works with the single binary deployment.
nats-js-kv (Default) Set the environment variable to nats-js-kv or leave it empty to use a nats-js key value store as registry.</description>
    </item>
    
    <item>
      <title>Envvar Naming Scope</title>
      <link>https://owncloud.dev/services/general-info/envvar-scopes/</link>
      <pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/services/general-info/envvar-scopes/</guid>
      <description>The scope of an environment variable can be derived from its name. Therefore it is important to follow the correct naming scheme to enable easy and proper identification. This is important when either:
a new local envvar is introduced. a new global envvar is added to an existing local envvar. Envvar Definition A variable that is only used in a particular service is a local envvar. A variable that is used in more than one service is a global envvar.</description>
    </item>
    
    <item>
      <title>New Service Checklist</title>
      <link>https://owncloud.dev/services/general-info/new-service-checklist/</link>
      <pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/services/general-info/new-service-checklist/</guid>
      <description>When a new service gets introduced, this checklist is a good startingpoint for things that need to be completed before the service gets published (merged). This list is without claim of completeness or correct sort order.
New Service Checklist Use this checklist with copy/paste in your PR - right from the beginning. It renders correctly in your PR.
- [ ] Provide a README.md for that service in the root folder of that service.</description>
    </item>
    
    <item>
      <title>Additional Information</title>
      <link>https://owncloud.dev/services/general-info/additional-information/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/services/general-info/additional-information/</guid>
      <description>This section contains information on general topics
GRPC Maximum Message Size ocis is using grpc for inter-service communication. When having a folder with a lot of files (25.000+, the size does not matter) and doing a PROPFIND on that folder, the server will run into errors. This is because the grpc message body becomes to big. With introduction of the envvar OCIS_GRPC_MAX_RECEIVED_MESSAGE_SIZE, the max size for the grpc body can be raised.</description>
    </item>
    
    <item>
      <title>Port Ranges</title>
      <link>https://owncloud.dev/services/general-info/port-ranges/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/services/general-info/port-ranges/</guid>
      <description>oCIS services often need a port to expose their services to other services or the outside world. As users may have many different extensions running on the same machine, we should track port usage in the oCIS ecosystem. In the best case we ensure that each extension uses a non colliding port range, to make life of users easier.
This page tracks the knowingly used port ranges.
Feel free to &amp;ldquo;reserve&amp;rdquo; a free port range when you&amp;rsquo;re developing an extension by adding your extension to the list (see the edit button in the top right corner).</description>
    </item>
    
  </channel>
</rss>
